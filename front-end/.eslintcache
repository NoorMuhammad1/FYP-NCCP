[{"E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js":"1","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js":"2","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js":"3","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js":"4","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js":"5","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js":"6","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js":"7","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js":"8","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js":"9","E:\\Study\\FYP\\Project\\front-end\\src\\server_urls.js\\index.js":"10","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DepositRequestForm.js":"11","E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js":"12","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\UserDashboard\\UserPaymentDashboard.js":"13","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Logs\\InternalUserLog.js":"14","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\Reports\\OrderReport.js":"15","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddUserForm\\index.js":"16","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js":"17","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js":"18","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js":"19","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js":"20","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js":"21","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\Details\\Details.js":"22","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\Deposits\\Deposits.js":"23","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositHomepageDetails.js":"24","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js":"25","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js":"26","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js":"27","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"28","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"29","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js":"30","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"31","E:\\Study\\FYP\\Project\\front-end\\src\\components\\UserSidebar\\UserSidebarData.js":"32","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"33","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js":"34","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js":"35","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\AddUser\\addUserValidator.js":"36","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"37","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"38","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"39","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"40","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"41","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"42","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"43","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"44","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"45","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Status\\index.js":"46","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\payment.actions.js":"47","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\index.js":"48","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reportWebVitals.js":"49","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\store\\index.js":"50","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\App.js":"51","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\index.js":"52","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\index.js":"53","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\auth.reducers.js":"54","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\catalogue.reducers.js":"55","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\constants.js":"56","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\itemInfo.reducer.js":"57","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\signup.reducers.js":"58","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\cart.reducer.js":"59","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\updatingUser.reducer.js":"60","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\dashboard.reducers.js":"61","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\user.reducer.js":"62","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\index.js":"63","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\sidebar.reducer.js":"64","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\payment.reducer.js":"65","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\auth.actions.js":"66","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\user.actions.js":"67","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\catalogue.actions.js":"68","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\signup.actions.js":"69","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\cart.actions.js":"70","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\MainRouter\\MainRouter.js":"71","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\helpers\\axios.js":"72","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\server_urls.js\\index.js":"73","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DepositHomepage.js":"74","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DepositRequestForm.js":"75","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\HOC\\PrivateRoute.js":"76","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderPayment.js":"77","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserOrderDetails.js":"78","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\DepositReport.js":"79","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\OrderReport.js":"80","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\PaymentReport.js":"81","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDashboard.js":"82","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\UserReport.js":"83","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserPaymentDashboard.js":"84","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\MicroorganismReport.js":"85","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDepositsDashboard.js":"86","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserOrders\\UserOrdersDashboard.js":"87","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\UserSettings.js":"88","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Logs\\InternalUserLog.js":"89","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Logs\\ActivityLog.js":"90","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Logs\\AdminLog.js":"91","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\index.js":"92","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddUserForm\\index.js":"93","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Dashboard\\index.js":"94","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js":"95","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardOrders\\index.js":"96","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AddMicroorganism\\index.js":"97","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardUsers\\index.js":"98","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Cart\\index.js":"99","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogue\\index.js":"100","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Catalogue\\index.js":"101","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Details\\index.js":"102","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\EmailVerified\\index.js":"103","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Microorganism\\index.js":"104","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ForgetPassword\\index.js":"105","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Signup\\index.js":"106","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\HomePage\\index.js":"107","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\index.js":"108","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\index.js":"109","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\index.js":"110","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\Reports.js":"111","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Deposits\\Deposits.js":"112","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Details\\Details.js":"113","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Payments\\Payments.js":"114","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\Settings.js":"115","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\AddUser\\AddUser.js":"116","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\UserOrders\\UserOrders.js":"117","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DepositHomepageDetails.js":"118","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpUseForm.js":"119","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderDetailsInformationList.js":"120","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpValidator.js":"121","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Layout\\index.js":"122","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js":"123","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpValidator.js":"124","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\SideBar\\index.js":"125","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DropDown\\index.js":"126","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderItemList\\index.js":"127","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserSidebar\\UserSidebar.js":"128","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UI\\Input\\input.js":"129","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInValidator.js":"130","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInUseForm.js":"131","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js":"132","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js":"133","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\payment.actions.js":"134","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\PageHeader\\index.js":"135","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DepositItemList\\index.js":"136","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserSidebar\\UserSidebarData.js":"137","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\SearchBar\\index.js":"138","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\ItemList\\index.js":"139","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js":"140","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"141","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js":"142","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"143","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js":"144","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js":"145","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"146","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js":"147","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js":"148","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js":"149","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js":"150","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js":"151","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"152","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js":"153","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js":"154","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js":"155","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\AddUser\\addUserValidator.js":"156","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\AddUser\\useFormAddUser.js":"157","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Status\\index.js":"158","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js":"159","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js":"160","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js":"161","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"162","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js":"163","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"164","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"165","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js":"166","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js":"167","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js":"168","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js":"169","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js":"170","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"171","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js":"172","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js":"173","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"174","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js":"175","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js":"176","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js":"177","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Modals\\index.js":"178","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\TagInput\\index.js":"179","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"180","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js":"181","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"182","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"183","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js":"184","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"185","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js":"186","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js":"187","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js":"188","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Layout\\SidebarData.js":"189","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\SideBar\\sidebardata.js":"190","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Header\\index.js":"191","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\CustomTable\\index.js":"192","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\order.actions.js":"193","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\orders.reducer.js":"194","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\deposit.reducers.js":"195","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\deposit.actions.js":"196","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Microorganisms\\index.js":"197","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\PermissionData.js":"198","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DepositPayment.js":"199","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderRejectDesciption.js":"200","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DocumentSubmission.js":"201","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderDispatched.js":"202","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderDelivered.js":"203","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\OrderRequest\\index.js":"204","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Payment\\index.js":"205","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Processing\\index.js":"206","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Rejected\\index.js":"207","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Delivered\\index.js":"208","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserOrderDetails\\index.js":"209","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Delivered\\index.js":"210","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Payment\\index.js":"211","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\OrderRequest\\index.js":"212","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Processing\\index.js":"213","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Rejected\\index.js":"214","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Document Submission\\index.js":"215","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\InformationPages\\Deposit\\index.js":"216","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\createDeposit\\index.js":"217","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDepositDetails\\index.js":"218","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\OrderRequest\\index.js":"219","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Document Submission\\index.js":"220","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Payment\\index.js":"221","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Rejected\\index.js":"222","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDeposits\\index.js":"223","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\DepositDetails\\index.js":"224","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Rejected\\index.js":"225","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Payment\\index.js":"226","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\DepositRequest\\index.js":"227","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\AwaitingDispatch\\index.js":"228","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\AwaitingDispatch\\index.js":"229","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Dispatched\\index.js":"230","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Dispatched\\index.js":"231","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Processing\\index.js":"232","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Deposited\\index.js":"233","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Deposited\\index.js":"234","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\useFormPersonalInformation.js":"235","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\PersonalInformationValidator.js":"236","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\passwordValidator.js":"237","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\useFormPassword.js":"238","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\useFormPersonalInformation.js":"239","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\useFormPassword.js":"240","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\PersonalInformationValidator.js":"241","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\passwordValidator.js":"242","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\passwordValidator.js":"243","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\useFormPersonalInformation.js":"244","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\PersonalInformationValidator.js":"245","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\useFormPassword.js":"246","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\index.js":"247","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\index.js":"248","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\initialFormData.js":"249","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\MicroorganismDetailsValidator.js":"250","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\useFormMicroorganismDetails.js":"251","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\LabelNameData.js":"252","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\LabelNameData.js":"253","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\useFormMicroorganismAdd.js":"254","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\initialFormData.js":"255","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\MicroorganismAddValidator.js":"256","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\logs.reducer.js":"257","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\log.actions.js":"258","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\LogDetails\\index.js":"259","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\ReportsAndLogs\\index.js":"260","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Payment Report\\index.js":"261","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Order Report\\index.js":"262","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\reports.actions.js":"263","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\report.reducer.js":"264","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\CustomReportTable\\index.js":"265","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Deposit Report\\index.js":"266","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Microorganism Report\\index.js":"267","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\User Report\\index.js":"268","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Logs\\index.js":"269","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Others\\index.js":"270","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\other.actions.js":"271","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\other.reducer.js":"272"},{"size":375,"mtime":1619819026846,"results":"273","hashOfConfig":"274"},{"size":2380,"mtime":1619819026842,"results":"275","hashOfConfig":"274"},{"size":1149,"mtime":1619819026841,"results":"276","hashOfConfig":"274"},{"size":1014,"mtime":1619819026844,"results":"277","hashOfConfig":"274"},{"size":386,"mtime":1619819026844,"results":"278","hashOfConfig":"274"},{"size":1244,"mtime":1619819026840,"results":"279","hashOfConfig":"274"},{"size":2747,"mtime":1619819026616,"results":"280","hashOfConfig":"274"},{"size":3796,"mtime":1619819026618,"results":"281","hashOfConfig":"274"},{"size":4426,"mtime":1619819026619,"results":"282","hashOfConfig":"274"},{"size":397,"mtime":1619819026846,"results":"283","hashOfConfig":"274"},{"size":3530,"mtime":1619819026786,"results":"284","hashOfConfig":"274"},{"size":693,"mtime":1619819026646,"results":"285","hashOfConfig":"274"},{"size":342,"mtime":1619819026833,"results":"286","hashOfConfig":"274"},{"size":6541,"mtime":1619819026821,"results":"287","hashOfConfig":"274"},{"size":8267,"mtime":1619819026769,"results":"288","hashOfConfig":"274"},{"size":173,"mtime":1619819026640,"results":"289","hashOfConfig":"274"},{"size":269,"mtime":1619819026782,"results":"290","hashOfConfig":"274"},{"size":11961,"mtime":1619819026781,"results":"291","hashOfConfig":"274"},{"size":7767,"mtime":1619819026830,"results":"292","hashOfConfig":"274"},{"size":19120,"mtime":1619819026762,"results":"293","hashOfConfig":"274"},{"size":2727,"mtime":1619819026789,"results":"294","hashOfConfig":"274"},{"size":26921,"mtime":1619819026766,"results":"295","hashOfConfig":"274"},{"size":4425,"mtime":1619819026765,"results":"296","hashOfConfig":"274"},{"size":2512,"mtime":1619819026643,"results":"297","hashOfConfig":"274"},{"size":6053,"mtime":1619819026755,"results":"298","hashOfConfig":"274"},{"size":1075,"mtime":1619819026824,"results":"299","hashOfConfig":"274"},{"size":1370,"mtime":1619819026829,"results":"300","hashOfConfig":"274"},{"size":1584,"mtime":1619819026637,"results":"301","hashOfConfig":"274"},{"size":3117,"mtime":1619819026635,"results":"302","hashOfConfig":"274"},{"size":5818,"mtime":1619819026638,"results":"303","hashOfConfig":"274"},{"size":4270,"mtime":1619819026628,"results":"304","hashOfConfig":"274"},{"size":1303,"mtime":1619819026759,"results":"305","hashOfConfig":"274"},{"size":1674,"mtime":1619819026620,"results":"306","hashOfConfig":"274"},{"size":581,"mtime":1619819026653,"results":"307","hashOfConfig":"274"},{"size":4151,"mtime":1619819026649,"results":"308","hashOfConfig":"274"},{"size":1745,"mtime":1619819026763,"results":"309","hashOfConfig":"274"},{"size":803,"mtime":1619819026632,"results":"310","hashOfConfig":"274"},{"size":831,"mtime":1619819026626,"results":"311","hashOfConfig":"274"},{"size":823,"mtime":1619819026625,"results":"312","hashOfConfig":"274"},{"size":799,"mtime":1619819026622,"results":"313","hashOfConfig":"274"},{"size":345,"mtime":1619819026623,"results":"314","hashOfConfig":"274"},{"size":343,"mtime":1619819026638,"results":"315","hashOfConfig":"274"},{"size":803,"mtime":1619819026640,"results":"316","hashOfConfig":"274"},{"size":819,"mtime":1619819026637,"results":"317","hashOfConfig":"274"},{"size":343,"mtime":1619819026637,"results":"318","hashOfConfig":"274"},{"size":794,"mtime":1619819026757,"results":"319","hashOfConfig":"274"},{"size":1078,"mtime":1619819026617,"results":"320","hashOfConfig":"274"},{"size":892,"mtime":1619865095607,"results":"321","hashOfConfig":"322"},{"size":375,"mtime":1619865095611,"results":"323","hashOfConfig":"322"},{"size":945,"mtime":1621203279139,"results":"324","hashOfConfig":"322"},{"size":525,"mtime":1621085592674,"results":"325","hashOfConfig":"322"},{"size":2769,"mtime":1621105565056,"results":"326","hashOfConfig":"322"},{"size":410,"mtime":1621104484017,"results":"327","hashOfConfig":"322"},{"size":1313,"mtime":1620056676276,"results":"328","hashOfConfig":"322"},{"size":7390,"mtime":1620828617282,"results":"329","hashOfConfig":"322"},{"size":11000,"mtime":1621156374565,"results":"330","hashOfConfig":"322"},{"size":1085,"mtime":1620053155222,"results":"331","hashOfConfig":"322"},{"size":1340,"mtime":1620053066887,"results":"332","hashOfConfig":"322"},{"size":3247,"mtime":1620552907766,"results":"333","hashOfConfig":"322"},{"size":1041,"mtime":1620052998703,"results":"334","hashOfConfig":"322"},{"size":1210,"mtime":1620053242033,"results":"335","hashOfConfig":"322"},{"size":5619,"mtime":1620735701179,"results":"336","hashOfConfig":"322"},{"size":42,"mtime":1619865095543,"results":"337","hashOfConfig":"322"},{"size":414,"mtime":1620053097061,"results":"338","hashOfConfig":"322"},{"size":3514,"mtime":1620743239152,"results":"339","hashOfConfig":"322"},{"size":2349,"mtime":1620686521725,"results":"340","hashOfConfig":"322"},{"size":5497,"mtime":1621674704787,"results":"341","hashOfConfig":"322"},{"size":7187,"mtime":1620827183894,"results":"342","hashOfConfig":"322"},{"size":3796,"mtime":1619865095492,"results":"343","hashOfConfig":"322"},{"size":1820,"mtime":1620565072040,"results":"344","hashOfConfig":"322"},{"size":8773,"mtime":1621091862793,"results":"345","hashOfConfig":"322"},{"size":1098,"mtime":1621415297593,"results":"346","hashOfConfig":"322"},{"size":397,"mtime":1619865095611,"results":"347","hashOfConfig":"322"},{"size":280,"mtime":1619865095558,"results":"348","hashOfConfig":"322"},{"size":3530,"mtime":1619865095559,"results":"349","hashOfConfig":"322"},{"size":770,"mtime":1621078832124,"results":"350","hashOfConfig":"322"},{"size":5329,"mtime":1619865095532,"results":"351","hashOfConfig":"322"},{"size":5401,"mtime":1620591387835,"results":"352","hashOfConfig":"322"},{"size":8215,"mtime":1619865095548,"results":"353","hashOfConfig":"322"},{"size":8267,"mtime":1619865095549,"results":"354","hashOfConfig":"322"},{"size":6636,"mtime":1619865095549,"results":"355","hashOfConfig":"322"},{"size":297,"mtime":1619865095602,"results":"356","hashOfConfig":"322"},{"size":7536,"mtime":1619865095550,"results":"357","hashOfConfig":"322"},{"size":5414,"mtime":1622286637121,"results":"358","hashOfConfig":"322"},{"size":6163,"mtime":1619865095548,"results":"359","hashOfConfig":"322"},{"size":10066,"mtime":1620585517839,"results":"360","hashOfConfig":"322"},{"size":6875,"mtime":1620467693416,"results":"361","hashOfConfig":"322"},{"size":21699,"mtime":1620687045365,"results":"362","hashOfConfig":"322"},{"size":6541,"mtime":1619865095567,"results":"363","hashOfConfig":"322"},{"size":6508,"mtime":1619865095567,"results":"364","hashOfConfig":"322"},{"size":6494,"mtime":1619865095567,"results":"365","hashOfConfig":"322"},{"size":432,"mtime":1619865095552,"results":"366","hashOfConfig":"322"},{"size":173,"mtime":1619865095511,"results":"367","hashOfConfig":"322"},{"size":269,"mtime":1619865095557,"results":"368","hashOfConfig":"322"},{"size":2847,"mtime":1619865095558,"results":"369","hashOfConfig":"322"},{"size":6677,"mtime":1621004463123,"results":"370","hashOfConfig":"322"},{"size":9123,"mtime":1620768558484,"results":"371","hashOfConfig":"372"},{"size":6433,"mtime":1621409920181,"results":"373","hashOfConfig":"322"},{"size":8864,"mtime":1622283272066,"results":"374","hashOfConfig":"322"},{"size":5534,"mtime":1619865095557,"results":"375","hashOfConfig":"322"},{"size":13213,"mtime":1622283086694,"results":"376","hashOfConfig":"322"},{"size":2474,"mtime":1619865095559,"results":"377","hashOfConfig":"322"},{"size":2480,"mtime":1619865095560,"results":"378","hashOfConfig":"322"},{"size":201,"mtime":1619865095568,"results":"379","hashOfConfig":"322"},{"size":2727,"mtime":1619865095561,"results":"380","hashOfConfig":"322"},{"size":7767,"mtime":1619865095601,"results":"381","hashOfConfig":"322"},{"size":18112,"mtime":1622284333165,"results":"382","hashOfConfig":"322"},{"size":43618,"mtime":1620682056064,"results":"383","hashOfConfig":"322"},{"size":6424,"mtime":1619865095569,"results":"384","hashOfConfig":"322"},{"size":25732,"mtime":1622285949739,"results":"385","hashOfConfig":"322"},{"size":1645,"mtime":1619865095549,"results":"386","hashOfConfig":"322"},{"size":4864,"mtime":1621079152334,"results":"387","hashOfConfig":"322"},{"size":26921,"mtime":1619865095547,"results":"388","hashOfConfig":"322"},{"size":5309,"mtime":1621450207977,"results":"389","hashOfConfig":"322"},{"size":21562,"mtime":1620687382806,"results":"390","hashOfConfig":"322"},{"size":15277,"mtime":1621678140337,"results":"391","hashOfConfig":"322"},{"size":2050,"mtime":1619865095551,"results":"392","hashOfConfig":"322"},{"size":2512,"mtime":1619865095513,"results":"393","hashOfConfig":"322"},{"size":1370,"mtime":1619865095600,"results":"394","hashOfConfig":"322"},{"size":1711,"mtime":1619865095531,"results":"395","hashOfConfig":"322"},{"size":1538,"mtime":1619865095600,"results":"396","hashOfConfig":"322"},{"size":2350,"mtime":1619865095522,"results":"397","hashOfConfig":"322"},{"size":1542,"mtime":1619865095570,"results":"398","hashOfConfig":"322"},{"size":1698,"mtime":1619865095571,"results":"399","hashOfConfig":"322"},{"size":6014,"mtime":1622287264211,"results":"400","hashOfConfig":"322"},{"size":1188,"mtime":1620753577986,"results":"401","hashOfConfig":"322"},{"size":3495,"mtime":1619865095531,"results":"402","hashOfConfig":"372"},{"size":6069,"mtime":1619865095542,"results":"403","hashOfConfig":"322"},{"size":415,"mtime":1619865095542,"results":"404","hashOfConfig":"322"},{"size":754,"mtime":1619865095570,"results":"405","hashOfConfig":"322"},{"size":1075,"mtime":1619865095570,"results":"406","hashOfConfig":"322"},{"size":1217,"mtime":1619865095570,"results":"407","hashOfConfig":"322"},{"size":712,"mtime":1619865095569,"results":"408","hashOfConfig":"322"},{"size":2590,"mtime":1620738857138,"results":"409","hashOfConfig":"322"},{"size":9282,"mtime":1622283733703,"results":"410","hashOfConfig":"322"},{"size":3419,"mtime":1619865095514,"results":"411","hashOfConfig":"372"},{"size":1245,"mtime":1620465063331,"results":"412","hashOfConfig":"322"},{"size":1017,"mtime":1620757428796,"results":"413","hashOfConfig":"322"},{"size":4077,"mtime":1620060414551,"results":"414","hashOfConfig":"322"},{"size":786,"mtime":1619865095526,"results":"415","hashOfConfig":"322"},{"size":3117,"mtime":1619865095507,"results":"416","hashOfConfig":"372"},{"size":6371,"mtime":1619865095510,"results":"417","hashOfConfig":"372"},{"size":1584,"mtime":1619865095508,"results":"418","hashOfConfig":"372"},{"size":4024,"mtime":1619865095506,"results":"419","hashOfConfig":"372"},{"size":5818,"mtime":1619865095509,"results":"420","hashOfConfig":"372"},{"size":4270,"mtime":1619865095501,"results":"421","hashOfConfig":"372"},{"size":5538,"mtime":1619865095503,"results":"422","hashOfConfig":"372"},{"size":3580,"mtime":1619865095499,"results":"423","hashOfConfig":"372"},{"size":1183,"mtime":1619865095502,"results":"424","hashOfConfig":"372"},{"size":8574,"mtime":1619865095504,"results":"425","hashOfConfig":"372"},{"size":12340,"mtime":1619865095496,"results":"426","hashOfConfig":"372"},{"size":1674,"mtime":1619865095494,"results":"427","hashOfConfig":"372"},{"size":2260,"mtime":1619865095498,"results":"428","hashOfConfig":"372"},{"size":6557,"mtime":1619865095495,"results":"429","hashOfConfig":"372"},{"size":2624,"mtime":1619865095497,"results":"430","hashOfConfig":"372"},{"size":1745,"mtime":1619865095545,"results":"431","hashOfConfig":"322"},{"size":2685,"mtime":1620729443623,"results":"432","hashOfConfig":"322"},{"size":794,"mtime":1619865095540,"results":"433","hashOfConfig":"322"},{"size":799,"mtime":1619865095496,"results":"434","hashOfConfig":"372"},{"size":1929,"mtime":1619865095494,"results":"435","hashOfConfig":"372"},{"size":365,"mtime":1619865095498,"results":"436","hashOfConfig":"372"},{"size":823,"mtime":1619865095499,"results":"437","hashOfConfig":"372"},{"size":823,"mtime":1619865095498,"results":"438","hashOfConfig":"372"},{"size":345,"mtime":1619865095497,"results":"439","hashOfConfig":"372"},{"size":799,"mtime":1619865095497,"results":"440","hashOfConfig":"372"},{"size":799,"mtime":1619865095502,"results":"441","hashOfConfig":"372"},{"size":649,"mtime":1619865095504,"results":"442","hashOfConfig":"372"},{"size":230,"mtime":1619865095499,"results":"443","hashOfConfig":"372"},{"size":1429,"mtime":1619865095496,"results":"444","hashOfConfig":"372"},{"size":327,"mtime":1619865095501,"results":"445","hashOfConfig":"372"},{"size":803,"mtime":1619865095505,"results":"446","hashOfConfig":"372"},{"size":794,"mtime":1619865095503,"results":"447","hashOfConfig":"372"},{"size":819,"mtime":1619865095504,"results":"448","hashOfConfig":"372"},{"size":831,"mtime":1619865095500,"results":"449","hashOfConfig":"372"},{"size":819,"mtime":1619865095510,"results":"450","hashOfConfig":"372"},{"size":369,"mtime":1619865095500,"results":"451","hashOfConfig":"372"},{"size":831,"mtime":1619865095501,"results":"452","hashOfConfig":"372"},{"size":653,"mtime":1619865095527,"results":"453","hashOfConfig":"322"},{"size":1426,"mtime":1619865095540,"results":"454","hashOfConfig":"372"},{"size":343,"mtime":1619865095509,"results":"455","hashOfConfig":"372"},{"size":803,"mtime":1619865095506,"results":"456","hashOfConfig":"372"},{"size":819,"mtime":1619865095509,"results":"457","hashOfConfig":"372"},{"size":343,"mtime":1619865095508,"results":"458","hashOfConfig":"372"},{"size":354,"mtime":1619865095505,"results":"459","hashOfConfig":"372"},{"size":803,"mtime":1619865095511,"results":"460","hashOfConfig":"372"},{"size":341,"mtime":1619865095510,"results":"461","hashOfConfig":"372"},{"size":799,"mtime":1619865095508,"results":"462","hashOfConfig":"372"},{"size":339,"mtime":1619865095506,"results":"463","hashOfConfig":"372"},{"size":581,"mtime":1619865095522,"results":"464","hashOfConfig":"322"},{"size":1549,"mtime":1621091868587,"results":"465","hashOfConfig":"322"},{"size":2761,"mtime":1619865095519,"results":"466","hashOfConfig":"322"},{"size":11845,"mtime":1622286223981,"results":"467","hashOfConfig":"322"},{"size":5743,"mtime":1620738949924,"results":"468","hashOfConfig":"322"},{"size":13544,"mtime":1620743039030,"results":"469","hashOfConfig":"322"},{"size":10671,"mtime":1620743242550,"results":"470","hashOfConfig":"322"},{"size":7584,"mtime":1620739030305,"results":"471","hashOfConfig":"322"},{"size":9777,"mtime":1621004412679,"results":"472","hashOfConfig":"322"},{"size":1220,"mtime":1620742695795,"results":"473","hashOfConfig":"322"},{"size":4207,"mtime":1619865095514,"results":"474","hashOfConfig":"322"},{"size":567,"mtime":1620402093150,"results":"475","hashOfConfig":"322"},{"size":4763,"mtime":1620478417697,"results":"476","hashOfConfig":"322"},{"size":1386,"mtime":1620509308079,"results":"477","hashOfConfig":"322"},{"size":427,"mtime":1620401578315,"results":"478","hashOfConfig":"322"},{"size":3549,"mtime":1620417622963,"results":"479","hashOfConfig":"322"},{"size":151,"mtime":1620425492448,"results":"480","hashOfConfig":"322"},{"size":1137,"mtime":1620426454495,"results":"481","hashOfConfig":"322"},{"size":394,"mtime":1620428236718,"results":"482","hashOfConfig":"322"},{"size":155,"mtime":1620427542806,"results":"483","hashOfConfig":"322"},{"size":11467,"mtime":1622286143617,"results":"484","hashOfConfig":"322"},{"size":155,"mtime":1620427542806,"results":"485","hashOfConfig":"322"},{"size":4333,"mtime":1620507258804,"results":"486","hashOfConfig":"322"},{"size":3533,"mtime":1620470716876,"results":"487","hashOfConfig":"322"},{"size":267,"mtime":1620503604042,"results":"488","hashOfConfig":"322"},{"size":394,"mtime":1620428236718,"results":"489","hashOfConfig":"322"},{"size":8340,"mtime":1620497090513,"results":"490","hashOfConfig":"322"},{"size":1197,"mtime":1620566507072,"results":"491","hashOfConfig":"322"},{"size":13995,"mtime":1620584436437,"results":"492","hashOfConfig":"322"},{"size":12276,"mtime":1620649050017,"results":"493","hashOfConfig":"322"},{"size":349,"mtime":1620591025701,"results":"494","hashOfConfig":"322"},{"size":8324,"mtime":1620601400953,"results":"495","hashOfConfig":"322"},{"size":4348,"mtime":1620638400744,"results":"496","hashOfConfig":"322"},{"size":394,"mtime":1620428236718,"results":"497","hashOfConfig":"322"},{"size":4906,"mtime":1620599614325,"results":"498","hashOfConfig":"322"},{"size":6317,"mtime":1620648999284,"results":"499","hashOfConfig":"322"},{"size":394,"mtime":1620599063259,"results":"500","hashOfConfig":"322"},{"size":151,"mtime":1620425492448,"results":"501","hashOfConfig":"322"},{"size":6060,"mtime":1620595063277,"results":"502","hashOfConfig":"322"},{"size":257,"mtime":1620644221704,"results":"503","hashOfConfig":"322"},{"size":1681,"mtime":1620649555381,"results":"504","hashOfConfig":"322"},{"size":1135,"mtime":1620643215587,"results":"505","hashOfConfig":"322"},{"size":942,"mtime":1620643265074,"results":"506","hashOfConfig":"322"},{"size":3155,"mtime":1620646095452,"results":"507","hashOfConfig":"322"},{"size":146,"mtime":1620649065242,"results":"508","hashOfConfig":"322"},{"size":158,"mtime":1620649040226,"results":"509","hashOfConfig":"322"},{"size":1966,"mtime":1620673592703,"results":"510","hashOfConfig":"322"},{"size":851,"mtime":1620674820859,"results":"511","hashOfConfig":"322"},{"size":787,"mtime":1620674554912,"results":"512","hashOfConfig":"322"},{"size":1495,"mtime":1620674360927,"results":"513","hashOfConfig":"322"},{"size":1966,"mtime":1620673592703,"results":"514","hashOfConfig":"322"},{"size":1495,"mtime":1620674360927,"results":"515","hashOfConfig":"322"},{"size":851,"mtime":1620674820859,"results":"516","hashOfConfig":"322"},{"size":787,"mtime":1620674554912,"results":"517","hashOfConfig":"322"},{"size":787,"mtime":1620674554912,"results":"518","hashOfConfig":"322"},{"size":1966,"mtime":1620673592703,"results":"519","hashOfConfig":"322"},{"size":792,"mtime":1620687287847,"results":"520","hashOfConfig":"322"},{"size":1495,"mtime":1620674360927,"results":"521","hashOfConfig":"322"},{"size":7580,"mtime":1620829446343,"results":"522","hashOfConfig":"322"},{"size":8086,"mtime":1620816875299,"results":"523","hashOfConfig":"322"},{"size":4335,"mtime":1620826385627,"results":"524","hashOfConfig":"322"},{"size":5896,"mtime":1620816853722,"results":"525","hashOfConfig":"322"},{"size":971,"mtime":1620815297625,"results":"526","hashOfConfig":"322"},{"size":9645,"mtime":1620774086300,"results":"527","hashOfConfig":"322"},{"size":9553,"mtime":1622112410428,"results":"528","hashOfConfig":"322"},{"size":966,"mtime":1620821996783,"results":"529","hashOfConfig":"322"},{"size":4335,"mtime":1620993532242,"results":"530","hashOfConfig":"322"},{"size":9915,"mtime":1620826128040,"results":"531","hashOfConfig":"322"},{"size":3830,"mtime":1621004093867,"results":"532","hashOfConfig":"322"},{"size":2080,"mtime":1621005438924,"results":"533","hashOfConfig":"322"},{"size":229,"mtime":1621006599154,"results":"534","hashOfConfig":"322"},{"size":3326,"mtime":1621089937910,"results":"535","hashOfConfig":"322"},{"size":4173,"mtime":1621085910096,"results":"536","hashOfConfig":"322"},{"size":3644,"mtime":1621086065821,"results":"537","hashOfConfig":"322"},{"size":1218,"mtime":1621090556023,"results":"538","hashOfConfig":"322"},{"size":1421,"mtime":1621070221876,"results":"539","hashOfConfig":"322"},{"size":3336,"mtime":1621090831769,"results":"540","hashOfConfig":"322"},{"size":3650,"mtime":1621086398077,"results":"541","hashOfConfig":"322"},{"size":4268,"mtime":1621089204424,"results":"542","hashOfConfig":"322"},{"size":3637,"mtime":1621089253534,"results":"543","hashOfConfig":"322"},{"size":3420,"mtime":1621090895376,"results":"544","hashOfConfig":"322"},{"size":21380,"mtime":1622208832866,"results":"545","hashOfConfig":"322"},{"size":3520,"mtime":1622208543398,"results":"546","hashOfConfig":"322"},{"size":5700,"mtime":1621163910762,"results":"547","hashOfConfig":"322"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v6ki43",{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"590","messages":"591","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"592","messages":"593","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"600","messages":"601","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"640","messages":"641","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},"1uxkjv0",{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"644"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"644"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"644"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"644"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"644"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"644"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"644"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"644"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"644"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"644"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"644"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"644"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"644"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"644"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"758"},"8dgxgh",{"filePath":"759","messages":"760","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"644"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"764","messages":"765","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"644"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"769","messages":"770","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771","usedDeprecatedRules":"644"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"644"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"644"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"784","messages":"785","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"644"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"644"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"644"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"644"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802","usedDeprecatedRules":"644"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"644"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"644"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"644"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"644"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"644"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"644"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"644"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"836"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"644"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"644"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"644"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"644"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"859"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"644"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"644"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"644"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"644"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"758"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"758"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"758"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"758"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"758"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"758"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"758"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"758"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"758"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"758"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"758"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"758"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"758"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"758"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"758"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"644"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"644"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"644"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004","usedDeprecatedRules":"644"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"644"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012","usedDeprecatedRules":"644"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1015","usedDeprecatedRules":"644"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"644"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021","usedDeprecatedRules":"644"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024","usedDeprecatedRules":"644"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"644"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"644"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1041","usedDeprecatedRules":"644"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1044","usedDeprecatedRules":"644"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"644"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1051","usedDeprecatedRules":"644"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056","usedDeprecatedRules":"644"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059","usedDeprecatedRules":"644"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"644"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1065","usedDeprecatedRules":"644"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"644"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"644"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"644"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076","usedDeprecatedRules":"644"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079","usedDeprecatedRules":"644"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"644"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087","usedDeprecatedRules":"644"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"644"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"644"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"644"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1107","usedDeprecatedRules":"644"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"644"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"644"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"644"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"644"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1107","usedDeprecatedRules":"644"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"644"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"644"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"644"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"644"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"644"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"644"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"644"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1141","usedDeprecatedRules":"644"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1144","usedDeprecatedRules":"644"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1147","usedDeprecatedRules":"644"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"644"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153","usedDeprecatedRules":"644"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"644"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"644"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"644"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"644"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"644"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"644"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"644"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1189","usedDeprecatedRules":"644"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"644"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":"1195","usedDeprecatedRules":"644"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"644"},"E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js",["1200"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js",["1201","1202"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js",["1203","1204"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js",["1205"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js",["1206","1207","1208"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js",["1209"],"E:\\Study\\FYP\\Project\\front-end\\src\\server_urls.js\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DepositRequestForm.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\UserDashboard\\UserPaymentDashboard.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Logs\\InternalUserLog.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\Reports\\OrderReport.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddUserForm\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js",["1210","1211"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js",["1212"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js",["1213"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\Details\\Details.js",["1214","1215","1216","1217"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\Deposits\\Deposits.js",["1218","1219","1220","1221"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositHomepageDetails.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js",["1222"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js",["1223","1224"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js",["1225","1226"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\UserSidebar\\UserSidebarData.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboard\\AddUser\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["1227"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["1228"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["1229"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["1230"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["1231"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["1232"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Status\\index.js",["1233"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\payment.actions.js",["1234"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\index.js",[],["1235","1236"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reportWebVitals.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\store\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\App.js",["1237"],"import { isUserLoggedIn } from \"actions\";\r\nimport \"App.css\";\r\nimport { MainRouter } from \"components\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLoggedIn());\r\n    }\r\n  }, [auth]);\r\n  return (\r\n    <div className=\"App\">\r\n      <MainRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\auth.reducers.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\catalogue.reducers.js",["1238"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  updateMicroorganism: {\r\n    data: {},\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  fetchMicroorganism: {\r\n    data: {},\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  getMicroorganisms: {\r\n    microorganisms: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  catalogueData: [],\r\n  fetching: false,\r\n  fetched: false,\r\n  addMicroorganism: {\r\n    adding: false,\r\n    added: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete: {\r\n    deleting: false,\r\n    deleted: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nconst catalogue = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_INFO_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n        fetched: false,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        catalogueData: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ADD_MICROORGANISM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          adding: true,\r\n          added: false,\r\n          data: action.payload.data,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: true,\r\n          adding: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_RESET: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          data: {},\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case authConstants.RESET_ADD_MICROORGANISM_STATE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...initialState.addMicroorganism,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          data: action.payload.data,\r\n          deleting: true,\r\n          deleted: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n\r\n    case authConstants.CATALOGUE_DELETE_ITEM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.DASHBOARD_CATALOUGE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        getMicroorganisms: {\r\n          ...state.getMicroorganisms,\r\n          microorganisms: [],\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_CATALOGUE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        getMicroorganisms: {\r\n          ...state.getMicroorganisms,\r\n          microorganisms: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_CATALOUGE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        getMicroorganisms: {\r\n          ...state.getMicroorganisms,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.FETCH_MICROORGANISM_DETAILS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetchMicroorganism: {\r\n          ...state.fetchMicroorganism,\r\n          data: {},\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.FETCH_MICROORGANISM_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetchMicroorganism: {\r\n          ...state.fetchMicroorganism,\r\n          data: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.FETCH_MICROORGANISM_DETAILS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetchMicroorganism: {\r\n          ...state.fetchMicroorganism,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_MICROORGANISM_DETAILS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        updateMicroorganism: {\r\n          ...state.updateMicroorganism,\r\n          data: {},\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_MICROORGANISM_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        updateMicroorganism: {\r\n          ...state.updateMicroorganism,\r\n          data: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_MICROORGANISM_DETAILS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        updateMicroorganism: {\r\n          ...state.updateMicroorganism,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\nexport default catalogue;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\constants.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\itemInfo.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\signup.reducers.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\cart.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\updatingUser.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\dashboard.reducers.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\user.reducer.js",["1239","1240","1241","1242"],"import { StarRateTwoTone } from \"@material-ui/icons\";\r\nimport { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  updatePassword: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  users: {\r\n    userList: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  add_user: {\r\n    data: {},\r\n    adding: false,\r\n    added: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete_user: {},\r\n  user_data: {},\r\n  // users: [],\r\n  // user: {\r\n  //   data: {},\r\n\r\n  //   deleting: false,\r\n  //   deleted: false,\r\n  // },\r\n  // add_user: {\r\n  //   data: {},\r\n  //   error: false,\r\n  //   message: \"\",\r\n  //   adding: false,\r\n  //   added: false,\r\n  // },\r\n  // fetching: false,\r\n  // fetched: false,\r\n  // error: {\r\n  //   found:false,\r\n  //   status_code: 0,\r\n  //   message: \"\",\r\n  // },\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.USERS_FETCH_REQUEST:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetched: true,\r\n          fetching: false,\r\n          userList: action.payload.users,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_FAILURE:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: false,\r\n          error: {\r\n            found: true,\r\n            status_code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          data: action.payload.data,\r\n          adding: true,\r\n          added: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added: false,\r\n          error: {\r\n            found: true,\r\n            status_code: action.payload.status,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetched: true,\r\n        fetching: false,\r\n        user: action.payload.user,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_USER_PASSWORD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...initialState.add_user,\r\n          adding: true,\r\n          added: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added: true,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: false,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: true,\r\n            message: action.payload.message,\r\n            status_code: action.payload.status,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_USER_PASSWORD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        updatePassword: {\r\n          ...initialState.updatePassword,\r\n          fetching: true,\r\n          fetched: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_USER_PASSWORD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        updatePassword: {\r\n          ...state.updatePassword,\r\n          fetching: false,\r\n          fetched: true,\r\n          error: {\r\n            ...state.updatePassword.error,\r\n            found: false,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.UPDATE_USER_PASSWORD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        updatePassword: {\r\n          ...state.updatePassword,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            ...state.updatePassword.error,\r\n            found: true,\r\n            message: action.payload.message,\r\n            status_code: action.payload.status,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default userReducer;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\sidebar.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\payment.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\auth.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\user.actions.js",["1243","1244","1245"],"import axios from \"../helpers/axios.js\";\r\nimport { isUserLoggedIn, refreshUserData } from \"./auth.actions.js\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nconst getUsers = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.USERS_FETCH_REQUEST });\r\n    try {\r\n      console.log(\"making a request for the users\");\r\n      let user_Request_Response = await axios.post(\"/users\", {});\r\n      if (user_Request_Response.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_SUCCESS,\r\n          payload: { users: user_Request_Response.data },\r\n        });\r\n        dispatch({\r\n          type: authConstants.DASHBOARD_OPTIONS_UPDATE,\r\n          payload: { option: \"USERS\" },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response && e.response.status === 405) {\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n      if (e.response && e.response.status === 400) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_FAILURE,\r\n          payload: {\r\n            status_code: e.response.status,\r\n            message: e.response.data.message,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst getUserData = (id) => {\r\n  return async (dispatch) => {\r\n    console.log(\"fetching user data\");\r\n    dispatch({ type: authConstants.USER_DATA_REQUEST });\r\n    const res = await axios.post(\"/userData\", { id });\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: authConstants.USER_DATA_SUCCESS,\r\n        payload: { user: res.data },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nconst updateUserInfo = (data, id, role) => {\r\n  return async (dispatch) => {\r\n    // if (token) {\r\n    dispatch({\r\n      type: authConstants.UPDATING_USER_REQUEST,\r\n      payload: { data: data },\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/updateUser\", { data });\r\n      console.log(res);\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: authConstants.UPDATING_USER_SUCCESS,\r\n          payload: {\r\n            status_code: res.status,\r\n            message: res.data.message,\r\n          },\r\n        });\r\n        if (role === \"external\") {\r\n          dispatch(refreshUserData());\r\n        } else {\r\n          dispatch(getUserData(id));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n    // }\r\n  };\r\n};\r\nconst updateUserProfilePicture = (data, id, role) => {\r\n  return async (dispatch) => {\r\n    // if (token) {\r\n    dispatch({\r\n      type: authConstants.UPDATING_USER_REQUEST,\r\n      payload: { data: data },\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/updateUserProfilePicture\", data);\r\n      console.log(res);\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: authConstants.UPDATING_USER_SUCCESS,\r\n          payload: {\r\n            status_code: res.status,\r\n            message: res.data.message,\r\n          },\r\n        });\r\n        console.log(role);\r\n        if (role === \"external\") {\r\n          dispatch(refreshUserData());\r\n        } else {\r\n          dispatch(getUserData(id));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n    // }\r\n  };\r\n};\r\n\r\nconst resetPassword = (data, role) => {\r\n  return async (dispatch) => {\r\n    console.log(\"user data sent to method was: \");\r\n    console.log(data);\r\n    dispatch({ type: authConstants.UPDATE_USER_PASSWORD_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\"/updatePassword\", { ...data });\r\n      if (res.status === 200) {\r\n        console.log(\"user password updated successfully\");\r\n        dispatch({ type: authConstants.UPDATE_USER_PASSWORD_SUCCESS });\r\n        if (role === \"external\") {\r\n          dispatch(refreshUserData());\r\n        } else {\r\n          dispatch(getUserData(data.id));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error.data);\r\n    }\r\n  };\r\n};\r\n\r\nconst deleteUser = (data) => {\r\n  return async (dispatch) => {\r\n    // console.log(\"user data sent to method was: \");\r\n    // console.log(data);\r\n    dispatch({ type: authConstants.USER_DELETE_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\"/deleteUser\", { ...data });\r\n      if (res.status === 200) {\r\n        console.log(\"users deleted successfully\");\r\n        dispatch({ type: authConstants.USER_DELETE_SUCCESS });\r\n        dispatch(getUsers());\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n\r\nconst addUser = (userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: authConstants.USER_ADD_REQUEST,\r\n        payload: { data: userData },\r\n      });\r\n      const res = await axios.post(\"/addUser\", userData);\r\n      // console.log(res.status);\r\n      if (res.status === 200) {\r\n        console.log(res);\r\n        dispatch({\r\n          type: authConstants.USER_ADD_SUCCESS,\r\n          payload: { message: res.data.message },\r\n        });\r\n        // dispatch(getUsers(token));\r\n      }\r\n      if (res.status === 405) {\r\n        alert(\"Token has expired \");\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n    } catch ({ response }) {\r\n      console.log(\"err\");\r\n      console.log(response);\r\n      dispatch({\r\n        type: authConstants.USER_ADD_FAILURE,\r\n        payload: {\r\n          status: response.data.status,\r\n          message: response.data.message,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport {\r\n  getUsers,\r\n  getUserData,\r\n  updateUserInfo,\r\n  deleteUser,\r\n  addUser,\r\n  updateUserProfilePicture,\r\n  resetPassword,\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\catalogue.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\signup.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\cart.actions.js",["1246"],"import auth from \"reducers/auth.reducers\";\r\nimport axios from \"../helpers/axios\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nconst addItemToCart = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: authConstants.CART_ITEM_ADD, payload: { ...data } });\r\n  };\r\n};\r\nconst removeFromCart = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: authConstants.CART_ITEM_REMOVE, payload: { ...data } });\r\n  };\r\n};\r\nconst increaseQuantity = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_INCREASE,\r\n      payload: { ...data },\r\n    });\r\n  };\r\n};\r\nconst changeQuantity = (id, qty) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_CHANGE,\r\n      payload: { id, quantity: qty },\r\n    });\r\n  };\r\n};\r\nconst decreaseQuantity = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_DECREASE,\r\n      payload: { ...data },\r\n    });\r\n  };\r\n};\r\n\r\nconst createOrder = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.CREATE_ORDER_REQUEST, payload: data });\r\n    try {\r\n      let res = await axios.post(\"/createOrder\", data);\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        dispatch({ type: authConstants.CREATE_ORDER_SUCCESS });\r\n        alert(\"The order has been created successfully\");\r\n        dispatch({ type: authConstants.CART_RESET });\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: authConstants.CREATE_ORDER_FAILURE,\r\n        payload: {\r\n          status_code: error.response.status,\r\n          message: error.response.message,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport {\r\n  addItemToCart,\r\n  removeFromCart,\r\n  increaseQuantity,\r\n  decreaseQuantity,\r\n  changeQuantity,\r\n  createOrder,\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\MainRouter\\MainRouter.js",["1247","1248","1249","1250"],"import AddUserForm from \"components/AddUserForm\";\r\nimport PrivateRoute from \"components/HOC/PrivateRoute\";\r\nimport {\r\n  AddUser,\r\n  Deposits,\r\n  Details,\r\n  Payments,\r\n  Reports,\r\n  Settings,\r\n  UserOrders,\r\n} from \"containers/AdminDashboard\";\r\nimport DepositReport from \"containers/AdminDashboard/Reports/DepositReport\";\r\nimport OrderReport from \"containers/AdminDashboard/Reports/OrderReport\";\r\nimport MicroorganismReport from \"containers/AdminDashboard/Reports/MicroorganismReport\";\r\nimport PaymentReport from \"containers/AdminDashboard/Reports/PaymentReport\";\r\nimport UserReport from \"containers/AdminDashboard/Reports/UserReport\";\r\nimport AdminDashboardOrders from \"containers/AdminDashboardOrders\";\r\nimport AdminDashboardUsers from \"containers/AdminDashboardUsers\";\r\nimport UserDashboardOrderDetails from \"containers/UserDashboard/UserOrderDetails\";\r\nimport UserDashboardDepositDetails from \"containers/UserDashboard/UserDepositDetails\";\r\nimport Cart from \"containers/Cart\";\r\nimport Catalogue from \"containers/Catalogue\";\r\nimport Dashboard from \"containers/Dashboard\";\r\nimport DashboardCatalogue from \"containers/DashboardCatalogue\";\r\nimport DashboardCatalogueDetail from \"containers/DashboardCatalogueDetail\";\r\nimport DepositHomepage from \"containers/DepositHomepage\";\r\nimport DepositRequestForm from \"containers/DepositRequestForm\";\r\nimport ItemDetails from \"containers/Details\";\r\nimport EmailVerified from \"containers/EmailVerified\";\r\nimport ForgetPassword from \"containers/ForgetPassword\";\r\nimport HomePage from \"containers/HomePage\";\r\nimport Microorganism from \"containers/Microorganism\";\r\nimport ResetPassword from \"containers/ResetPassword\";\r\nimport Signin from \"containers/SignIn\";\r\nimport Signup from \"containers/Signup\";\r\nimport User from \"containers/User\";\r\nimport UserDashboard from \"containers/UserDashboard/UserDashboard\";\r\nimport UserDepositsDashboard from \"containers/UserDashboard/UserDepositsDashboard\";\r\nimport UserOrdersDashboard from \"containers/UserDashboard/UserOrders/UserOrdersDashboard\";\r\nimport UserPaymentDashboard from \"containers/UserDashboard/UserPaymentDashboard\";\r\nimport UserSettings from \"containers/UserDashboard/UserSettings/UserSettings\";\r\nimport UserOrderDetails from \"containers/UserOrderDetails\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport OrderPayment from \"components/OrderPayment\";\r\nimport InternalUserLog from \"containers/Logs/InternalUserLog\";\r\nimport AdminLog from \"containers/Logs/AdminLog\";\r\nimport ActivityLog from \"containers/Logs/ActivityLog\";\r\nimport adminDashboardMicroorganisms from \"containers/AdminDashboard/Microorganisms\";\r\nimport AdminDashboardMicroorganisms from \"containers/AdminDashboard/Microorganisms\";\r\nimport DepositInfo from \"containers/InformationPages/Deposit\";\r\nimport CreateDeposit from \"containers/createDeposit\";\r\nimport UserDeposits from \"containers/UserDashboard/UserDeposits\";\r\nimport AdminDashboardUserDepositDetails from \"containers/AdminDashboard/DepositDetails\";\r\nimport AddMicroorganism from \"containers/AdminDashboard/MicroorganismAdd\";\r\nimport MicroorganismDetails from \"containers/AdminDashboard/MicroorganismsDetails\";\r\nimport Logs from \"containers/AdminDashboard/Others\";\r\nimport LogDetails from \"containers/AdminDashboard/LogDetails\";\r\nimport ReportsAndLogs from \"containers/AdminDashboard/ReportsAndLogs\";\r\nimport Others from \"containers/AdminDashboard/Others\";\r\nfunction MainRouter() {\r\n  return (\r\n    <Switch>\r\n      {/* <PrivateRoute path=\"/\" exact component={HomePage} /> */}\r\n      <Route path=\"/\" exact component={HomePage} />\r\n      <Route path=\"/catalogue\" component={Catalogue} />\r\n      <Route path=\"/dashboard\" exact component={Dashboard} />\r\n      <Route path=\"/signin\" component={Signin} />\r\n      <Route path=\"/forgetPassword\" component={ForgetPassword} />\r\n      <Route path=\"/authentication/activate\" component={EmailVerified} />\r\n      <Route path=\"/resetPassword\" component={ResetPassword} />\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"/itemDetails\" component={ItemDetails} />\r\n      <Route path=\"/depositHomepage\" component={DepositHomepage} />\r\n      <Route path=\"/dashboard/microorgansims\" component={Microorganism} />\r\n      <Route path=\"/dashboard/catalogue\" component={DashboardCatalogue} />\r\n      <Route path=\"/dashboard/user\" component={User} />\r\n      <Route path=\"/deposits\" component={DepositInfo} />\r\n      <Route path=\"/createDeposit\" component={CreateDeposit} />\r\n\r\n      {/* PRIVATE ROUTES*/}\r\n\r\n      {/* User Dashboard routes */}\r\n      <PrivateRoute path=\"/userDashboard\" exact component={UserDashboard} />\r\n      <PrivateRoute\r\n        path=\"/userDashboard/userSettings\"\r\n        exact\r\n        component={UserSettings}\r\n      />\r\n\r\n      <PrivateRoute\r\n        path=\"/userDashboard/userPaymentDashboard\"\r\n        exact\r\n        component={UserPaymentDashboard}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/userDashboard/userOrdersDashboard\"\r\n        exact\r\n        component={UserOrdersDashboard}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/userDashboard/userDepositDashboard\"\r\n        exact\r\n        component={UserDeposits}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/userDashboard/userOrderDetails\"\r\n        exact\r\n        component={UserDashboardOrderDetails}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/userDashboard/userDepositDetails\"\r\n        exact\r\n        component={UserDashboardDepositDetails}\r\n      />\r\n\r\n      {/* Admin Dashboard Routes */}\r\n      <PrivateRoute path=\"/adminDashboard\" exact component={Details} />\r\n      <PrivateRoute path=\"/adminDashboard/settings\" component={Settings} />\r\n      <PrivateRoute path=\"/adminDashboard/deposits\" component={Deposits} />\r\n      <PrivateRoute path=\"/adminDashboard/ordersub\" component={UserOrders} />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/users\"\r\n        component={AdminDashboardUsers}\r\n      />\r\n      <PrivateRoute path=\"/adminDashboard/user/details\" component={User} />\r\n      <PrivateRoute path=\"/adminDashboard/addUser\" component={AddUser} />\r\n      <PrivateRoute path=\"/adminDashboard/payments\" component={Payments} />\r\n      <PrivateRoute path=\"/adminDashboard/reports\" component={Reports} />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/paymentReport\"\r\n        component={PaymentReport}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/orderReport\"\r\n        component={OrderReport}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/Microorganisms\"\r\n        component={AdminDashboardMicroorganisms}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/MicroorganismDetails\"\r\n        component={MicroorganismDetails}\r\n      />\r\n      <PrivateRoute path=\"/adminDashboard/userReport\" component={UserReport} />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/depositReport\"\r\n        component={DepositReport}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/microorganismReport\"\r\n        component={MicroorganismReport}\r\n      />\r\n\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/internalUserLog\"\r\n        component={InternalUserLog}\r\n      />\r\n      <PrivateRoute path=\"/adminDashboard/adminLog\" component={AdminLog} />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/activityLog\"\r\n        component={ActivityLog}\r\n      />\r\n\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/depositRequestForm\"\r\n        component={DepositRequestForm}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/userOrderDetails\"\r\n        component={UserOrderDetails}\r\n      />\r\n      <PrivateRoute path=\"/dashboard/addUser\" component={AddUserForm} />\r\n      {/* <PrivateRoute path=\"/dashboard/orderPayment\" component={OrderPayment} /> */}\r\n      <PrivateRoute\r\n        path=\"/dashboard/details\"\r\n        component={DashboardCatalogueDetail}\r\n      />\r\n      {/* <PrivateRoute\r\n        path=\"/dashboard/addMicroorganism\"\r\n        component={AddMicroorganism}\r\n      /> */}\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/addMicroorganism\"\r\n        component={AddMicroorganism}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/orders\"\r\n        component={AdminDashboardOrders}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/userOrderDetails\"\r\n        component={UserOrderDetails}\r\n      />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/depositDetails\"\r\n        component={AdminDashboardUserDepositDetails}\r\n      />\r\n      <PrivateRoute path=\"/adminDashboard/others\" component={Others} />\r\n      <PrivateRoute path=\"/adminDashboard/logDetails\" component={LogDetails} />\r\n      <PrivateRoute\r\n        path=\"/adminDashboard/ReportsAndLogs\"\r\n        component={ReportsAndLogs}\r\n      />\r\n\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport { MainRouter };\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\helpers\\axios.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\server_urls.js\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DepositHomepage.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DepositRequestForm.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\HOC\\PrivateRoute.js",["1251"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        // Todo: Remove hardcoded `true`\r\n        const token = true; //window.localStorage.getItem('token');\r\n        // const role = window.localStorage.getItem(\"role\");\r\n        // const state = JSON.parse(window.localStorage.getItem(\"state\"));\r\n        if (auth.token) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to={\"/signin\"} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderPayment.js",["1252"],"// import React, { useState } from \"react\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import { Table } from \"@material-ui/core\";\r\n\r\n// const OrderPayment = (props) => {\r\n\r\n//     return(\r\n//         <div style={styles.container}>\r\n//         <div><span style={styles.header}>Status Alert: </span><span style={styles.text}>{props.datastatus.status}</span></div>\r\n//         <div><span style={styles.header}>Description: </span><span style={styles.text}>{props.datastatus.description}</span></div>\r\n//         \r\n//         </div>\r\n\r\n//     )\r\n// }\r\n\r\n// export default OrderPayment;\r\n\r\n// const styles = {\r\n\r\n//     container:{\r\n\r\n//        marginTop:35,\r\n//       border: '1px solid red',\r\n\r\n//     },\r\n//     header:{\r\n//         color:\"Black\",\r\n//         padding: \"10px\",\r\n//         fontSize: 22,\r\n\r\n//     },\r\n//     text:{\r\n//         color:\"Black\",\r\n//         fontFamily: \"Arial\",\r\n//         padding:25,\r\n\r\n//     },\r\n\r\n// }\r\n\r\nimport Paper          from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table          from '@material-ui/core/Table';\r\nimport TableBody      from '@material-ui/core/TableBody';\r\nimport TableCell      from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead      from '@material-ui/core/TableHead';\r\nimport TableRow       from '@material-ui/core/TableRow';\r\nimport React          from 'react';\r\nimport { Button }     from 'react-bootstrap';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles({\r\n                               table: {\r\n                                 minWidth: 700,\r\n\r\n                               },\r\n                             });\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('coccus', 5, 1.15),\r\n  createRow('sarcinae', 3, 45.99),\r\n  createRow('staphylococci', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function () {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer style={styles.tablecontainerstyling}\r\n\r\n\r\n                    component={Paper}>\r\n\r\n      {/* <div style={styles.container}>\r\n         <div><span style={styles.header}>Status Alert: </span><span style={styles.text}>{props.datastatus.status}</span></div>\r\n         <div><span style={styles.header}>Description: </span><span style={styles.text}>{props.datastatus.description}</span></div>\r\n         \r\n         </div> */}\r\n\r\n\r\n      <Table style={\r\n        styles.tablestyling\r\n      }\r\n\r\n\r\n             className={classes.table} aria-label=\"spanning table\">\r\n\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Payment invoice\r\n            </TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Microorganism Name</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">Unit</TableCell>\r\n            <TableCell align=\"right\">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n        <div style={styles.buttoncontainer}>\r\n          <Button style={styles.buttoncontainerinner}>\r\n            Pay with Credit/Debit Card\r\n          </Button>\r\n        </div>\r\n\r\n\r\n      </Table>\r\n\r\n    </TableContainer>\r\n\r\n  );\r\n}\r\n\r\nconst styles = {\r\n\r\n  // tablestyling:{\r\n\r\n  // //   border: '1px solid red',\r\n  //   width: 800,\r\n\r\n  // },\r\n\r\n  tablestyling: {\r\n    width: 800\r\n\r\n  },\r\n\r\n  tablecontainerstyling: {\r\n\r\n    // border: '1px solid red',\r\n    height   : 500,\r\n    marginTop: 10,\r\n    width    : 900\r\n  },\r\n\r\n  buttoncontainer     : {\r\n\r\n    display       : 'flex-right',\r\n    justifyContent: 'flex-end',\r\n    alignItems    : 'center',\r\n\r\n  },\r\n  buttoncontainerinner: {\r\n    fontSize  : 10,\r\n    background: 'sky-blue',\r\n  }\r\n\r\n};\r\n\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserOrderDetails.js",["1253","1254","1255","1256","1257","1258","1259","1260","1261","1262"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getOrderDetails,\r\n  adminOrderReject,\r\n  changeAdminOrderStatus,\r\n  approveOrderDocument,\r\n  rejectOrderDocument,\r\n  submitOrderTrackingNumber,\r\n} from \"actions\";\r\nimport Delivered from \"components/AdminOrderDetailsScreens/Delivered\";\r\nimport OrderRequest from \"components/AdminOrderDetailsScreens/OrderRequest\";\r\nimport Payment from \"components/AdminOrderDetailsScreens/Payment\";\r\nimport Processing from \"components/AdminOrderDetailsScreens/Processing\";\r\nimport Rejected from \"components/AdminOrderDetailsScreens/Rejected\";\r\nimport DepositPayment from \"components/DepositPayment\";\r\nimport DocumentSubmission from \"components/DocumentSubmission\";\r\nimport OrderDelivered from \"components/OrderDelivered\";\r\nimport OrderDetailsInformationList from \"components/OrderDetailsInformationList\";\r\nimport OrderDispatched from \"components/OrderDispatched\";\r\nimport OrderPayment from \"components/OrderPayment\";\r\nimport OrderRejectDescription from \"components/OrderRejectDesciption\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\n\r\nconst UserOrderDetails = (props) => {\r\n  const { id } = props.location.state;\r\n  const dispatch = useDispatch();\r\n  const { order } = useSelector((state) => state.order.getOrderDetails);\r\n  const [data, setData] = useState({\r\n    order_id: \"120191\",\r\n    created: \"01-08-2019\",\r\n    user_id: \"1234\",\r\n    status: \"Reject\",\r\n  });\r\n\r\n  const [datastatus, setDatastatus] = useState({\r\n    status: \"Your order is Rejected\",\r\n    description: \"The form is incomplete, some information is missing\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(order);\r\n  }, [order]);\r\n\r\n  const styles = {};\r\n  // Order Request\r\n  const handleRequestApproval = () => {\r\n    alert(\"handling order approval\");\r\n    dispatch(changeAdminOrderStatus({ order_id: id }));\r\n  };\r\n\r\n  const handleRequestRejection = (description) => {\r\n    dispatch(adminOrderReject({ order_id: id, description }));\r\n  };\r\n\r\n  // Document\r\n\r\n  const handleDocumentApproval = (document_id) => {\r\n    dispatch(approveOrderDocument({ order_id: id, document_id }));\r\n  };\r\n\r\n  const handleDocumentRejection = (document_id, description) => {\r\n    // alert(`${document_id} , ${description}`);\r\n    dispatch(rejectOrderDocument({ order_id: id, document_id, description }));\r\n  };\r\n\r\n  // Processing to Dispatch\r\n  const handleSubmitTracking = (tracking_number) => {\r\n    dispatch(submitOrderTrackingNumber({ order_id: id, tracking_number }));\r\n  };\r\n  const getComponent = () => {\r\n    switch (data.status) {\r\n      case \"Order Request\":\r\n        return (\r\n          <OrderRequest\r\n            description={data.data && data.description}\r\n            data={data.data && data.data.items}\r\n            id={id}\r\n            onApprove={handleRequestApproval}\r\n            onReject={handleRequestRejection}\r\n          />\r\n        );\r\n        break;\r\n      case \"Document Submission\":\r\n        return (\r\n          <DocumentSubmission\r\n            documents={data.data.submitted_documents}\r\n            onApprove={handleDocumentApproval}\r\n            onReject={handleDocumentRejection}\r\n          />\r\n        );\r\n      case \"Payment\":\r\n        return <Payment />;\r\n        break;\r\n      case \"Processing\":\r\n        return <Processing onSubmitTracking={handleSubmitTracking} />;\r\n      case \"Dispatched\":\r\n        return (\r\n          <OrderDispatched\r\n            tracking={data.data.tracking}\r\n            datastatus={datastatus}\r\n          />\r\n        );\r\n      case \"Delivered\":\r\n        return <Delivered />;\r\n      case \"Rejected\":\r\n        console.log(data);\r\n        return <Rejected description={data.data && data.data.description} />;\r\n\r\n      case \"Cancelled\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <Grid container spacing={2} style={{ marginTop: \"2rem\" }}>\r\n        <Grid\r\n          item\r\n          lg={10}\r\n          md={10}\r\n          sm={10}\r\n          xs={12}\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            {`Order ID:\\t\\t${data.order_id}`}\r\n          </Typography>\r\n          <Typography variant=\"p\" color=\"textSecondary\">\r\n            {`Date Created:\\t\\t${data.date}`}\r\n          </Typography>\r\n          <Typography variant=\"p\" color=\"textSecondary\">\r\n            {`Created by:\\t\\t${data.username}`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={2}\r\n          md={2}\r\n          sm={2}\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <Button color=\"primary\">Remove</Button>\r\n        </Grid>\r\n        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title={`${data.status}`}\r\n              titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n            />\r\n            <CardContent>{getComponent()}</CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default UserOrderDetails;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\DepositReport.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\OrderReport.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\PaymentReport.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDashboard.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\UserReport.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserPaymentDashboard.js",["1263","1264","1265","1266"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\MicroorganismReport.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDepositsDashboard.js",["1267"],"import React, { useState } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getDeposits } from \"actions\";\r\n\r\nconst UserDepositsDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  // const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const deposits = useSelector((state) => state.deposit);\r\n\r\n  useEffect(() => {\r\n    alert(\"calling for the data\");\r\n    dispatch(getDeposits());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(deposits.getDeposits.deposits || []);\r\n  }, [deposits]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.deposit_id\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(query.toLowerCase()) > -1 ||\r\n            row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  // const sortData = (data) => {\r\n  //   data[0] &&\r\n  //     data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n  //   return data.sort(\r\n  //     (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n  //   );\r\n  // };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Deposits are being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (deposits.getDeposits.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (deposits.getDeposits.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(deposits.getDeposits.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const deposit_table_head = [\r\n    {\r\n      id: \"deposit_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Deposit ID\",\r\n    },\r\n    {\r\n      id: \"customer_name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Customer\",\r\n    },\r\n    {\r\n      id: \"type\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Deposit Type\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n  const onRowsDelete = (values) => {\r\n    alert(`These values were requested to be deleted ${values}`);\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Deposits\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit Request\",\r\n                value: \"Deposit Request\",\r\n              },\r\n              {\r\n                title: \"Document Submission\",\r\n                value: \"Document Submission\",\r\n              },\r\n              {\r\n                title: \"Rejected\",\r\n                value: \"Rejected\",\r\n              },\r\n              {\r\n                title: \"Payment Submission\",\r\n                value: \"Payment Submission\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"Processing\",\r\n              },\r\n              {\r\n                title: \"Deposited\",\r\n                value: \"Deposited\",\r\n              },\r\n              {\r\n                title: \"Cancelled\",\r\n                value: \"Cancelled\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={deposit_table_head}\r\n          rows={search(data)}\r\n          onDelete={onRowsDelete}\r\n          showDetails={\"/userDashboard/userDepositDetails\"}\r\n        />\r\n      </div>\r\n\r\n      {/* <div className=\"div__two\">\r\n          <h3>Orders</h3>\r\n        </div>\r\n        <div className=\"div__three\">\r\n          <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n        </div>\r\n        <StripeCheckout\r\n          stripeKey=\"pk_test_51IhcBtCueTz3N4RSq2lZieK9Wh8cD7XR2KlScdCDyfyuCcnjbj6RzGbaoxUtIOHxDAruTsgTTuFWKz1lcSj7YlO60066rgWObx\"\r\n          token={makePayment}\r\n          amount={paymentDetails.total * 100}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Pay with Credit/Debit card\r\n          </Button>\r\n        </StripeCheckout> */}\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default UserDepositsDashboard;\r\n\r\n// import { CircularProgress } from \"@material-ui/core\";\r\n// import DepositItemList from \"components/DepositItemList\";\r\n// import DropDown from \"components/DropDown\";\r\n// import SideBar from \"components/SideBar\";\r\n// import React, { useState } from \"react\";\r\n\r\n// const Deposits = () => {\r\n//   const [data, setData] = useState([\r\n//     {\r\n//       deposit_id: \"120191\",\r\n//       created: \"Aug 1,2019\",\r\n//       customer: \"Harriet Santigo\",\r\n//       total: \"$604.50\",\r\n//       status: \"Request\",\r\n//     },\r\n//     {\r\n//       deposit_id: \"121090\",\r\n//       created: \"Jul 21,2019\",\r\n//       customer: \"Sara Graham\",\r\n//       total: \"$524.25\",\r\n//       status: \"Processing\",\r\n//     },\r\n//   ]);\r\n//   const [query, setQuery] = useState(\"\");\r\n//   const [sortBy, setSortBy] = useState(\"\");\r\n//   const [filter, setFilter] = useState(\"\");\r\n\r\n//   const search = (data) => {\r\n//     return data.filter((row) => {\r\n//       const applyFilter =\r\n//         filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n//       return (\r\n//         applyFilter &&\r\n//         (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n//           -1 ||\r\n//           row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n//             -1)\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   const sortData = (data) => {\r\n//     data[0] &&\r\n//       data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n//     return data.sort(\r\n//       (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n//     );\r\n//   };\r\n\r\n//   const requestSent = () => {\r\n//     return (\r\n//       <div className=\"fetch__data__div\">\r\n//         <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n//         <CircularProgress className=\"fetch__data__spinner\" />\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const ErrorMessage = () => {\r\n//     return (\r\n//       <div className=\"error__div\">\r\n//         <h3 className=\"error__title\">{\"abc\"}</h3>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const columns = [\r\n//     {\r\n//       title: \"Deposit ID\",\r\n//       width: \"10%\",\r\n//     },\r\n//     {\r\n//       title: \"Created\",\r\n//       width: \"20%\",\r\n//     },\r\n//     {\r\n//       title: \"Customer\",\r\n//       width: \"30%\",\r\n//     },\r\n//     {\r\n//       title: \"Total\",\r\n//       width: \"10%\",\r\n//     },\r\n//     {\r\n//       title: \"Status\",\r\n//       width: \"10%\",\r\n//     },\r\n//     {\r\n//       title: \"\",\r\n//       width: \"10%\",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <SideBar active=\"Deposits\">\r\n//       <div className=\"div__one\"></div>\r\n//       <div className=\"div__two\">\r\n//         <h3>Deposits</h3>\r\n//         <div>\r\n//           <DropDown\r\n//             title=\"Sort By\"\r\n//             value={sortBy}\r\n//             setValue={setSortBy}\r\n//             variant=\"outlined\"\r\n//             labelWidth={60}\r\n//             width=\"150px\"\r\n//             data={[\r\n//               {\r\n//                 title: \"Deposit ID\",\r\n//                 value: \"deposit_id\",\r\n//               },\r\n//               {\r\n//                 title: \"Customer Name\",\r\n//                 value: \"customer_name\",\r\n//               },\r\n//               {\r\n//                 title: \"Total\",\r\n//                 value: \"total\",\r\n//               },\r\n//             ]}\r\n//           />\r\n//           <DropDown\r\n//             title=\"Status\"\r\n//             value={filter}\r\n//             setValue={setFilter}\r\n//             variant=\"outlined\"\r\n//             labelWidth={60}\r\n//             width=\"150px\"\r\n//             data={[\r\n//               {\r\n//                 title: \"Request\",\r\n//                 value: \"request\",\r\n//               },\r\n//               {\r\n//                 title: \"Processing\",\r\n//                 value: \"processing\",\r\n//               },\r\n//               {\r\n//                 title: \"Sent\",\r\n//                 value: \"sent\",\r\n//               },\r\n//               {\r\n//                 title: \"Approved\",\r\n//                 value: \"approved\",\r\n//               },\r\n//             ]}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"div__three\">\r\n//         <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n//       </div>\r\n//     </SideBar>\r\n//   );\r\n// };\r\n\r\n// export default Deposits;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserOrders\\UserOrdersDashboard.js",["1268","1269","1270","1271","1272","1273","1274","1275"],"import React, { useState } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DropDown from \"../../../components/DropDown\";\r\nimport SideBar from \"../../../components/SideBar\";\r\nimport \"./style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { confirmPayment } from \"actions/payment.actions\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { Close, FavoriteOutlined } from \"@material-ui/icons\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getOrders } from \"actions\";\r\nimport UserSideBar from \"components/UserSidebar/UserSidebar\";\r\n\r\nconst UserOrdersDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const orders = useSelector((state) => state.order);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(orders.getOrders.orders || []);\r\n  }, [orders]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1 ||\r\n            row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Orders is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  if (orders.getOrders.fetching) {\r\n    return (\r\n      <UserSideBar active=\"Orders\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </UserSideBar>\r\n    );\r\n  }\r\n\r\n  if (orders.getOrders.error.found) {\r\n    return (\r\n      <UserSideBar active=\"Orders\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(orders.getOrders.error.message)}\r\n        </div>\r\n      </UserSideBar>\r\n    );\r\n  }\r\n\r\n  // Payment Component\r\n\r\n  // const [paymentDetails, setPaymentDetails] = useState({\r\n  //   order_id: \"60643cdf5d049b0a48495594\",\r\n  //   items: [\r\n  //     {\r\n  //       _id: \"60643cdf5d049b0a48495595\",\r\n  //       microorganism_id: \"5fd2fb5b44712417441281e9\",\r\n  //       quantity: 3,\r\n  //       sub_total: 600,\r\n  //     },\r\n  //   ],\r\n  //   total: 600,\r\n  // });\r\n\r\n  // const payment = () => {\r\n  //   return \"acb\";\r\n  // };\r\n\r\n  // const makePayment = (token) => {\r\n  //   dispatch(\r\n  //     confirmPayment({\r\n  //       order_id: paymentDetails.order_id,\r\n  //       token,\r\n  //       products: paymentDetails.items,\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  const order_table_head = [\r\n    {\r\n      id: \"order_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Order ID\",\r\n    },\r\n    {\r\n      id: \"customer_name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Customer\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n\r\n  const onRowsDelete = (values) => {\r\n    alert(`These values were requested to be deleted ${values}`);\r\n  };\r\n\r\n  // jkhjdfhjsdfhsdkjfds\r\n\r\n  // const order_table = () => {\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <UserSideBar active=\"Orders\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Order Request\",\r\n                value: \"Order Request\",\r\n              },\r\n              {\r\n                title: \"Document Processing\",\r\n                value: \"Document Processing\",\r\n              },\r\n              {\r\n                title: \"Rejected\",\r\n                value: \"Rejected\",\r\n              },\r\n              {\r\n                title: \"Payment\",\r\n                value: \"Payment\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"Processing\",\r\n              },\r\n              {\r\n                title: \"Dispatched\",\r\n                value: \"Dispatched\",\r\n              },\r\n              {\r\n                title: \"Delivered\",\r\n                value: \"Delivered\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={order_table_head}\r\n          rows={sortData(search(data))}\r\n          onDelete={onRowsDelete}\r\n          showDetails={\"/userDashboard/userOrderDetails\"}\r\n        />\r\n      </div>\r\n\r\n      {/* <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n      <StripeCheckout\r\n        stripeKey=\"pk_test_51IhcBtCueTz3N4RSq2lZieK9Wh8cD7XR2KlScdCDyfyuCcnjbj6RzGbaoxUtIOHxDAruTsgTTuFWKz1lcSj7YlO60066rgWObx\"\r\n        token={makePayment}\r\n        amount={paymentDetails.total * 100}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Pay with Credit/Debit card\r\n        </Button>\r\n      </StripeCheckout> */}\r\n    </UserSideBar>\r\n  );\r\n};\r\n\r\nexport default UserOrdersDashboard;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\UserSettings.js",["1276","1277","1278","1279","1280","1281","1282","1283"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getUserData,\r\n  resetPassword,\r\n  updateUserInfo,\r\n  updateUserProfilePicture,\r\n} from \"actions\";\r\nimport SideBar from \"components/SideBar\";\r\nimport UserSideBar from \"components/UserSidebar/UserSidebar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport passwordValidator from \"./passwordValidator\";\r\n// import { PermissionData } from \"./PermissionData\";\r\nimport PersonalInformationValidator from \"./PersonalInformationValidator\";\r\nimport useFormPassword from \"./useFormPassword\";\r\nimport useFormPersonalInformation from \"./useFormPersonalInformation\";\r\n\r\nconst UserSettings = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user);\r\n  const id = useSelector((state) => state.auth.user._id);\r\n  const [editPersonalInformation, setEditPersonalInformation] = useState(false);\r\n  const [editPassword, setEditPassword] = useState(false);\r\n\r\n  const handleInformationSubmission = () => {\r\n    setEditPersonalInformation(false);\r\n    setEditPassword(false);\r\n    dispatch(\r\n      updateUserInfo({ ...personalInformationValue, _id: id }, id, user.role)\r\n    );\r\n  };\r\n\r\n  const handlePasswordChangeSubmission = () => {\r\n    setEditPassword(false);\r\n\r\n    dispatch(\r\n      resetPassword({ password: passwordValue.password, id }, user.role)\r\n    );\r\n  };\r\n\r\n  const handleProfilePictureSubmission = (e) => {\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    data.append(\"profilePicture\", e.target.files[0]);\r\n    dispatch(updateUserProfilePicture(data, id, user.role));\r\n  };\r\n\r\n  const {\r\n    handlePersonalInformationSubmit,\r\n    personalInformationValue,\r\n    updatePersonalInformationValue,\r\n    personalInformationErrors,\r\n    setInitial,\r\n  } = useFormPersonalInformation(\r\n    handleInformationSubmission,\r\n    PersonalInformationValidator\r\n  );\r\n\r\n  const {\r\n    passwordValue,\r\n    handlepasswordSubmit,\r\n    updatepasswordValue,\r\n    passwordErrors,\r\n  } = useFormPassword(handlePasswordChangeSubmission, passwordValidator);\r\n\r\n  const editPersonalInfo = () => {\r\n    setEditPersonalInformation(true);\r\n  };\r\n\r\n  const handlePersonalInformationSave = (e) => {\r\n    handlePersonalInformationSubmit(e);\r\n  };\r\n  useEffect(() => {\r\n    if (user) {\r\n      console.log(\"Contact Number\", user.contactNumber);\r\n      setInitial({\r\n        firstname: user.firstname || \"\",\r\n        lastname: user.lastname || \"\",\r\n        email: user.email || \"\",\r\n        contactNumber: user.contactNumber || \"\",\r\n        description: user.description || \"\",\r\n        profilePicture: user.profilePicture || \"\",\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <UserSideBar active=\"settings\">\r\n      <Grid container lg sm xs md style={styles.container} spacing={2}>\r\n        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n          <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n            <CardHeader\r\n              title=\"Personal Information\"\r\n              titleTypographyProps={{ color: \"primary\" }}\r\n              action={\r\n                <>\r\n                  {editPersonalInformation == false ? (\r\n                    <Button\r\n                      style={{ marginTop: \"0.8rem\" }}\r\n                      color=\"primary\"\r\n                      onClick={editPersonalInfo}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ marginTop: \"0.8rem\" }}\r\n                      onClick={handlePersonalInformationSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <Grid container direction=\"column\" spacing={3}>\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  md\r\n                  lg\r\n                  sm\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    src={personalInformationValue.profilePicture}\r\n                    style={{ width: \"6rem\", height: \"6rem\" }}\r\n                  />\r\n                  {editPersonalInformation && (\r\n                    <div\r\n                      style={{\r\n                        width: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   // margin: \"2rem 1rem\",\r\n                        // }}\r\n                      >\r\n                        Update\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"profilePicture\"\r\n                          onChange={handleProfilePictureSubmission}\r\n                          hidden\r\n                        />\r\n                      </Button>\r\n                      <Button\r\n                        color=\"default\"\r\n                        variant=\"contained\"\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   // margin: \"2rem 1rem 2rem 0rem\",\r\n                        // }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item lg sm xs md>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    value={personalInformationValue.firstname}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.firstname}\r\n                    helperText={personalInformationErrors.firstname}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    value={personalInformationValue.lastname}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.lastname}\r\n                    helperText={personalInformationErrors.lastname}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={personalInformationValue.email}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.email}\r\n                    helperText={personalInformationErrors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"contactNumber\"\r\n                    label=\"Contact Number\"\r\n                    value={personalInformationValue.contactNumber}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.contactNumber}\r\n                    helperText={personalInformationErrors.contactNumber}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={9}\r\n                    value={personalInformationValue.description}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.description}\r\n                    helperText={personalInformationErrors.description}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          {/* </Grid> */}\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n          <Grid container lg sm xs md direction=\"column\">\r\n            <Grid\r\n              item\r\n              lg={12}\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                <CardHeader\r\n                  title=\"Password\"\r\n                  titleTypographyProps={{ color: \"primary\" }}\r\n                  action={\r\n                    <>\r\n                      {editPassword == false ? (\r\n                        <Button\r\n                          style={{ marginTop: \"0.8rem\" }}\r\n                          color=\"primary\"\r\n                          onClick={(e) => setEditPassword(true)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"0.8rem\" }}\r\n                          onClick={handlepasswordSubmit}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  }\r\n                />\r\n                <CardContent>\r\n                  <Grid\r\n                    container\r\n                    xs\r\n                    lg\r\n                    md\r\n                    sm\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                  >\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        value={passwordValue.password}\r\n                        disabled={!editPassword}\r\n                        onChange={updatepasswordValue}\r\n                        error={passwordErrors.password}\r\n                        helperText={passwordErrors.password}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm style={{ marginTop: \"1.3rem\" }}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        value={passwordValue.confirmPassword}\r\n                        disabled={!editPassword}\r\n                        onChange={updatepasswordValue}\r\n                        error={passwordErrors.confirmPassword}\r\n                        helperText={passwordErrors.confirmPassword}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            {/* {user && user.role !== \"external\" && (\r\n              <Grid\r\n                item\r\n                xs\r\n                lg\r\n                md\r\n                sm\r\n                style={{ width: \"100%\", marginTop: \"1rem\" }}\r\n              >\r\n                <Card style={{ width: \"100%\" }}>\r\n                  <CardHeader\r\n                    title=\"Permissions\"\r\n                    titleTypographyProps={{ color: \"primary\" }}\r\n                    action={\r\n                      <>\r\n                        {editPermissions == false ? (\r\n                          <Button\r\n                            style={{ marginTop: \"0.8rem\" }}\r\n                            color=\"primary\"\r\n                            onClick={(e) => setEditPermission(true)}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"0.8rem\" }}\r\n                            onClick={handlePersonalInformationSave}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        )}\r\n                      </>\r\n                    }\r\n                  />\r\n                  <CardContent>\r\n                    <Grid container spacing={2}>\r\n                      {PermissionData.map((permission, index) => {\r\n                        return (\r\n                          <Grid item xs={6} lg={6} md={6} sm={6}>\r\n                            <FormControlLabel\r\n                              key={index}\r\n                              disabled={!editPermissions}\r\n                              control={\r\n                                <Checkbox\r\n                                  checked={\r\n                                    personalInformationValue.permissions\r\n                                      ? personalInformationValue.permissions[\r\n                                          permission.name\r\n                                        ]\r\n                                      : false\r\n                                  }\r\n                                  onChange={updatePersonalInformationValue}\r\n                                  name={permission.name}\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              label={permission.title}\r\n                            />\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            )} */}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Grid item lg md sm xs>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              paddingLeft: \"0.4rem\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h5>Personal Information</h5>\r\n            <Button color=\"primary\" variant=\"text\" onClick={editPersonalInfo}>\r\n              {editPersonalInformation ? \"Save\" : \"Edit\"}\r\n            </Button>\r\n          </div>\r\n          <Card>\r\n            <CardContent>\r\n              <Grid\r\n                style={{ backgroundColor: \"red\" }}\r\n                container\r\n                lg\r\n                sm\r\n                md\r\n                xs\r\n                spacing={3}\r\n                direction=\"column\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={5}\r\n                  lg={5}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar style={{ width: \"10rem\", height: \"10rem\" }} />\r\n                  {editPersonalInformation && (\r\n                    <div\r\n                      style={{\r\n                        width: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Button color=\"primary\" variant=\"contained\">\r\n                        Update\r\n                      </Button>\r\n                      <Button color=\"default\" variant=\"contained\">\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={7}\r\n                  lg={7}\r\n                  sm={12}\r\n                  style={{ padding: \"1rem 3rem\" }}\r\n                >\r\n                  <Grid container xs lg md sm direction=\"column\" spacing={3}>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"firstname\"\r\n                        label=\"First Name\"\r\n                        // value={data.firstname}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.firstname}\r\n                        // helperText={\r\n                        //   errors.firstname ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"lastname\"\r\n                        label=\"Last Name\"\r\n                        // value={data.lastname}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.lastname}\r\n                        // helperText={\r\n                        //   errors.lastname ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        // value={data.email}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.email}\r\n                        // helperText={\r\n                        //   errors.email ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"contactNumber\"\r\n                        label=\"Contact Number\"\r\n                        // value={data.contactNumber}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.contactNumber}\r\n                        // helperText={\r\n                        //   errors.contactNumber ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        // value={data.description}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.description}\r\n                        // helperText={\r\n                        //   errors.description ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          <Grid container lg sm xs md>\r\n            <Grid item>profile</Grid>\r\n            <Grid item>personal Info</Grid>\r\n          </Grid>\r\n        </Grid> */}\r\n      </Grid>\r\n      {/* <h1>Settings</h1>\r\n      <Badge\r\n        color=\"primary\"\r\n        badgeContent={\r\n          <CreateIcon\r\n            style={{\r\n              width          : '12px',\r\n              height         : '12px',\r\n              borderRadius   : '2px solid royalblue',\r\n              backgroundColor: 'royalblue',\r\n            }}\r\n          />\r\n        }\r\n        showZero\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical  : 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        <Avatar />\r\n      </Badge>\r\n\r\n      <TextField variant=\"outlined\" label=\"Firstname\" /> */}\r\n    </UserSideBar>\r\n  );\r\n};\r\nconst styles = {\r\n  container: {\r\n    minHeight: \"90vh\",\r\n    margin: \"1rem 0\",\r\n  },\r\n};\r\nexport default UserSettings;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Logs\\InternalUserLog.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Logs\\ActivityLog.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Logs\\AdminLog.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddUserForm\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Dashboard\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js",["1284","1285","1286"],"import React, { useEffect, useState }              from 'react';\r\nimport { Accordion, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { useSelector }                             from 'react-redux';\r\nimport Layout                                      from '../../components/Layout';\r\nimport axios                                       from '../../helpers/axios';\r\n\r\nconst DashboardCatalogueDetail = (props) => {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = props.location.state;\r\n  const [data, setData] = useState({});\r\n\r\n  const [option, setOption] = useState(false);\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === 'save') {\r\n      // dispatch(updateUserInfo(userData, token));\r\n      // setSavingData(!savingData);\r\n    }\r\n    setOption(!option);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.post(\r\n      '/findmicroorganism',\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    setData(res.data);\r\n  }, []);\r\n  return (\r\n    <Layout sidebar>\r\n      <Button\r\n        onClick={(e) =>\r\n          handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n        }\r\n      >\r\n        {option ? 'Save' : 'Edit'}\r\n      </Button>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {Object.keys(data).map((heading, key) => {\r\n          return (\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey={`${key}`}>\r\n                {heading}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${key}`}>\r\n                <Card.Body>\r\n                  {Object.keys(data[heading]).map((label, i) => {\r\n                    return (\r\n                      <Row className=\"p-2\" key={i}>\r\n                        <Col>{label}</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ backgroundColor: 'green' }}\r\n                            value={data[heading][label]}\r\n                            onChange={(e) => {\r\n                              setData({\r\n                                        ...data,\r\n                                        [heading]: {\r\n                                          ...data[heading],\r\n                                          [label]: e.target.value,\r\n                                        },\r\n                                      });\r\n                            }}\r\n                            disabled={!option}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogueDetail;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardOrders\\index.js",["1287","1288","1289","1290","1291","1292","1293"],"import React, { useState } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport \"./style.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { confirmPayment } from \"actions/payment.actions\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { Close, FavoriteOutlined } from \"@material-ui/icons\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { deleteOrder, getOrders } from \"actions\";\r\n\r\nconst AdminDashboardOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const orders = useSelector((state) => state.order.getOrders);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(orders.orders || []);\r\n  }, [orders]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1 ||\r\n            row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Orders is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  if (orders.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (orders.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(orders.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  // Payment Component\r\n\r\n  // const [paymentDetails, setPaymentDetails] = useState({\r\n  //   order_id: \"60643cdf5d049b0a48495594\",\r\n  //   items: [\r\n  //     {\r\n  //       _id: \"60643cdf5d049b0a48495595\",\r\n  //       microorganism_id: \"5fd2fb5b44712417441281e9\",\r\n  //       quantity: 3,\r\n  //       sub_total: 600,\r\n  //     },\r\n  //   ],\r\n  //   total: 600,\r\n  // });\r\n\r\n  // const payment = () => {\r\n  //   return \"acb\";\r\n  // };\r\n\r\n  // const makePayment = (token) => {\r\n  //   dispatch(\r\n  //     confirmPayment({\r\n  //       order_id: paymentDetails.order_id,\r\n  //       token,\r\n  //       products: paymentDetails.items,\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  const order_table_head = [\r\n    {\r\n      id: \"order_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Order ID\",\r\n    },\r\n    {\r\n      id: \"customer_name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Customer\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n\r\n  const onRowsDelete = (values) => {\r\n    dispatch(deleteOrder({ ordersToDelete: values }));\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Order Request\",\r\n                value: \"Order Request\",\r\n              },\r\n              {\r\n                title: \"Document Processing\",\r\n                value: \"Document Processing\",\r\n              },\r\n              {\r\n                title: \"Rejected\",\r\n                value: \"Rejected\",\r\n              },\r\n              {\r\n                title: \"Payment\",\r\n                value: \"Payment\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"Processing\",\r\n              },\r\n              {\r\n                title: \"Dispatched\",\r\n                value: \"Dispatched\",\r\n              },\r\n              {\r\n                title: \"Delivered\",\r\n                value: \"Delivered\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={order_table_head}\r\n          rows={sortData(search(data))}\r\n          onDelete={onRowsDelete}\r\n          type=\"Orders\"\r\n          showDetails={\"/adminDashboard/userOrderDetails\"}\r\n        />\r\n      </div>\r\n\r\n      {/* <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n      <StripeCheckout\r\n        stripeKey=\"pk_test_51IhcBtCueTz3N4RSq2lZieK9Wh8cD7XR2KlScdCDyfyuCcnjbj6RzGbaoxUtIOHxDAruTsgTTuFWKz1lcSj7YlO60066rgWObx\"\r\n        token={makePayment}\r\n        amount={paymentDetails.total * 100}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Pay with Credit/Debit card\r\n        </Button>\r\n      </StripeCheckout> */}\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardOrders;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AddMicroorganism\\index.js",["1294"],"import React, { useEffect, useState }                    from 'react';\r\nimport { useDispatch, useSelector }                      from 'react-redux';\r\nimport { Redirect }                                      from 'react-router-dom';\r\nimport { addMicroorganism, resetAddMicroorganismState, } from '../../actions/catalogue.actions';\r\nimport Review                                            from '../../components/AddMicroorgansimForm/Review';\r\nimport Step1                                             from '../../components/AddMicroorgansimForm/Step1';\r\nimport Step10                                            from '../../components/AddMicroorgansimForm/Step10';\r\nimport Step11                                            from '../../components/AddMicroorgansimForm/Step11';\r\nimport Step12                                            from '../../components/AddMicroorgansimForm/Step12';\r\nimport Step13                                            from '../../components/AddMicroorgansimForm/Step13';\r\nimport Step14                                            from '../../components/AddMicroorgansimForm/Step14';\r\nimport Step2                                             from '../../components/AddMicroorgansimForm/Step2';\r\nimport Step3                                             from '../../components/AddMicroorgansimForm/Step3';\r\nimport Step4                                             from '../../components/AddMicroorgansimForm/Step4';\r\nimport Step5                                             from '../../components/AddMicroorgansimForm/Step5';\r\nimport Step6                                             from '../../components/AddMicroorgansimForm/Step6';\r\nimport Step7                                             from '../../components/AddMicroorgansimForm/Step7';\r\nimport Step8                                             from '../../components/AddMicroorgansimForm/Step8';\r\nimport Step9                                             from '../../components/AddMicroorgansimForm/Step9';\r\nimport Layout                                            from '../../components/Layout';\r\n\r\nfunction AddMicroorganism() {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const added = useSelector((state) => state.catalogue.addMicroorganism.added);\r\n  const [currentStep, setCurrentStep] = useState(14);\r\n  const [formData, setFormData] = useState({\r\n                                             CoreDataSets          : {\r\n                                               Genus                   : '',\r\n                                               AccessionNumber         : '',\r\n                                               OtherCollection         : [],\r\n                                               SpeciesEpithet          : '',\r\n                                               Author                  : '',\r\n                                               OrganismType            : 'Bacteria',\r\n                                               HistoryOfDeposit        : '',\r\n                                               DateOfIsolation         : '',\r\n                                               IsolatedFrom            : '',\r\n                                               GeographicOrigin        : '',\r\n                                               Status                  : 'Type',\r\n                                               Medium                  : '',\r\n                                               Application             : '',\r\n                                               Literature              : '',\r\n                                               OptimumGrowthTemperature: '',\r\n                                               MaximumGrowthTemperature: '',\r\n                                               MinimumGrowthTemperature: '',\r\n                                             },\r\n                                             Name                  : {\r\n                                               TaxonomyID: '',\r\n                                             },\r\n                                             StrainAdministration  : {\r\n                                               DateOfAccession        : '',\r\n                                               HerbariumNo            : '',\r\n                                               InternalIdentityCheck  : '',\r\n                                               ModeOfPreservation     : '',\r\n                                               BioHazardLevel         : '1',\r\n                                               RestrictionRemarks     : '',\r\n                                               CountryOfExport        : '',\r\n                                               MTA                    : '',\r\n                                               DistributionRestriction: '',\r\n                                               AnimalQuarantineNo     : '',\r\n                                               PlantQuarantineNo      : '',\r\n                                               FormOfSupply           : '',\r\n                                             },\r\n                                             EnviromentAndHistory  : {\r\n                                               SubStrate               : '',\r\n                                               Habitat                 : '',\r\n                                               Latitude                : '',\r\n                                               Longitude               : '',\r\n                                               Altitude                : '',\r\n                                               Depth                   : '',\r\n                                               Humidity                : '',\r\n                                               PHForEnviroment         : '',\r\n                                               TemperatureForEnviroment: '',\r\n                                               CollectionMethod        : '',\r\n                                               DateOfCollection        : '',\r\n                                               CountryOfCollection     : '',\r\n                                               State                   : '',\r\n                                               RegionOfCollection      : '',\r\n                                               CollectedBy             : '',\r\n                                               IsolatedBy              : '',\r\n                                               MethodOfIsolation       : '',\r\n                                               IdentifiedBy            : '',\r\n                                               DateOfIdentification    : '',\r\n                                               DepositedBy             : '',\r\n                                               DateOfDeposition        : '',\r\n                                               NameAtAccept            : '',\r\n                                             },\r\n                                             Publication           : {\r\n                                               LiteratureCategories: '',\r\n                                               Title               : '',\r\n                                               Author              : '',\r\n                                               Journal             : '',\r\n                                               Volume              : '',\r\n                                               Number              : '',\r\n                                               StartingPage        : '',\r\n                                               PageRange           : '',\r\n                                               Year                : '',\r\n                                               DOINumber           : '',\r\n                                             },\r\n                                             BiologicalInteractions: {\r\n                                               Symbiosis             : '',\r\n                                               Mycoparasitism        : '',\r\n                                               Pathogenicity         : '',\r\n                                               Allergenicity         : '',\r\n                                               OtherOrganismToxicity : '',\r\n                                               AntagonisticActivities: '',\r\n                                             },\r\n                                             Sexuality             : {\r\n                                               SexualBehaviour: '',\r\n                                               SexualState    : '',\r\n                                             },\r\n                                             Properties            : {\r\n                                               NumberOfNuclei   : '',\r\n                                               RehyderationFluid: '',\r\n                                               FineStructureData: '',\r\n                                               WallConstituents : '',\r\n                                               CellContents     : '',\r\n                                               CoenzymeQSystem  : '',\r\n                                               StainingReactions: 'Positive',\r\n                                               PigmentProduction: '',\r\n                                               CellShape        : '',\r\n                                               CellSize         : '',\r\n                                               Motile           : 'Motile',\r\n                                               SporeForming     : '',\r\n                                               MotileBy         : '',\r\n                                             },\r\n                                             GenotypeAndGenetics   : {\r\n                                               Genotype                  : '',\r\n                                               Phenotype                 : '',\r\n                                               MatingType                : '',\r\n                                               SexualReproduction        : '',\r\n                                               GCContentOfDNA            : '',\r\n                                               OtherStrainsHybridization : '',\r\n                                               HybridizationStrainNumber : '',\r\n                                               TypeOfDNAOrRNA            : '',\r\n                                               Percentage                : '',\r\n                                               TemperatureOfHybridization: '',\r\n                                               Mutants                   : '',\r\n                                               MutationMethods           : '',\r\n                                               Hybrids                   : '',\r\n                                               Plasmid                   : '',\r\n                                               KillerPropertiesOfYeast   : '',\r\n                                             },\r\n                                             GrowthConditions      : {\r\n                                               ConditionsForGrowthAndMaintenenceOnSolidMedia: '',\r\n                                               ConditionsForGrowthInLiquidMedia             : '',\r\n                                               ConditionsForFruitingOrSporulation           : '',\r\n                                               ConditionsForGermination                     : '',\r\n                                               CarbonSourcesTested                          : '',\r\n                                               NitrogenSourcesTested                        : '',\r\n                                               SingleCompoundTested                         : '',\r\n                                               NutritionalRequirements                      : '',\r\n                                               Deficiencies                                 : '',\r\n                                               TolerancesAndSensitivities                   : '',\r\n                                               TemperatureRelationships                     : '',\r\n                                               MaximumGrowthPH                              : '',\r\n                                               MinimumGrowthPH                              : '',\r\n                                               OptimalGrowthPH                              : '',\r\n                                               LighConditions                               : '',\r\n                                               OxygenRelationship                           : '',\r\n                                               HeatResistence                               : '',\r\n                                               EthanolConditions                            : '',\r\n                                               SalinityRequirements                         : '',\r\n                                               OptimalNaClConcentration                     : '',\r\n                                               MinimumNaClConcentration                     : '',\r\n                                               MaximumNaClConcentration                     : '',\r\n                                               OptimumSugarConcentration                    : '',\r\n                                               MinimumSugarConcentration                    : '',\r\n                                               MaximumSugarConcentration                    : '',\r\n                                               OsmophilyAndXerophily                        : '',\r\n                                               WaterActivityConditions                      : '',\r\n                                             },\r\n                                             ChemistryAndEnzymes   : {\r\n                                               EnzymesProduced                        : '',\r\n                                               DecompositionAndDeterioratingCapacities: '',\r\n                                               MetabolitiesProduced                   : '',\r\n                                               Biotransformations                     : '',\r\n                                             },\r\n                                             Medium                : {\r\n                                               MediumNumber     : '',\r\n                                               MediumName       : '',\r\n                                               MediumComposition: '',\r\n                                               MediumPH         : '',\r\n                                             },\r\n                                             Sequence              : {\r\n                                               AccessionNumber : '',\r\n                                               TargetGene      : '',\r\n                                               Definition      : '',\r\n                                               SequencingMethod: '',\r\n                                               Length          : '',\r\n                                               SequenceType    : '',\r\n                                               Source          : '',\r\n                                               Sequence        : '',\r\n                                             },\r\n                                             Catalogue             : {\r\n                                               CatalogueName           : '',\r\n                                               CatalogueURL            : '',\r\n                                               CatalogueUpdateTime     : '',\r\n                                               ContactPersonOfCatalogue: '',\r\n                                               ContactEmail            : '',\r\n                                               ContactAddress          : '',\r\n                                               ContactTelephone        : '',\r\n                                               ContactFax              : '',\r\n                                               NumberOfStrains         : '',\r\n                                             },\r\n                                           });\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  const nextStep = (value) => {\r\n    setFormData({\r\n                  ...formData,\r\n                  ...value,\r\n                });\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n  const prevStep = () => setCurrentStep(currentStep - 1);\r\n\r\n  const setStep = (step) => setCurrentStep(step);\r\n  const submit = () => {\r\n    dispatch(addMicroorganism(formData, token));\r\n  };\r\n\r\n  if (added) {\r\n    dispatch(resetAddMicroorganismState());\r\n    return <Redirect to=\"/dashboard/catalogue\" />;\r\n  }\r\n\r\n  const getStep = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <Step1 data={formData.CoreDataSets} next={nextStep} />;\r\n        break;\r\n      case 1:\r\n        return <Step2 data={formData.Name} next={nextStep} prev={prevStep} />;\r\n      case 2:\r\n        return (\r\n          <Step3\r\n            data={formData.StrainAdministration}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Step4\r\n            data={formData.EnviromentAndHistory}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Step5 data={formData.Publication} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 5:\r\n        return (\r\n          <Step6\r\n            data={formData.BiologicalInteractions}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 6:\r\n        return (\r\n          <Step7 data={formData.Sexuality} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 7:\r\n        return (\r\n          <Step8 data={formData.Properties} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 8:\r\n        return (\r\n          <Step9\r\n            data={formData.GenotypeAndGenetics}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 9:\r\n        return (\r\n          <Step10\r\n            data={formData.GrowthConditions}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 10:\r\n        return (\r\n          <Step11\r\n            data={formData.ChemistryAndEnzymes}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 11:\r\n        return (\r\n          <Step12 data={formData.Medium} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 12:\r\n        return (\r\n          <Step13 data={formData.Sequence} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 13:\r\n        return (\r\n          <Step14 data={formData.Catalogue} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 14:\r\n        return <Review data={formData} set={setStep} submit={submit} />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return <Layout>{getStep()}</Layout>;\r\n}\r\n\r\nexport default AddMicroorganism;\r\n",["1295","1296"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardUsers\\index.js",["1297","1298","1299"],"import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport CustomTable from \"components/CustomTable\";\r\n// import { Dropdown } from \"bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteUser, getUsers } from \"../../actions/user.actions\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport ItemList from \"../../components/ItemList\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport SideBar from \"../../components/SideBar\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst AdminDashboardUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users);\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"admin_dashboard_users calling for user list\");\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      users.userList.map((row) => {\r\n        delete row.profilePicture;\r\n        return {\r\n          ...row,\r\n        };\r\n      })\r\n    );\r\n  }, [users]);\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.role.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.firstname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.lastname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  // const sortData = (data) => {\r\n  //   data[0] &&\r\n  //     data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n  //   return data.sort(\r\n  //     (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n  //   );\r\n  // };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{users.error.message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (users.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (users.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{ErrorMessage()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const user_table_head = [\r\n    {\r\n      id: \"user_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"User ID\",\r\n    },\r\n    {\r\n      id: \"firstname\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"First Name\",\r\n    },\r\n    {\r\n      id: \"lastname\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Last Name\",\r\n    },\r\n    {\r\n      id: \"email\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Email\",\r\n    },\r\n    {\r\n      id: \"role\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Role\",\r\n    },\r\n    // {\r\n    //   id: \"amount\",\r\n    //   align: \"left\",\r\n    //   disablePadding: false,\r\n    //   alignData: \"left\",\r\n    //   label: \"Amount\",\r\n    // },\r\n    // // {\r\n    // //   id: \"status\",\r\n    // //   align: \"left\",\r\n    // //   disablePadding: false,\r\n    // //   alignData: \"left\",\r\n    // //   label: \"Status\",\r\n    // // },\r\n    // {\r\n    //   id: \"date\",\r\n    //   align: \"left\",\r\n    //   disablePadding: false,\r\n    //   alignData: \"left\",\r\n    //   label: \"Date\",\r\n    // },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Orders\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"Deposits\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  const onRowsDelete = (values) => {\r\n    dispatch(deleteUser({ usersToDelete: values }));\r\n  };\r\n  return (\r\n    <SideBar active=\"Users\">\r\n      <div className=\"div__one\">\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/adminDashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Users</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Name\",\r\n                value: \"name\",\r\n              },\r\n              {\r\n                title: \"Orders\",\r\n                value: \"orders\",\r\n              },\r\n              {\r\n                title: \"Deposits\",\r\n                value: \"deposits\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Role\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Admin\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                title: \"Internal\",\r\n                value: \"internal\",\r\n              },\r\n              {\r\n                title: \"External\",\r\n                value: \"External\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={user_table_head}\r\n          rows={search(data)}\r\n          onDelete={onRowsDelete}\r\n          type=\"Users\"\r\n          showDetails={\"/adminDashboard/user/details\"}\r\n        />\r\n      </div>\r\n      {/* <div className=\"div__three\">\r\n        <ItemList columns={columns} rows={sortData(search(data))} />\r\n      </div> */}\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardUsers;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Cart\\index.js",["1300","1301","1302","1303","1304","1305","1306","1307"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogue\\index.js",["1308","1309"],"import React, { useEffect, useRef, useState }           from 'react';\r\nimport { Button, Container, Form, Row, Spinner, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector }                     from 'react-redux';\r\nimport { Link, Redirect }                               from 'react-router-dom';\r\nimport { deleteMicroorganism, getCatalogueData, }       from '../../actions/catalogue.actions';\r\nimport Layout                                           from '../../components/Layout';\r\nimport DeleteUserModal                                  from '../../components/Modals/DeleteUserModal';\r\nimport Input                                            from '../../components/UI/Input/input';\r\n\r\nconst DashboardCatalogue = (props) => {\r\n  const { authenticate, token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const filters = [\r\n    'bacteria',\r\n    'fungi',\r\n    'archaea',\r\n    'antibody',\r\n    'microalgae',\r\n    'phage',\r\n    'virus',\r\n    'yeast',\r\n  ];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  //delete hook\r\n  const [deleteRecordId, setDeleteRecordId] = useState('');\r\n\r\n  const columns = data[0] && Object.keys(data[0].CoreDataSets);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(\r\n          row['CoreDataSets']['OrganismType'].toLowerCase()\r\n        )\r\n        : true;\r\n\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row['CoreDataSets'][column]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_M_Permission\r\n              ? '/dashboard/details'\r\n              : '#',\r\n            state   : { id: permissions.view_M_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_M_Permission ? 'primary' : 'secondary'}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_M_Permission ? 'danger' : 'secondary'}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const deleteRecordRef = useRef();\r\n  const microroganismAddRef = useRef();\r\n\r\n  if (!authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row\r\n          style={{\r\n            display       : 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          {filters &&\r\n          filters.map((filter) => {\r\n            return (\r\n              <Form.Check\r\n                label={filter}\r\n                name={filter}\r\n                checked={searchFilters.includes(filter)}\r\n                onChange={(e) => {\r\n                  const checked = searchFilters.includes(filter);\r\n                  setSearchFilters((prev) =>\r\n                                     checked\r\n                                       ? prev.filter((sf) => sf !== filter)\r\n                                       : [...prev, filter]\r\n                  );\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n          <Link to=\"/dashboard/addMicroorganism\">\r\n            <Button>Add</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n        <tr>\r\n          {columns &&\r\n          columns.map((heading) => {\r\n            return <th>{heading}</th>;\r\n          })}\r\n          <th className=\"text-center\">Options</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {search(data).map((row) => {\r\n          return (\r\n            <tr>\r\n              {columns.map((heading) => {\r\n                return <td>{row['CoreDataSets'][heading]}</td>;\r\n              })}\r\n              <td style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                {recordOptions(row._id)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogue;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Catalogue\\index.js",["1310","1311","1312","1313","1314"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Details\\index.js",["1315"],"import React, { useEffect, useState }            from 'react';\r\nimport { Accordion, Card, Container, Jumbotron } from 'react-bootstrap';\r\nimport { useDispatch, useSelector }              from 'react-redux';\r\nimport { fetchItemDetails }                      from '../../actions/catalogue.actions';\r\nimport Layout                                    from '../../components/Layout';\r\n\r\nconst ItemDetails = (props) => {\r\n  const [itemDetail, setItemDetail] = useState({});\r\n  const detail = useSelector((state) => state.details);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setItemDetail(detail.details);\r\n  }, [detail]);\r\n\r\n  useEffect(() => {\r\n    const { id } = props.location.state;\r\n    // console.log(id);\r\n    if (id) {\r\n      console.log('Dispatching fetch Item request');\r\n      dispatch(fetchItemDetails(id, 'external'));\r\n    }\r\n  }, []);\r\n\r\n  const itemData = () => {\r\n    return (\r\n      <div>\r\n        {Object.keys(itemDetail).map((value, index) => {\r\n          return (\r\n            <Accordion key={index}>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\r\n                  {value}\r\n                </Accordion.Toggle>\r\n\r\n                {Object.keys(itemDetail[value]).map((v, i) => {\r\n                  return (\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                      <Card.Body\r\n                        style={{\r\n                          display       : 'flex',\r\n                          justifyContent: 'space-between',\r\n                        }}\r\n                      >\r\n                        <span>{v}</span>\r\n                        <span>\r\n                          {itemDetail[value][v] === ''\r\n                            ? 'Nill'\r\n                            : itemDetail[value][v]}\r\n                        </span>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  );\r\n                })}\r\n              </Card>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Jumbotron>\r\n        <h1>\r\n          {itemDetail.CoreDataSets\r\n            ? `${itemDetail.CoreDataSets.Genus} ${itemDetail.CoreDataSets.SpeciesEpithet}`\r\n            : ''}\r\n        </h1>\r\n      </Jumbotron>\r\n      <Container>\r\n        {detail.error.code > 200 ? detail.error.message : itemData()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ItemDetails;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\EmailVerified\\index.js",["1316","1317"],"import Backdrop                       from '@material-ui/core/Backdrop';\r\nimport Fade                           from '@material-ui/core/Fade';\r\nimport Modal                          from '@material-ui/core/Modal';\r\nimport CheckCircleIcon                from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon                      from '@material-ui/icons/Error';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link }                       from 'react-router-dom';\r\nimport axios                          from '../../helpers/axios';\r\nimport './style.css';\r\n\r\nconst EmailVerified = (props) => {\r\n  const token = window.location.href.split('/')[\r\n  window.location.href.split('/').length - 1\r\n    ];\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [message, setMessage] = useState('initial message');\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .post('/verifyEmail', { token })\r\n      .then((response) => {\r\n        setEmailVerified(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setEmailVerified(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    setModalOpen(true);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className=\"signup-response-modal\"\r\n      open={modalOpen}\r\n      onClose={(e) => {\r\n        setModalOpen(false);\r\n        // props.history.push(\"/signin\");\r\n      }}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <div className=\"email-verify-modal-content-div\">\r\n          {emailVerified ? (\r\n            <CheckCircleIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: '5.5rem' }}\r\n            />\r\n          ) : (\r\n            <ErrorIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: '5.5rem' }}\r\n            />\r\n          )}\r\n          <h2 id=\"transition-modal-title\">\r\n            {emailVerified ? 'Success' : 'Error'}\r\n          </h2>\r\n          <p id=\"transition-modal-description\">{message}</p>\r\n          <Link to=\"/signin\">\r\n            Go to {emailVerified ? 'Sign In' : 'Sign Up'}\r\n          </Link>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailVerified;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Microorganism\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ForgetPassword\\index.js",["1318"],"import { TextField }       from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch }     from 'react-redux';\r\nimport axios               from '../../helpers/axios';\r\nimport './style.css';\r\n\r\nconst ForgetPassword = () => {\r\n  const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  const dispatch = useDispatch();\r\n  const [emailValue, setEmailValue] = useState('');\r\n  const [slideChange, setSlideChange] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post('/forget-password', { email: emailValue })\r\n      .then((response) => {\r\n        setSlideChange(true);\r\n        setEmailSent(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setSlideChange(true);\r\n        setEmailSent(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log('hii');\r\n    // const slides = document.querySelector(\".slides\");\r\n    // slides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (slideChange) {\r\n  //     dispatch(\r\n  //       forgetPassword({\r\n  //         email: emailValue,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }, [slideChange]);\r\n  return (\r\n    <div className=\"outer-div\">\r\n      {/* <div className=\"upper-nav\">Logo</div> */}\r\n      {slideChange ? (\r\n        <div className=\"check-email-div\">\r\n          <h3>{emailSent ? 'Check your Email' : 'Failed'}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forget-password-div\">\r\n          <div className=\"forget-password-title\">\r\n            <h3>Forgot password</h3>\r\n            <p>Instructions will be sent to your email</p>\r\n          </div>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"example@name.com\"\r\n            variant=\"outlined\"\r\n            className=\"forgot-password-email-input\"\r\n            value={emailValue}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            error={!emailValidator.test(emailValue.trim()) && emailValue !== ''}\r\n            helperText=\"must be of form: name@gmail.com\"\r\n            required\r\n          />\r\n          <button\r\n            onClick={(e) => {\r\n              if (emailValidator.test(emailValue.trim())) {\r\n                handleSubmission();\r\n              }\r\n            }}\r\n            className=\"send-instructions-btn\"\r\n          >\r\n            Send Instructions\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Signup\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\HomePage\\index.js",["1319","1320","1321","1322","1323","1324"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\index.js",["1325","1326","1327","1328","1329","1330","1331","1332"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getUserData,\r\n  resetPassword,\r\n  updateUserInfo,\r\n  updateUserProfilePicture,\r\n} from \"actions\";\r\nimport SideBar from \"components/SideBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport passwordValidator from \"./passwordValidator\";\r\nimport { PermissionData } from \"./PermissionData\";\r\nimport PersonalInformationValidator from \"./PersonalInformationValidator\";\r\nimport useFormPassword from \"./useFormPassword\";\r\nimport useFormPersonalInformation from \"./useFormPersonalInformation\";\r\n\r\nconst User = (props) => {\r\n  const { id } = props.location.state;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.user);\r\n  const [permission, setPermission] = useState({});\r\n\r\n  // hook to change edit or save state of personal information\r\n  const [editPersonalInformation, setEditPersonalInformation] = useState(false);\r\n  const [editPassword, setEditPassword] = useState(false);\r\n  const [editPermissions, setEditPermission] = useState(false);\r\n\r\n  // Validtion Hooks and its functions\r\n  const handleInformationSubmission = () => {\r\n    setEditPersonalInformation(false);\r\n    setEditPermission(false);\r\n    setEditPassword(false);\r\n    dispatch(updateUserInfo({ ...personalInformationValue, _id: id }, id));\r\n  };\r\n\r\n  const handlePasswordChangeSubmission = () => {\r\n    setEditPassword(false);\r\n\r\n    dispatch(resetPassword({ password: passwordValue.password, id }));\r\n  };\r\n\r\n  const handleProfilePictureSubmission = (e) => {\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    data.append(\"profilePicture\", e.target.files[0]);\r\n    dispatch(updateUserProfilePicture(data, id));\r\n  };\r\n\r\n  const {\r\n    handlePersonalInformationSubmit,\r\n    personalInformationValue,\r\n    updatePersonalInformationValue,\r\n    personalInformationErrors,\r\n    setInitial,\r\n  } = useFormPersonalInformation(\r\n    handleInformationSubmission,\r\n    PersonalInformationValidator\r\n  );\r\n\r\n  const {\r\n    passwordValue,\r\n    handlepasswordSubmit,\r\n    updatepasswordValue,\r\n    passwordErrors,\r\n  } = useFormPassword(handlePasswordChangeSubmission, passwordValidator);\r\n\r\n  const editPersonalInfo = () => {\r\n    setEditPersonalInformation(true);\r\n  };\r\n\r\n  const handlePersonalInformationSave = (e) => {\r\n    handlePersonalInformationSubmit(e);\r\n  };\r\n\r\n  // Use Effects\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserData(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setInitial({\r\n        firstname: user.firstname,\r\n        lastname: user.lastname,\r\n        email: user.email,\r\n        contactNumber: user.contactNumber,\r\n        permissions: user.permissions,\r\n        description: user.description,\r\n        profilePicture: user.profilePicture,\r\n      });\r\n    }\r\n  }, [user]);\r\n  return (\r\n    <SideBar active=\"Users\">\r\n      <Grid container lg sm xs md style={styles.container} spacing={2}>\r\n        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n          <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n            <CardHeader\r\n              title=\"Personal Information\"\r\n              titleTypographyProps={{ color: \"primary\" }}\r\n              action={\r\n                <>\r\n                  {editPersonalInformation == false ? (\r\n                    <Button\r\n                      style={{ marginTop: \"0.8rem\" }}\r\n                      color=\"primary\"\r\n                      onClick={editPersonalInfo}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ marginTop: \"0.8rem\" }}\r\n                      onClick={handlePersonalInformationSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <Grid container direction=\"column\" spacing={3}>\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  md\r\n                  lg\r\n                  sm\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    src={personalInformationValue.profilePicture}\r\n                    style={{ width: \"6rem\", height: \"6rem\" }}\r\n                  />\r\n                  {editPersonalInformation && (\r\n                    <div\r\n                      style={{\r\n                        width: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   // margin: \"2rem 1rem\",\r\n                        // }}\r\n                      >\r\n                        Update\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"profilePicture\"\r\n                          onChange={handleProfilePictureSubmission}\r\n                          hidden\r\n                        />\r\n                      </Button>\r\n                      <Button\r\n                        color=\"default\"\r\n                        variant=\"contained\"\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   // margin: \"2rem 1rem 2rem 0rem\",\r\n                        // }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item lg sm xs md>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    value={personalInformationValue.firstname}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.firstname}\r\n                    helperText={personalInformationErrors.firstname}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    value={personalInformationValue.lastname}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.lastname}\r\n                    helperText={personalInformationErrors.lastname}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={personalInformationValue.email}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.email}\r\n                    helperText={personalInformationErrors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"contactNumber\"\r\n                    label=\"Contact Number\"\r\n                    value={personalInformationValue.contactNumber}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.contactNumber}\r\n                    helperText={personalInformationErrors.contactNumber}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={9}\r\n                    value={personalInformationValue.description}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.description}\r\n                    helperText={personalInformationErrors.description}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          {/* </Grid> */}\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n          <Grid container lg sm xs md direction=\"column\">\r\n            <Grid\r\n              item\r\n              lg={12}\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                <CardHeader\r\n                  title=\"Password\"\r\n                  titleTypographyProps={{ color: \"primary\" }}\r\n                  action={\r\n                    <>\r\n                      {editPassword == false ? (\r\n                        <Button\r\n                          style={{ marginTop: \"0.8rem\" }}\r\n                          color=\"primary\"\r\n                          onClick={(e) => setEditPassword(true)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"0.8rem\" }}\r\n                          onClick={handlepasswordSubmit}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  }\r\n                />\r\n                <CardContent>\r\n                  <Grid\r\n                    container\r\n                    xs\r\n                    lg\r\n                    md\r\n                    sm\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                  >\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        value={passwordValue.password}\r\n                        disabled={!editPassword}\r\n                        onChange={updatepasswordValue}\r\n                        error={passwordErrors.password}\r\n                        helperText={passwordErrors.password}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm style={{ marginTop: \"1.3rem\" }}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        value={passwordValue.confirmPassword}\r\n                        disabled={!editPassword}\r\n                        onChange={updatepasswordValue}\r\n                        error={passwordErrors.confirmPassword}\r\n                        helperText={passwordErrors.confirmPassword}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            {user && user.role !== \"external\" && (\r\n              <Grid\r\n                item\r\n                xs\r\n                lg\r\n                md\r\n                sm\r\n                style={{ width: \"100%\", marginTop: \"1rem\" }}\r\n              >\r\n                <Card style={{ width: \"100%\" }}>\r\n                  <CardHeader\r\n                    title=\"Permissions\"\r\n                    titleTypographyProps={{ color: \"primary\" }}\r\n                    action={\r\n                      <>\r\n                        {editPermissions == false ? (\r\n                          <Button\r\n                            style={{ marginTop: \"0.8rem\" }}\r\n                            color=\"primary\"\r\n                            onClick={(e) => setEditPermission(true)}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"0.8rem\" }}\r\n                            onClick={handlePersonalInformationSave}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        )}\r\n                      </>\r\n                    }\r\n                  />\r\n                  <CardContent>\r\n                    <Grid container spacing={2}>\r\n                      {PermissionData.map((permission, index) => {\r\n                        return (\r\n                          <Grid item xs={6} lg={6} md={6} sm={6}>\r\n                            <FormControlLabel\r\n                              key={index}\r\n                              disabled={!editPermissions}\r\n                              control={\r\n                                <Checkbox\r\n                                  checked={\r\n                                    personalInformationValue.permissions\r\n                                      ? personalInformationValue.permissions[\r\n                                          permission.name\r\n                                        ]\r\n                                      : false\r\n                                  }\r\n                                  onChange={updatePersonalInformationValue}\r\n                                  name={permission.name}\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              label={permission.title}\r\n                            />\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Grid item lg md sm xs>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              paddingLeft: \"0.4rem\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h5>Personal Information</h5>\r\n            <Button color=\"primary\" variant=\"text\" onClick={editPersonalInfo}>\r\n              {editPersonalInformation ? \"Save\" : \"Edit\"}\r\n            </Button>\r\n          </div>\r\n          <Card>\r\n            <CardContent>\r\n              <Grid\r\n                style={{ backgroundColor: \"red\" }}\r\n                container\r\n                lg\r\n                sm\r\n                md\r\n                xs\r\n                spacing={3}\r\n                direction=\"column\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={5}\r\n                  lg={5}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar style={{ width: \"10rem\", height: \"10rem\" }} />\r\n                  {editPersonalInformation && (\r\n                    <div\r\n                      style={{\r\n                        width: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Button color=\"primary\" variant=\"contained\">\r\n                        Update\r\n                      </Button>\r\n                      <Button color=\"default\" variant=\"contained\">\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={7}\r\n                  lg={7}\r\n                  sm={12}\r\n                  style={{ padding: \"1rem 3rem\" }}\r\n                >\r\n                  <Grid container xs lg md sm direction=\"column\" spacing={3}>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"firstname\"\r\n                        label=\"First Name\"\r\n                        // value={data.firstname}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.firstname}\r\n                        // helperText={\r\n                        //   errors.firstname ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"lastname\"\r\n                        label=\"Last Name\"\r\n                        // value={data.lastname}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.lastname}\r\n                        // helperText={\r\n                        //   errors.lastname ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        // value={data.email}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.email}\r\n                        // helperText={\r\n                        //   errors.email ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"contactNumber\"\r\n                        label=\"Contact Number\"\r\n                        // value={data.contactNumber}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.contactNumber}\r\n                        // helperText={\r\n                        //   errors.contactNumber ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        // value={data.description}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.description}\r\n                        // helperText={\r\n                        //   errors.description ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          <Grid container lg sm xs md>\r\n            <Grid item>profile</Grid>\r\n            <Grid item>personal Info</Grid>\r\n          </Grid>\r\n        </Grid> */}\r\n      </Grid>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: \"90vh\",\r\n    margin: \"1rem 0\",\r\n  },\r\n};\r\nexport default User;\r\n\r\n// import {\r\n//   Card,\r\n//   CardActions,\r\n//   CardContent,\r\n//   CardHeader,\r\n//   Button,\r\n//   TextField,\r\n//   Grid,\r\n//   InputBase,\r\n//   IconButton,\r\n//   NativeSelect,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   FormControlLabel,\r\n//   Checkbox,\r\n//   Avatar,\r\n// } from \"@material-ui/core\";\r\n// import EditIcon from \"@material-ui/icons/Edit\";\r\n// import SaveIcon from \"@material-ui/icons/Save\";\r\n// import { getUserData } from \"actions\";\r\n// import SideBar from \"components/SideBar\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { PermissionData } from \"./PermissionData\";\r\n\r\n// const User = (props) => {\r\n//   const { id } = props.location.state;\r\n//   const dispatch = useDispatch();\r\n//   const user = useSelector((state) => state.user.user);\r\n//   const [personalInfo, setPersonalInfo] = useState({});\r\n//   const [credentials, setCredentials] = useState({});\r\n//   const [permissons, setPermissions] = useState({});\r\n//   const [editPersonalInfo, setEditPersonalInfo] = useState(false);\r\n//   const [editCredentials, setEditCredentials] = useState(false);\r\n//   const [editPermission, setEditPermissions] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getUserData(id));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       const {\r\n//         firstname,\r\n//         lastname,\r\n//         email,\r\n//         role,\r\n//         description,\r\n//         contactNumber,\r\n//         permissions,\r\n//         profilePicture,\r\n//       } = user;\r\n//       setPersonalInfo({\r\n//         firstname,\r\n//         lastname,\r\n//         email,\r\n//         description,\r\n//         contactNumber,\r\n//         profilePicture,\r\n//       });\r\n//       setCredentials({\r\n//         role,\r\n//       });\r\n//       setPermissions({\r\n//         ...permissions,\r\n//       });\r\n//     }\r\n//   }, [user]);\r\n\r\n//   const handlePersonalInfoChange = (e) => {\r\n//     setPersonalInfo({\r\n//       ...personalInfo,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n//   const handleCredentialsChange = (e) => {\r\n//     setCredentials({\r\n//       ...credentials,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n//   const handlePermissionsChange = (e) => {\r\n//     setPermissions({\r\n//       ...permissons,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleEditPersonalInfo = () => {\r\n//     setEditPersonalInfo(true);\r\n//   };\r\n//   const handleEditCredentials = () => {\r\n//     setEditCredentials(true);\r\n//   };\r\n//   const handleEditPermissions = () => {\r\n//     setEditPermissions(true);\r\n//   };\r\n\r\n//   const handlePersonalInfoSave = () => {\r\n//     setEditPersonalInfo(false);\r\n//   };\r\n\r\n//   const handleCredentialsSave = () => {\r\n//     setEditCredentials(false);\r\n//   };\r\n//   const handlePermissionSave = () => {\r\n//     setEditPermissions(false);\r\n//   };\r\n\r\n//   const handleResetPassword = () => {\r\n//     alert(\"resetiing password\");\r\n//   };\r\n\r\n//   return (\r\n//     <SideBar active=\"Users\">\r\n//       <Grid container spacing={3} style={{ marginTop: \"2rem\" }}>\r\n//         <Grid item xs={12} sm={12} md={9} lg={9}>\r\n//           <Card style={{ padding: \"1rem\", paddingBottom: \"2rem\" }}>\r\n//             <CardHeader\r\n//               title=\"Personal Information\"\r\n//               titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n//               action={\r\n//                 <>\r\n//                   {editPersonalInfo === true ? (\r\n//                     <Button\r\n//                       style={{ marginTop: \"1.3rem\" }}\r\n//                       color=\"primary\"\r\n//                       onClick={handlePersonalInfoSave}\r\n//                     >\r\n//                       Save\r\n//                     </Button>\r\n//                   ) : (\r\n//                     <Button\r\n//                       style={{ marginTop: \"1.3rem\" }}\r\n//                       color=\"primary\"\r\n//                       onClick={handleEditPersonalInfo}\r\n//                     >\r\n//                       Edit\r\n//                     </Button>\r\n//                   )}\r\n//                 </>\r\n//               }\r\n//             />\r\n\r\n//             <CardContent>\r\n//               <Grid container spacing={2}>\r\n//                 <Grid item xs={12} alignContent=\"stretch\">\r\n//                   <TextField\r\n//                     style={{ width: \"100%\" }}\r\n//                     disabled={!editPersonalInfo}\r\n//                     label=\"First Name\"\r\n//                     value={personalInfo.firstname}\r\n//                     onChange={handlePersonalInfoChange}\r\n//                     name=\"firstname\"\r\n//                     variant=\"outlined\"\r\n//                   />\r\n//                 </Grid>\r\n//                 <Grid item xs={12} alignContent=\"stretch\">\r\n//                   <TextField\r\n//                     style={{ width: \"100%\" }}\r\n//                     disabled={!editPersonalInfo}\r\n//                     label=\"Last Name\"\r\n//                     value={personalInfo.lastname}\r\n//                     onChange={handlePersonalInfoChange}\r\n//                     name=\"lastname\"\r\n//                     variant=\"outlined\"\r\n//                   />\r\n//                 </Grid>\r\n//                 <Grid item xs={12} alignContent=\"stretch\">\r\n//                   <TextField\r\n//                     style={{ width: \"100%\" }}\r\n//                     disabled={!editPersonalInfo}\r\n//                     label=\"Email\"\r\n//                     value={personalInfo.email}\r\n//                     onChange={handlePersonalInfoChange}\r\n//                     name=\"email\"\r\n//                     variant=\"outlined\"\r\n//                   />\r\n//                 </Grid>\r\n//                 <Grid item xs={12} alignContent=\"stretch\">\r\n//                   <TextField\r\n//                     style={{ width: \"100%\" }}\r\n//                     disabled={!editPersonalInfo}\r\n//                     label=\"Contact Number\"\r\n//                     value={personalInfo.contactNumber}\r\n//                     onChange={handlePersonalInfoChange}\r\n//                     name=\"contactNumber\"\r\n//                     variant=\"outlined\"\r\n//                   />\r\n//                 </Grid>\r\n//                 <Grid item xs={12}>\r\n//                   <TextField\r\n//                     style={{ width: \"100%\" }}\r\n//                     multiline\r\n//                     rows={4}\r\n//                     disabled={!editPersonalInfo}\r\n//                     label=\"Description\"\r\n//                     value={personalInfo.description}\r\n//                     onChange={handlePersonalInfoChange}\r\n//                     name=\"description\"\r\n//                     variant=\"outlined\"\r\n//                   />\r\n//                 </Grid>\r\n//               </Grid>\r\n//             </CardContent>\r\n//           </Card>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={12} md={3} lg={3}>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item style={{ width: \"100%\" }}>\r\n//               <Card\r\n//                 style={{\r\n//                   padding: \"1rem\",\r\n//                   paddingBottom: \"2rem\",\r\n//                   width: \"100%\",\r\n//                 }}\r\n//               >\r\n//                 <CardHeader\r\n//                   title=\"Profile Picture\"\r\n//                   titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n//                   style={{ marginTop: \"1rem\" }}\r\n//                 />\r\n//                 <CardContent\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     flexDirection: \"column\",\r\n//                     alignItems: \"center\",\r\n//                   }}\r\n//                 >\r\n//                   <Avatar\r\n//                     src={personalInfo.profilePicture}\r\n//                     style={{\r\n//                       border: \"px solid lightgray\",\r\n//                       width: \"7.6rem\",\r\n//                       height: \"7.6rem\",\r\n//                     }}\r\n//                   />\r\n//                   <div\r\n//                     style={{\r\n//                       display: \"flex\",\r\n//                       flexDirection: \"column\",\r\n//                       flexWrap: \"wrap\",\r\n//                     }}\r\n//                   >\r\n//                     <Button\r\n//                       style={{ marginTop: \"0.5rem\" }}\r\n//                       color=\"primary\"\r\n//                       onClick={handleEditPersonalInfo}\r\n//                     >\r\n//                       Remove\r\n//                     </Button>\r\n//                     <Button\r\n//                       style={{ marginTop: \"0.5rem\" }}\r\n//                       color=\"primary\"\r\n//                       onClick={handleEditPersonalInfo}\r\n//                     >\r\n//                       Change\r\n//                     </Button>\r\n//                   </div>\r\n//                 </CardContent>\r\n//               </Card>\r\n//             </Grid>\r\n//             <Grid item style={{ width: \"100%\" }}>\r\n//               <Card\r\n//                 style={{\r\n//                   padding: \"1rem\",\r\n//                   paddingBottom: \"2rem\",\r\n//                   width: \"100%\",\r\n//                 }}\r\n//               >\r\n//                 <CardHeader\r\n//                   title=\"Credentials\"\r\n//                   titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n//                   style={{ marginTop: \"1rem\" }}\r\n//                   // action={\r\n//                   //   <>\r\n//                   //     {editCredentials === true ? (\r\n//                   //       <Button\r\n//                   //         style={{ marginTop: \"1.3rem\" }}\r\n//                   //         color=\"primary\"\r\n//                   //         onClick={handleCredentialsSave}\r\n//                   //       >\r\n//                   //         Save\r\n//                   //       </Button>\r\n//                   //     ) : (\r\n//                   //       <Button\r\n//                   //         style={{ marginTop: \"1.3rem\" }}\r\n//                   //         color=\"primary\"\r\n//                   //         onClick={handleEditCredentials}\r\n//                   //       >\r\n//                   //         Edit\r\n//                   //       </Button>\r\n//                   //     )}\r\n//                   //   </>\r\n//                   // }\r\n//                 />\r\n//                 <CardContent>\r\n//                   <div\r\n//                     style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n//                   >\r\n//                     <p style={{ fontWeight: \"bold\" }}>Role</p>\r\n//                     <p>\r\n//                       {credentials.role ? credentials.role.toUpperCase() : \"\"}\r\n//                     </p>\r\n//                   </div>\r\n//                   <Button\r\n//                     style={{ marginTop: \"1.3rem\" }}\r\n//                     color=\"primary\"\r\n//                     onClick={handleResetPassword}\r\n//                   >\r\n//                     Reset Password\r\n//                   </Button>\r\n//                 </CardContent>\r\n//               </Card>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </Grid>\r\n\r\n//         <Grid item lg md sm={12} xs={12}>\r\n//           <Card style={{ padding: \"1rem\", paddingBottom: \"2rem\" }}>\r\n//             <CardHeader\r\n//               title=\"Permissons\"\r\n//               titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n//               action={\r\n//                 <>\r\n//                   {editPermission === true ? (\r\n//                     <Button\r\n//                       style={{ marginTop: \"1.3rem\" }}\r\n//                       color=\"primary\"\r\n//                       onClick={handlePermissionSave}\r\n//                     >\r\n//                       Save\r\n//                     </Button>\r\n//                   ) : (\r\n//                     <Button\r\n//                       style={{ marginTop: \"1.3rem\" }}\r\n//                       color=\"primary\"\r\n//                       onClick={handleEditPermissions}\r\n//                     >\r\n//                       Edit\r\n//                     </Button>\r\n//                   )}\r\n//                 </>\r\n//               }\r\n//             />\r\n//             <CardContent>\r\n//               <Grid container spacing={2}>\r\n//                 {PermissionData.map((permission, index) => {\r\n//                   return (\r\n//                     <Grid item xs={12} sm={12} md={4} lg={4}>\r\n//                       <FormControlLabel\r\n//                         key={index}\r\n//                         disabled={!editPermission}\r\n//                         control={\r\n//                           <Checkbox\r\n//                             checked={true}\r\n//                             onChange={handlePermissionsChange}\r\n//                             name={permission.name}\r\n//                             color=\"primary\"\r\n//                           />\r\n//                         }\r\n//                         label={permission.title}\r\n//                       />\r\n//                     </Grid>\r\n//                   );\r\n//                 })}\r\n//               </Grid>\r\n//             </CardContent>\r\n//           </Card>\r\n//         </Grid>\r\n//       </Grid>\r\n//       <Card style={{ marginTop: \"3rem\" }}>\r\n//         <CardHeader\r\n//           style={{\r\n//             padding: \"1rem 1rem\",\r\n//           }}\r\n//           title=\"Personal Information\"\r\n//           titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n//         />\r\n//         <CardContent>\r\n//           <Grid container spacing={3}>\r\n//             <Grid item lg={6} md={6}>\r\n//               <TextField\r\n//                 label=\"First Name\"\r\n//                 id=\"user-first-name\"\r\n//                 defaultValue=\"Default Value\"\r\n//                 variant=\"outlined\"\r\n//                 style={{ minWidth: 350 }}\r\n//               />\r\n//             </Grid>\r\n//             <Grid item lg={6} md={6}>\r\n//               <TextField\r\n//                 label=\"Last Name\"\r\n//                 id=\"user-last-name\"\r\n//                 defaultValue=\"Default Value\"\r\n//                 // className={classes.textField}\r\n//                 // margin=\"dense\"\r\n//                 variant=\"outlined\"\r\n//                 style={{ minWidth: 350 }}\r\n//               />\r\n//             </Grid>\r\n//             <Grid item lg={6} md={6}>\r\n//               <TextField\r\n//                 label=\"Email\"\r\n//                 id=\"user-email\"\r\n//                 defaultValue=\"Default Value\"\r\n//                 // className={classes.textField}\r\n//                 // margin=\"dense\"\r\n//                 variant=\"outlined\"\r\n//                 style={{ minWidth: 350 }}\r\n//               />\r\n//             </Grid>\r\n//             <Grid item lg={6} md={6}>\r\n//               <TextField\r\n//                 label=\"Contact Number\"\r\n//                 id=\"user-contact-number\"\r\n//                 defaultValue=\"Default Value\"\r\n//                 // className={classes.textField}\r\n//                 // margin=\"dense\"\r\n//                 disabled\r\n//                 variant=\"outlined\"\r\n//                 style={{ minWidth: 350 }}\r\n//               />\r\n//             </Grid>\r\n//             <Grid item>\r\n//               <TextField\r\n//                 id=\"user-description\"\r\n//                 label=\"Description\"\r\n//                 multiline\r\n//                 rows={6}\r\n//                 defaultValue=\"Default Value\"\r\n//                 variant=\"outlined\"\r\n//               />\r\n//             </Grid>\r\n//           </Grid>\r\n//         </CardContent>\r\n//         <CardActions\r\n//           style={{\r\n//             display: \"flex\",\r\n//             justifyContent: \"flex-end\",\r\n//             padding: \"1rem\",\r\n//             // padding: \"2rem\",\r\n//           }}\r\n//         >\r\n//           <Button\r\n//             style={{ alignSelf: \"right\" }}\r\n//             variant=\"contained\"\r\n//             color=\"primary\"\r\n//           >\r\n//             Save\r\n//           </Button>\r\n//         </CardActions>\r\n//       </Card>\r\n//     </SideBar>\r\n//   );\r\n// };\r\n\r\n// export default User;\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import { Button, Container, Form, Image, Row, Spinner } from \"react-bootstrap\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import { Redirect } from \"react-router-dom\";\r\n// // import { getUserData, updateUserInfo } from \"../../actions/user.actions\";\r\n// // import Layout from \"../../components/Layout\";\r\n// // import Input from \"../../components/UI/Input/input\";\r\n\r\n// // const User = (props) => {\r\n// //   const authenticate = useSelector((state) => state.auth.authenticate);\r\n// //   const token = useSelector((state) => state.auth.token);\r\n// //   const dispatch = useDispatch();\r\n// //   const { userID } = props.location.state;\r\n\r\n// //   const user = useSelector((state) => state.user);\r\n\r\n// //   // const [updateUser, setUpdateUser] = useState(\r\n// //   //   useSelector((state) => state.userUpdate)\r\n// //   // );\r\n// //   const update = useSelector((state) => state.userUpdate);\r\n\r\n// //   const [userData, setUserData] = useState({});\r\n// //   const [updateForm, setUpdateForm] = useState(false);\r\n// //   const [savingData, setSavingData] = useState(false);\r\n\r\n// //   useEffect(() => {\r\n// //     dispatch(getUserData(userID, token));\r\n// //   }, []);\r\n\r\n// //   useEffect(() => {\r\n// //     setUserData(user.user);\r\n// //   }, [user]);\r\n\r\n// //   const updateValue = (e) => {\r\n// //     setUserData({\r\n// //       ...userData,\r\n// //       [e.target.name]: e.target.value,\r\n// //     });\r\n// //   };\r\n\r\n// //   const handleUpdateForm = (command) => {\r\n// //     if (command === \"save\") {\r\n// //       dispatch(updateUserInfo(userData, token));\r\n// //       setSavingData(!savingData);\r\n// //     }\r\n// //     setUpdateForm(!updateForm);\r\n// //   };\r\n\r\n// //   if (!authenticate) {\r\n// //     return <Redirect to=\"/\" />;\r\n// //   }\r\n// //   return (\r\n// //     <Layout sidebar>\r\n// //       {update.updating ? (\r\n// //         <Spinner animation=\"border\" role=\"status\">\r\n// //           <span className=\"sr-only\">Loading...</span>\r\n// //         </Spinner>\r\n// //       ) : (\r\n// //         <>\r\n// //           <p>{JSON.stringify(update.message)}</p>\r\n// //           <Button\r\n// //             onClick={(e) =>\r\n// //               handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n// //             }\r\n// //           >\r\n// //             {updateForm ? \"Save\" : \"Edit\"}\r\n// //           </Button>\r\n// //           <Container>\r\n// //             <Row>\r\n// //               <Input\r\n// //                 id=\"first_name\"\r\n// //                 label=\"Fristname\"\r\n// //                 type=\"text\"\r\n// //                 name=\"firstname\"\r\n// //                 disabled={!updateForm}\r\n// //                 value={userData.firstname}\r\n// //                 onChange={(e) => updateValue(e)}\r\n// //                 placeholder=\"Firstname\"\r\n// //               />\r\n// //             </Row>\r\n// //             <Row>\r\n// //               <Input\r\n// //                 id=\"last_name\"\r\n// //                 label=\"Lastname\"\r\n// //                 type=\"text\"\r\n// //                 name=\"lastname\"\r\n// //                 value={userData.lastname}\r\n// //                 disabled={!updateForm}\r\n// //                 onChange={(e) => updateValue(e)}\r\n// //                 placeholder=\"Lastname\"\r\n// //               />\r\n// //             </Row>\r\n// //             <Row>\r\n// //               <Input\r\n// //                 id=\"email\"\r\n// //                 label=\"Email\"\r\n// //                 type=\"text\"\r\n// //                 name=\"email\"\r\n// //                 value={userData.email}\r\n// //                 disabled={!updateForm}\r\n// //                 onChange={(e) => updateValue(e)}\r\n// //                 placeholder=\"Email\"\r\n// //               />\r\n// //             </Row>\r\n// //             <Row>\r\n// //               <Input\r\n// //                 id=\"contact-number\"\r\n// //                 label=\"Contact Number\"\r\n// //                 type=\"text\"\r\n// //                 name=\"contactNumber\"\r\n// //                 value={userData.contactNumber}\r\n// //                 disabled={!updateForm}\r\n// //                 onChange={(e) => updateValue(e)}\r\n// //                 placeholder=\"Contact Number\"\r\n// //               />\r\n// //             </Row>\r\n// //             <Row>\r\n// //               <Form.Label>Profile Picture</Form.Label>\r\n// //               <Image src=\"https://picsum.photos/171/180\" roundedCircle />\r\n// //             </Row>\r\n// //             <Row>\r\n// //               <Input\r\n// //                 id=\"affiliation\"\r\n// //                 label=\"Affiliation\"\r\n// //                 type=\"text\"\r\n// //                 name=\"affiliation\"\r\n// //                 value={userData.affiliation ? userData.affiliation : \"NULL\"}\r\n// //                 disabled={!updateForm}\r\n// //                 onChange={(e) => updateValue(e)}\r\n// //                 placeholder=\"Affiliation\"\r\n// //               />\r\n// //             </Row>\r\n// //             <Row>\r\n// //               <Input\r\n// //                 id=\"description\"\r\n// //                 label=\"Description\"\r\n// //                 type=\"textarea\"\r\n// //                 as=\"textarea\"\r\n// //                 rows={3}\r\n// //                 name=\"description\"\r\n// //                 value={userData.description}\r\n// //                 disabled={!updateForm}\r\n// //                 onChange={(e) => updateValue(e)}\r\n// //                 placeholder=\"Description\"\r\n// //               />\r\n// //             </Row>\r\n// //             {userData.permissions\r\n// //               ? Object.keys(userData.permissions).map((permission) => (\r\n// //                   <Form.Check\r\n// //                     label={permission}\r\n// //                     name={permission}\r\n// //                     checked={userData.permissions[permission]}\r\n// //                     disabled={!updateForm}\r\n// //                     onChange={(e) =>\r\n// //                       (userData.permissions[permission] = e.target.checked)\r\n// //                     }\r\n// //                   ></Form.Check>\r\n// //                 ))\r\n// //               : undefined}\r\n// //           </Container>\r\n// //         </>\r\n// //       )}\r\n// //     </Layout>\r\n// //   );\r\n// // };\r\n\r\n// // export default User;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\index.js",["1333","1334"],"import { FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput, } from '@material-ui/core';\r\nimport {\r\n  Visibility, VisibilityOff\r\n}                                                                                              from '@material-ui/icons';\r\nimport React, { useState }                                                                     from 'react';\r\nimport { Link }                                                                                from 'react-router-dom';\r\nimport axios\r\n                                                                                               from '../../helpers/axios';\r\nimport ResetPasswordValidator\r\n                                                                                               from './ResetPasswordValidator';\r\n\r\nimport './style.css';\r\nimport useFormResetPassword\r\n                                                                                               from './useFormResetPassword';\r\n\r\nconst ResetPassword = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [passwordReset, setPasswordReset] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const token = window.location.href.split('/')[\r\n  window.location.href.split('/').length - 1\r\n    ];\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post('/resetPassword', { token, password: resetPassword.password })\r\n      .then((response) => {\r\n        setPasswordReset(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setPasswordReset(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log('hii');\r\n    const slides = document.querySelector('.slides');\r\n    slides.style.transform = 'translate(-50%)';\r\n  };\r\n  const {\r\n          resetPassword,\r\n          handleResetSubmit,\r\n          updateResetPassword,\r\n          resetPasswordErrors,\r\n        } = useFormResetPassword(handleSubmission, ResetPasswordValidator);\r\n\r\n  const passwordForm = () => {\r\n    return (\r\n      <div className=\"reset-password-div\">\r\n        <h3>Set new password</h3>\r\n        <div className=\"reset-password-form\">\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.password}\r\n          >\r\n            <InputLabel htmlFor=\"password\">New password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"password\"\r\n              name=\"password\"\r\n              // className=\"password-input-box\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={resetPassword.password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) => setShowPassword(!showPassword)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.password ? resetPasswordErrors.password : ''}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"confirm_password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.confirm_password}\r\n          >\r\n            <InputLabel htmlFor=\"confirm_password\">Confirm password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"confirm_password\"\r\n              name=\"confirm_password\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showConfirmPassword ? 'text' : 'password'}\r\n              value={resetPassword.confirm_password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) =>\r\n                      setShowConfirmPassword(!showConfirmPassword)\r\n                    }\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.confirm_password\r\n                ? resetPasswordErrors.confirm_password\r\n                : ''}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <button\r\n          onClick={(e) => handleResetSubmit(e)}\r\n          className=\"reset-password-btn\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const resetResponseSlide = () => {\r\n    return (\r\n      <div className=\"reset-response-div\">\r\n        <h3 className=\"reset-response-title\">\r\n          {passwordReset\r\n            ? 'Your account password has been changed successfully'\r\n            : 'Password reset failed'}\r\n        </h3>\r\n        <p>{message}</p>\r\n        {passwordReset ? (\r\n          <Link to=\"\">Go to Sign In</Link>\r\n        ) : (\r\n          <Link\r\n            onClick={(e) => {\r\n              const slides = document.querySelector('.slides');\r\n              slides.style.transform = 'translate(0%)';\r\n            }}\r\n          >\r\n            Go back to reset\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const [currentSlider, setCurrentSlider] = useState(true);\r\n\r\n  return (\r\n    <div className=\"reset-password-outer-div\">\r\n      <div className=\"slider-outer-div\">\r\n        <div className={`slides`}>\r\n          <div className=\"slide\">{passwordForm()}</div>\r\n          <div className=\"slide\">{resetResponseSlide()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\index.js",["1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Reports\\Reports.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Deposits\\Deposits.js",["1348"],"import React, { useState } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DropDown from \"../../../components/DropDown\";\r\nimport SideBar from \"../../../components/SideBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { deleteDeposit, getDeposits } from \"actions\";\r\n\r\nconst Deposits = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  // const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const deposits = useSelector((state) => state.deposit);\r\n\r\n  useEffect(() => {\r\n    dispatch(getDeposits());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(deposits.getDeposits.deposits || []);\r\n  }, [deposits]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.deposit_id\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(query.toLowerCase()) > -1 ||\r\n            row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Deposits are being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (deposits.getDeposits.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (deposits.getDeposits.error.found) {\r\n    return (\r\n      <SideBar active=\"Deposits\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(deposits.getDeposits.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const deposit_table_head = [\r\n    {\r\n      id: \"deposit_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Deposit ID\",\r\n    },\r\n    {\r\n      id: \"customer_name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Customer\",\r\n    },\r\n    {\r\n      id: \"type\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Deposit Type\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n  const onRowsDelete = (values) => {\r\n    dispatch(deleteDeposit({ depositsToDelete: values }));\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Deposits\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit Request\",\r\n                value: \"Deposit Request\",\r\n              },\r\n              {\r\n                title: \"Document Submission\",\r\n                value: \"Document Submission\",\r\n              },\r\n              {\r\n                title: \"Rejected\",\r\n                value: \"Rejected\",\r\n              },\r\n              {\r\n                title: \"Payment Submission\",\r\n                value: \"Payment Submission\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"Processing\",\r\n              },\r\n              {\r\n                title: \"Deposited\",\r\n                value: \"Deposited\",\r\n              },\r\n              {\r\n                title: \"Cancelled\",\r\n                value: \"Cancelled\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={deposit_table_head}\r\n          rows={search(data)}\r\n          onDelete={onRowsDelete}\r\n          type=\"Deposits\"\r\n          showDetails={\"/adminDashboard/depositDetails\"}\r\n        />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default Deposits;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Details\\Details.js",["1349","1350","1351","1352"],"import { Avatar, Button, TextField } from '@material-ui/core';\r\nimport TodayIcon                     from '@material-ui/icons/Today';\r\nimport SideBar                       from 'components/SideBar';\r\nimport Status                        from 'components/Status';\r\nimport React, { useState }           from 'react';\r\nimport ReactApexChart                from 'react-apexcharts';\r\nimport { Link }                      from 'react-router-dom';\r\nimport './Details.css';\r\n\r\nconst Details = () => {\r\n  const [rangeDates, setRangeDates] = useState({\r\n                                                 start: new Date().toISOString().substr(0, 10),\r\n                                                 end  : new Date().toISOString().substr(0, 10),\r\n                                               });\r\n\r\n  const [activeUsersChartData, setActiveUsersChartData] = useState({\r\n                                                                     series : [{\r\n                                                                       name: 'Visitors',\r\n                                                                       data: [23, 31, 40, 101, 40, 36, 32, 23, 14]\r\n                                                                     }],\r\n                                                                     options: {\r\n\r\n                                                                       chart      : {\r\n\r\n                                                                         type: 'bar',\r\n\r\n                                                                       },\r\n                                                                       plotOptions: {\r\n                                                                         bar: {\r\n                                                                           borderRadius: 10,\r\n                                                                           dataLabels  : {\r\n                                                                             position: 'top', // top, center, bottom\r\n                                                                           },\r\n                                                                         }\r\n                                                                       },\r\n                                                                       dataLabels : {\r\n                                                                         enabled  : true,\r\n                                                                         formatter: function (val) {\r\n                                                                           return val;\r\n                                                                         },\r\n                                                                         offsetY  : -20,\r\n                                                                         style    : {\r\n                                                                           fontSize: '12px',\r\n                                                                           colors  : ['#304758']\r\n                                                                         }\r\n                                                                       },\r\n\r\n                                                                       xaxis: {\r\n                                                                         categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',],\r\n                                                                         position  : 'top',\r\n                                                                         axisBorder: {\r\n                                                                           show: false\r\n                                                                         },\r\n                                                                         axisTicks : {\r\n                                                                           show: false\r\n                                                                         },\r\n                                                                         crosshairs: {\r\n                                                                           fill: {\r\n                                                                             type    : 'gradient',\r\n                                                                             gradient: {\r\n                                                                               colorFrom  : '#D8E3F0',\r\n                                                                               colorTo    : '#BED1E6',\r\n                                                                               stops      : [0, 100],\r\n                                                                               opacityFrom: 0.4,\r\n                                                                               opacityTo  : 0.5,\r\n                                                                             }\r\n                                                                           }\r\n                                                                         },\r\n                                                                         tooltip   : {\r\n                                                                           enabled: true,\r\n                                                                         }\r\n                                                                       },\r\n                                                                       yaxis: {\r\n                                                                         axisBorder: {\r\n                                                                           show: false\r\n                                                                         },\r\n                                                                         axisTicks : {\r\n                                                                           show: false,\r\n                                                                         },\r\n                                                                         labels    : {\r\n                                                                           show     : false,\r\n                                                                           formatter: function (val) {\r\n                                                                             return val;\r\n                                                                           }\r\n                                                                         }\r\n\r\n                                                                       },\r\n                                                                       // title: {\r\n                                                                       //   text: 'Monthly Inflation in Argentina, 2002',\r\n                                                                       //   floating: true,\r\n                                                                       //   offsetY: 330,\r\n                                                                       //   align: 'center',\r\n                                                                       //   style: {\r\n                                                                       //     color: '#444'\r\n                                                                       //   }\r\n                                                                       // }\r\n                                                                     },\r\n                                                                   });\r\n\r\n  const [salesChartData, setsalesChartData] = useState({\r\n                                                         series : [{\r\n                                                           name: 'series1',\r\n                                                           data: [31, 40, 28, 51, 42, 109, 100]\r\n                                                         }, {\r\n                                                           name: 'series2',\r\n                                                           data: [11, 32, 45, 32, 34, 52, 41]\r\n                                                         }],\r\n                                                         options: {\r\n                                                           chart     : {\r\n                                                             height: 350,\r\n                                                             type  : 'area'\r\n                                                           },\r\n                                                           dataLabels: {\r\n                                                             enabled: false\r\n                                                           },\r\n                                                           stroke    : {\r\n                                                             curve: 'smooth'\r\n                                                           },\r\n                                                           xaxis     : {\r\n                                                             type      : 'datetime',\r\n                                                             categories: ['2018-09-19T00:00:00.000Z', '2018-09-19T01:30:00.000Z', '2018-09-19T02:30:00.000Z', '2018-09-19T03:30:00.000Z', '2018-09-19T04:30:00.000Z', '2018-09-19T05:30:00.000Z', '2018-09-19T06:30:00.000Z']\r\n                                                           },\r\n                                                           tooltip   : {\r\n                                                             x: {\r\n                                                               format: 'dd/MM/yy HH:mm'\r\n                                                             },\r\n                                                           },\r\n                                                         },\r\n                                                       });\r\n\r\n  const [popularCategoriesChartData, setpopularCategoriesChartData] = useState({\r\n                                                                                 series: [44, 55, 41, 17],\r\n\r\n                                                                                 options   : {\r\n                                                                                   labels     : ['Apple', 'Mango', 'Orange', 'Watermelon'],\r\n                                                                                   chart      : {\r\n                                                                                     background: '#fff',\r\n                                                                                     animations: {\r\n                                                                                       speed: 1300,\r\n                                                                                     }\r\n                                                                                   },\r\n                                                                                   dataLabels : {\r\n                                                                                     enabled: false,\r\n                                                                                     // formatter: function (val) {\r\n                                                                                     //   return val + \"%\"\r\n                                                                                     // },\r\n                                                                                   },\r\n                                                                                   legend     : {\r\n                                                                                     position       : 'bottom',\r\n                                                                                     horizontalAlign: 'center',\r\n                                                                                     fontSize       : '14px',\r\n                                                                                     markers        : {\r\n                                                                                       width : 20,\r\n                                                                                       height: 20,\r\n                                                                                       radius: 5,\r\n                                                                                     }\r\n                                                                                   },\r\n                                                                                   plotOptions: {\r\n                                                                                     pie: {\r\n                                                                                       donut: {\r\n                                                                                         size  : '75%',\r\n                                                                                         labels: {\r\n                                                                                           show : true,\r\n                                                                                           total: {\r\n                                                                                             show      : true,\r\n                                                                                             showAlways: true,\r\n                                                                                             label     : 'Samples Sold',\r\n                                                                                             fontSize  : '14px',\r\n                                                                                             color     : 'grey',\r\n                                                                                             formatter : function (w) {\r\n                                                                                               return '129,345';\r\n                                                                                             },\r\n                                                                                           }\r\n                                                                                         }\r\n                                                                                       },\r\n\r\n                                                                                     }\r\n                                                                                   }\r\n                                                                                 },\r\n                                                                                 dataLabels: {\r\n                                                                                   enabled: false,\r\n                                                                                 }\r\n                                                                               });\r\n  return (\r\n    <SideBar active=\"Dashboard\">\r\n      <div className=\"admin-dashboard\">\r\n        <h3 className=\"component-heading\">Main Dashboard</h3>\r\n        <div className=\"dashboard-dates\">\r\n          <TextField\r\n            id=\"start-date\"\r\n            className=\"starting-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"From\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"end-date\"\r\n            className=\"ending-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"To\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"card-div\">\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>25</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>49</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>78</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"top-selling-div card\">\r\n          <h4 className=\"card-title\">Top Selling</h4>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"sales-report card\">Sales Report\r\n          <ReactApexChart options={salesChartData.options} series={salesChartData.series} type=\"area\" /></div>\r\n        <div className=\"active-users card\">\r\n          <h4 className=\"card-title\">Visitors</h4>\r\n          <ReactApexChart options={activeUsersChartData.options} height=\"100%\" series={activeUsersChartData.series}\r\n                          type=\"bar\" />\r\n        </div>\r\n        <div className=\"recent-reviews card\">\r\n          <h4 className=\"card-title\">Recent Reviews</h4>\r\n          <hr />\r\n          <div>\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <Button variant=\"contained\">\r\n              <Link\r\n                to=\"/dashboard/addUser\"\r\n                style={{ color: 'black', textDecoration: 'none' }}\r\n              >\r\n                See All\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"popular-categories card\">\r\n          <h4 className=\"card-title\">Popular Categories</h4>\r\n          <ReactApexChart className=\"popular-categories-chart\" height=\"90%\" options={popularCategoriesChartData.options}\r\n                          series={popularCategoriesChartData.series} type=\"donut\" /></div>\r\n        {/* <div className=\"deposit-periods card\">Deposits in Periods</div> */}\r\n        <div className=\"recent-orders card\">\r\n          <h4 className=\"card-title\">Recent Orders</h4>\r\n          <hr />\r\n          <div className=\"recent-order-headers\">\r\n            <span className=\"date-header\">Date</span>\r\n            <span className=\"customer-header\">Customer</span>\r\n            <span className=\"status-header\">Status</span>\r\n            <span className=\"total-header\">Total</span>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n                <Status status=\"Completed\" />\r\n                {/* Completed */}\r\n              </span>\r\n              <span className=\"total-data\">\r\n\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Pending\" />\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\" />\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\" />\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n          <Button variant=\"contained\" className=\"see-all-button\" style={{ marginRight: '4rem' }}>\r\n            <Link\r\n              to=\"/dashboard/addUser\"\r\n              style={{ color: 'black', textDecoration: 'none' }}\r\n            >\r\n              See All\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n        <div className=\"city-order-statistics card\">City Order Statistics</div>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Payments\\Payments.js",["1353","1354","1355"],"import React, { useState } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DropDown from \"../../../components/DropDown\";\r\nimport SideBar from \"../../../components/SideBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { deletePayment, getPayments } from \"actions\";\r\nconst Payments = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const payments = useSelector((state) => state.payment);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPayments());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      payments.getPayments.payments.map((row) => {\r\n        delete row.profilePicture;\r\n        return row;\r\n      })\r\n    );\r\n    // setData(payments.getPayments.payments || []);\r\n  }, [payments]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.payment_id\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(query.toLowerCase()) > -1 ||\r\n            row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Payments being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (payments.getPayments.fetching) {\r\n    return (\r\n      <SideBar active=\"Payments\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (payments.getPayments.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(payments.getPayments.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const payment_table_head = [\r\n    {\r\n      id: \"payment_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Payment ID\",\r\n    },\r\n    {\r\n      id: \"customer_name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Customer\",\r\n    },\r\n    {\r\n      id: \"payment_for\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Payment For\",\r\n    },\r\n    {\r\n      id: \"order_deposit_id\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Order/Deposit ID\",\r\n    },\r\n    {\r\n      id: \"amount\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Amount\",\r\n    },\r\n    // {\r\n    //   id: \"status\",\r\n    //   align: \"left\",\r\n    //   disablePadding: false,\r\n    //   alignData: \"left\",\r\n    //   label: \"Status\",\r\n    // },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n  ];\r\n  const onRowsDelete = (values) => {\r\n    dispatch(deletePayment({ paymentsToDelete: values }));\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Payments\">\r\n      {console.log(data)}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        {/* <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit Request\",\r\n                value: \"Deposit Request\",\r\n              },\r\n              {\r\n                title: \"Document Submission\",\r\n                value: \"Document Submission\",\r\n              },\r\n              {\r\n                title: \"Rejected\",\r\n                value: \"Rejected\",\r\n              },\r\n              {\r\n                title: \"Payment Submission\",\r\n                value: \"Payment Submission\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"Processing\",\r\n              },\r\n              {\r\n                title: \"Deposited\",\r\n                value: \"Deposited\",\r\n              },\r\n              {\r\n                title: \"Cancelled\",\r\n                value: \"Cancelled\",\r\n              },\r\n            ]}\r\n          />\r\n        </div> */}\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={payment_table_head}\r\n          rows={search(data)}\r\n          type=\"Payments\"\r\n          onDelete={onRowsDelete}\r\n          showDetails={\"/adminDashboard/orderReport\"}\r\n        />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\Settings.js",["1356","1357","1358","1359","1360","1361","1362"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getUserData,\r\n  resetPassword,\r\n  updateUserInfo,\r\n  updateUserProfilePicture,\r\n} from \"actions\";\r\nimport SideBar from \"components/SideBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport passwordValidator from \"./passwordValidator\";\r\n// import { PermissionData } from \"./PermissionData\";\r\nimport PersonalInformationValidator from \"./PersonalInformationValidator\";\r\nimport useFormPassword from \"./useFormPassword\";\r\nimport useFormPersonalInformation from \"./useFormPersonalInformation\";\r\n\r\nconst Settings = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user);\r\n  const id = useSelector((state) => state.auth.user._id);\r\n  const [editPersonalInformation, setEditPersonalInformation] = useState(false);\r\n  const [editPassword, setEditPassword] = useState(false);\r\n\r\n  const handleInformationSubmission = () => {\r\n    setEditPersonalInformation(false);\r\n    setEditPassword(false);\r\n    dispatch(\r\n      updateUserInfo({ ...personalInformationValue, _id: id }, id, user.role)\r\n    );\r\n  };\r\n\r\n  const handlePasswordChangeSubmission = () => {\r\n    setEditPassword(false);\r\n\r\n    dispatch(\r\n      resetPassword({ password: passwordValue.password, id }, user.role)\r\n    );\r\n  };\r\n\r\n  const handleProfilePictureSubmission = (e) => {\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    data.append(\"profilePicture\", e.target.files[0]);\r\n    dispatch(updateUserProfilePicture(data, id, user.role));\r\n  };\r\n\r\n  const {\r\n    handlePersonalInformationSubmit,\r\n    personalInformationValue,\r\n    updatePersonalInformationValue,\r\n    personalInformationErrors,\r\n    setInitial,\r\n  } = useFormPersonalInformation(\r\n    handleInformationSubmission,\r\n    PersonalInformationValidator\r\n  );\r\n\r\n  const {\r\n    passwordValue,\r\n    handlepasswordSubmit,\r\n    updatepasswordValue,\r\n    passwordErrors,\r\n  } = useFormPassword(handlePasswordChangeSubmission, passwordValidator);\r\n\r\n  const editPersonalInfo = () => {\r\n    setEditPersonalInformation(true);\r\n  };\r\n\r\n  const handlePersonalInformationSave = (e) => {\r\n    handlePersonalInformationSubmit(e);\r\n  };\r\n  useEffect(() => {\r\n    if (user) {\r\n      setInitial({\r\n        firstname: user.firstname || \"\",\r\n        lastname: user.lastname || \"\",\r\n        email: user.email || \"\",\r\n        contactNumber: user.contactNumber || \"\",\r\n        description: user.description || \"\",\r\n        profilePicture: user.profilePicture || \"\",\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <SideBar active=\"settings\">\r\n      <Grid container lg sm xs md style={styles.container} spacing={2}>\r\n        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n          <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n            <CardHeader\r\n              title=\"Personal Information\"\r\n              titleTypographyProps={{ color: \"primary\" }}\r\n              action={\r\n                <>\r\n                  {editPersonalInformation == false ? (\r\n                    <Button\r\n                      style={{ marginTop: \"0.8rem\" }}\r\n                      color=\"primary\"\r\n                      onClick={editPersonalInfo}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ marginTop: \"0.8rem\" }}\r\n                      onClick={handlePersonalInformationSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <Grid container direction=\"column\" spacing={3}>\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  md\r\n                  lg\r\n                  sm\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    src={personalInformationValue.profilePicture}\r\n                    style={{ width: \"6rem\", height: \"6rem\" }}\r\n                  />\r\n                  {editPersonalInformation && (\r\n                    <div\r\n                      style={{\r\n                        width: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   // margin: \"2rem 1rem\",\r\n                        // }}\r\n                      >\r\n                        Update\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"profilePicture\"\r\n                          onChange={handleProfilePictureSubmission}\r\n                          hidden\r\n                        />\r\n                      </Button>\r\n                      <Button\r\n                        color=\"default\"\r\n                        variant=\"contained\"\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   // margin: \"2rem 1rem 2rem 0rem\",\r\n                        // }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item lg sm xs md>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    value={personalInformationValue.firstname}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.firstname}\r\n                    helperText={personalInformationErrors.firstname}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    value={personalInformationValue.lastname}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.lastname}\r\n                    helperText={personalInformationErrors.lastname}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={personalInformationValue.email}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.email}\r\n                    helperText={personalInformationErrors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"contactNumber\"\r\n                    label=\"Contact Number\"\r\n                    value={personalInformationValue.contactNumber}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.contactNumber}\r\n                    helperText={personalInformationErrors.contactNumber}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs lg md sm>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={9}\r\n                    value={personalInformationValue.description}\r\n                    disabled={!editPersonalInformation}\r\n                    onChange={updatePersonalInformationValue}\r\n                    error={personalInformationErrors.description}\r\n                    helperText={personalInformationErrors.description}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          {/* </Grid> */}\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n          <Grid container lg sm xs md direction=\"column\">\r\n            <Grid\r\n              item\r\n              lg={12}\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <Card style={{ width: \"100%\", height: \"100%\" }}>\r\n                <CardHeader\r\n                  title=\"Password\"\r\n                  titleTypographyProps={{ color: \"primary\" }}\r\n                  action={\r\n                    <>\r\n                      {editPassword == false ? (\r\n                        <Button\r\n                          style={{ marginTop: \"0.8rem\" }}\r\n                          color=\"primary\"\r\n                          onClick={(e) => setEditPassword(true)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"0.8rem\" }}\r\n                          onClick={handlepasswordSubmit}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  }\r\n                />\r\n                <CardContent>\r\n                  <Grid\r\n                    container\r\n                    xs\r\n                    lg\r\n                    md\r\n                    sm\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                  >\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        value={passwordValue.password}\r\n                        disabled={!editPassword}\r\n                        onChange={updatepasswordValue}\r\n                        error={passwordErrors.password}\r\n                        helperText={passwordErrors.password}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm style={{ marginTop: \"1.3rem\" }}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        value={passwordValue.confirmPassword}\r\n                        disabled={!editPassword}\r\n                        onChange={updatepasswordValue}\r\n                        error={passwordErrors.confirmPassword}\r\n                        helperText={passwordErrors.confirmPassword}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            {/* {user && user.role !== \"external\" && (\r\n              <Grid\r\n                item\r\n                xs\r\n                lg\r\n                md\r\n                sm\r\n                style={{ width: \"100%\", marginTop: \"1rem\" }}\r\n              >\r\n                <Card style={{ width: \"100%\" }}>\r\n                  <CardHeader\r\n                    title=\"Permissions\"\r\n                    titleTypographyProps={{ color: \"primary\" }}\r\n                    action={\r\n                      <>\r\n                        {editPermissions == false ? (\r\n                          <Button\r\n                            style={{ marginTop: \"0.8rem\" }}\r\n                            color=\"primary\"\r\n                            onClick={(e) => setEditPermission(true)}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            color=\"primary\"\r\n                            style={{ marginTop: \"0.8rem\" }}\r\n                            onClick={handlePersonalInformationSave}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        )}\r\n                      </>\r\n                    }\r\n                  />\r\n                  <CardContent>\r\n                    <Grid container spacing={2}>\r\n                      {PermissionData.map((permission, index) => {\r\n                        return (\r\n                          <Grid item xs={6} lg={6} md={6} sm={6}>\r\n                            <FormControlLabel\r\n                              key={index}\r\n                              disabled={!editPermissions}\r\n                              control={\r\n                                <Checkbox\r\n                                  checked={\r\n                                    personalInformationValue.permissions\r\n                                      ? personalInformationValue.permissions[\r\n                                          permission.name\r\n                                        ]\r\n                                      : false\r\n                                  }\r\n                                  onChange={updatePersonalInformationValue}\r\n                                  name={permission.name}\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              label={permission.title}\r\n                            />\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            )} */}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Grid item lg md sm xs>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              paddingLeft: \"0.4rem\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h5>Personal Information</h5>\r\n            <Button color=\"primary\" variant=\"text\" onClick={editPersonalInfo}>\r\n              {editPersonalInformation ? \"Save\" : \"Edit\"}\r\n            </Button>\r\n          </div>\r\n          <Card>\r\n            <CardContent>\r\n              <Grid\r\n                style={{ backgroundColor: \"red\" }}\r\n                container\r\n                lg\r\n                sm\r\n                md\r\n                xs\r\n                spacing={3}\r\n                direction=\"column\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={5}\r\n                  lg={5}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Avatar style={{ width: \"10rem\", height: \"10rem\" }} />\r\n                  {editPersonalInformation && (\r\n                    <div\r\n                      style={{\r\n                        width: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Button color=\"primary\" variant=\"contained\">\r\n                        Update\r\n                      </Button>\r\n                      <Button color=\"default\" variant=\"contained\">\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={7}\r\n                  lg={7}\r\n                  sm={12}\r\n                  style={{ padding: \"1rem 3rem\" }}\r\n                >\r\n                  <Grid container xs lg md sm direction=\"column\" spacing={3}>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"firstname\"\r\n                        label=\"First Name\"\r\n                        // value={data.firstname}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.firstname}\r\n                        // helperText={\r\n                        //   errors.firstname ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"lastname\"\r\n                        label=\"Last Name\"\r\n                        // value={data.lastname}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.lastname}\r\n                        // helperText={\r\n                        //   errors.lastname ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        // value={data.email}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.email}\r\n                        // helperText={\r\n                        //   errors.email ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"contactNumber\"\r\n                        label=\"Contact Number\"\r\n                        // value={data.contactNumber}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.contactNumber}\r\n                        // helperText={\r\n                        //   errors.contactNumber ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs lg md sm>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        // value={data.description}\r\n                        disabled={!editPersonalInformation}\r\n                        // onChange={handlePersonalInformationChange}\r\n                        // error={errors.description}\r\n                        // helperText={\r\n                        //   errors.description ? \"First Name cannot be empty\" : \"\"\r\n                        // }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          <Grid container lg sm xs md>\r\n            <Grid item>profile</Grid>\r\n            <Grid item>personal Info</Grid>\r\n          </Grid>\r\n        </Grid> */}\r\n      </Grid>\r\n      {/* <h1>Settings</h1>\r\n      <Badge\r\n        color=\"primary\"\r\n        badgeContent={\r\n          <CreateIcon\r\n            style={{\r\n              width          : '12px',\r\n              height         : '12px',\r\n              borderRadius   : '2px solid royalblue',\r\n              backgroundColor: 'royalblue',\r\n            }}\r\n          />\r\n        }\r\n        showZero\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical  : 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        <Avatar />\r\n      </Badge>\r\n\r\n      <TextField variant=\"outlined\" label=\"Firstname\" /> */}\r\n    </SideBar>\r\n  );\r\n};\r\nconst styles = {\r\n  container: {\r\n    minHeight: \"90vh\",\r\n    margin: \"1rem 0\",\r\n  },\r\n};\r\nexport default Settings;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\AddUser\\AddUser.js",["1363","1364","1365","1366","1367"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Fade,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Modal,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { addUser } from \"actions/user.actions\";\r\nimport SideBar from \"components/SideBar\";\r\nimport AddUserValidator from \"containers/AdminDashboard/AddUser/addUserValidator\";\r\nimport \"containers/AdminDashboard/AddUser/style.css\";\r\nimport useFormAddUser from \"containers/AdminDashboard/AddUser/useFormAddUser\";\r\nimport { PermissionData } from \"containers/User/PermissionData\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst AddUser = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const add_user = useSelector((state) => state.user.add_user);\r\n  const handleAddUser = () => {\r\n    var form = new FormData();\r\n    Object.keys(addUserValue).map((item) => {\r\n      if (item !== \"preview_Image\") {\r\n        form.append(item, addUserValue[item]);\r\n      }\r\n      if (item == \"permissions\") {\r\n        form.append(item, JSON.stringify(addUserValue[item]));\r\n      }\r\n    });\r\n    alert(\"sending data\");\r\n    dispatch(addUser(form));\r\n    // setModalOpen(true);\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    const slider_div = document.getElementById(\"add__user__details__slides\");\r\n    slider_div.style.transform = \"translateX(-50%)\";\r\n  };\r\n  const prevSlide = () => {\r\n    const slider_div = document.getElementById(\"add__user__details__slides\");\r\n    slider_div.style.transform = \"translateX(0%)\";\r\n  };\r\n  const { addUserValue, handleAddUserSubmit, updateAddUser, addUserErrors } =\r\n    useFormAddUser(handleAddUser, AddUserValidator);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">\r\n          User information is being processed\r\n        </h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{add_user.error.message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (add_user.adding) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (add_user.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{ErrorMessage()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n  // if (add_user.added) {\r\n  //   setModalOpen(true);\r\n  // }\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"add-user-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          props.history.goBack();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {add_user.added ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {add_user.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {add_user.added\r\n                ? \"Success\"\r\n                : add_user.error\r\n                ? \"Error\"\r\n                : \"Waiting for response\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {add_user.added\r\n                ? \"User creation successfull\"\r\n                : add_user.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <SideBar active=\"Users\">\r\n        <Grid\r\n          container\r\n          xs\r\n          lg\r\n          md\r\n          sm\r\n          direction=\"column\"\r\n          style={{ margin: \"2rem 0\" }}\r\n        >\r\n          <Grid item xs lg md sm style={{ width: \"100%\" }}>\r\n            <div style={{ margin: \"0.2rem 1rem\" }}>\r\n              <h4>Personal Information</h4>\r\n            </div>\r\n            <Card style={{ padding: \"2rem\" }}>\r\n              <CardContent>\r\n                <Grid container xs lg md sm>\r\n                  <Grid item xs={12} sm={12} lg={8} md={8}>\r\n                    <Grid container xs lg md sm spacing={2}>\r\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          type=\"text\"\r\n                          name=\"firstname\"\r\n                          className=\"input\"\r\n                          label=\"Firstname\"\r\n                          fullWidth\r\n                          value={addUserValue.firstname}\r\n                          onChange={(e) => updateAddUser(e)}\r\n                          error={addUserErrors.firstname ? true : false}\r\n                          helperText={addUserErrors.firstname}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          type=\"text\"\r\n                          name=\"lastname\"\r\n                          className=\"input\"\r\n                          label=\"Lastname\"\r\n                          fullWidth\r\n                          value={addUserValue.lastname}\r\n                          onChange={(e) => updateAddUser(e)}\r\n                          error={addUserErrors.lastname ? true : false}\r\n                          helperText={addUserErrors.lastname}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          type=\"text\"\r\n                          className=\"input\"\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          fullWidth\r\n                          value={addUserValue.email}\r\n                          onChange={(e) => updateAddUser(e)}\r\n                          error={addUserErrors.email ? true : false}\r\n                          helperText={addUserErrors.email}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          className=\"input password-input\"\r\n                          fullWidth\r\n                          error={addUserErrors.password ? true : undefined}\r\n                        >\r\n                          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                            Password *\r\n                          </InputLabel>\r\n                          <OutlinedInput\r\n                            id=\"outlined-adornment-password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Min 6 letters & a capital letter\"\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            value={addUserValue.password}\r\n                            // className=\"input\"\r\n                            onChange={(e) => updateAddUser(e)}\r\n                            endAdornment={\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={(e) =>\r\n                                    setShowPassword(!showPassword)\r\n                                  }\r\n                                  onMouseDown={(e) => e.preventDefault()}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  {showPassword ? (\r\n                                    <Visibility />\r\n                                  ) : (\r\n                                    <VisibilityOff />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            }\r\n                            labelWidth={70}\r\n                          />\r\n                          <FormHelperText id=\"my-helper-text\">\r\n                            {addUserErrors.password\r\n                              ? addUserErrors.password\r\n                              : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          className=\"input\"\r\n                          required\r\n                          fullWidth\r\n                          error={addUserErrors.confirm_password ? true : false}\r\n                        >\r\n                          <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                            Confirm Password\r\n                          </InputLabel>\r\n                          <OutlinedInput\r\n                            id=\"outlined-adornment-confirm-password\"\r\n                            name=\"confirm_password\"\r\n                            placeholder=\"Min 6 letters & a capital letter\"\r\n                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                            value={addUserValue.confirm_password}\r\n                            onChange={(e) => updateAddUser(e)}\r\n                            endAdornment={\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={(e) =>\r\n                                    setShowConfirmPassword(!showConfirmPassword)\r\n                                  }\r\n                                  onMouseDown={(e) => e.preventDefault()}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  {showConfirmPassword ? (\r\n                                    <Visibility />\r\n                                  ) : (\r\n                                    <VisibilityOff />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            }\r\n                            labelWidth={140}\r\n                          />\r\n                          <FormHelperText id=\"my-helper-text\">\r\n                            {addUserErrors.confirm_password}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    lg={4}\r\n                    md={4}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      src={addUserValue.preview_Image}\r\n                      style={{ width: \"8rem\", height: \"8rem\" }}\r\n                    />\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      component=\"label\"\r\n                      style={{\r\n                        width: \"70%\",\r\n                        margin: \"0.8rem 0rem\",\r\n                      }}\r\n                    >\r\n                      Update\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"profilePicture\"\r\n                        onChange={(e) => updateAddUser(e)}\r\n                        hidden\r\n                      />\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs lg md sm style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n            <div style={{ margin: \"0.2rem 1rem\" }}>\r\n              <h4>Permissions</h4>\r\n            </div>\r\n            <Card style={{ width: \"100%\", padding: \"2rem\" }}>\r\n              <CardContent>\r\n                <Grid container spacing={2}>\r\n                  {PermissionData.map((permission, index) => {\r\n                    return (\r\n                      <Grid item xs={12} lg={4} md={6} sm={12}>\r\n                        <FormControlLabel\r\n                          key={index}\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                addUserValue.permissions[permission.name]\r\n                              }\r\n                              onChange={updateAddUser}\r\n                              name={permission.name}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={permission.title}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid container spacing={2} style={{ marginTop: \"1rem\" }}>\r\n            <Grid item lg={6} md={6} xs={12} sm={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ width: \"100%\", padding: \"1rem 0\" }}\r\n                onClick={(e) => history.goBack()}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xs={12} sm={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ width: \"100%\", padding: \"1rem 0\" }}\r\n                onClick={handleAddUserSubmit}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </SideBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\UserOrders\\UserOrders.js",["1368"],"import { Button }          from '@material-ui/core';\r\nimport pdfLogo             from 'assets/pdf.png';\r\nimport classNames          from 'classnames';\r\nimport SideBar             from 'components/SideBar';\r\nimport React, { useState } from 'react';\r\n\r\nconst UserOrders = (props) => {\r\n\r\n  const [documentsAvailable] = useState([\r\n                                          'https://res.cloudinary.com/khizerrehan92/image/upload/v1618677668/hamza_farhad_stocks_r56azy.pdf',\r\n                                          'https://res.cloudinary.com/khizerrehan92/raw/upload/v1618677683/Summer_School_Registration_Form_ko4m7q.docx',\r\n                                          'https://res.cloudinary.com/khizerrehan92/image/upload/v1618677668/hamza_farhad_stocks_r56azy.pdf',\r\n                                          'https://res.cloudinary.com/khizerrehan92/raw/upload/v1618677683/Summer_School_Registration_Form_ko4m7q.docx'\r\n                                        ]);\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"p-4\">\r\n        <h3>Order Details</h3>\r\n      </div>\r\n\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n\r\n          {\r\n            documentsAvailable && documentsAvailable.map((document) => {\r\n              return (\r\n                <div className=\"col-lg\">\r\n                  <div className=\"card\">\r\n                    <p>File</p>\r\n                    {document}\r\n                    <a href={document} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                      <img src={pdfLogo} className={classNames('icon-small')} />\r\n                      <Button>\r\n                        <i className=\"fas fa-download\" />\r\n                        Download File\r\n                      </Button>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>Upload Files</h1>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default UserOrders;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DepositHomepageDetails.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpUseForm.js",["1369","1370"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useForm = (handleSubmission, SignUpValidator) => {\r\n  const [value, setValue] = useState({\r\n                                       firstname       : '',\r\n                                       lastname        : '',\r\n                                       username        : '',\r\n                                       email           : '',\r\n                                       type            : 'Student',\r\n                                       affiliation     : '',\r\n                                       description     : '',\r\n                                       password        : '',\r\n                                       confirm_password: '',\r\n                                     });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(SignUpValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderDetailsInformationList.js",["1371"],"import React      from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CancelButtonHandler = () => {\r\n  alert('Thanks for clicking me');\r\n};\r\n\r\nconst OrderDetailsInformationList = (props) => {\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n\r\n      <div style={styles.buttoncontainer}>\r\n        <Button onClick={CancelButtonHandler}\r\n\r\n                style={styles.button}\r\n                name=\"cancel\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n      <div><span style={styles.header}>Order ID: </span><span style={styles.text}>{props.data.order_id}</span></div>\r\n      <div><span style={styles.header}>Date: </span><span style={styles.text}>{props.data.created}</span></div>\r\n      <div><span style={styles.header}>User ID: </span><span style={styles.text}>{props.data.user_id}</span></div>\r\n      <div><span style={styles.header}>Status: </span><span style={styles.text}>{props.data.status}</span></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsInformationList;\r\n\r\nconst styles = {\r\n  container      : {\r\n\r\n    marginTop: 5,\r\n    //    border: '1px solid red',\r\n    textAlign: 'left',\r\n\r\n  },\r\n  header         : {\r\n    color   : 'Black',\r\n    padding : '10px',\r\n    fontSize: 15,\r\n\r\n  },\r\n  text           : {\r\n    color     : 'Black',\r\n    fontFamily: 'Arial',\r\n    padding   : 15,\r\n\r\n  },\r\n  buttoncontainer: {\r\n    borderradius  : '1px',\r\n    fontSize      : '6',\r\n    borderradius  : 5,\r\n    display       : 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems    : 'center',\r\n    marginRight   : 10,\r\n\r\n  },\r\n  button         : {\r\n    fontSize  : 14,\r\n    color     : 'white',\r\n    background: 'sky-blue',\r\n    width     : 95,\r\n    height    : 45\r\n  },\r\n\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Layout\\index.js",["1372","1373"],"import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Nav, Row }   from 'react-bootstrap';\r\nimport { useSelector }                from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\nimport Header                         from '../Header/index';\r\nimport { SideBarData }                from './SidebarData';\r\nimport './style.css';\r\n\r\nconst Layout = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const opt = useSelector((state) => state.dashboard.options);\r\n  const sideBarOptions = ['CATALOGUE', 'USERS'];\r\n\r\n  useEffect(() => {\r\n    setOptions(opt);\r\n  }, [opt]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {props.sidebar ? (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"sideBar\" md={2}>\r\n              <Nav>\r\n                <ul>\r\n                  {SideBarData.map((item, key) => {\r\n                    return (\r\n                      <li key={key} className=\"list-item\">\r\n                        <Link to={item.link} className=\"link\">\r\n                          <div className=\"icon\">{item.icon}</div>\r\n                          <div className=\"title\">{item.title}</div>\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                {/* <ul>\r\n                    {options.map((option, index) => {\r\n                      return (\r\n                        <Nav.Item key={index}>\r\n                          <li>\r\n                            <Link\r\n                              to={\r\n                                option.toLowerCase() === \"dashboard\"\r\n                                  ? `/dashboard`\r\n                                  : `/dashboard/${option.toLowerCase()}`\r\n                              }\r\n                            >\r\n                              {option.toUpperCase()}\r\n                            </Link>\r\n                          </li>\r\n                        </Nav.Item>\r\n                      );\r\n                    })}\r\n                  </ul> */}\r\n              </Nav>\r\n            </Col>\r\n            <Col className=\"contentBox\" md={10}>\r\n              {props.children}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js",["1374","1375"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useFormSignUp = (handleSubmission, SignUpValidator) => {\r\n  const [signUpValue, setSignUpValue] = useState({\r\n                                                   firstname       : '',\r\n                                                   lastname        : '',\r\n                                                   email           : '',\r\n                                                   type            : 'Student',\r\n                                                   affiliation     : '',\r\n                                                   description     : '',\r\n                                                   password        : '',\r\n                                                   confirm_password: '',\r\n                                                 });\r\n\r\n  const [signUpErrors, setSignUpErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignUpSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignUpErrors(SignUpValidator(signUpValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signUpErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signUpErrors]);\r\n\r\n  const updateSignUpValue = (e) => {\r\n    setSignUpValue({\r\n                     ...signUpValue,\r\n                     [e.target.name]: e.target.value,\r\n                   });\r\n  };\r\n\r\n  return { handleSignUpSubmit, signUpValue, updateSignUpValue, signUpErrors };\r\n};\r\n\r\nexport default useFormSignUp;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\SideBar\\index.js",["1376"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DropDown\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderItemList\\index.js",[],["1377","1378"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserSidebar\\UserSidebar.js",["1379"],"import { Avatar }                     from '@material-ui/core';\r\nimport CloseRoundedIcon               from '@material-ui/icons/CloseRounded';\r\nimport ExitToAppIcon                  from '@material-ui/icons/ExitToApp';\r\nimport LayersIcon                     from '@material-ui/icons/Layers';\r\nimport MenuRoundedIcon                from '@material-ui/icons/MenuRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector }   from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\nimport { authConstants }              from '../../actions/constants';\r\n// import Image from \"./image.jpg\";\r\nimport './style.css';\r\nimport { UserSidebarData }            from './UserSidebarData';\r\n\r\nconst UserSideBar = (props) => {\r\n  const sidebarCollapse = useSelector((state) => state.sidebar.collapsed);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(sidebarCollapse);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const showNavbar = (toggleId, navId, bodyId, headerId, dashboardId) => {\r\n  //   dispatch({ type: authConstants.COLLAPSE_SIDEBAR });\r\n  //   // console.log(\"showing sidebar\");\r\n\r\n  //   const toggle = document.getElementById(toggleId),\r\n  //     nav = document.getElementById(navId),\r\n  //     bodypd = document.getElementById(bodyId),\r\n  //     headerpd = document.getElementById(headerId),\r\n  //     dashboardpd = document.getElementById(dashboardId);\r\n  //   if (toggle && nav && bodypd && headerpd) {\r\n  //     // nav.classList.toggle(\"show\");\r\n  //     // bodypd.classList.toggle(\"body-pd\");\r\n  //     headerpd.classList.toggle(\"body-pd\");\r\n  //     dashboardpd.classList.toggle(\"body-pd\");\r\n  //   }\r\n  // };\r\n\r\n  // if (sidebarCollapse === false) {\r\n  //   console.log(sidebarCollapse);\r\n  //   showNavbar(\r\n  //     \"header__toggle\",\r\n  //     \"nav-bar\",\r\n  //     \"body-pd\",\r\n  //     \"header\",\r\n  //     \"dashboard__content\"\r\n  //   );\r\n  // }\r\n\r\n  const changeActive = (e) => {\r\n    const link_color = document.querySelectorAll('.nav__link');\r\n    if (link_color) {\r\n      link_color.forEach((l) => l.classList.remove('active'));\r\n      e.currentTarget.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={sidebarCollapsed ? null : 'body-pd'} id=\"body-pd\">\r\n      <header\r\n        className={`header ${sidebarCollapsed ? null : 'body-pd'}`}\r\n        id=\"header\"\r\n      >\r\n        <div\r\n          className=\"header__toggle\"\r\n          id=\"header__toggle\"\r\n          onClick={(e) => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <MenuRoundedIcon /> : <CloseRoundedIcon />}\r\n        </div>\r\n\r\n        <div className=\"header__img\">\r\n          <Avatar src={user.profilePicture} />\r\n          {/* <img src={user.profilePicture} /> */}\r\n        </div>\r\n      </header>\r\n      <div\r\n        className={`l-navbar ${sidebarCollapsed ? null : 'show'}`}\r\n        id=\"nav-bar\"\r\n      >\r\n        <nav className=\"nav\">\r\n          <div>\r\n            <div id=\"brand\">\r\n              <div className=\"brand_logo\">\r\n                <LayersIcon />\r\n              </div>\r\n              <div className=\"brand_name\">NCCP</div>\r\n            </div>\r\n            <div>\r\n              {UserSidebarData.map((link, key) => {\r\n                return (\r\n                  <Link\r\n                    to={link.link}\r\n                    className={`nav__link ${\r\n                      props.active.toLowerCase() === link.title.toLowerCase()\r\n                        ? 'active'\r\n                        : null\r\n                    }`}\r\n                    key={key}\r\n                  >\r\n                    {link.icon}\r\n                    <div className=\"nav_link_title\">{link.title}</div>\r\n                  </Link>\r\n                );\r\n              })}\r\n              {/* <Link\r\n                to=\"/AdminDashboard\"\r\n                className=\"nav__link active\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <DashboardIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Dashboard</div>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/dashboard/users\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <PeopleRoundedIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Users</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/orders\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <ListAltIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Orders</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/deposits\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AccountBalanceIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Deposits</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/reports\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AssessmentIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Reports</div>\r\n              </Link> */}\r\n            </div>\r\n          </div>\r\n          <Link\r\n            onClick={(e) => dispatch({ type: authConstants.LOGOUT })}\r\n            className=\"nav__link\"\r\n            to=\"\"\r\n          >\r\n            <ExitToAppIcon className=\"nav_link_logo\" />\r\n            <div className=\"nav_link_title\">Logout</div>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className={`dashboard__content ${sidebarCollapsed ? null : 'body-pd'}`}\r\n        id=\"dashboard__content\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSideBar;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UI\\Input\\input.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInUseForm.js",["1380","1381"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useSignInForm = (handleSubmission, SignInValidator) => {\r\n  const [signInValue, setSignInValue] = useState({\r\n                                                   email   : '',\r\n                                                   password: '',\r\n                                                 });\r\n\r\n  const [signInErrors, setSignInErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignInErrors(SignInValidator(signInValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signInErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signInErrors]);\r\n\r\n  const updateSignInValue = (e) => {\r\n    setSignInValue({\r\n                     ...signInValue,\r\n                     [e.target.name]: e.target.value,\r\n                   });\r\n  };\r\n\r\n  return { signInValue, handleSignInSubmit, updateSignInValue, signInErrors };\r\n};\r\n\r\nexport default useSignInForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js",["1382","1383"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useFormResetPassword = (handleSubmission, ResetPasswordValidator) => {\r\n  const [resetPassword, setResetPassword] = useState({\r\n                                                       password        : '',\r\n                                                       confirm_password: '',\r\n                                                     });\r\n\r\n  const [resetPasswordErrors, setResetPasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleResetSubmit = (e) => {\r\n    e.preventDefault();\r\n    setResetPasswordErrors(ResetPasswordValidator(resetPassword));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(resetPasswordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [resetPasswordErrors]);\r\n\r\n  const updateResetPassword = (e) => {\r\n    setResetPassword({\r\n                       ...resetPassword,\r\n                       [e.target.name]: e.target.value,\r\n                     });\r\n  };\r\n\r\n  return {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormResetPassword;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\payment.actions.js",["1384"],"import axios from \"../helpers/axios.js\";\r\nimport urls from \"../server_urls.js\";\r\nimport { authConstants } from \"./constants\";\r\nimport { getDepositDetails } from \"./deposit.actions.js\";\r\nimport { getOrderDetails } from \"./order.actions.js\";\r\n\r\nexport const confirmPayment = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.PAYMENT_REQUEST,\r\n      payload: { token: data.token, items: data.products },\r\n    });\r\n\r\n    try {\r\n      let url = \"\";\r\n      if (data.order_id) url = \"/orderPayment\";\r\n      if (data.deposit_id) url = \"/depositPayment\";\r\n      const res = await axios.post(url, { ...data });\r\n      console.log(\"confirm payment response: \", res);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: authConstants.PAYMENT_SUCCESSFULL,\r\n          payload: {\r\n            message: res.message,\r\n            status: res.status,\r\n          },\r\n        });\r\n        if (data.order_id) {\r\n          dispatch(getOrderDetails(data.order_id));\r\n        }\r\n        if (data.deposit_id) {\r\n          dispatch(getDepositDetails(data.deposit_id));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"confirm payment error\", error.response);\r\n      if (error.response && error.response.status === 400) {\r\n        dispatch({\r\n          type: authConstants.PAYMENT_FAILURE,\r\n          payload: {\r\n            message: error.response.message,\r\n            status: error.response.status,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPayments = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.GET_PAYMENTS_REQUEST });\r\n    try {\r\n      const res = await axios.get(\"/paymentlist\");\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: authConstants.GET_PAYMENTS_SUCCESS,\r\n          payload: { data: res.data },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      // dispatch({\r\n      //   type: authConstants.GET_PAYMENTS_FAILURE,\r\n      //   payload: { status: res.status, message: error.data.message },\r\n      // });\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePayment = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.PAYMENT_DELETE_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\"/deletePayment\", { ...data });\r\n      if (res.status === 200) {\r\n        console.log(\"users deleted successfully\");\r\n        dispatch({ type: authConstants.PAYMENT_DELETE_SUCCESS });\r\n        dispatch(getPayments());\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\PageHeader\\index.js",["1385","1386","1387","1388","1389","1390","1391","1392","1393","1394"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DepositItemList\\index.js",[],["1395","1396"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserSidebar\\UserSidebarData.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\SearchBar\\index.js",["1397"],"import {\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport React from \"react\";\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    //style={{ width: \"50%\" }}\r\n    <FormControl\r\n      margin={props.margin}\r\n      style={{ width: props.width }}\r\n      variant=\"outlined\"\r\n    >\r\n      {/* <InputLabel htmlFor=\"outlined-adornment-search-bar\">Search</InputLabel> */}\r\n      <OutlinedInput\r\n        id=\"outlined-adornment-search-bar\"\r\n        name=\"search-bar\"\r\n        placeholder=\"Search\"\r\n        type=\"text\"\r\n        value={props.query}\r\n        onChange={(e) => props.setQuery(e.target.value)}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <IconButton edge=\"start\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={0}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\ItemList\\index.js",["1398"],"import { Avatar, Card } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Image from \"./image.jpg\";\r\nimport \"./style.css\";\r\n\r\nconst ItemList = (props) => {\r\n  //////////////////////\r\n  /////options/////////\r\n\r\n  const options = [\r\n    {\r\n      title: \"View\",\r\n      icon: <VisibilityIcon />,\r\n      link: \"#\",\r\n    },\r\n    {\r\n      title: \"Delete\",\r\n      icon: <DeleteIcon />,\r\n      link: \"#\",\r\n    },\r\n  ];\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  /////////////////////\r\n  ////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"item__list__header\">\r\n        {props.columns.map((column, key) => {\r\n          return (\r\n            <div key={key} style={{ flexBasis: column.width }}>\r\n              {column.title}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"item__list__body\">\r\n        {props.rows.map((row, key) => {\r\n          return (\r\n            <div className=\"item__list__item\" key={key}>\r\n              <div\r\n                className=\"item__list__item__personal\"\r\n                style={{ flexBasis: props.columns[0].width }}\r\n              >\r\n                <div className=\"item__list__item__picture__box\">\r\n                  <Avatar\r\n                    src={row.profilePicture}\r\n                    style={{ width: \"75px\", height: \"75px\" }}\r\n                  />\r\n                  {/* <img src={Image} className=\"item__list__item__picture\" /> */}\r\n                  {/* {row.profilePicture.toLowerCase() === \"null\" ? (\r\n                      <AccountCircleIcon />\r\n                    ) : (\r\n                      \"p\"\r\n                    )} */}\r\n                </div>\r\n                <div className=\"item__list__item__details\">\r\n                  <div className=\"item__list__item__name\">{`${row.firstname} ${row.lastname}`}</div>\r\n                  <div className=\"item__list__item__email\">{row.email}</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[1].width }}>\r\n                {row.role}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[2].width }}>\r\n                {row.orders}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[3].width }}>\r\n                {row.deposits}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[4].width }}>\r\n                <IconButton\r\n                  aria-label=\"more\"\r\n                  aria-controls=\"long-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {options.map((option, key) => (\r\n                    <MenuItem\r\n                      key={key}\r\n                      //   selected={option === \"Pyxis\"}\r\n                      onClick={handleClose}\r\n                    >\r\n                      <Link to={option.link} className=\"item__option\">\r\n                        {option.icon}\r\n                        {option.title}\r\n                      </Link>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\AddUser\\addUserValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\AddUser\\useFormAddUser.js",["1399","1400"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst useFormAddUser = (handleSubmission, SignInValidator) => {\r\n  const [addUserValue, setAddUserValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"internal\",\r\n    profile_picture: \"null\",\r\n    preview_Image: \"\",\r\n    permissions: {\r\n      view_microorganism_permission: false,\r\n      add_microorganism_permission: false,\r\n      delete_microorganism_permission: false,\r\n      update_microorganism_permission: false,\r\n      view_order_permission: false,\r\n      add_order_permission: false,\r\n      delete_order_permission: false,\r\n      update_order_permission: false,\r\n      view_deposit_permission: false,\r\n      add_deposit_permission: false,\r\n      delete_deposit_permission: false,\r\n      update_deposit_permission: false,\r\n      view_user_permission: false,\r\n      add_user_permission: false,\r\n      delete_user_permission: false,\r\n      update_user_permission: false,\r\n      view_report_permission: false,\r\n      add_report_permission: false,\r\n      delete_report_permission: false,\r\n      update_report_permission: false,\r\n      view_log_permission: false,\r\n      add_log_permission: false,\r\n      delete_log_permission: false,\r\n      update_log_permission: false,\r\n    },\r\n  });\r\n\r\n  const [addUserErrors, setaddUserErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleAddUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    setaddUserErrors(SignInValidator(addUserValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(addUserErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [addUserErrors]);\r\n\r\n  const updateAddUser = (e) => {\r\n    if (e.target.type === \"text\" || e.target.type === \"password\") {\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else if (e.target.type === \"file\") {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onloadend = () => {\r\n        setAddUserValue({\r\n          ...addUserValue,\r\n          profile_picture: e.target.files[0],\r\n          preview_Image: reader.result,\r\n        });\r\n      };\r\n    } else if (e.target.type === \"checkbox\") {\r\n      //   alert(e.target.name);\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        permissions: {\r\n          ...addUserValue.permissions,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return { addUserValue, handleAddUserSubmit, updateAddUser, addUserErrors };\r\n};\r\n\r\nexport default useFormAddUser;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Status\\index.js",["1401"],"import React from 'react';\r\nimport './style.css';\r\n\r\nconst Status = (props) => {\r\n  const completed = 'rgb(5, 168, 5)';\r\n  const pending = 'rgb(201, 158, 79)';\r\n  const cancelled = 'red';\r\n\r\n  const getColor = () => {\r\n    if (props.status.toLowerCase() == 'completed') {\r\n      return completed;\r\n    }\r\n    if (props.status.toLowerCase() === 'pending') {\r\n      return pending;\r\n    }\r\n    if (props.status.toLowerCase() === 'cancelled') {\r\n      return cancelled;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n           \r\n            <span className=\"status-color\" style={{\r\n              backgroundColor: `${\r\n                getColor()\r\n              }`\r\n            }}></span>\r\n      <span style={{ color: `${getColor()}` }}>{props.status}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js",["1402"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepOneForm = (initialValue, handleSubmission, StepOneValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepOneValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepOneForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js",["1403"],"const getCurrentDate = (seperator = '-') => {\r\n  let newDate = new Date();\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth() + 1;\r\n  let year = newDate.getFullYear();\r\n\r\n  return `${year}${seperator}${month}${seperator}${date}`;\r\n};\r\n\r\nconst StepOneValidator = (value) => {\r\n  let errors = {};\r\n  if (!value.Genus.trim()) {\r\n    errors.Genus = 'Genus cannot be empty';\r\n  }\r\n  if (!value.AccessionNumber.trim()) {\r\n    errors.AccessionNumber = 'Accession Number cannot be empty';\r\n  }\r\n  if (!value.SpeciesEpithet.trim()) {\r\n    errors.SpeciesEpithet = 'Species Epithet cannot be empty';\r\n  }\r\n  if (!value.Author.trim()) {\r\n    errors.Author = 'Author cannot be empty';\r\n  }\r\n  if (!value.OrganismType.trim()) {\r\n    errors.OrganismType = 'One of the Organism Type must be selected';\r\n  }\r\n  if (!value.HistoryOfDeposit.trim()) {\r\n    errors.HistoryOfDeposit = 'History of Deposit cannot be empty';\r\n  }\r\n  if (!value.DateOfIsolation.trim()) {\r\n    errors.DateOfIsolation = 'Date of Isolation cannot be empty';\r\n  }\r\n  if (!value.IsolatedFrom.trim()) {\r\n    errors.IsolatedFrom = 'Isolated From cannot be empty';\r\n  }\r\n  if (!value.GeographicOrigin.trim()) {\r\n    errors.GeographicOrigin = 'Geographic Origin cannot be empty';\r\n  }\r\n  if (!value.Status.trim()) {\r\n    errors.Status = 'One of the Status must be selected';\r\n  }\r\n\r\n  if (!value.Medium.trim()) {\r\n    errors.Medium = 'Medium cannot be empty';\r\n  }\r\n  if (!value.OptimumGrowthTemperature.trim()) {\r\n    errors.OptimumGrowthTemperature =\r\n      'Optimum Growth Temperature cannot be empty';\r\n  }\r\n  if (!value.MaximumGrowthTemperature.trim()) {\r\n    errors.MaximumGrowthTemperature =\r\n      'Maximum Growth Temperature cannot be empty';\r\n  }\r\n  if (!value.MinimumGrowthTemperature.trim()) {\r\n    errors.MinimumGrowthTemperature =\r\n      'Minimum Growth Temperature cannot be empty';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default StepOneValidator;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["1404"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepTwelveForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepTwelveValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwelveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwelveForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js",["1405"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepElevenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepElevenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepElevenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepElevenForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["1406"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepTenForm = (initialValue, handleSubmission, StepTenValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTenForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js",["1407"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepTwoForm = (initialValue, handleSubmission, StepTwoValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwoValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwoForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["1408"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepFourForm = (initialValue, handleSubmission, StepFourValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFourValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFourForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js",["1409"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepThreeForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThreeValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThreeValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThreeForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["1410"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepThirteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThirteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThirteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThirteenForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js",["1411"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepEightForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepEightValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepEightValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepEightForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js",["1412"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepFourteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepFourteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFourteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFourteenForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Modals\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\TagInput\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js",["1413"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepFiveForm = (initialValue, handleSubmission, StepFiveValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFiveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFiveForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["1414"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepSevenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepSevenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepSevenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepSevenForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["1415"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepNineForm = (initialValue, handleSubmission, StepNineValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepNineValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepNineForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js",["1416"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepSixForm = (InitialValue, handleSubmission, StepSixValidator) => {\r\n  const [value, setValue] = useState(InitialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepSixValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepSixForm;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Layout\\SidebarData.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\SideBar\\sidebardata.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Header\\index.js",["1417"],"import ShoppingCartIcon                                      from '@material-ui/icons/ShoppingCart';\r\nimport React, { useEffect, useState }                        from 'react';\r\nimport { Container, Dropdown, DropdownButton, Nav, Navbar, } from 'react-bootstrap';\r\nimport { CgLogOut }                                          from 'react-icons/cg';\r\nimport { RiDashboardLine }                                   from 'react-icons/ri';\r\nimport { useDispatch, useSelector }                          from 'react-redux';\r\nimport { Link }                                              from 'react-router-dom';\r\nimport { logout }                                            from '../../actions';\r\nimport './style.css';\r\n\r\nconst Header = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const cart_size = useSelector((state) => state.cart.size);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart_size);\r\n  }, [cart_size]);\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Header>\r\n            <b>Noor Muhammad</b>\r\n          </Dropdown.Header>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item>\r\n            <RiDashboardLine style={{ marginRight: '10px' }} />\r\n            <Link to=\"/dashboard\">Dashboard</Link>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              logUserOut();\r\n            }}\r\n          >\r\n            <CgLogOut style={{ marginRight: '10px' }} />\r\n            Logout\r\n          </Dropdown.Item>\r\n          <ShoppingCartIcon />\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const loggedOutNavLinks = () => {\r\n    return (\r\n      <>\r\n        <Nav.Link href=\"/signin\">Signin</Nav.Link>\r\n        <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n        <Nav.Link href=\"/cart\" id=\"shopping-cart-box\">\r\n          <div>\r\n            <ShoppingCartIcon id=\"shopping-cart-icon\" />\r\n          </div>\r\n          {cart_size > 0 ? (\r\n            <div id=\"shopping-cart-number\">{`${cart_size}`}</div>\r\n          ) : null}\r\n        </Nav.Link>\r\n\r\n        <Nav.Link href=\"/catalogue\">Catalogue</Nav.Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const logUserOut = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar\r\n        variant=\"dark\"\r\n        style={{ backgroundColor: '#212529', zIndex: 1 }}\r\n        expand=\"lg\"\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/\">NCCP Information System</Navbar.Brand>\r\n          <Nav>\r\n            {useSelector((state) => state.auth.token)\r\n              ? loggedInNavLinks()\r\n              : loggedOutNavLinks()}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\CustomTable\\index.js",["1418","1419"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\order.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\orders.reducer.js",["1420","1421","1422","1423"],"import { authConstants } from \"../actions/constants\";\r\nimport auth from \"./auth.reducers\";\r\n\r\nconst initialState = {\r\n  deleteOrder: {\r\n    deleting: false,\r\n    deleted: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  create_order: {\r\n    items: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  confirm_order_delivery: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  submit_order_files: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  admin_order_reject: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  approve_order_document: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  reject_order_document: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  submit_tracking_number: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  change_admin_order_status: {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  getOrders: {\r\n    orders: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  getOrderDetails: {\r\n    order: {},\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  fetching: false,\r\n  fetched: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.GET_ORDERS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        getOrders: {\r\n          ...state.getOrders,\r\n          orders: [],\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_ORDERS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        getOrders: {\r\n          ...state.getOrders,\r\n          orders: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_ORDERS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        getOrders: {\r\n          ...state.getOrders,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_ORDER_DETAILS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        getOrderDetails: {\r\n          ...state.getOrderDetails,\r\n          order: [],\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_ORDER_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        getOrderDetails: {\r\n          ...state.getOrderDetails,\r\n          order: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_ORDER_DETAILS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        getOrderDetails: {\r\n          ...state.getOrderDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CHANGE_ADMIN_ORDER_STATUS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        change_admin_order_status: {\r\n          ...state.change_admin_order_status,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CHANGE_ADMIN_ORDER_STATUS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        change_admin_order_status: {\r\n          ...state.change_admin_order_status,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CHANGE_ADMIN_ORDER_STATUS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        change_admin_order_status: {\r\n          ...state.change_admin_order_status,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CHANGE_ADMIN_ORDER_STATUS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        change_admin_order_status: {\r\n          ...state.change_admin_order_status,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CHANGE_ADMIN_ORDER_STATUS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        change_admin_order_status: {\r\n          ...state.change_admin_order_status,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CHANGE_ADMIN_ORDER_STATUS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        change_admin_order_status: {\r\n          ...state.change_admin_order_status,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.APPROVE_ORDER_DOCUMENT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        approve_order_document: {\r\n          ...state.approve_order_document,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.APPROVE_ORDER_DOCUMENT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        approve_order_document: {\r\n          ...state.approve_order_document,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.APPROVE_ORDER_DOCUMENT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        approve_order_document: {\r\n          ...state.approve_order_document,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.REJECT_ORDER_DOCUMENT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        reject_order_document: {\r\n          ...state.reject_order_document,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.REJECT_ORDER_DOCUMENT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        reject_order_document: {\r\n          ...state.reject_order_document,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.REJECT_ORDER_DOCUMENT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        reject_order_document: {\r\n          ...state.reject_order_document,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_ORDER_TRACKING_REQUEST:\r\n      state = {\r\n        ...state,\r\n        submit_tracking_number: {\r\n          ...state.submit_tracking_number,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_ORDER_TRACKING_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        submit_tracking_number: {\r\n          ...state.submit_tracking_number,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_ORDER_TRACKING_FAILURE:\r\n      state = {\r\n        ...state,\r\n        submit_tracking_number: {\r\n          ...state.submit_tracking_number,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_ORDER_FILE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        submit_order_files: {\r\n          ...state.submit_order_files,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_ORDER_FILE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        submit_order_files: {\r\n          ...state.submit_order_files,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_ORDER_FILE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        submit_order_files: {\r\n          ...state.submit_order_files,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CONFIRM_ORDER_DELIVERY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        confirm_order_delivery: {\r\n          ...state.confirm_order_delivery,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CONFIRM_ORDER_DELIVERY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        confirm_order_delivery: {\r\n          ...state.confirm_order_delivery,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CONFIRM_ORDER_DELIVERY_FAILURE:\r\n      state = {\r\n        ...state,\r\n        confirm_order_delivery: {\r\n          ...state.confirm_order_delivery,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CREATE_ORDER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        create_order: {\r\n          ...state.create_order,\r\n          items: action.payload.data,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CREATE_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        create_order: {\r\n          ...state.create_order,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CREATE_ORDER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        create_order: {\r\n          ...state.create_order,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ORDER_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        deleteOrder: {\r\n          ...state.deleteOrder,\r\n          deleted: false,\r\n          deleting: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ORDER_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        deleteOrder: {\r\n          ...state.deleteOrder,\r\n          deleted: true,\r\n          deleting: false,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ORDER_DELETE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        deleteOrder: {\r\n          ...state.deleteOrder,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      state = initialState;\r\n  }\r\n  return state;\r\n};\r\nexport default orderReducer;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\deposit.reducers.js",["1424"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  deleteDeposit: {\r\n    deleting: false,\r\n    deleted: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  depositDetails: {\r\n    data: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  getDeposits: {\r\n    deposits: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  fetching: false,\r\n  fetched: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nconst depositReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.GET_DEPOSITS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        getDeposits: {\r\n          ...state.getDeposits,\r\n          deposits: [],\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_DEPOSITS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        getDeposits: {\r\n          ...state.getDeposits,\r\n          deposits: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_DEPOSITS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        getDeposits: {\r\n          ...state.getDeposits,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CREATE_DEPOSIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetched: false,\r\n        fetching: true,\r\n        error: {\r\n          found: false,\r\n          code: 0,\r\n          message: \"\",\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CREATE_DEPOSIT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetched: true,\r\n        fetching: false,\r\n      };\r\n      break;\r\n    case authConstants.CREATE_DEPOSIT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched: false,\r\n        error: {\r\n          found: true,\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_DEPOSIT_DETAILS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n\r\n      break;\r\n    case authConstants.GET_DEPOSIT_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          data: action.payload.data,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.GET_DEPOSIT_DETAILS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ADMIN_APPROVE_DEPOSIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ADMIN_APPROVE_DEPOSIT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.ADMIN_APPROVE_DEPOSIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n\r\n    case authConstants.APPROVE_DEPOSIT_DOCUMENT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.APPROVE_DEPOSIT_DOCUMENT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.APPROVE_DEPOSIT_DOCUMENT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.REJECT_DEPOSIT_DOCUMENT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.REJECT_DEPOSIT_DOCUMENT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.REJECT_DEPOSIT_DOCUMENT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_DEPOSIT_TRACKING_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_DEPOSIT_TRACKING_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_DEPOSIT_TRACKING_FAILURE:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_DEPOSIT_FILE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_DEPOSIT_FILE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.SUBMIT_DEPOSIT_FILE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CONFIRM_DEPOSIT_DELIVERY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: false,\r\n          fetching: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CONFIRM_DEPOSIT_DELIVERY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetched: true,\r\n          fetching: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CONFIRM_DEPOSIT_DELIVERY_FAILURE:\r\n      state = {\r\n        ...state,\r\n        depositDetails: {\r\n          ...state.depositDetails,\r\n          fetching: false,\r\n          fetched: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.DEPOSIT_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        deleteDeposit: {\r\n          ...state.deleteDeposit,\r\n          deleted: false,\r\n          deleting: true,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.DEPOSIT_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        deleteDeposit: {\r\n          ...state.deleteDeposit,\r\n          deleted: true,\r\n          deleting: false,\r\n          error: {\r\n            found: false,\r\n            code: 0,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.DEPOSIT_DELETE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        deleteDeposit: {\r\n          ...state.deleteDeposit,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            found: true,\r\n            code: action.payload.status,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      state = initialState;\r\n  }\r\n  return state;\r\n};\r\nexport default depositReducer;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\deposit.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Microorganisms\\index.js",["1425","1426"],"import React, { useState } from \"react\";\r\nimport { Button, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport DropDown from \"../../../components/DropDown\";\r\nimport SideBar from \"../../../components/SideBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getDeposits, getMicroorganisms } from \"actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboardMicroorganisms = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  // const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const catalogue = useSelector((state) => state.catalogue);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMicroorganisms());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogue.getMicroorganisms.microorganisms || []);\r\n  }, [catalogue]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.microorganism_id\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(query.toLowerCase()) > -1 ||\r\n            row.genus.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1 ||\r\n            row.species_epithet\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Microorganisms are being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (catalogue.getMicroorganisms.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (catalogue.getMicroorganisms.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(catalogue.getMicroorganisms.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const catalogue_table_head = [\r\n    {\r\n      id: \"microorganism_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Microorganism ID\",\r\n    },\r\n    {\r\n      id: \"genus\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Genus\",\r\n    },\r\n    {\r\n      id: \"species_epithet\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Species Epithet\",\r\n    },\r\n    {\r\n      id: \"organism_type\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Organism Type\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Type/Non-Type\",\r\n    },\r\n    {\r\n      id: \"bio_hazard_level\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Bio Hazard Level\",\r\n    },\r\n  ];\r\n  const onRowsDelete = (values) => {\r\n    alert(`These values were requested to be deleted ${values}`);\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Catalogue\">\r\n      <div style={{ minHeight: \"87.3vh\" }}>\r\n        <Grid container spacing={2} style={{ margin: \"1rem 0\" }}>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n            <DropDown\r\n              title=\"Status\"\r\n              value={filter}\r\n              setValue={setFilter}\r\n              variant=\"outlined\"\r\n              labelWidth={60}\r\n              width=\"100%\"\r\n              // margin=\"dense\"\r\n              data={[\r\n                {\r\n                  title: \"Bacteria\",\r\n                  value: \"Bacteria\",\r\n                },\r\n                {\r\n                  title: \"Fungi\",\r\n                  value: \"Fungi\",\r\n                },\r\n                {\r\n                  title: \"Antibody\",\r\n                  value: \"Antibody\",\r\n                },\r\n                {\r\n                  title: \"Archaea\",\r\n                  value: \"Archaea\",\r\n                },\r\n                {\r\n                  title: \"Microalgae\",\r\n                  value: \"Microalgae\",\r\n                },\r\n                {\r\n                  title: \"Phage\",\r\n                  value: \"Phage\",\r\n                },\r\n                {\r\n                  title: \"Virus\",\r\n                  value: \"Virus\",\r\n                },\r\n                {\r\n                  title: \"Yeast\",\r\n                  value: \"Yeast\",\r\n                },\r\n              ]}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={9}\r\n            md={9}\r\n            sm={12}\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <SearchBar\r\n              width=\"100%\"\r\n              // margin=\"dense\"\r\n              query={query}\r\n              setQuery={setQuery}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Grid container lg sm md xs spacing={3}>\r\n        <Grid\r\n          item\r\n          lg={2}\r\n          md={2}\r\n          sm={12}\r\n          xs={12}\r\n          style={{\r\n            padding: \"0\",\r\n            display: \"flex\",\r\n            // justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"100%\"\r\n            margin=\"dense\"\r\n            data={[\r\n              {\r\n                title: \"Bacteria\",\r\n                value: \"Bacteria\",\r\n              },\r\n              {\r\n                title: \"Fungi\",\r\n                value: \"Fungi\",\r\n              },\r\n              {\r\n                title: \"Antibody\",\r\n                value: \"Antibody\",\r\n              },\r\n              {\r\n                title: \"Archaea\",\r\n                value: \"Archaea\",\r\n              },\r\n              {\r\n                title: \"Microalgae\",\r\n                value: \"Microalgae\",\r\n              },\r\n              {\r\n                title: \"Phage\",\r\n                value: \"Phage\",\r\n              },\r\n              {\r\n                title: \"Virus\",\r\n                value: \"Virus\",\r\n              },\r\n              {\r\n                title: \"Yeast\",\r\n                value: \"Yeast\",\r\n              },\r\n            ]}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          md={6}\r\n          sm={12}\r\n          xs={12}\r\n          // style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <SearchBar query={query} setQuery={setQuery} />\r\n        </Grid>\r\n        <Grid item lg={2} md={2} sm={12} xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            + Add Microorganism\r\n          </Button>\r\n        </Grid>\r\n      </Grid> */}\r\n        {/* <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Bacteria\",\r\n                value: \"Bacteria\",\r\n              },\r\n              {\r\n                title: \"Fungi\",\r\n                value: \"Fungi\",\r\n              },\r\n              {\r\n                title: \"Antibody\",\r\n                value: \"Antibody\",\r\n              },\r\n              {\r\n                title: \"Archaea\",\r\n                value: \"Archaea\",\r\n              },\r\n              {\r\n                title: \"Microalgae\",\r\n                value: \"Microalgae\",\r\n              },\r\n              {\r\n                title: \"Phage\",\r\n                value: \"Phage\",\r\n              },\r\n              {\r\n                title: \"Virus\",\r\n                value: \"Virus\",\r\n              },\r\n              {\r\n                title: \"Yeast\",\r\n                value: \"Yeast\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div> */}\r\n        <div style={{ marginTop: \"2rem\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              margin: \"0.5rem 0\",\r\n            }}\r\n          >\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              <Link\r\n                to=\"/adminDashboard/addMicroorganism\"\r\n                style={{ color: \"white\", textDecoration: \"none\" }}\r\n              >\r\n                + Add Microorganism\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n          <CustomTable\r\n            head={catalogue_table_head}\r\n            rows={search(data)}\r\n            type=\"Microorganisms\"\r\n            onDelete={onRowsDelete}\r\n            showDetails={\"/adminDashboard/MicroorganismDetails\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardMicroorganisms;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\PermissionData.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DepositPayment.js",["1427"],"import Paper          from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table          from '@material-ui/core/Table';\r\nimport TableBody      from '@material-ui/core/TableBody';\r\nimport TableCell      from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead      from '@material-ui/core/TableHead';\r\nimport TableRow       from '@material-ui/core/TableRow';\r\nimport React          from 'react';\r\nimport { Button }     from 'react-bootstrap';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles({\r\n                               table: {\r\n                                 minWidth: 700,\r\n\r\n                               },\r\n                             });\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('coccus', 5, 1.15),\r\n  createRow('sarcinae', 3, 45.99),\r\n  createRow('staphylococci', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function () {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer style={styles.tablecontainerstyling}\r\n\r\n\r\n                    component={Paper}>\r\n      <Table style={\r\n        styles.tablestyling\r\n      }\r\n\r\n\r\n             className={classes.table} aria-label=\"spanning table\">\r\n\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Payment invoice\r\n            </TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Deposit</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Microorganism Name</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">Unit</TableCell>\r\n            <TableCell align=\"right\">Sum</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n              <TableCell align=\"right\">{row.type}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n        <div style={styles.buttoncontainer}>\r\n          <Button style={styles.buttoncontainerinner}>\r\n            Pay with Credit/Debit Card\r\n          </Button>\r\n        </div>\r\n\r\n\r\n      </Table>\r\n\r\n    </TableContainer>\r\n\r\n  );\r\n}\r\n\r\nconst styles = {\r\n\r\n  // tablestyling:{\r\n\r\n  // //   border: '1px solid red',\r\n  //   width: 800,\r\n\r\n  // },\r\n\r\n  tablestyling: {\r\n    width: 900\r\n\r\n  },\r\n\r\n  tablecontainerstyling: {\r\n\r\n    // border: '1px solid red',\r\n    height   : 500,\r\n    marginTop: 10,\r\n    width    : 1000\r\n  },\r\n\r\n  buttoncontainer     : {\r\n\r\n    display       : 'flex-right',\r\n    justifyContent: 'flex-end',\r\n    alignItems    : 'center',\r\n\r\n  },\r\n  buttoncontainerinner: {\r\n    fontSize  : 10,\r\n    background: 'sky-blue',\r\n  }\r\n\r\n};\r\n\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderRejectDesciption.js",["1428"],"import React from \"react\";\r\n\r\nconst OrderRejectDescription = (props) => {\r\n  return (\r\n    <>\r\n      <h6>Your order has been rejected because of the following reasons:</h6>\r\n      <h6>Reason:</h6>\r\n      <p>{props.description || \"not given\"}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderRejectDescription;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\DocumentSubmission.js",["1429","1430","1431","1432","1433","1434"],"import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TableRow,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CollapsableTableRow(props) {\r\n  const { item, index, onApprove, onReject } = props;\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const getAction = (status) => {\r\n    if (status) {\r\n      switch (status.toLowerCase()) {\r\n        case \"awaiting submission\":\r\n          return \"Awaiting Submission\";\r\n        case \"awaiting approval\":\r\n          return (\r\n            <>\r\n              <Button color=\"primary\" onClick={() => onApprove(item._id)}>\r\n                Approve\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  setCollapse(!collapse);\r\n                }}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </>\r\n          );\r\n        case \"approved\":\r\n          return \"approved\";\r\n        case \"rejected\":\r\n          return \"rejected\";\r\n        default:\r\n          return \"dont know\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell key={index}>{index + 1}</TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {item[\"title\"]}\r\n        </TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          <a href={item[\"document\"]} target=\"_blank\">\r\n            Click Here\r\n          </a>\r\n        </TableCell>\r\n        <TableCell key={index} align=\"center\" padding=\"default\">\r\n          {getAction(item.approved)}\r\n          {/* {item.approved == null ? (\r\n            \"asc\"\r\n          ) : (\r\n            <>{item.approved ? \"Approved\" : \"Rejected\"}</>\r\n          )} */}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={collapse} timeout=\"auto\" unmountOnExit>\r\n            <Toolbar>Give the reasons for this rejection</Toolbar>\r\n            <TextField\r\n              multiline\r\n              rows={4}\r\n              value={description}\r\n              variant=\"outlined\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n            <div style={{ margin: \"1rem 0\" }}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => onReject(item._id, description)}\r\n              >\r\n                Confirm\r\n              </Button>\r\n              <Button color=\"primary\" onClick={(e) => setCollapse(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\nconst DocumentSubmission = (props) => {\r\n  const { documents, onApprove, onReject } = props;\r\n  const [collapse, setCollapse] = useState(false);\r\n  const headers = [\r\n    \"title\",\r\n    \"document\",\r\n    // {\r\n    //   value:\"title\",\r\n    //   title:\"Title\",\r\n    // },\r\n    // {\r\n    //   value:\"document\",\r\n    //   title:\"Link\",\r\n    // }\r\n  ];\r\n  return (\r\n    <>\r\n      <Toolbar>\r\n        The following documents have been submitted by the client\r\n      </Toolbar>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"medium\" variant=\"\">\r\n          <TableHead>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              id\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Title\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Link\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Actions\r\n            </TableCell>\r\n          </TableHead>\r\n          <TableBody>\r\n            {documents &&\r\n              documents.map((item, index) => {\r\n                return (\r\n                  <>\r\n                    <CollapsableTableRow\r\n                      item={item}\r\n                      index={index}\r\n                      onApprove={onApprove}\r\n                      onReject={onReject}\r\n                    />\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentSubmission;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderDispatched.js",["1435"],"import { Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst OrderDispatched = (props) => {\r\n  const { onConfirm } = props;\r\n  return (\r\n    <div>\r\n      <h6>\r\n        This order has been processed and dispatched to the provided address.\r\n        Check the current status of the delivery using the following tracking id\r\n      </h6>\r\n\r\n      <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\r\n        <Typography component=\"h6\" color=\"primary\">\r\n          {`Tracking:  `}\r\n        </Typography>\r\n        <span style={{ marginLeft: \"1rem\" }}>\r\n          {props.tracking || \"not provided\"}\r\n        </span>\r\n      </div>\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"1rem\" }}\r\n      >\r\n        If you have recieved the requested order. Click below to confirm its\r\n        delivery\r\n        <Button\r\n          color=\"primary\"\r\n          style={{ marginTop: \"1rem\" }}\r\n          variant=\"contained\"\r\n          onClick={onConfirm}\r\n        >\r\n          Delivered\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDispatched;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\OrderDelivered.js",["1436"],"import React from \"react\";\r\n\r\nconst OrderDelivered = (props) => {\r\n  return <h5>This order has been delivered successfully</h5>;\r\n};\r\n\r\nexport default OrderDelivered;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\OrderRequest\\index.js",["1437","1438"],"import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst OrderRequest = (props) => {\r\n  const { id, description, onApprove, onReject, data } = props;\r\n  const items = props.data;\r\n  const headers = items && Object.keys(items[0]);\r\n  const [orderRejected, setOrderRejected] = useState(false);\r\n  const [cancle_description, setCancelDescription] = useState(\"\");\r\n  const handleOrderReject = () => {\r\n    setOrderRejected(true);\r\n  };\r\n\r\n  const handleRejectCancel = () => {\r\n    setOrderRejected(false);\r\n  };\r\n\r\n  const handleRequestApproval = () => {\r\n    onApprove();\r\n  };\r\n\r\n  const handleRequestRejection = () => {\r\n    onReject(cancle_description);\r\n  };\r\n  return (\r\n    <>\r\n      <Toolbar>The following items have been requested</Toolbar>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"medium\" variant=\"\">\r\n          <TableHead>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              id\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Genus\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Species\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Quantity\r\n            </TableCell>\r\n          </TableHead>\r\n          <TableBody>\r\n            {items &&\r\n              items.map((item, index) => {\r\n                return (\r\n                  <>\r\n                    <TableCell key={index} align=\"center\" padding=\"default\">\r\n                      {index + 1}\r\n                    </TableCell>\r\n\r\n                    {headers.map((head, i) => {\r\n                      return (\r\n                        <TableCell key={i} align=\"center\" padding=\"default\">\r\n                          {item[head]}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Toolbar>\r\n        Here is the description of the order that the user provided\r\n      </Toolbar>\r\n      <TextField\r\n        multiline\r\n        disabled\r\n        value={description || \"User has given not description\"}\r\n        variant=\"outlined\"\r\n        rows={4}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n      <div>\r\n        <Button color=\"primary\" onClick={handleRequestApproval}>\r\n          Approve\r\n        </Button>\r\n        <Button color=\"secondary\" onClick={handleOrderReject}>\r\n          Reject\r\n        </Button>\r\n      </div>\r\n      {orderRejected && (\r\n        <div>\r\n          <Toolbar>Give the reasons for this rejection</Toolbar>\r\n          <TextField\r\n            multiline\r\n            value={cancle_description}\r\n            onChange={(e) => setCancelDescription(e.target.value)}\r\n            variant=\"outlined\"\r\n            name=\"rejection_description\"\r\n            rows={4}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <div style={{ marginTop: \"1rem\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleRequestRejection}\r\n            >\r\n              Confirm\r\n            </Button>\r\n            <Button color=\"primary\" onClick={handleRejectCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderRequest;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Payment\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Processing\\index.js",["1439"],"import { Button, TextField, Toolbar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Processing = (props) => {\r\n  const { onSubmitTracking } = props;\r\n  const [trackingNumber, setTrackingNumber] = useState(\"\");\r\n  return (\r\n    <>\r\n      The order is currently in the processing phase\r\n      <div style={{ marginTop: \"1rem\" }}>\r\n        <p>\r\n          In order to move to the next stage, submit the tracking number of the\r\n          dispatched order below\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <TextField\r\n            value={trackingNumber}\r\n            variant=\"outlined\"\r\n            onChange={(e) => setTrackingNumber(e.target.value)}\r\n            label=\"Tracking Number\"\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={trackingNumber <= 0}\r\n            onClick={(e) => onSubmitTracking(trackingNumber)}\r\n            style={{ marginLeft: \"1rem\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Processing;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Rejected\\index.js",["1440"],"import { Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Rejected = (props) => {\r\n  const { description } = props;\r\n  return (\r\n    <>\r\n      <Typography component=\"p\" style={{ marginBottom: \"1rem\" }}>\r\n        Your order has been rejected due to the following reason:\r\n      </Typography>\r\n      {description}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rejected;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminOrderDetailsScreens\\Delivered\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserOrderDetails\\index.js",["1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Delivered\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Payment\\index.js",["1454","1455"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Modal,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nconst Payment = (props) => {\r\n  const { data, onPayment } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [token, setToken] = useState(\"\");\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handlePayment = (token) => {\r\n    setOpenModal(true);\r\n    setToken(token);\r\n  };\r\n\r\n  const checkPayment = () => {\r\n    if (address.length > 0) {\r\n      onPayment(token, address);\r\n    }\r\n    setError(true);\r\n  };\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align=\"right\">Price ($)</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.items &&\r\n            data.items.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"left\">{row.microorganism_name}</TableCell>\r\n                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {row.sub_total && row.sub_total.toFixed(2)}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n        <TableRow>\r\n          <TableCell rowSpan={4} />\r\n          <TableCell colSpan={2}>SubTotal</TableCell>\r\n          <TableCell align=\"right\">\r\n            {data.total && data.total.toFixed(2)}\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"left\">Tax</TableCell>\r\n          <TableCell align=\"right\">0%</TableCell>\r\n          <TableCell align=\"right\">{0}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"left\">Total</TableCell>\r\n          <TableCell colSpan={2} align=\"right\">\r\n            {data.total && data.total.toFixed(2)}\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell colSpan={3} align=\"right\">\r\n            <StripeCheckout\r\n              stripeKey=\"pk_test_51IhcBtCueTz3N4RSq2lZieK9Wh8cD7XR2KlScdCDyfyuCcnjbj6RzGbaoxUtIOHxDAruTsgTTuFWKz1lcSj7YlO60066rgWObx\"\r\n              token={handlePayment}\r\n              amount={data.total * 100}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Pay with Credit/Debit card\r\n              </Button>\r\n            </StripeCheckout>\r\n          </TableCell>\r\n        </TableRow>\r\n      </Table>\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleModalClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add an address of the place where you would like to ship these\r\n            samples to.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            error={error}\r\n            helperText={\"Address cannot be empty\"}\r\n            margin=\"dense\"\r\n            required\r\n            id=\"addresss\"\r\n            label=\"Address\"\r\n            type=\"email\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleModalClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={checkPayment} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\OrderRequest\\index.js",["1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473"],"import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst OrderRequest = (props) => {\r\n  const { id, description, onApprove, onReject, data } = props;\r\n  const items = props.data;\r\n  const headers = items && Object.keys(items[0]);\r\n  const [orderRejected, setOrderRejected] = useState(false);\r\n  const [cancle_description, setCancelDescription] = useState(\"\");\r\n  const handleOrderReject = () => {\r\n    setOrderRejected(true);\r\n  };\r\n\r\n  const handleRejectCancel = () => {\r\n    setOrderRejected(false);\r\n  };\r\n\r\n  const handleRequestApproval = () => {\r\n    onApprove();\r\n  };\r\n\r\n  const handleRequestRejection = () => {\r\n    onReject(cancle_description);\r\n  };\r\n  return (\r\n    <>\r\n      <Toolbar>{props.message}</Toolbar>\r\n      {/* <TableContainer component={Paper}>\r\n        <Table size=\"medium\" variant=\"\">\r\n          <TableHead>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              id\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Genus\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Species\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Quantity\r\n            </TableCell>\r\n          </TableHead>\r\n          <TableBody>\r\n            {items &&\r\n              items.map((item, index) => {\r\n                return (\r\n                  <>\r\n                    <TableCell key={index} align=\"center\" padding=\"default\">\r\n                      {index + 1}\r\n                    </TableCell>\r\n\r\n                    {headers.map((head, i) => {\r\n                      return (\r\n                        <TableCell key={i} align=\"center\" padding=\"default\">\r\n                          {item[head]}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Toolbar>\r\n        Here is the description of the order that the user provided\r\n      </Toolbar>\r\n      <TextField\r\n        multiline\r\n        disabled\r\n        value={description || \"User has given not description\"}\r\n        variant=\"outlined\"\r\n        rows={4}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n      <div>\r\n        <Button color=\"primary\" onClick={handleRequestApproval}>\r\n          Approve\r\n        </Button>\r\n        <Button color=\"secondary\" onClick={handleOrderReject}>\r\n          Reject\r\n        </Button>\r\n      </div>\r\n      {orderRejected && (\r\n        <div>\r\n          <Toolbar>Give the reasons for this rejection</Toolbar>\r\n          <TextField\r\n            multiline\r\n            value={cancle_description}\r\n            onChange={(e) => setCancelDescription(e.target.value)}\r\n            variant=\"outlined\"\r\n            name=\"rejection_description\"\r\n            rows={4}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <div style={{ marginTop: \"1rem\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleRequestRejection}\r\n            >\r\n              Confirm\r\n            </Button>\r\n            <Button color=\"primary\" onClick={handleRejectCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderRequest;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Processing\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Rejected\\index.js",["1474"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserOrderDetailsComponents\\Document Submission\\index.js",["1475","1476","1477","1478","1479","1480","1481","1482"],"import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TableRow,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CollapsableTableRow(props) {\r\n  const {\r\n    item,\r\n    index,\r\n    onSubmit,\r\n    files,\r\n    setFiles,\r\n    document_ids,\r\n    setDocument_ids,\r\n  } = props;\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  const uploadFile = (e, id) => {\r\n    const mod_files = files.filter((file) => {\r\n      return file !== e.target.files[0];\r\n    });\r\n    setFiles([...mod_files, e.target.files[0]]);\r\n    const mod_ids = document_ids.filter((doc_id) => doc_id != id);\r\n    setDocument_ids([...mod_ids, id]);\r\n    alert(\"file uploaded successfully\");\r\n    // let mod_files = files.map((file)=>{\r\n    //   if(file.document_id===item._id){\r\n    //     file.document=e.target.files[0];\r\n    //   }\r\n    //   return file;\r\n    // });\r\n    // if(mod_files.length===files){\r\n    //   setFiles(mod_files);\r\n    // }\r\n    // else{\r\n    //   setFiles([\r\n    //     ...files,\r\n\r\n    //   ])\r\n    // }\r\n    // setFiles(...files, {\r\n    //   document_id: item._id,\r\n    //   document: e.target.files[0],\r\n    // })\r\n  };\r\n  const getSubmit = (status, id) => {\r\n    if (status) {\r\n      switch (status.toLowerCase()) {\r\n        case \"awaiting submission\":\r\n          // if (files && files.find((file) => file.document_id === id)) {\r\n          //   return (\r\n          //     <Button\r\n          //       variant=\"contained\"\r\n          //       disabled\r\n          //       component=\"label\"\r\n          //       size=\"small\"\r\n          //     >\r\n          //       Uploaded\r\n          //       <input type=\"file\" hidden disabled onChange={uploadFile} />\r\n          //     </Button>\r\n          //   );\r\n          // } else {\r\n          return (\r\n            <Button variant=\"contained\" component=\"label\" size=\"small\">\r\n              Upload File\r\n              <input type=\"file\" hidden onChange={(e) => uploadFile(e, id)} />\r\n            </Button>\r\n          );\r\n        // }\r\n\r\n        case \"awaiting approval\":\r\n          return <p>awaiting approval</p>;\r\n        case \"approved\":\r\n          return \"approved\";\r\n        case \"rejected\":\r\n          return (\r\n            <Button variant=\"contained\" component=\"label\" size=\"small\">\r\n              Upload File\r\n              <input type=\"file\" hidden onChange={(e) => uploadFile(e, id)} />\r\n            </Button>\r\n          );\r\n        default:\r\n          return \"dont know\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getAction = (status) => {\r\n    if (status) {\r\n      switch (status.toLowerCase()) {\r\n        case \"awaiting submission\":\r\n          return (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => onSubmit(files, document_ids)}\r\n            >\r\n              Submit\r\n            </Button>\r\n          );\r\n        case \"awaiting approval\":\r\n          return <p>awaiting approval</p>;\r\n        case \"approved\":\r\n          return \"approved\";\r\n        case \"rejected\":\r\n          return (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => onSubmit(files, document_ids)}\r\n            >\r\n              Submit\r\n            </Button>\r\n          );\r\n        default:\r\n          return \"dont know\";\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell key={index}>{index + 1}</TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {item[\"title\"]}\r\n        </TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {item.approved}\r\n          {item.approved && item.approved.toLowerCase() == \"rejected\" ? (\r\n            <Typography\r\n              component=\"p\"\r\n              display=\"inline\"\r\n              onClick={() => setCollapse(!collapse)}\r\n              style={{\r\n                fontSize: \"12px\",\r\n                cursor: \"pointer\",\r\n                fontWeight: \"bold\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              (Reason)\r\n            </Typography>\r\n          ) : null}\r\n        </TableCell>\r\n        <TableCell key={index} align=\"center\" padding=\"default\">\r\n          {getSubmit(item.approved, item._id)}\r\n          {/* {item.approved == null ? (\r\n            <>\r\n              <Button color=\"primary\" onClick={() => onApprove(item._id)}>\r\n                Approve\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  setCollapse(!collapse);\r\n                }}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>{item.approved ? \"Approved\" : \"Rejected\"}</>\r\n          )} */}\r\n        </TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {getAction(item.approved)}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell style={{ paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={collapse} timeout=\"auto\" unmountOnExit>\r\n            <Toolbar>Document is rejected due to: </Toolbar>\r\n            <TextField\r\n              multiline\r\n              rows={4}\r\n              value={item.description}\r\n              variant=\"outlined\"\r\n              disabled\r\n              style={{ width: \"100%\" }}\r\n            />{\" \"}\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\nconst DocumentSubmission = (props) => {\r\n  const { sampleDocuments, submittedDocuments, onSubmit } = props;\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [document_ids, setDocument_ids] = useState([]);\r\n  const headers = [\r\n    \"title\",\r\n    \"document\",\r\n    // {\r\n    //   value:\"title\",\r\n    //   title:\"Title\",\r\n    // },\r\n    // {\r\n    //   value:\"document\",\r\n    //   title:\"Link\",\r\n    // }\r\n  ];\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>\r\n          You are required to fill and submit the following documents according\r\n          to your order.\r\n        </p>\r\n        {sampleDocuments.map((doc, index) => {\r\n          return (\r\n            <div style={{ margin: \"0.8rem 0\" }} key={index}>\r\n              <span style={{ marginRight: \"1rem\" }}>{`${index + 1}.`}</span>\r\n              <a href={doc.document} target=\"_blank\">\r\n                {doc.title}\r\n              </a>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"3rem\" }}>\r\n        <p>Your submitted documents and their responses</p>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"medium\">\r\n            <TableHead>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                id\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Title\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Status\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Submit\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Action\r\n              </TableCell>\r\n            </TableHead>\r\n            <TableBody>\r\n              {submittedDocuments &&\r\n                submittedDocuments.map((doc, index) => {\r\n                  return (\r\n                    <CollapsableTableRow\r\n                      item={doc}\r\n                      index={index}\r\n                      files={files}\r\n                      document_ids={document_ids}\r\n                      setDocument_ids={setDocument_ids}\r\n                      setFiles={setFiles}\r\n                      onSubmit={onSubmit}\r\n                    />\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentSubmission;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\InformationPages\\Deposit\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\createDeposit\\index.js",["1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493"],"import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { confirmOrderDelivery, createDeposit } from \"actions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport PageHeader from \"components/PageHeader\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { resetWarningCache } from \"prop-types\";\r\n\r\nconst DepositInformationForm = (props) => {\r\n  const { data, setData, errors, setErrors, onAdd } = props;\r\n\r\n  const handleDataChange = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleAdd = () => {\r\n    const heads = Object.keys(data);\r\n    let found_error = false;\r\n    let e = errors;\r\n    for (let head in heads) {\r\n      const name = heads[head];\r\n      if (data[heads[head]] === \"\" && head != \"quantity\") {\r\n        e[name] = true;\r\n        found_error = true;\r\n      } else {\r\n        e[name] = false;\r\n      }\r\n    }\r\n    if (!found_error) {\r\n      onAdd();\r\n    }\r\n    console.log(e);\r\n    setErrors({ ...e });\r\n  };\r\n\r\n  const styles = {\r\n    informationContainer: {\r\n      margin: \"0.4rem\",\r\n    },\r\n    button: {\r\n      padding: \"0.4rem 2rem\",\r\n      margin: \"1rem 0\",\r\n    },\r\n  };\r\n  return (\r\n    <Grid container spacing={3} lg md sm xs style={styles.informationContainer}>\r\n      <Grid item lg={6} md={6} sm={12} xs={12}>\r\n        <TextField\r\n          name=\"genus\"\r\n          label=\"Genus\"\r\n          required\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={data.genus}\r\n          onChange={handleDataChange}\r\n          error={errors.genus}\r\n          helperText={errors.genus ? \"Genus cannot be empty\" : \"\"}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={6} md={6} sm={12} xs={12}>\r\n        <TextField\r\n          name=\"species\"\r\n          label=\"Species\"\r\n          required\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={data.species}\r\n          onChange={handleDataChange}\r\n          error={errors.species}\r\n          helperText={errors.species ? \"Species cannot be empty\" : \"\"}\r\n        />\r\n      </Grid>\r\n      <Grid item item lg={6} md={6} sm={12} xs={12}>\r\n        <FormControl variant=\"outlined\" fullWidth error={errors.type}>\r\n          <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\r\n          <Select\r\n            native\r\n            value={data.type}\r\n            onChange={handleDataChange}\r\n            label=\"Type\"\r\n            inputProps={{\r\n              name: \"type\",\r\n            }}\r\n            error={errors.type}\r\n          >\r\n            <option value=\"\" />\r\n            <option value={\"Bactera\"}>Bacteria</option>\r\n            <option value={\"Fungi\"}>Fungi</option>\r\n            <option value={\"Yeast\"}>Yeast</option>\r\n            <option value={\"Algaea\"}>Algaea</option>\r\n            <option value={\"Microalgaea\"}>Microalgaea</option>\r\n            <option value={\"Virus\"}>Virus</option>\r\n            <option value={\"Phage\"}>Virus</option>\r\n          </Select>\r\n          <FormHelperText error={errors.type}>\r\n            A type must be selected\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item lg={6} md={6} sm={12} xs={12}>\r\n        <TextField\r\n          name=\"quantity\"\r\n          label=\"Quantity\"\r\n          required\r\n          fullWidth\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          value={data.quantity}\r\n          inputProps={{ min: 1 }}\r\n          onChange={handleDataChange}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n        <TextField\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          required\r\n          multiline\r\n          rows={6}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={data.description}\r\n          inputProps={{ min: 1 }}\r\n          onChange={handleDataChange}\r\n          error={errors.description}\r\n          helperText={errors.description ? \"Description cannot be empty\" : \"\"}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          style={styles.button}\r\n          onClick={handleAdd}\r\n          color=\"primary\"\r\n        >\r\n          Add\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst DepositItemsTable = (props) => {\r\n  const { items, onDelete } = props;\r\n  const styles = {\r\n    informationContainer: {\r\n      margin: \"0.4rem\",\r\n    },\r\n    cart: {\r\n      margin: \"4rem 8rem\",\r\n      heading: {},\r\n      subHeading: {\r\n        color: \"grey\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    subHeading: {\r\n      color: \"grey\",\r\n      fontSize: \"14px\",\r\n      marginRight: \"0.5rem\",\r\n    },\r\n\r\n    card: {\r\n      padding: \"1rem\",\r\n      // minHeight: \"300px\",\r\n    },\r\n    typeValue: {\r\n      fontSize: \"14px\",\r\n    },\r\n    nameField: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-end\",\r\n      //   borderBottom: \"1px solid #EEEEEE\",\r\n      padding: \"1rem 0\",\r\n    },\r\n    quantityField: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      //   borderBottom: \"1px solid #EEEEEE\",\r\n    },\r\n\r\n    actionsField: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      //   borderBottom: \"1px solid #EEEEEE\",\r\n    },\r\n    quantityTextField: {\r\n      width: \"5rem\",\r\n      marginLeft: \"0.6rem\",\r\n      fontSize: \"14px\",\r\n    },\r\n    actions: {\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    button: {\r\n      padding: \"0.8rem 2rem\",\r\n    },\r\n    emptyCart: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minHeight: \"200px\",\r\n    },\r\n    emptyCartMessage: {\r\n      fontSize: \"18px\",\r\n      // color: \"#EEEEEE\",\r\n    },\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"column\"\r\n      lg\r\n      md\r\n      sm\r\n      xs\r\n      style={styles.informationContainer}\r\n    >\r\n      {items.map((item, index) => (\r\n        <Grid\r\n          item\r\n          lg\r\n          sm\r\n          xs\r\n          md\r\n          key={index}\r\n          style={{ margin: \"0.4rem\", borderBottom: \"1px solid #eeeeee\" }}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} style={styles.nameField}>\r\n              <div>{`${item.genus} ${item.species}`}</div>\r\n              <div>\r\n                <span style={styles.subHeading}>Type:</span>\r\n                <span style={styles.typeValue}>{item.type}</span>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              md={4}\r\n              lg={4}\r\n              style={styles.quantityField}\r\n            >\r\n              <span style={styles.subHeading}>Quantity: </span>\r\n              <span>{item.quantity}</span>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              md={2}\r\n              lg={2}\r\n              style={styles.actionsField}\r\n            >\r\n              <IconButton>\r\n                <DeleteIcon onClick={(e) => onDelete(item)} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst DepositType = (props) => {\r\n  const { type, setType, error, setError } = props;\r\n  const handleChangeType = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container lg sm md xs style={{ margin: \"1rem\" }}>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={4}\r\n          sm={12}\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n          justify=\"flex-start\"\r\n        >\r\n          Select a type of deposit*\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          md={6}\r\n          sm={12}\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <FormControl variant=\"outlined\" error={error}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\r\n            <Select\r\n              native\r\n              value={type}\r\n              onChange={handleChangeType}\r\n              label=\"Type\"\r\n              inputProps={{\r\n                name: \"type\",\r\n              }}\r\n              error={error}\r\n            >\r\n              <option value=\"\" />\r\n              <option value={\"Bactera\"}>General</option>\r\n              <option value={\"Fungi\"}>Patent</option>\r\n              <option value={\"Yeast\"}>Safe</option>\r\n            </Select>\r\n            <FormHelperText error={error}>\r\n              {error ? \"A type must be selected\" : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CreateDeposit = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deposit = useSelector((state) => state.deposit);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [data, setData] = useState({\r\n    genus: \"\",\r\n    species: \"\",\r\n    quantity: 1,\r\n    type: \"\",\r\n    description: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    genus: false,\r\n    species: false,\r\n    quantity: false,\r\n    type: false,\r\n    description: false,\r\n  });\r\n  const [depositType, setDepositType] = useState(\"\");\r\n  const [depositTypeerror, setDepositTypeError] = useState(false);\r\n\r\n  const [items, setItems] = useState([]);\r\n  //   const deposit = useSelector((state) => deposit);\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Your order is being confirmed</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n  if (deposit.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (deposit.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(deposit.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const reset = () => {\r\n    setData({\r\n      genus: \"\",\r\n      species: \"\",\r\n      quantity: 1,\r\n      description: \"\",\r\n      type: \"\",\r\n    });\r\n    setErrors({\r\n      genus: false,\r\n      species: false,\r\n      quantity: false,\r\n      description: false,\r\n      type: false,\r\n    });\r\n    setItems([]);\r\n    setDepositType(\"\");\r\n    setDepositTypeError(false);\r\n  };\r\n\r\n  const handleAddMicro = () => {\r\n    setItems([...items, data]);\r\n    setData({\r\n      genus: \"\",\r\n      species: \"\",\r\n      quantity: 1,\r\n      description: \"\",\r\n      type: \"\",\r\n    });\r\n    setErrors({\r\n      genus: false,\r\n      species: false,\r\n      quantity: false,\r\n      description: false,\r\n      type: false,\r\n    });\r\n  };\r\n\r\n  const handleRemoveRow = (item) => {\r\n    const new_data = items.filter(\r\n      (d) => !(d.genus == item.genus && d.species != item.genus)\r\n    );\r\n    setItems([...new_data]);\r\n  };\r\n\r\n  const handleCreateDeposit = () => {\r\n    if (items.length === 0) {\r\n      const heads = Object.keys(data);\r\n      let e = errors;\r\n      for (let i in heads) {\r\n        errors[heads[i]] = true;\r\n      }\r\n      console.log(e);\r\n      setErrors({ ...e });\r\n      return;\r\n    }\r\n    if (depositType === \"\") {\r\n      setDepositTypeError(true);\r\n      return;\r\n    }\r\n    if (!auth.authenticate) {\r\n      history.push(\"/signin\");\r\n    } else {\r\n      dispatch(createDeposit({ items, organismType: depositType }));\r\n      reset();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n      <div style={styles.main}>\r\n        <Grid\r\n          container\r\n          xs={11}\r\n          sm={10}\r\n          md={10}\r\n          lg={10}\r\n          style={styles.content}\r\n          direction=\"column\"\r\n        >\r\n          <Grid item xs sm md lg>\r\n            <h4>Create Deposit</h4>\r\n            <p style={styles.subHeading}>\r\n              Fill in the following form to create a deposit request{\" \"}\r\n            </p>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardContent>\r\n                <DepositInformationForm\r\n                  data={data}\r\n                  setData={setData}\r\n                  errors={errors}\r\n                  setErrors={setErrors}\r\n                  onAdd={handleAddMicro}\r\n                />\r\n                <DepositItemsTable items={items} onDelete={handleRemoveRow} />\r\n                <DepositType\r\n                  type={depositType}\r\n                  setType={setDepositType}\r\n                  error={depositTypeerror}\r\n                  setError={setDepositTypeError}\r\n                />\r\n              </CardContent>\r\n              <CardActions style={styles.CardActions}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={styles.button}\r\n                  autoCapitalize\r\n                  onClick={handleCreateDeposit}\r\n                >\r\n                  Send Request\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  main: {\r\n    backgroundColor: \"#EEEEEE\",\r\n    minHeight: \"76.1vh\",\r\n  },\r\n  subHeading: {\r\n    color: \"grey\",\r\n    fontSize: \"14px\",\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  content: {\r\n    margin: \"auto\",\r\n    padding: \"3rem 0\",\r\n  },\r\n  button: {\r\n    padding: \"0.8rem 3rem\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n\r\n  CardActions: {\r\n    margin: \"0.8rem\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n};\r\n\r\nexport default CreateDeposit;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDepositDetails\\index.js",["1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513"],"import UserSideBar from \"components/UserSidebar/UserSidebar\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getOrderDetails,\r\n  adminOrderReject,\r\n  changeAdminOrderStatus,\r\n  approveOrderDocument,\r\n  rejectOrderDocument,\r\n  submitOrderTrackingNumber,\r\n  submitOrderFile,\r\n  confirmPayment,\r\n  confirmOrderDelivery,\r\n  getDepositDetails,\r\n  submitDepositFile,\r\n  submitDepositTrackingNumber,\r\n} from \"actions\";\r\nimport Delivered from \"components/UserDepositDetailsComponents/Deposited\";\r\nimport OrderRequest from \"components/UserDepositDetailsComponents/OrderRequest\";\r\nimport Payment from \"components/UserDepositDetailsComponents/Payment\";\r\nimport Processing from \"components/UserDepositDetailsComponents/AwaitingDispatch\";\r\nimport Rejected from \"components/UserDepositDetailsComponents/Rejected\";\r\nimport DocumentSubmission from \"components/UserDepositDetailsComponents/Document Submission\";\r\nimport OrderDelivered from \"components/OrderDelivered\";\r\nimport OrderDetailsInformationList from \"components/OrderDetailsInformationList\";\r\nimport OrderDispatched from \"components/OrderDispatched\";\r\nimport OrderPayment from \"components/OrderPayment\";\r\nimport OrderRejectDescription from \"components/OrderRejectDesciption\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AwaitingDispatch from \"components/UserDepositDetailsComponents/AwaitingDispatch\";\r\nimport DepositDispatched from \"components/UserDepositDetailsComponents/Dispatched\";\r\nimport Deposited from \"components/UserDepositDetailsComponents/Deposited\";\r\n\r\nconst UserDashboardDepositDetails = (props) => {\r\n  const { id } = props.location.state;\r\n  const dispatch = useDispatch();\r\n  const deposit = useSelector((state) => state.deposit.depositDetails);\r\n  const order_made = useSelector((state) => state.order.getOrderDetails);\r\n  const [data, setData] = useState({\r\n    order_id: \"120191\",\r\n    created: \"01-08-2019\",\r\n    user_id: \"1234\",\r\n    status: \"Reject\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getDepositDetails(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"change in the deposit data\");\r\n    // console.log(deposit);\r\n    setData(deposit.data);\r\n  }, [deposit]);\r\n\r\n  //   const requestSent = () => {\r\n  //     return (\r\n  //       <div className=\"fetch__data__div\">\r\n  //         <h3 className=\"fetch__data__title\">Deposit Details being fetched</h3>\r\n  //         <CircularProgress className=\"fetch__data__spinner\" />\r\n  //       </div>\r\n  //     );\r\n  //   };\r\n\r\n  //   const ErrorMessage = (message) => {\r\n  //     return (\r\n  //       <div className=\"error__div\">\r\n  //         <h3 className=\"error__title\">{message}</h3>\r\n  //       </div>\r\n  //     );\r\n  //   };\r\n\r\n  //   if (deposit && deposit.fetching) {\r\n  //     return (\r\n  //       <UserSideBar active=\"Deposits\">\r\n  //         <div className=\"users__content__div\">{requestSent()}</div>\r\n  //       </UserSideBar>\r\n  //     );\r\n  //   }\r\n\r\n  //   if (deposit && deposit.error.found) {\r\n  //     return (\r\n  //       <UserSideBar active=\"Deposits\">\r\n  //         <div className=\"users__content__div\">\r\n  //           {ErrorMessage(deposit.error.message)}\r\n  //         </div>\r\n  //       </UserSideBar>\r\n  //     );\r\n  //   }\r\n\r\n  const handleRequestApproval = () => {\r\n    alert(\"handling order approval\");\r\n    dispatch(changeAdminOrderStatus({ order_id: id }));\r\n  };\r\n\r\n  const handleRequestRejection = (description) => {\r\n    dispatch(adminOrderReject({ order_id: id, description }));\r\n  };\r\n\r\n  // Document\r\n\r\n  const handleDocumentApproval = (document_id) => {\r\n    dispatch(approveOrderDocument({ order_id: id, document_id }));\r\n  };\r\n\r\n  const handleDocumentRejection = (document_id, description) => {\r\n    // alert(`${document_id} , ${description}`);\r\n    dispatch(rejectOrderDocument({ order_id: id, document_id, description }));\r\n  };\r\n\r\n  // Processing to Dispatch\r\n  // const handleSubmitTracking = (tracking_number) => {\r\n  //   dispatch(submitOrderTrackingNumber({ order_id: id, tracking_number }));\r\n  // };\r\n\r\n  //   Document Submission\r\n  const onSubmit = (files, document_ids) => {\r\n    const data = new FormData();\r\n    data.append(\"deposit_id\", id);\r\n    data.append(\"document_id\", document_ids[0]);\r\n    data.append(\"files\", files[0]);\r\n    dispatch(submitDepositFile(data, id));\r\n  };\r\n\r\n  const processPayment = (token, address) => {\r\n    dispatch(\r\n      confirmPayment({\r\n        deposit_id: id,\r\n        token,\r\n        products: data.items,\r\n        address,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onOrderDeliveryConfirm = () => {\r\n    dispatch(confirmOrderDelivery({ order_id: id }));\r\n  };\r\n\r\n  const handleSubmitTracking = (tracking_number) => {\r\n    dispatch(submitDepositTrackingNumber({ deposit_id: id, tracking_number }));\r\n  };\r\n  const getComponent = () => {\r\n    switch (data.status) {\r\n      case \"Deposit Request\":\r\n        return <OrderRequest message={data && data.message} />;\r\n        break;\r\n      case \"Document Submission\":\r\n        return (\r\n          <DocumentSubmission\r\n            sampleDocuments={data.data.sample_documents}\r\n            submittedDocuments={data.data.submitted_documents}\r\n            onSubmit={onSubmit}\r\n          />\r\n        );\r\n      case \"Payment\":\r\n        console.log(data.data);\r\n        return <Payment data={data.data} onPayment={processPayment} />;\r\n        break;\r\n      case \"Awaiting Dispatch\":\r\n        return (\r\n          <AwaitingDispatch\r\n            data={data.data}\r\n            onSubmitTracking={handleSubmitTracking}\r\n          />\r\n        );\r\n      case \"Dispatched\":\r\n        return <DepositDispatched tracking={data.data.tracking} />;\r\n      case \"Delivered\":\r\n        return <Deposited />;\r\n      case \"Rejected\":\r\n        console.log(data);\r\n        return <Rejected description={data.data && data.data.description} />;\r\n\r\n      case \"Cancelled\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserSideBar active=\"Deposits\">\r\n      <Grid container spacing={2} style={{ marginTop: \"2rem\" }}>\r\n        <Grid\r\n          item\r\n          lg={10}\r\n          md={10}\r\n          sm={10}\r\n          xs={12}\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            {`Deposit ID:\\t\\t${data.deposit_id}`}\r\n          </Typography>\r\n          <Typography variant=\"p\" color=\"textSecondary\">\r\n            {`Date Created:\\t\\t${data.date}`}\r\n          </Typography>\r\n          {/* <Typography variant=\"p\" color=\"textSecondary\">\r\n            {`Created by:\\t\\t${data.username}`}\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={2}\r\n          md={2}\r\n          sm={2}\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <Button color=\"primary\">Remove</Button>\r\n        </Grid>\r\n        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title={`${data.status}`}\r\n              titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n            />\r\n            <CardContent>{getComponent()}</CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </UserSideBar>\r\n  );\r\n};\r\n\r\nexport default UserDashboardDepositDetails;\r\n\r\n//   const UserOrderDetails = (props) => {\r\n//     const { id } = props.location.state;\r\n//     const dispatch = useDispatch();\r\n//     const { order } = useSelector((state) => state.order.getOrderDetails);\r\n//     const [data, setData] = useState({\r\n//       order_id: \"120191\",\r\n//       created: \"01-08-2019\",\r\n//       user_id: \"1234\",\r\n//       status: \"Reject\",\r\n//     });\r\n\r\n//     const [datastatus, setDatastatus] = useState({\r\n//       status: \"Your order is Rejected\",\r\n//       description: \"The form is incomplete, some information is missing\",\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//       dispatch(getOrderDetails(id));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//       setData(order);\r\n//     }, [order]);\r\n\r\n//     const styles = {};\r\n//     // Order Request\r\n//     const handleRequestApproval = () => {\r\n//       alert(\"handling order approval\");\r\n//       dispatch(changeAdminOrderStatus({ order_id: id }));\r\n//     };\r\n\r\n//     const handleRequestRejection = (description) => {\r\n//       dispatch(adminOrderReject({ order_id: id, description }));\r\n//     };\r\n\r\n//     // Document\r\n\r\n//     const handleDocumentApproval = (document_id) => {\r\n//       dispatch(approveOrderDocument({ order_id: id, document_id }));\r\n//     };\r\n\r\n//     const handleDocumentRejection = (document_id, description) => {\r\n//       // alert(`${document_id} , ${description}`);\r\n//       dispatch(rejectOrderDocument({ order_id: id, document_id, description }));\r\n//     };\r\n\r\n//     // Processing to Dispatch\r\n//     const handleSubmitTracking = (tracking_number) => {\r\n//       dispatch(submitOrderTrackingNumber({ order_id: id, tracking_number }));\r\n//     };\r\n//     const getComponent = () => {\r\n//       switch (data.status) {\r\n//         case \"Order Request\":\r\n//           return (\r\n//             <OrderRequest\r\n//               description={data.data && data.description}\r\n//               data={data.data && data.data.items}\r\n//               id={id}\r\n//               onApprove={handleRequestApproval}\r\n//               onReject={handleRequestRejection}\r\n//             />\r\n//           );\r\n//           break;\r\n//         case \"Document Submission\":\r\n//           return (\r\n//             <DocumentSubmission\r\n//               documents={data.data.submitted_documents}\r\n//               onApprove={handleDocumentApproval}\r\n//               onReject={handleDocumentRejection}\r\n//             />\r\n//           );\r\n//         case \"Payment\":\r\n//           return <Payment />;\r\n//           break;\r\n//         case \"Processing\":\r\n//           return <Processing onSubmitTracking={handleSubmitTracking} />;\r\n//         case \"Dispatched\":\r\n//           return (\r\n//             <OrderDispatched\r\n//               tracking={data.data.tracking}\r\n//               datastatus={datastatus}\r\n//             />\r\n//           );\r\n//         case \"Delivered\":\r\n//           return <Delivered />;\r\n//         case \"Rejected\":\r\n//           console.log(data);\r\n//           return <Rejected description={data.data && data.data.description} />;\r\n\r\n//         case \"Cancelled\":\r\n//           break;\r\n\r\n//         default:\r\n//           break;\r\n//       }\r\n//     };\r\n\r\n//     return (\r\n//       <SideBar active=\"Orders\">\r\n//         <Grid container spacing={2} style={{ marginTop: \"2rem\" }}>\r\n//           <Grid\r\n//             item\r\n//             lg={10}\r\n//             md={10}\r\n//             sm={10}\r\n//             xs={12}\r\n//             style={{ display: \"flex\", flexDirection: \"column\" }}\r\n//           >\r\n//             <Typography variant=\"h5\" color=\"primary\">\r\n//               {`Order ID:\\t\\t${data.order_id}`}\r\n//             </Typography>\r\n//             <Typography variant=\"p\" color=\"textSecondary\">\r\n//               {`Date Created:\\t\\t${data.date}`}\r\n//             </Typography>\r\n//             <Typography variant=\"p\" color=\"textSecondary\">\r\n//               {`Created by:\\t\\t${data.username}`}\r\n//             </Typography>\r\n//           </Grid>\r\n//           <Grid\r\n//             item\r\n//             lg={2}\r\n//             md={2}\r\n//             sm={2}\r\n//             xs={12}\r\n//             style={{\r\n//               display: \"flex\",\r\n//               alignItems: \"flex-start\",\r\n//               padding: 0,\r\n//             }}\r\n//           >\r\n//             <Button color=\"primary\">Remove</Button>\r\n//           </Grid>\r\n//           <Grid item lg={12} md={12} sm={12} xs={12}>\r\n//             <Card>\r\n//               <CardHeader\r\n//                 title={`${data.status}`}\r\n//                 titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n//               />\r\n//               <CardContent>{getComponent()}</CardContent>\r\n//             </Card>\r\n//           </Grid>\r\n//         </Grid>\r\n//       </SideBar>\r\n//     );\r\n//   };\r\n\r\n//   export default UserOrderDetails;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\OrderRequest\\index.js",["1514","1515","1516","1517","1518","1519","1520","1521","1522"],"import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst OrderRequest = (props) => {\r\n  return (\r\n    <>\r\n      <Toolbar>{props.message}</Toolbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderRequest;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Document Submission\\index.js",["1523","1524","1525","1526","1527","1528","1529","1530","1531"],"import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TableRow,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CollapsableTableRow(props) {\r\n  const {\r\n    item,\r\n    index,\r\n    onSubmit,\r\n    files,\r\n    setFiles,\r\n    document_ids,\r\n    setDocument_ids,\r\n  } = props;\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  const uploadFile = (e, id) => {\r\n    const mod_files = files.filter((file) => {\r\n      return file !== e.target.files[0];\r\n    });\r\n    setFiles([...mod_files, e.target.files[0]]);\r\n    const mod_ids = document_ids.filter((doc_id) => doc_id != id);\r\n    setDocument_ids([...mod_ids, id]);\r\n    alert(\"file uploaded successfully\");\r\n    // let mod_files = files.map((file)=>{\r\n    //   if(file.document_id===item._id){\r\n    //     file.document=e.target.files[0];\r\n    //   }\r\n    //   return file;\r\n    // });\r\n    // if(mod_files.length===files){\r\n    //   setFiles(mod_files);\r\n    // }\r\n    // else{\r\n    //   setFiles([\r\n    //     ...files,\r\n\r\n    //   ])\r\n    // }\r\n    // setFiles(...files, {\r\n    //   document_id: item._id,\r\n    //   document: e.target.files[0],\r\n    // })\r\n  };\r\n  const getSubmit = (status, id) => {\r\n    if (status) {\r\n      switch (status.toLowerCase()) {\r\n        case \"awaiting submission\":\r\n          // if (files && files.find((file) => file.document_id === id)) {\r\n          //   return (\r\n          //     <Button\r\n          //       variant=\"contained\"\r\n          //       disabled\r\n          //       component=\"label\"\r\n          //       size=\"small\"\r\n          //     >\r\n          //       Uploaded\r\n          //       <input type=\"file\" hidden disabled onChange={uploadFile} />\r\n          //     </Button>\r\n          //   );\r\n          // } else {\r\n          return (\r\n            <Button variant=\"contained\" component=\"label\" size=\"small\">\r\n              Upload File\r\n              <input type=\"file\" hidden onChange={(e) => uploadFile(e, id)} />\r\n            </Button>\r\n          );\r\n        // }\r\n\r\n        case \"awaiting approval\":\r\n          return <p>awaiting approval</p>;\r\n        case \"approved\":\r\n          return \"approved\";\r\n        case \"rejected\":\r\n          return (\r\n            <Button variant=\"contained\" component=\"label\" size=\"small\">\r\n              Upload File\r\n              <input type=\"file\" hidden onChange={(e) => uploadFile(e, id)} />\r\n            </Button>\r\n          );\r\n        default:\r\n          return \"dont know\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getAction = (status) => {\r\n    if (status) {\r\n      switch (status.toLowerCase()) {\r\n        case \"awaiting submission\":\r\n          return (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => onSubmit(files, document_ids)}\r\n            >\r\n              Submit\r\n            </Button>\r\n          );\r\n        case \"awaiting approval\":\r\n          return <p>awaiting approval</p>;\r\n        case \"approved\":\r\n          return \"approved\";\r\n        case \"rejected\":\r\n          return (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => onSubmit(files, document_ids)}\r\n            >\r\n              Submit\r\n            </Button>\r\n          );\r\n        default:\r\n          return \"dont know\";\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell key={index}>{index + 1}</TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {item[\"title\"]}\r\n        </TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {item.approved}\r\n          {item.approved && item.approved.toLowerCase() == \"rejected\" ? (\r\n            <Typography\r\n              component=\"p\"\r\n              display=\"inline\"\r\n              onClick={() => setCollapse(!collapse)}\r\n              style={{\r\n                fontSize: \"12px\",\r\n                cursor: \"pointer\",\r\n                fontWeight: \"bold\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              (Reason)\r\n            </Typography>\r\n          ) : null}\r\n        </TableCell>\r\n        <TableCell key={index} align=\"center\" padding=\"default\">\r\n          {getSubmit(item.approved, item._id)}\r\n          {/* {item.approved == null ? (\r\n            <>\r\n              <Button color=\"primary\" onClick={() => onApprove(item._id)}>\r\n                Approve\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  setCollapse(!collapse);\r\n                }}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>{item.approved ? \"Approved\" : \"Rejected\"}</>\r\n          )} */}\r\n        </TableCell>\r\n        <TableCell align=\"center\" padding=\"default\">\r\n          {getAction(item.approved)}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell style={{ paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={collapse} timeout=\"auto\" unmountOnExit>\r\n            <Toolbar>Document is rejected due to: </Toolbar>\r\n            <TextField\r\n              multiline\r\n              rows={4}\r\n              value={item.description}\r\n              variant=\"outlined\"\r\n              disabled\r\n              style={{ width: \"100%\" }}\r\n            />{\" \"}\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\nconst DocumentSubmission = (props) => {\r\n  const { sampleDocuments, submittedDocuments, onSubmit } = props;\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [document_ids, setDocument_ids] = useState([]);\r\n  const headers = [\r\n    \"title\",\r\n    \"document\",\r\n    // {\r\n    //   value:\"title\",\r\n    //   title:\"Title\",\r\n    // },\r\n    // {\r\n    //   value:\"document\",\r\n    //   title:\"Link\",\r\n    // }\r\n  ];\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>\r\n          You are required to fill and submit the following documents according\r\n          to your deposit.\r\n        </p>\r\n        {sampleDocuments.map((doc, index) => {\r\n          return (\r\n            <div style={{ margin: \"0.8rem 0\" }} key={index}>\r\n              <span style={{ marginRight: \"1rem\" }}>{`${index + 1}.`}</span>\r\n              <a href={doc.document} target=\"_blank\">\r\n                {doc.title}\r\n              </a>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"3rem\" }}>\r\n        <p>Your submitted documents and their responses</p>\r\n        <TableContainer>\r\n          <Table size=\"medium\">\r\n            <TableHead>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                id\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Title\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Status\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Submit\r\n              </TableCell>\r\n              <TableCell align=\"center\" padding=\"none\">\r\n                Action\r\n              </TableCell>\r\n            </TableHead>\r\n            <TableBody>\r\n              {submittedDocuments &&\r\n                submittedDocuments.map((doc, index) => {\r\n                  return (\r\n                    <CollapsableTableRow\r\n                      item={doc}\r\n                      index={index}\r\n                      files={files}\r\n                      document_ids={document_ids}\r\n                      setDocument_ids={setDocument_ids}\r\n                      setFiles={setFiles}\r\n                      onSubmit={onSubmit}\r\n                    />\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentSubmission;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Payment\\index.js",["1532","1533"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Modal,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nconst Payment = (props) => {\r\n  const { data, onPayment } = props;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [token, setToken] = useState(\"\");\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handlePayment = (token) => {\r\n    setOpenModal(true);\r\n    setToken(token);\r\n  };\r\n\r\n  const checkPayment = () => {\r\n    if (address.length > 0) {\r\n      onPayment(token, address);\r\n    }\r\n    setError(true);\r\n  };\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align=\"right\">Price ($)</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">{`${data.type} Price`}</TableCell>\r\n            <TableCell align=\"right\">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.items &&\r\n            data.items.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"left\">{row.microorganism_name}</TableCell>\r\n                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {row.sub_total && row.sub_total.toFixed(2)}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n        <TableRow>\r\n          <TableCell rowSpan={4} />\r\n          <TableCell colSpan={2}>SubTotal</TableCell>\r\n          <TableCell align=\"right\">\r\n            {data.total && data.total.toFixed(2)}\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"left\">Tax</TableCell>\r\n          <TableCell align=\"right\">0%</TableCell>\r\n          <TableCell align=\"right\">{0}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"left\">Total</TableCell>\r\n          <TableCell colSpan={2} align=\"right\">\r\n            {data.total && data.total.toFixed(2)}\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell colSpan={3} align=\"right\">\r\n            <StripeCheckout\r\n              stripeKey=\"pk_test_51IhcBtCueTz3N4RSq2lZieK9Wh8cD7XR2KlScdCDyfyuCcnjbj6RzGbaoxUtIOHxDAruTsgTTuFWKz1lcSj7YlO60066rgWObx\"\r\n              token={handlePayment}\r\n              amount={data.total * 100}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Pay with Credit/Debit card\r\n              </Button>\r\n            </StripeCheckout>\r\n          </TableCell>\r\n        </TableRow>\r\n      </Table>\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleModalClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Address</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add an address of the place where you would like to ship these\r\n            samples to.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            error={error}\r\n            helperText={\"Address cannot be empty\"}\r\n            margin=\"dense\"\r\n            required\r\n            id=\"addresss\"\r\n            label=\"Address\"\r\n            type=\"email\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleModalClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={checkPayment} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Rejected\\index.js",["1534"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserDeposits\\index.js",["1535","1536"],"import React, { useState } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport DropDown from \"../../../components/DropDown\";\r\nimport SideBar from \"../../../components/SideBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getDeposits } from \"actions\";\r\nimport UserSideBar from \"components/UserSidebar/UserSidebar\";\r\n\r\nconst UserDeposits = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const deposits = useSelector((state) => state.deposit);\r\n\r\n  useEffect(() => {\r\n    dispatch(getDeposits());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(deposits.getDeposits.deposits || []);\r\n  }, [deposits]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          (row.deposit_id\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(query.toLowerCase()) > -1 ||\r\n            row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Deposits are being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (deposits && deposits.getDeposits.fetching) {\r\n    return (\r\n      <UserSideBar active=\"Deposits\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </UserSideBar>\r\n    );\r\n  }\r\n\r\n  if (deposits && deposits.getDeposits.error.found) {\r\n    return (\r\n      <UserSideBar active=\"Deposits\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(deposits.getDeposits.error.message)}\r\n        </div>\r\n      </UserSideBar>\r\n    );\r\n  }\r\n\r\n  const deposit_table_head = [\r\n    {\r\n      id: \"deposit_id\",\r\n      align: \"left\",\r\n      disablePadding: true,\r\n      alignData: \"left\",\r\n      label: \"Deposit ID\",\r\n    },\r\n    {\r\n      id: \"customer_name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Customer\",\r\n    },\r\n    {\r\n      id: \"type\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Deposit Type\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n  const onRowsDelete = (values) => {\r\n    alert(`These values were requested to be deleted ${values}`);\r\n  };\r\n\r\n  return (\r\n    <UserSideBar active=\"Deposits\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"3rem\",\r\n        }}\r\n      >\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <div>\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit Request\",\r\n                value: \"Deposit Request\",\r\n              },\r\n              {\r\n                title: \"Document Submission\",\r\n                value: \"Document Submission\",\r\n              },\r\n              {\r\n                title: \"Rejected\",\r\n                value: \"Rejected\",\r\n              },\r\n              {\r\n                title: \"Payment Submission\",\r\n                value: \"Payment Submission\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"Processing\",\r\n              },\r\n              {\r\n                title: \"Deposited\",\r\n                value: \"Deposited\",\r\n              },\r\n              {\r\n                title: \"Cancelled\",\r\n                value: \"Cancelled\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <CustomTable\r\n          head={deposit_table_head}\r\n          rows={search(data)}\r\n          onDelete={onRowsDelete}\r\n          showDetails={\"/userDashboard/userDepositDetails\"}\r\n        />\r\n      </div>\r\n    </UserSideBar>\r\n  );\r\n};\r\n\r\nexport default UserDeposits;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\DepositDetails\\index.js",["1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getOrderDetails,\r\n  adminOrderReject,\r\n  changeAdminOrderStatus,\r\n  approveOrderDocument,\r\n  rejectOrderDocument,\r\n  submitOrderTrackingNumber,\r\n  getDepositDetails,\r\n  changeAdminDepositStatus,\r\n  adminDepositReject,\r\n  approveDepositDocument,\r\n  rejectDepositDocument,\r\n  confirmDepositDelivery,\r\n  rejectDepositItems,\r\n} from \"actions\";\r\nimport Delivered from \"components/AdminDepositDetailsScreens/Deposited\";\r\nimport DepositRequest from \"components/AdminDepositDetailsScreens/DepositRequest\";\r\nimport Payment from \"components/AdminDepositDetailsScreens/Payment\";\r\nimport Processing from \"components/AdminDepositDetailsScreens/Processing\";\r\nimport Rejected from \"components/AdminDepositDetailsScreens/Rejected\";\r\nimport DepositPayment from \"components/DepositPayment\";\r\nimport DocumentSubmission from \"components/DocumentSubmission\";\r\nimport OrderDelivered from \"components/OrderDelivered\";\r\nimport OrderDetailsInformationList from \"components/OrderDetailsInformationList\";\r\nimport OrderDispatched from \"components/OrderDispatched\";\r\nimport OrderPayment from \"components/OrderPayment\";\r\nimport OrderRejectDescription from \"components/OrderRejectDesciption\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SideBar from \"../../../components/SideBar\";\r\nimport AwaitingDispatch from \"components/AdminDepositDetailsScreens/AwaitingDispatch\";\r\nimport DepositDispatched from \"components/AdminDepositDetailsScreens/Dispatched\";\r\nimport Deposited from \"components/AdminDepositDetailsScreens/Deposited\";\r\n\r\nconst AdminDashboardUserDepositDetails = (props) => {\r\n  const { id } = props.location.state;\r\n  const dispatch = useDispatch();\r\n  const deposit = useSelector((state) => state.deposit.depositDetails);\r\n  const [data, setData] = useState({\r\n    order_id: \"120191\",\r\n    created: \"01-08-2019\",\r\n    user_id: \"1234\",\r\n    status: \"Reject\",\r\n  });\r\n\r\n  const [datastatus, setDatastatus] = useState({\r\n    status: \"Your order is Rejected\",\r\n    description: \"The form is incomplete, some information is missing\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getDepositDetails(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(deposit.data);\r\n  }, [deposit]);\r\n\r\n  const styles = {};\r\n  // Order Request\r\n  const handleRequestApproval = () => {\r\n    dispatch(changeAdminDepositStatus({ deposit_id: id }));\r\n  };\r\n\r\n  const handleRequestRejection = (description) => {\r\n    dispatch(adminDepositReject({ deposit_id: id, description }));\r\n  };\r\n\r\n  // Document\r\n\r\n  const handleDocumentApproval = (document_id) => {\r\n    dispatch(approveDepositDocument({ deposit_id: id, document_id }));\r\n  };\r\n\r\n  const handleDocumentRejection = (document_id, description) => {\r\n    // alert(`${document_id} , ${description}`);\r\n    dispatch(\r\n      rejectDepositDocument({ deposit_id: id, document_id, description })\r\n    );\r\n  };\r\n\r\n  // Processing to Dispatch\r\n  const handleSubmitTracking = (tracking_number) => {\r\n    dispatch(submitOrderTrackingNumber({ order_id: id, tracking_number }));\r\n  };\r\n\r\n  const onDepositDeliveryConfirm = () => {\r\n    dispatch(confirmDepositDelivery({ deposit_id: id }));\r\n  };\r\n\r\n  const handleDepositApprove = () => {\r\n    dispatch(changeAdminDepositStatus({ deposit_id: id }));\r\n  };\r\n  const handleDepositReject = (description) => {\r\n    dispatch(rejectDepositItems({ deposit_id: id, description }));\r\n  };\r\n  const getComponent = () => {\r\n    switch (data.status) {\r\n      case \"Deposit Request\":\r\n        return (\r\n          <DepositRequest\r\n            data={data.data && data.data.items}\r\n            onApprove={handleRequestApproval}\r\n            onReject={handleRequestRejection}\r\n          />\r\n        );\r\n        break;\r\n      case \"Document Submission\":\r\n        return (\r\n          <DocumentSubmission\r\n            documents={data.data.submitted_documents}\r\n            onApprove={handleDocumentApproval}\r\n            onReject={handleDocumentRejection}\r\n          />\r\n        );\r\n      case \"Payment\":\r\n        return <Payment />;\r\n        break;\r\n      case \"Awaiting Dispatch\":\r\n        return <AwaitingDispatch />;\r\n      case \"Dispatched\":\r\n        return (\r\n          <DepositDispatched\r\n            tracking={data.data.tracking}\r\n            onConfirm={onDepositDeliveryConfirm}\r\n          />\r\n        );\r\n      case \"Deposited\":\r\n        return <Deposited />;\r\n      case \"Rejected\":\r\n        console.log(data);\r\n        return <Rejected description={data.data && data.data.description} />;\r\n      case \"Processing\":\r\n        return (\r\n          <Processing\r\n            onApprove={handleDepositApprove}\r\n            onReject={handleDepositReject}\r\n          />\r\n        );\r\n      case \"Cancelled\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <Grid container spacing={2} style={{ marginTop: \"2rem\" }}>\r\n        <Grid\r\n          item\r\n          lg={10}\r\n          md={10}\r\n          sm={10}\r\n          xs={12}\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            {`Order ID:\\t\\t${data.deposit_id}`}\r\n          </Typography>\r\n          <Typography variant=\"p\" color=\"textSecondary\">\r\n            {`Date Created:\\t\\t${data.date}`}\r\n          </Typography>\r\n          <Typography variant=\"p\" color=\"textSecondary\">\r\n            {`Created by:\\t\\t${data.username}`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={2}\r\n          md={2}\r\n          sm={2}\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <Button color=\"primary\">Remove</Button>\r\n        </Grid>\r\n        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title={`${data.status}`}\r\n              titleTypographyProps={{ variant: \"h6\", color: \"primary\" }}\r\n            />\r\n            <CardContent>{getComponent()}</CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardUserDepositDetails;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Rejected\\index.js",["1556"],"import { Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Rejected = (props) => {\r\n  const { description } = props;\r\n  return (\r\n    <>\r\n      <Typography component=\"p\" style={{ marginBottom: \"1rem\" }}>\r\n        This order has been rejected due to the following reason:\r\n      </Typography>\r\n      {description}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rejected;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Payment\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\DepositRequest\\index.js",["1557","1558","1559"],"import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  Toolbar,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  TableRow,\r\n  Collapse,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst DepositRequest = (props) => {\r\n  const { onApprove, onReject } = props;\r\n  const items = props.data;\r\n  const headers = items && Object.keys(items[0]);\r\n  const [depositRejected, setDepositRejected] = useState(false);\r\n  const [cancle_description, setCancelDescription] = useState(\"\");\r\n  const [collapse, setCollapse] = useState(false);\r\n  const handleDepositReject = () => {\r\n    setDepositRejected(true);\r\n  };\r\n\r\n  const handleRejectCancel = () => {\r\n    setDepositRejected(false);\r\n  };\r\n\r\n  const handleRequestApproval = () => {\r\n    onApprove();\r\n  };\r\n\r\n  const handleRequestRejection = () => {\r\n    onReject(cancle_description);\r\n  };\r\n  return (\r\n    <>\r\n      <Toolbar>The following items have been requested</Toolbar>\r\n      <TableContainer>\r\n        <Table size=\"medium\" variant=\"\">\r\n          <TableHead>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              id\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Genus\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Species\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Quantity\r\n            </TableCell>\r\n            <TableCell align=\"center\" padding=\"none\">\r\n              Description\r\n            </TableCell>\r\n          </TableHead>\r\n          <TableBody>\r\n            {items &&\r\n              items.map((item, index) => {\r\n                return (\r\n                  <>\r\n                    <TableRow>\r\n                      <TableCell key={index} align=\"center\" padding=\"default\">\r\n                        {index + 1}\r\n                      </TableCell>\r\n\r\n                      {headers.map((head, i) => {\r\n                        if (head === \"description\") {\r\n                          return (\r\n                            <TableCell key={i} align=\"center\" padding=\"default\">\r\n                              <Typography\r\n                                component=\"p\"\r\n                                display=\"inline\"\r\n                                onClick={() => setCollapse(!collapse)}\r\n                                color=\"primary\"\r\n                              >\r\n                                View\r\n                              </Typography>\r\n                            </TableCell>\r\n                          );\r\n                        }\r\n                        if (head !== \"_id\") {\r\n                          return (\r\n                            <TableCell key={i} align=\"center\" padding=\"default\">\r\n                              {item[head]}\r\n                            </TableCell>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </TableRow>\r\n                    <TableRow\r\n                      style={{\r\n                        display: collapse ? \"\" : \"none\",\r\n                      }}\r\n                    >\r\n                      <TableCell style={{ paddingTop: 0 }} colSpan={6}>\r\n                        <Collapse in={collapse} timeout=\"auto\" unmountOnExit>\r\n                          <TextField\r\n                            multiline\r\n                            rows={4}\r\n                            value={item.description}\r\n                            variant=\"outlined\"\r\n                            disabled\r\n                            fullWidth\r\n                            style={{ margin: \"1rem 0\" }}\r\n                          />\r\n                        </Collapse>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Grid\r\n        container\r\n        lg\r\n        md\r\n        sm\r\n        xs\r\n        spacing={2}\r\n        style={{ marginTop: \"1rem\", minHeight: \"60px\" }}\r\n      >\r\n        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleRequestApproval}\r\n            style={{ height: \"100%\" }}\r\n            fullWidth\r\n          >\r\n            Approve\r\n          </Button>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={handleDepositReject}\r\n            style={{ height: \"100%\" }}\r\n            fullWidth\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {depositRejected && (\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <Toolbar>Give the reasons for this rejection</Toolbar>\r\n          <TextField\r\n            multiline\r\n            value={cancle_description}\r\n            onChange={(e) => setCancelDescription(e.target.value)}\r\n            variant=\"outlined\"\r\n            name=\"rejection_description\"\r\n            rows={4}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <Grid container style={{ marginTop: \"1rem\" }}>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleRequestRejection}\r\n                style={{ height: \"100%\" }}\r\n                fullWidth\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleRejectCancel}\r\n                color=\"inherit\"\r\n                style={{ height: \"100%\" }}\r\n                fullWidth\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepositRequest;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\AwaitingDispatch\\index.js",["1560","1561","1562","1563"],"import { Button, TextField, Toolbar } from \"@material-ui/core\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst AwaitingDispatch = (props) => {\r\n  return <>Waiting for the user to dispatch the deposit items</>;\r\n};\r\n\r\nexport default AwaitingDispatch;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\AwaitingDispatch\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Dispatched\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Dispatched\\index.js",["1564"],"import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst DepositDispatched = (props) => {\r\n  return (\r\n    <div>\r\n      <h6>\r\n        This deposit has been processed and dispatched to the provided address.\r\n        Check the current status of the delivery using the following tracking id\r\n      </h6>\r\n\r\n      <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\r\n        <Typography component=\"h6\" color=\"primary\">\r\n          {`Tracking:  `}\r\n        </Typography>\r\n        <span style={{ marginLeft: \"1rem\" }}>\r\n          {props.tracking || \"not provided\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepositDispatched;\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: 35,\r\n    border: \"1px solid red\",\r\n  },\r\n  header: {\r\n    color: \"Black\",\r\n    padding: \"10px\",\r\n    fontSize: 22,\r\n  },\r\n  text: {\r\n    color: \"Black\",\r\n    fontFamily: \"Arial\",\r\n    padding: 25,\r\n  },\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Processing\\index.js",["1565","1566"],"import { Button, Grid, TextField, Toolbar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Processing = (props) => {\r\n  const { onApprove, onReject } = props;\r\n  const [depositRejected, setDepositRejected] = useState(false);\r\n  const [cancle_description, setCancelDescription] = useState(\"\");\r\n  const handleDepositReject = () => {\r\n    setDepositRejected(true);\r\n  };\r\n\r\n  const handleRequestRejection = () => {\r\n    onReject(cancle_description);\r\n  };\r\n  const handleRejectCancel = () => {\r\n    setDepositRejected(false);\r\n    setCancelDescription(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        lg\r\n        md\r\n        sm\r\n        xs\r\n        spacing={2}\r\n        style={{ marginTop: \"1rem\", minHeight: \"60px\" }}\r\n      >\r\n        <p>\r\n          The deposit is in the processing stage. You are required to complete\r\n          all your tests and requirements and confirm/reject the deposit items\r\n          below.\r\n        </p>\r\n        <p>\r\n          In case of reject, a description has to be provided for this\r\n          rejection. Upon this rejection the user will be notified and will be\r\n          asked to submit the samples again\r\n        </p>\r\n        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={onApprove}\r\n            style={{ height: \"100%\" }}\r\n            fullWidth\r\n          >\r\n            Approve\r\n          </Button>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={handleDepositReject}\r\n            style={{ height: \"100%\" }}\r\n            fullWidth\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {depositRejected && (\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <Toolbar>Give the reasons for this rejection</Toolbar>\r\n          <TextField\r\n            multiline\r\n            value={cancle_description}\r\n            onChange={(e) => setCancelDescription(e.target.value)}\r\n            variant=\"outlined\"\r\n            name=\"rejection_description\"\r\n            rows={4}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <Grid container style={{ marginTop: \"1rem\" }}>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleRequestRejection}\r\n                style={{ height: \"100%\" }}\r\n                fullWidth\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleRejectCancel}\r\n                color=\"inherit\"\r\n                style={{ height: \"100%\" }}\r\n                fullWidth\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Processing;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\AdminDepositDetailsScreens\\Deposited\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\UserDepositDetailsComponents\\Deposited\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\useFormPersonalInformation.js",["1567","1568","1569"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst useFormPersonalInformation = (\r\n  handleSubmission,\r\n  PersonalInformationValidator\r\n) => {\r\n  const [personalInformationValue, setPersonalInformationValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    contactNumber: \"\",\r\n    description: \"\",\r\n    profilePicture: undefined,\r\n  });\r\n\r\n  const [personalInformationErrors, setPersonalInformationErrors] = useState(\r\n    {}\r\n  );\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handlePersonalInformationSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPersonalInformationErrors(\r\n      PersonalInformationValidator(personalInformationValue)\r\n    );\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(personalInformationErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [personalInformationErrors]);\r\n\r\n  const updatePersonalInformationValue = (e) => {\r\n    let value = undefined;\r\n    // alert(e.target.checked);\r\n    if (e.target.type == \"file\") {\r\n      alert(\r\n        \"file uploaded successfully. Save the information to see the effect\"\r\n      );\r\n      value = e.target.files[0];\r\n    } else {\r\n      value = e.target.value;\r\n    }\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      setPersonalInformationValue({\r\n        ...personalInformationValue,\r\n        permissions: {\r\n          ...personalInformationValue.permissions,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      });\r\n    } else {\r\n      setPersonalInformationValue({\r\n        ...personalInformationValue,\r\n        [e.target.name]: value,\r\n      });\r\n    }\r\n  };\r\n  const setInitial = (data) => {\r\n    setPersonalInformationValue(data);\r\n  };\r\n\r\n  return {\r\n    personalInformationValue,\r\n    handlePersonalInformationSubmit,\r\n    updatePersonalInformationValue,\r\n    personalInformationErrors,\r\n    setInitial,\r\n  };\r\n};\r\n\r\nexport default useFormPersonalInformation;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\PersonalInformationValidator.js",["1570","1571"],"import { ErrorOutlineSharp } from \"@material-ui/icons\";\r\n\r\nconst emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n\r\nconst PersonalInformationValidator = (value) => {\r\n  let errors = {};\r\n  if (!value.firstname.trim()) {\r\n    errors.firstname = \"First name cannot be empty\";\r\n  }\r\n  if (!value.lastname.trim()) {\r\n    errors.lastname = \"Last name cannot be empty\";\r\n  }\r\n  if (!value.contactNumber.trim()) {\r\n    errors.contactNumber = \"Contact Number cannot be empty\";\r\n  }\r\n  if (!value.email.trim()) {\r\n    errors.email = \"Email cannot be empty\";\r\n  } else if (!emailValidator.test(value.email.trim())) {\r\n    errors.email = \"must be of form: name@gmail.com\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default PersonalInformationValidator;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\passwordValidator.js",["1572"],"const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\nconst paswordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n\r\nconst passwordValidator = (value) => {\r\n  let errors = {};\r\n\r\n  if (!value.password.trim()) {\r\n    errors.password = \"Password cannot be empty\";\r\n  } else if (!paswordValidator.test(value.password.trim())) {\r\n    errors.password =\r\n      \"Password should be atleast 6 characters long and have atleast one capital letter in it.\";\r\n  }\r\n  if (!value.confirmPassword.trim()) {\r\n    errors.confirmPassword = \"Confirm Password cannot be empty\";\r\n  } else if (!(value.password === value.confirmPassword)) {\r\n    errors.confirmPassword = \"Password don't match\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default passwordValidator;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\User\\useFormPassword.js",["1573","1574","1575"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst useFormPassword = (handleSubmission, passwordValidator) => {\r\n  const [passwordValue, setpasswordValue] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [passwordErrors, setpasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handlepasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    setpasswordErrors(passwordValidator(passwordValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(passwordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [passwordErrors]);\r\n\r\n  const updatepasswordValue = (e) => {\r\n    let value = undefined;\r\n    // alert(e.target.checked);\r\n    if (e.target.type == \"file\") {\r\n      alert(\r\n        \"file uploaded successfully. Save the information to see the effect\"\r\n      );\r\n      value = e.target.files[0];\r\n    } else {\r\n      value = e.target.value;\r\n    }\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      setpasswordValue({\r\n        ...passwordValue,\r\n        permissions: {\r\n          ...passwordValue.permissions,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      });\r\n    } else {\r\n      setpasswordValue({\r\n        ...passwordValue,\r\n        [e.target.name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    passwordValue,\r\n    handlepasswordSubmit,\r\n    updatepasswordValue,\r\n    passwordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormPassword;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\useFormPersonalInformation.js",["1576","1577","1578"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\useFormPassword.js",["1579","1580","1581"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\PersonalInformationValidator.js",["1582","1583"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Settings\\passwordValidator.js",["1584"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\passwordValidator.js",["1585"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\useFormPersonalInformation.js",["1586","1587","1588"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\PersonalInformationValidator.js",["1589"],"const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n\r\nconst PersonalInformationValidator = (value) => {\r\n  let errors = {};\r\n  if (!value.firstname.trim()) {\r\n    errors.firstname = \"First name cannot be empty\";\r\n  }\r\n  if (!value.lastname.trim()) {\r\n    errors.lastname = \"Last name cannot be empty\";\r\n  }\r\n  if (!value.contactNumber.trim()) {\r\n    errors.contactNumber = \"Contact Number cannot be empty\";\r\n  }\r\n  if (!value.email.trim()) {\r\n    errors.email = \"Email cannot be empty\";\r\n  } else if (!emailValidator.test(value.email.trim())) {\r\n    errors.email = \"must be of form: name@gmail.com\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default PersonalInformationValidator;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\UserDashboard\\UserSettings\\useFormPassword.js",["1590","1591","1592"],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\index.js",["1593","1594","1595","1596","1597","1598","1599"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  Step,\r\n  StepButton,\r\n  StepContent,\r\n  StepLabel,\r\n  Stepper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SideBar from \"components/SideBar\";\r\nimport { addMicroorganism } from \"../../../actions/catalogue.actions\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { initialFormData } from \"./initialFormData\";\r\nimport { LabelNameData } from \"./LabelNameData\";\r\nimport MicroorganismAddValidator from \"./MicroorganismAddValidator\";\r\nimport useFormMicroorganismAdd from \"./useFormMicroorganismAdd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { authConstants } from \"actions\";\r\n\r\n// Stepper function and hooks\r\nconst getSteps = () => {\r\n  return [\r\n    \"CoreDataSets\",\r\n    \"Name\",\r\n    \"StrainAdministration\",\r\n    \"EnviromentAndHistory\",\r\n    \"Publication\",\r\n    \"BiologicalInteractions\",\r\n    \"Sexuality\",\r\n    \"Properties\",\r\n    \"GrnotypeAndGenetics\",\r\n    \"GrowthConditions\",\r\n    \"ChemistryAndEnzymes\",\r\n    \"Medium\",\r\n    \"Sequence\",\r\n    \"Catalogue\",\r\n  ];\r\n};\r\nconst getStepContent = (label, value, errors, updateValue) => {\r\n  // console.log(\"label is\", value[label]);\r\n  return (\r\n    <Grid container xs lg md sm direction=\"column\" spacing={2}>\r\n      {value[label] &&\r\n        Object.keys(value[label]).map((data, i) => (\r\n          <Grid item xs lg md sm>\r\n            <TextField\r\n              label={LabelNameData[data]}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              name={data}\r\n              value={value[label][data]}\r\n              onChange={(e) => updateValue(e, label)}\r\n              error={errors[label] && errors[label][data]}\r\n              helperText={\r\n                errors[label] && errors[label][data] ? errors[label][data] : \"\"\r\n              }\r\n            />\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\nconst AddMicroorganism = () => {\r\n  const dispatch = useDispatch();\r\n  const MicroorganismAdd = useSelector(\r\n    (state) => state.catalogue.addMicroorganism\r\n  );\r\n  // Stepper logic\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [completed, setCompleted] = useState({});\r\n  const steps = getSteps();\r\n  const totalSteps = () => steps.length;\r\n  const completedSteps = () => Object.keys(completed).length;\r\n  const isLastStep = () => activeStep === totalSteps() - 1;\r\n  const allStepsCompleted = () => completedSteps() === totalSteps();\r\n\r\n  const [label, setLabel] = useState(\"\");\r\n  const handleNext = (label) => {\r\n    // handleSubmit();\r\n    console.log(errors[label]);\r\n    if (errors[label] == undefined) {\r\n      const newActiveStep =\r\n        isLastStep() && !allStepsCompleted()\r\n          ? steps.findIndex((step, i) => !(i in completedSteps))\r\n          : activeStep + 1;\r\n      setActiveStep(newActiveStep);\r\n    }\r\n  };\r\n\r\n  const handleMoveScreen = (label) => {\r\n    handleSubmit();\r\n    setLabel(label);\r\n  };\r\n\r\n  const handleBack = () =>\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  const handleStep = (step) => () => setActiveStep(step);\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  // On submit handle\r\n  const handleFormSubmission = () => {\r\n    if (Object.keys(errors) == 0) {\r\n      dispatch(addMicroorganism(value));\r\n    } else {\r\n      console.log(\"Still have some errors\");\r\n    }\r\n  };\r\n\r\n  // Form logic\r\n  const { handleSubmit, value, updateValue, errors, setData } =\r\n    useFormMicroorganismAdd(\r\n      initialFormData,\r\n      handleFormSubmission,\r\n      MicroorganismAddValidator\r\n    );\r\n  useEffect(() => {\r\n    if (label != \"\") {\r\n      handleNext(label);\r\n    }\r\n  }, [errors]);\r\n  // Spinner Function\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">\r\n          Microorganism Data is being added\r\n        </h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (MicroorganismAdd.adding) {\r\n    return (\r\n      <SideBar active=\"Catalogue\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (MicroorganismAdd.error.found) {\r\n    return (\r\n      <SideBar active=\"Catalogue\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(MicroorganismAdd.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n  if (MicroorganismAdd.added) {\r\n    dispatch({ type: authConstants.ADD_MICROORGANISM_RESET });\r\n    alert(\"returning to the main page\");\r\n    return <Redirect to=\"/adminDashboard/Microorganisms\" />;\r\n  }\r\n\r\n  return (\r\n    <SideBar active=\"Catalogue\">\r\n      <Grid\r\n        contianer\r\n        lg\r\n        sm\r\n        md\r\n        xs\r\n        style={{ minHeight: \"90vh\", overflow: \"scroll\" }}\r\n      >\r\n        <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel>{LabelNameData[label]}</StepLabel>\r\n              <StepContent>\r\n                {getStepContent(label, value, errors, updateValue)}\r\n                <div style={{ margin: \"1rem 0\" }}>\r\n                  <div>\r\n                    <Button disabled={activeStep === 0} onClick={handleBack}>\r\n                      Back\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => handleMoveScreen(label)}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </StepContent>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <Grid item xs lg md sm>\r\n          {allStepsCompleted() ? (\r\n            <div>\r\n              <Typography>\r\n                All steps completed - you&apos;re finished\r\n              </Typography>\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div>content</div>\r\n              <div>\r\n                <Button disabled={activeStep === 0} onClick={handleBack}>\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleNext}\r\n                >\r\n                  Next\r\n                </Button>\r\n                {activeStep !== steps.length &&\r\n                  (completed[activeStep] ? (\r\n                    `Step ${activeStep + 1} already completed`\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleComplete}\r\n                    >\r\n                      {completedSteps() === totalSteps() - 1\r\n                        ? \"Finish\"\r\n                        : \"Complete Step\"}\r\n                    </Button>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AddMicroorganism;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\index.js",["1600","1601","1602","1603","1604","1605","1606","1607","1608"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { fetchMicroorganismData, updateMicroorganismData } from \"actions\";\r\n// import { TabPanel } from \"@material-ui/lab\";\r\nimport SideBar from \"components/SideBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { initialFormData } from \"./initialFormData\";\r\nimport { LabelNameData } from \"./LabelNameData\";\r\nimport MicroorganismDetailsValidator from \"./MicroorganismDetailsValidator\";\r\nimport useFormMicroorganismDetails from \"./useFormMicroorganismDetails\";\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div role=\"tabpanel\" hidden={value !== index} {...other}>\r\n      {value === index && (\r\n        <Card style={{ padding: \"1rem 3rem\" }} p={3}>\r\n          <CardContent>{children}</CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MicroorganismDetails = (props) => {\r\n  const { id } = props.location.state;\r\n  const dispatch = useDispatch();\r\n  const micro = useSelector((state) => state.catalogue.fetchMicroorganism.data);\r\n  const fetchMicroorganism = useSelector(\r\n    (state) => state.catalogue.fetchMicroorganism\r\n  );\r\n\r\n  // Edit\r\n  const [edit, setEdit] = useState(false);\r\n  const handleEditChange = (e) => {\r\n    if (edit) {\r\n      handleSubmit(e);\r\n    } else {\r\n      setEdit(true);\r\n    }\r\n  };\r\n  // Select tab\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const handleTabChange = (event, value) => {\r\n    setSelectedTab(value);\r\n  };\r\n\r\n  //   Fetching Data\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMicroorganismData({ id }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(micro);\r\n  }, [micro]);\r\n\r\n  // Handlers\r\n  const handleFormSubmission = () => {\r\n    setEdit(false);\r\n    dispatch(updateMicroorganismData({ data: value, id }));\r\n  };\r\n\r\n  //  Data and Validators\r\n  const { handleSubmit, value, updateValue, errors, setData } =\r\n    useFormMicroorganismDetails(\r\n      initialFormData,\r\n      handleFormSubmission,\r\n      MicroorganismDetailsValidator\r\n    );\r\n\r\n  // Spinner Function\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">\r\n          Microorganism Data is being fetched\r\n        </h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (fetchMicroorganism.fetching) {\r\n    return (\r\n      <SideBar active=\"Catalogue\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (fetchMicroorganism.error.found) {\r\n    return (\r\n      <SideBar active=\"Catalogue\">\r\n        <div className=\"users__content__div\">\r\n          {ErrorMessage(fetchMicroorganism.error.message)}\r\n        </div>\r\n      </SideBar>\r\n    );\r\n  }\r\n  return (\r\n    <SideBar active=\"Catalogue\">\r\n      <div style={{ minHeight: \"90vh\" }}>\r\n        {value.CoreDataSets && (\r\n          <div\r\n            style={{\r\n              marginTop: \"1rem\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h5>\r\n              {\" \"}\r\n              {`${value.CoreDataSets.Genus} ${value.CoreDataSets.SpeciesEpithet}`}\r\n            </h5>\r\n            <Button color=\"primary\" onClick={handleEditChange}>\r\n              {edit ? \"Save\" : \"Edit\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <AppBar position=\"static\" color=\"white\">\r\n          <Tabs\r\n            value={selectedTab}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            {Object.keys(value).map((val, index) => (\r\n              <Tab label={LabelNameData[val]} key={index} />\r\n            ))}\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        {Object.keys(value).map((val, index) => (\r\n          <TabPanel value={selectedTab} index={index} key={index}>\r\n            <Grid container xs lg md sm direction=\"column\" spacing={2}>\r\n              {Object.keys(value[val]).map((data, i) => (\r\n                <Grid item xs lg md sm>\r\n                  {/* {data === \"OtherCollectionNumbers\" ? (\r\n                    <Autocomplete\r\n                      multiple\r\n                      //   value={value[val][data]}\r\n                      //   onChange={(e) => updateValue(e, val)}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"standard\"\r\n                          label=\"Multiple values\"\r\n                          placeholder=\"Favorites\"\r\n                          //   error={errors[data]}\r\n                          //   helperText={errors[data] ? errors[data] : \"\"}\r\n                        />\r\n                      )}\r\n                    />\r\n                  ) : ( */}\r\n                  <TextField\r\n                    label={LabelNameData[data]}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    name={data}\r\n                    disabled={!edit}\r\n                    value={value[val][data]}\r\n                    onChange={(e) => updateValue(e, val)}\r\n                    error={errors[data]}\r\n                    helperText={errors[data] ? errors[data] : \"\"}\r\n                  />\r\n                  {/* )} */}\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </TabPanel>\r\n        ))}\r\n        {/* <TabPanel value={selectedTab} index={0}>\r\n          <Grid container lg sm md xs direction=\"column\" spacing={2}>\r\n            <Grid item lg sm md xs>\r\n              <TextField\r\n                label=\"Genus\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                helperText=\"Genus cannot be empty\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg sm md xs>\r\n              <TextField label=\"Species\" fullWidth variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item lg sm md xs>\r\n              <TextField label=\"AccessionNumber\" fullWidth variant=\"outlined\" />\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={1}>\r\n          THis is the second tab\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={2}>\r\n          THis is the third tab\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={3}>\r\n          THis is the fourth tab\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={4}>\r\n          THis is the fifth tab\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={5}>\r\n          THis is the sixth tab\r\n        </TabPanel> */}\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default MicroorganismDetails;\r\n\r\n{\r\n  /* <Accordion>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1c-content\"\r\n            id=\"panel1c-header\"\r\n          >\r\n            <div style={{ flexBasis: \"33.3%\" }}>Heading</div>\r\n            <div style={{ color: \"silver\" }}>Description</div>\r\n          </AccordionSummary>\r\n          <AccordionDetails style={{ alignItems: \"center\" }}>\r\n            <div style={{ flexBasis: \"33.3%\" }}>FieldNamedfgdfgfd</div>\r\n            <div style={{ flexBasis: \"67.7%\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                \r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion> */\r\n}\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\initialFormData.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\MicroorganismDetailsValidator.js",["1609"],"const getCurrentDate = (seperator = \"-\") => {\r\n  let newDate = new Date();\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth() + 1;\r\n  let year = newDate.getFullYear();\r\n\r\n  return `${year}${seperator}${month}${seperator}${date}`;\r\n};\r\n\r\nconst MicroorganismDetailsValidator = (value) => {\r\n  let errors = {};\r\n  if (!value.CoreDataSets.Genus) {\r\n    errors.Genus = \"Genus cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.AccessionNumber) {\r\n    errors.AccessionNumber = \"Accession Number cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.SpeciesEpithet) {\r\n    errors.SpeciesEpithet = \"Species Epithet cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.Author) {\r\n    errors.Author = \"Author cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.OrganismType) {\r\n    errors.OrganismType = \"One of the Organism Type must be selected\";\r\n  }\r\n  if (!value.CoreDataSets.HistoryOfDeposit) {\r\n    errors.HistoryOfDeposit = \"History of Deposit cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.DateOfIsolation) {\r\n    errors.DateOfIsolation = \"Date of Isolation cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.IsolatedFrom) {\r\n    errors.IsolatedFrom = \"Isolated From cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.GeographicOrigin) {\r\n    errors.GeographicOrigin = \"Geographic Origin cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.Status) {\r\n    errors.Status = \"One of the Status must be selected\";\r\n  }\r\n\r\n  if (!value.CoreDataSets.Medium) {\r\n    errors.Medium = \"Medium cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.OptimumGrowthTemperature) {\r\n    errors.OptimumGrowthTemperature =\r\n      \"Optimum Growth Temperature cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.MaximumGrowthTemperature) {\r\n    errors.MaximumGrowthTemperature =\r\n      \"Maximum Growth Temperature cannot be empty\";\r\n  }\r\n  if (!value.CoreDataSets.MinimumGrowthTemperature) {\r\n    errors.MinimumGrowthTemperature =\r\n      \"Minimum Growth Temperature cannot be empty\";\r\n  }\r\n\r\n  //   Screen 2\r\n\r\n  if (!value.Name.TaxonomyID) {\r\n    errors.TaxonomyID = \"Taxonomy ID cannot be empty\";\r\n  } else if (!parseInt(value.Name.TaxonomyID)) {\r\n    errors.TaxonomyID = \"Taxonomy ID must be a number\";\r\n  }\r\n\r\n  //   Screen 3\r\n\r\n  if (!value.StrainAdministration.DateOfAccession) {\r\n    errors.DateOfAccession = \"Date Of Accession cannot be empty\";\r\n  } else if (new Date(value.DateOfAccession) > new Date()) {\r\n    errors.DateOfAccession = \"Date of Accession cannot be in the future\";\r\n  }\r\n  if (\r\n    value.StrainAdministration.HerbariumNo &&\r\n    !parseInt(value.StrainAdministration.HerbariumNo)\r\n  ) {\r\n    errors.HerbariumNo = \"Herbarium No must be a number\";\r\n  }\r\n  if (\r\n    value.StrainAdministration.AnimalQuarantineNo &&\r\n    !parseInt(value.StrainAdministration.AnimalQuarantineNo)\r\n  ) {\r\n    errors.AnimalQuarantineNo = \"Animal Quarantine No must be a number\";\r\n  }\r\n  if (\r\n    value.StrainAdministration.PlantQuarantineNo &&\r\n    !parseInt(value.StrainAdministration.PlantQuarantineNo)\r\n  ) {\r\n    errors.PlantQuarantineNo = \"Plant Quarantine No must be a number\";\r\n  }\r\n\r\n  //   Screen 4\r\n\r\n  if (\r\n    value.EnviromentAndHistory.DateOfCollection &&\r\n    new Date(value.EnviromentAndHistory.DateOfCollection) > new Date()\r\n  ) {\r\n    errors.DateOfCollection = \"Date of Collection cannot be in the future\";\r\n  }\r\n  if (\r\n    value.EnviromentAndHistory.DateOfIdentification &&\r\n    new Date(value.EnviromentAndHistory.DateOfIdentification) > new Date()\r\n  ) {\r\n    errors.DateOfIdentification =\r\n      \"Date of Identification cannot be in the future\";\r\n  }\r\n  if (\r\n    value.EnviromentAndHistory.DateOfDeposition &&\r\n    new Date(value.EnviromentAndHistory.DateOfDeposition) > new Date()\r\n  ) {\r\n    errors.DateOfDeposition = \"Date of Deposition cannot be in the future\";\r\n  }\r\n\r\n  //   Screen 10\r\n  if (\r\n    value.GrowthConditions.MaximumGrowthPH &&\r\n    !parseFloat(value.GrowthConditions.MaximumGrowthPH)\r\n  ) {\r\n    errors.MaximumGrowthPH = \"MaximumGrowthPH must be a number\";\r\n  }\r\n  if (\r\n    value.GrowthConditions.MinimumGrowthPH &&\r\n    !parseFloat(value.GrowthConditions.MinimumGrowthPH)\r\n  ) {\r\n    errors.MinimumGrowthPH = \"MinimumGrowthPH must be a number\";\r\n  }\r\n  if (\r\n    value.GrowthConditions.MaximumNaClConcentration &&\r\n    !parseFloat(value.GrowthConditions.MaximumNaClConcentration)\r\n  ) {\r\n    errors.MaximumNaClConcentration =\r\n      \"MaximumNaClConcentration must be a number\";\r\n  }\r\n  if (\r\n    value.GrowthConditions.MinimumNaClConcentration &&\r\n    !parseFloat(value.GrowthConditions.MinimumNaClConcentration)\r\n  ) {\r\n    errors.MinimumNaClConcentration =\r\n      \"MinimumNaClConcentration must be a number\";\r\n  }\r\n  if (\r\n    value.GrowthConditions.MaximumSugarConcentration &&\r\n    !parseFloat(value.GrowthConditions.MaximumSugarConcentration)\r\n  ) {\r\n    errors.MaximumSugarConcentration =\r\n      \"MaximumSugarConcentration must be a number\";\r\n  }\r\n  if (\r\n    value.GrowthConditions.MinimumSugarConcentration &&\r\n    !parseFloat(value.GrowthConditions.MinimumSugarConcentration)\r\n  ) {\r\n    errors.MinimumSugarConcentration =\r\n      \"MinimumSugarConcentration must be a number\";\r\n  }\r\n  //   Screen 12\r\n\r\n  if (value.Medium.MediumNumber && !parseInt(value.Medium.MediumNumber)) {\r\n    errors.MediumNumber = \"Medium Number must be a number\";\r\n  }\r\n  if (value.Medium.MediumPH && !parseFloat(value.Medium.MediumPH)) {\r\n    errors.MediumPH = \"Medium PH must be a number\";\r\n  }\r\n\r\n  //   Screen 13\r\n\r\n  if (value.Sequence.Length && !parseInt(value.Sequence.Length)) {\r\n    errors.Length = \"Length must be a number\";\r\n  }\r\n  // Screen 14\r\n  // if (value.MediumNumber && !parseInt(value.MediumNumber)) {\r\n  //   errors.MediumNumber = \"Medium Number must be a number\";\r\n  // }\r\n  // if (value.MediumPH && !parseFloat(value.MediumPH)) {\r\n  //   errors.MediumPH = \"Medium PH must be a number\";\r\n  // }\r\n  return errors;\r\n};\r\n\r\nexport default MicroorganismDetailsValidator;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\useFormMicroorganismDetails.js",["1610"],"import { useEffect, useState } from \"react\";\r\n\r\nconst useFormMicroorganismDetails = (\r\n  initialValue,\r\n  handleSubmission,\r\n  MicroorganismDetailsValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(MicroorganismDetailsValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e, parent) => {\r\n    setValue({\r\n      ...value,\r\n      [parent]: {\r\n        ...value[parent],\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const setData = (data) => {\r\n    setValue(data);\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors, setData };\r\n};\r\n\r\nexport default useFormMicroorganismDetails;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismsDetails\\LabelNameData.js",["1611","1612","1613","1614","1615"],"export const LabelNameData = {\r\n  Status: \"Status\",\r\n  UpdateStatus: \"Update Status\",\r\n  SecurityLevel: \"Security Level\",\r\n  CoreDataSets: \"Core Data Sets\",\r\n  Genus: \"Genus\",\r\n  AccessionNumber: \"Accession Number\",\r\n  OtherCollectionNumbers: \"Other Collection Numbers\",\r\n  SpeciesEpithet: \"Species Epithet\",\r\n  Author: \"Author\",\r\n  OrganismType: \"Organism Type\",\r\n  HistoryOfDeposit: \"History of Deposit\",\r\n  DateOfIsolation: \"Date of Isolation\",\r\n  IsolatedFrom: \"Isolated From\",\r\n  GeographicOrigin: \"Geographic Origin\",\r\n  Status: \"Status\",\r\n  Medium: \"Medium\",\r\n  PH: \"PH\",\r\n  TemperatureAtCollection: \"TemperatureAtCollection\",\r\n  Application: \"Application\",\r\n  Literature: \"Literature\",\r\n  OptimumGrowthTemperature: \"Optimum Growth Temperature\",\r\n  MaximumGrowthTemperature: \"Maximum Growth Temperature\",\r\n  MinimumGrowthTemperature: \"Minimum Growth Temperature\",\r\n  Name: \"Name\",\r\n  TaxonomyID: \"Taxonomy ID\",\r\n  StrainAdministration: \"Strain Administration\",\r\n  DateOfAccession: \"Date of Accession\",\r\n  HerbariumNo: \"Herbarium No\",\r\n  InternalIdentityCheck: \"Internal Identity Check\",\r\n  ModeOfPreservation: \"Mode of Preservation\",\r\n  BioHazardLevel: \"Bio Hazard Level\",\r\n  RestrictionRemarks: \"Restriction Remarks\",\r\n  CountryOfExport: \"Country of Export\",\r\n  MTA: \"MTA\",\r\n  DistributionRestriction: \"Distribution Restriction\",\r\n  AnimalQuarantineNo: \"Animal Quarantine No\",\r\n  PlantQuarantineNo: \"Plant Quarantine No\",\r\n  FormOfSupply: \"Form of Supply\",\r\n  EnviromentAndHistory: \"Enviroment and History\",\r\n  SubStrate: \"Sub Strate\",\r\n  Habitat: \"Habitat\",\r\n  Latitude: \"Latitude\",\r\n  Longitude: \"Longitude\",\r\n  Altitude: \"Altitude\",\r\n  Depth: \"Depth\",\r\n  Humidity: \"Humidity\",\r\n  PHForEnviroment: \"PH for Enviroment\",\r\n  TemperatureForEnviroment: \"Temperature For Enviroment\",\r\n  CollectionMethod: \"Collection Method\",\r\n  DateOfCollection: \"Date of Collection\",\r\n  CountryOfCollection: \"Country of Collection\",\r\n  State: \"State\",\r\n  RegionOfCollection: \"Region of Collection\",\r\n  CollectedBy: \"Collected by\",\r\n  IsolatedBy: \"Isolated by\",\r\n  MethodOfIsolation: \"Method of Isolation\",\r\n  IdentifiedBy: \"Identified By\",\r\n  DateOfIdentification: \"Date of Identification\",\r\n  DepositedBy: \"Deposited By\",\r\n  DateOfDeposition: \"Date of Deposition\",\r\n  NameAtAccept: \"Name at Accept\",\r\n  Publication: \"Publication\",\r\n  LiteratureCategories: \"Literature Categories\",\r\n  Title: \"Title\",\r\n  Author: \"Author\",\r\n  Journal: \"Journal\",\r\n  Volume: \"Volume\",\r\n  Number: \"Number\",\r\n  StartingPage: \"Starting Page\",\r\n  EndingPage: \"Ending Page\",\r\n  PageRange: \"Page Range\",\r\n  Microparasitism: \"Microparasitism\",\r\n  OtherOrganismsToxicity: \"Other Organisms Toxicity\",\r\n  NumberOfNuclie: \"Number of Nuclie\",\r\n  RehydrationFluid: \"Rehydration Fluid\",\r\n  Matingtype: \"Mating Type\",\r\n  KillerProperties: \"Killer Properties\",\r\n  ConditionsForGrowthAndMaintenanceOnSolidMedia:\r\n    \"Conditions for Growth and Maintenance on Solid Media\",\r\n  ConditionsForGrowthAndMaintenanceOnLiquidMedia:\r\n    \"Conditions for Growth and Maintenance on Liquid Media\",\r\n  HeatResistance: \"Heat Resistance\",\r\n  LightConditions: \"LightConditions\",\r\n\r\n  Year: \"Year\",\r\n  DOINumber: \"DOI Number\",\r\n  BiologicalInteractions: \"Biological Interactions\",\r\n  Symbiosis: \"Symbiosis\",\r\n  Mycoparasitism: \"Mycoparasitism\",\r\n  Pathogenicity: \"Pathogenicity\",\r\n  Allergenicity: \"Allergenicity\",\r\n  OtherOrganismToxicity: \"Other Organism Toxicity\",\r\n  AntagonisticActivities: \"Antagonistic Activities\",\r\n  Sexuality: \"Sexuality\",\r\n  SexualBehaviour: \"Sexual Behaviour\",\r\n  SexualState: \"Sexual State\",\r\n  Properties: \"Properties\",\r\n  NumberOfNuclei: \"Number of Nuclei\",\r\n  RehyderationFluid: \"Rehyderation Fluid\",\r\n  FineStructureData: \"Fine Structure Data\",\r\n  WallConstituents: \"Wall Constituents\",\r\n  CellContents: \"Cell Contents\",\r\n  CoenzymeQSystem: \"Coenzyme Q System\",\r\n  StainingReactions: \"Staining Reactions\",\r\n  PigmentProduction: \"Pigment Production\",\r\n  CellShape: \"Cell Shape\",\r\n  CellSize: \"Cell Size\",\r\n  Motile: \"Motile\",\r\n  SporeForming: \"Spore Forming\",\r\n  MotileBy: \"Motile By\",\r\n  GrnotypeAndGenetics: \"Grnotype and Genetics\",\r\n  GenotypeAndGenetics: \"Genotype and Genetics\",\r\n  Genotype: \"Genotype\",\r\n  Phenotype: \"Phenotype\",\r\n  MatingType: \"Mating Type\",\r\n  SexualReproduction: \"Sexual Reproduction\",\r\n  GCContentOfDNA: \"GC Content of DNA\",\r\n  OtherStrainsHybridization: \"Other Strains Hybridization\",\r\n  HybridizationStrainNumber: \"Hybridization Strain Number\",\r\n  TypeOfDNAOrRNA: \"Type of DNA or RNA\",\r\n  Percentage: \"Percentage\",\r\n  TemperatureOfHybridization: \"Temperature of Hybridization\",\r\n  Mutants: \"Mutants\",\r\n  MutationMethods: \"Mutation Methods\",\r\n  Hybrids: \"Hybrids\",\r\n  Plasmid: \"Plasmid\",\r\n  KillerPropertiesOfYeast: \"Killer Properties of Yeast\",\r\n  GrowthConditions: \"Growth Conditions\",\r\n  ConditionsForGrowthAndMaintenenceOnSolidMedia:\r\n    \"Conditions for Growth and MaintenenceOnSolidMedia\",\r\n  ConditionsForGrowthInLiquidMedia: \"Conditions for Growth in Liquid Media\",\r\n  ConditionsForFruitingOrSporulation: \"Conditions for Fruiting or Sporulation\",\r\n  ConditionsForGermination: \"Conditions for Germination\",\r\n  CarbonSourcesTested: \"Carbon Sources Tested\",\r\n  NitrogenSourcesTested: \"Nitrogen Sources Tested\",\r\n  SingleCompoundsTested: \"Single Compounds Tested\",\r\n  NutritionalRequirements: \"Nutritional Requirements\",\r\n  MetabolitesProduced: \"Metabolites Produced\",\r\n  TolerenceAndSensitivities: \"Tolerence and Sensitivities\",\r\n  Deficiencies: \"Deficiencies\",\r\n  TolerancesAndSensitivities: \"Tolerances and Sensitivities\",\r\n  TemperatureRelationships: \"Temperature Relationships\",\r\n  MaximumGrowthPH: \"Maximum Growth PH\",\r\n  MinimumGrowthPH: \"Minimum Growth PH\",\r\n  OptimalGrowthPH: \"Optimal Growth PH\",\r\n  LighConditions: \"Ligh Conditions\",\r\n  OxygenRelationship: \"Oxygen Relationship\",\r\n  HeatResistence: \"Heat Resistence\",\r\n  EthanolConditions: \"Ethanol Conditions\",\r\n  SalinityRequirements: \"Salinity Requirements\",\r\n  OptimalNaClConcentration: \"Optimal NaCl Concentration\",\r\n  MinimumNaClConcentration: \"Minimum NaCl Concentration\",\r\n  MaximumNaClConcentration: \"Maximum NaCl Concentration\",\r\n  OptimumNaClContentration: \"Optimum NaCl Contentration\",\r\n  OptimumSugarConcentration: \"Optimum Sugar Concentration\",\r\n  MinimumSugarConcentration: \"Minimum Sugar Concentration\",\r\n  MaximumSugarConcentration: \"Maximum Sugar Concentration\",\r\n  OsmophilyAndXerophily: \"Osmophily and Xerophily\",\r\n  WaterActivityConditions: \"Water Activity Conditions\",\r\n  ChemistryAndEnzymes: \"Chemistry and Enzymes\",\r\n  EnzymesProduced: \"Enzymes Produced\",\r\n  DecompositionAndDeterioratingCapacities:\r\n    \"Decomposition and Deteriorating Capacities\",\r\n  MetabolitiesProduced: \"Metabolities Produced\",\r\n  Biotransformations: \"Biotransformations\",\r\n  Medium: \"Medium\",\r\n  MediumNumber: \"Medium Number\",\r\n  MediumName: \"Medium Name\",\r\n  MediumComposition: \"Medium Composition\",\r\n  MediumPH: \"Medium PH\",\r\n  Sequence: \"Sequence\",\r\n  AccessionNumber: \"Accession Number\",\r\n  TargetGene: \"TargetGene\",\r\n  Definition: \"Definition\",\r\n  SequencingMethod: \"Sequencing Method\",\r\n  Length: \"Length\",\r\n  Sequencetype: \"Sequence Type\",\r\n  Source: \"Source\",\r\n  Sequence: \"Sequence\",\r\n  Catalogue: \"Catalogue\",\r\n  CatalogueName: \"Catalogue Name\",\r\n  CatalogueURL: \"Catalogue URL\",\r\n  CatalogueUpdateTime: \"Catalogue Update Time\",\r\n  ContactPersonOfCatalogue: \"Contact Person of Catalogue\",\r\n  ContactEmail: \"Contact Email\",\r\n  ContactAddress: \"Contact Address\",\r\n  ContactTelephone: \"Contact Telephone\",\r\n  ContactFax: \"Contact Fax\",\r\n  NumberOfStrains: \"Number of Strains\",\r\n\r\n  // Genus: \"\",\r\n  // AccessionNumber: \"\",\r\n  // OtherCollection: [],\r\n  // SpeciesEpithet: \"\",\r\n  // Author: \"\",\r\n  // OrganismType: \"Bacteria\",\r\n  // HistoryOfDeposit: \"\",\r\n  // DateOfIsolation: \"\",\r\n  // IsolatedFrom: \"\",\r\n  // GeographicOrigin: \"\",\r\n  // Status: \"Type\",\r\n  // Medium: \"\",\r\n  // Application: \"\",\r\n  // Literature: \"\",\r\n  // OptimumGrowthTemperature: \"\",\r\n  // MaximumGrowthTemperature: \"\",\r\n  // MinimumGrowthTemperature: \"\",\r\n  // TaxonomyID: \"\",\r\n  // DateOfAccession: \"\",\r\n  // HerbariumNo: \"\",\r\n  // InternalIdentityCheck: \"\",\r\n  // ModeOfPreservation: \"\",\r\n  // BioHazardLevel: \"1\",\r\n  // RestrictionRemarks: \"\",\r\n  // CountryOfExport: \"\",\r\n  // MTA: \"\",\r\n  // DistributionRestriction: \"\",\r\n  // AnimalQuarantineNo: \"\",\r\n  // PlantQuarantineNo: \"\",\r\n  // FormOfSupply: \"\",\r\n  // SubStrate: \"\",\r\n  // Habitat: \"\",\r\n  // Latitude: \"\",\r\n  // Longitude: \"\",\r\n  // Altitude: \"\",\r\n  // Depth: \"\",\r\n  // Humidity: \"\",\r\n  // PHForEnviroment: \"\",\r\n  // TemperatureForEnviroment: \"\",\r\n  // CollectionMethod: \"\",\r\n  // DateOfCollection: \"\",\r\n  // CountryOfCollection: \"\",\r\n  // State: \"\",\r\n  // RegionOfCollection: \"\",\r\n  // CollectedBy: \"\",\r\n  // IsolatedBy: \"\",\r\n  // MethodOfIsolation: \"\",\r\n  // IdentifiedBy: \"\",\r\n  // DateOfIdentification: \"\",\r\n  // DepositedBy: \"\",\r\n  // DateOfDeposition: \"\",\r\n  // NameAtAccept: \"\",\r\n  // LiteratureCategories: \"\",\r\n  // Title: \"\",\r\n  // Author: \"\",\r\n  // Journal: \"\",\r\n  // Volume: \"\",\r\n  // Number: \"\",\r\n  // StartingPage: \"\",\r\n  // PageRange: \"\",\r\n  // Year: \"\",\r\n  // DOINumber: \"\",\r\n  // Symbiosis: \"\",\r\n  // Mycoparasitism: \"\",\r\n  // Pathogenicity: \"\",\r\n  // Allergenicity: \"\",\r\n  // OtherOrganismToxicity: \"\",\r\n  // AntagonisticActivities: \"\",\r\n  // SexualBehaviour: \"\",\r\n  // SexualState: \"\",\r\n  // NumberOfNuclei: \"\",\r\n  // RehyderationFluid: \"\",\r\n  // FineStructureData: \"\",\r\n  // WallConstituents: \"\",\r\n  // CellContents: \"\",\r\n  // CoenzymeQSystem: \"\",\r\n  // StainingReactions: \"Positive\",\r\n  // PigmentProduction: \"\",\r\n  // CellShape: \"\",\r\n  // CellSize: \"\",\r\n  // Motile: \"Motile\",\r\n  // SporeForming: \"\",\r\n  // MotileBy: \"\",\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\LabelNameData.js",["1616","1617","1618","1619","1620"],"export const LabelNameData = {\r\n  Status: \"Status\",\r\n  UpdateStatus: \"Update Status\",\r\n  SecurityLevel: \"Security Level\",\r\n  CoreDataSets: \"Core Data Sets\",\r\n  Genus: \"Genus\",\r\n  AccessionNumber: \"Accession Number\",\r\n  OtherCollectionNumbers: \"Other Collection Numbers\",\r\n  SpeciesEpithet: \"Species Epithet\",\r\n  Author: \"Author\",\r\n  OrganismType: \"Organism Type\",\r\n  HistoryOfDeposit: \"History of Deposit\",\r\n  DateOfIsolation: \"Date of Isolation\",\r\n  IsolatedFrom: \"Isolated From\",\r\n  GeographicOrigin: \"Geographic Origin\",\r\n  Status: \"Status\",\r\n  Medium: \"Medium\",\r\n  PH: \"PH\",\r\n  TemperatureAtCollection: \"TemperatureAtCollection\",\r\n  Application: \"Application\",\r\n  Literature: \"Literature\",\r\n  OptimumGrowthTemperature: \"Optimum Growth Temperature\",\r\n  MaximumGrowthTemperature: \"Maximum Growth Temperature\",\r\n  MinimumGrowthTemperature: \"Minimum Growth Temperature\",\r\n  Name: \"Name\",\r\n  TaxonomyID: \"Taxonomy ID\",\r\n  StrainAdministration: \"Strain Administration\",\r\n  DateOfAccession: \"Date of Accession\",\r\n  HerbariumNo: \"Herbarium No\",\r\n  InternalIdentityCheck: \"Internal Identity Check\",\r\n  ModeOfPreservation: \"Mode of Preservation\",\r\n  BioHazardLevel: \"Bio Hazard Level\",\r\n  RestrictionRemarks: \"Restriction Remarks\",\r\n  CountryOfExport: \"Country of Export\",\r\n  MTA: \"MTA\",\r\n  DistributionRestriction: \"Distribution Restriction\",\r\n  AnimalQuarantineNo: \"Animal Quarantine No\",\r\n  PlantQuarantineNo: \"Plant Quarantine No\",\r\n  FormOfSupply: \"Form of Supply\",\r\n  EnviromentAndHistory: \"Enviroment and History\",\r\n  SubStrate: \"Sub Strate\",\r\n  Habitat: \"Habitat\",\r\n  Latitude: \"Latitude\",\r\n  Longitude: \"Longitude\",\r\n  Altitude: \"Altitude\",\r\n  Depth: \"Depth\",\r\n  Humidity: \"Humidity\",\r\n  PHForEnviroment: \"PH for Enviroment\",\r\n  TemperatureForEnviroment: \"Temperature For Enviroment\",\r\n  CollectionMethod: \"Collection Method\",\r\n  DateOfCollection: \"Date of Collection\",\r\n  CountryOfCollection: \"Country of Collection\",\r\n  State: \"State\",\r\n  RegionOfCollection: \"Region of Collection\",\r\n  CollectedBy: \"Collected by\",\r\n  IsolatedBy: \"Isolated by\",\r\n  MethodOfIsolation: \"Method of Isolation\",\r\n  IdentifiedBy: \"Identified By\",\r\n  DateOfIdentification: \"Date of Identification\",\r\n  DepositedBy: \"Deposited By\",\r\n  DateOfDeposition: \"Date of Deposition\",\r\n  NameAtAccept: \"Name at Accept\",\r\n  Publication: \"Publication\",\r\n  LiteratureCategories: \"Literature Categories\",\r\n  Title: \"Title\",\r\n  Author: \"Author\",\r\n  Journal: \"Journal\",\r\n  Volume: \"Volume\",\r\n  Number: \"Number\",\r\n  StartingPage: \"Starting Page\",\r\n  EndingPage: \"Ending Page\",\r\n  PageRange: \"Page Range\",\r\n  NumberOfNuclie: \"Number of Nuclie\",\r\n  RehydrationFluid: \"Rehydration Fluid\",\r\n  Matingtype: \"Mating Type\",\r\n  KillerProperties: \"Killer Properties\",\r\n  ConditionsForGrowthAndMaintenanceOnSolidMedia:\r\n    \"Conditions for Growth and Maintenance on Solid Media\",\r\n  ConditionsForGrowthAndMaintenanceOnLiquidMedia:\r\n    \"Conditions for Growth and Maintenance on Liquid Media\",\r\n  HeatResistance: \"Heat Resistance\",\r\n  LightConditions: \"LightConditions\",\r\n\r\n  Year: \"Year\",\r\n  DOINumber: \"DOI Number\",\r\n  BiologicalInteractions: \"Biological Interactions\",\r\n  Symbiosis: \"Symbiosis\",\r\n  Microparasitism: \"Mycoparasitism\",\r\n  Pathogenicity: \"Pathogenicity\",\r\n  Allergenicity: \"Allergenicity\",\r\n  OtherOrganismsToxicity: \"Other Organism Toxicity\",\r\n  AntagonisticActivities: \"Antagonistic Activities\",\r\n  Sexuality: \"Sexuality\",\r\n  SexualBehaviour: \"Sexual Behaviour\",\r\n  SexualState: \"Sexual State\",\r\n  Properties: \"Properties\",\r\n  NumberOfNuclei: \"Number of Nuclei\",\r\n  RehyderationFluid: \"Rehyderation Fluid\",\r\n  FineStructureData: \"Fine Structure Data\",\r\n  WallConstituents: \"Wall Constituents\",\r\n  CellContents: \"Cell Contents\",\r\n  CoenzymeQSystem: \"Coenzyme Q System\",\r\n  StainingReactions: \"Staining Reactions\",\r\n  PigmentProduction: \"Pigment Production\",\r\n  CellShape: \"Cell Shape\",\r\n  CellSize: \"Cell Size\",\r\n  Motile: \"Motile\",\r\n  SporeForming: \"Spore Forming\",\r\n  MotileBy: \"Motile By\",\r\n  GrnotypeAndGenetics: \"Grnotype and Genetics\",\r\n  GenotypeAndGenetics: \"Genotype and Genetics\",\r\n  Genotype: \"Genotype\",\r\n  Phenotype: \"Phenotype\",\r\n  MatingType: \"Mating Type\",\r\n  SexualReproduction: \"Sexual Reproduction\",\r\n  GCContentOfDNA: \"GC Content of DNA\",\r\n  OtherStrainsHybridization: \"Other Strains Hybridization\",\r\n  HybridizationStrainNumber: \"Hybridization Strain Number\",\r\n  TypeOfDNAOrRNA: \"Type of DNA or RNA\",\r\n  Percentage: \"Percentage\",\r\n  TemperatureOfHybridization: \"Temperature of Hybridization\",\r\n  Mutants: \"Mutants\",\r\n  MutationMethods: \"Mutation Methods\",\r\n  Hybrids: \"Hybrids\",\r\n  Plasmid: \"Plasmid\",\r\n  KillerPropertiesOfYeast: \"Killer Properties of Yeast\",\r\n  GrowthConditions: \"Growth Conditions\",\r\n  ConditionsForGrowthAndMaintenenceOnSolidMedia:\r\n    \"Conditions for Growth and MaintenenceOnSolidMedia\",\r\n  ConditionsForGrowthInLiquidMedia: \"Conditions for Growth in Liquid Media\",\r\n  ConditionsForFruitingOrSporulation: \"Conditions for Fruiting or Sporulation\",\r\n  ConditionsForGermination: \"Conditions for Germination\",\r\n  CarbonSourcesTested: \"Carbon Sources Tested\",\r\n  NitrogenSourcesTested: \"Nitrogen Sources Tested\",\r\n  SingleCompoundsTested: \"Single Compounds Tested\",\r\n  NutritionalRequirements: \"Nutritional Requirements\",\r\n  MetabolitesProduced: \"Metabolites Produced\",\r\n  TolerenceAndSensitivities: \"Tolerence and Sensitivities\",\r\n  Deficiencies: \"Deficiencies\",\r\n  TolerancesAndSensitivities: \"Tolerances and Sensitivities\",\r\n  TemperatureRelationships: \"Temperature Relationships\",\r\n  MaximumGrowthPH: \"Maximum Growth PH\",\r\n  MinimumGrowthPH: \"Minimum Growth PH\",\r\n  OptimalGrowthPH: \"Optimal Growth PH\",\r\n  LighConditions: \"Ligh Conditions\",\r\n  OxygenRelationship: \"Oxygen Relationship\",\r\n  HeatResistence: \"Heat Resistence\",\r\n  EthanolConditions: \"Ethanol Conditions\",\r\n  SalinityRequirements: \"Salinity Requirements\",\r\n  OptimalNaClConcentration: \"Optimal NaCl Concentration\",\r\n  MinimumNaClConcentration: \"Minimum NaCl Concentration\",\r\n  MaximumNaClConcentration: \"Maximum NaCl Concentration\",\r\n  OptimumNaClContentration: \"Optimum NaCl Contentration\",\r\n  OptimumSugarConcentration: \"Optimum Sugar Concentration\",\r\n  MinimumSugarConcentration: \"Minimum Sugar Concentration\",\r\n  MaximumSugarConcentration: \"Maximum Sugar Concentration\",\r\n  OsmophilyAndXerophily: \"Osmophily and Xerophily\",\r\n  WaterActivityConditions: \"Water Activity Conditions\",\r\n  ChemistryAndEnzymes: \"Chemistry and Enzymes\",\r\n  EnzymesProduced: \"Enzymes Produced\",\r\n  DecompositionAndDeterioratingCapacities:\r\n    \"Decomposition and Deteriorating Capacities\",\r\n  MetabolitiesProduced: \"Metabolities Produced\",\r\n  Biotransformations: \"Biotransformations\",\r\n  Medium: \"Medium\",\r\n  MediumNumber: \"Medium Number\",\r\n  MediumName: \"Medium Name\",\r\n  MediumComposition: \"Medium Composition\",\r\n  MediumPH: \"Medium PH\",\r\n  Sequence: \"Sequence\",\r\n  AccessionNumber: \"Accession Number\",\r\n  TargetGene: \"TargetGene\",\r\n  Definition: \"Definition\",\r\n  SequencingMethod: \"Sequencing Method\",\r\n  Length: \"Length\",\r\n  Sequencetype: \"Sequence Type\",\r\n  Source: \"Source\",\r\n  Sequence: \"Sequence\",\r\n  Catalogue: \"Catalogue\",\r\n  CatalogueName: \"Catalogue Name\",\r\n  CatalogueURL: \"Catalogue URL\",\r\n  CatalogueUpdateTime: \"Catalogue Update Time\",\r\n  ContactPersonOfCatalogue: \"Contact Person of Catalogue\",\r\n  ContactEmail: \"Contact Email\",\r\n  ContactAddress: \"Contact Address\",\r\n  ContactTelephone: \"Contact Telephone\",\r\n  ContactFax: \"Contact Fax\",\r\n  NumberOfStrains: \"Number of Strains\",\r\n\r\n  // Genus: \"\",\r\n  // AccessionNumber: \"\",\r\n  // OtherCollection: [],\r\n  // SpeciesEpithet: \"\",\r\n  // Author: \"\",\r\n  // OrganismType: \"Bacteria\",\r\n  // HistoryOfDeposit: \"\",\r\n  // DateOfIsolation: \"\",\r\n  // IsolatedFrom: \"\",\r\n  // GeographicOrigin: \"\",\r\n  // Status: \"Type\",\r\n  // Medium: \"\",\r\n  // Application: \"\",\r\n  // Literature: \"\",\r\n  // OptimumGrowthTemperature: \"\",\r\n  // MaximumGrowthTemperature: \"\",\r\n  // MinimumGrowthTemperature: \"\",\r\n  // TaxonomyID: \"\",\r\n  // DateOfAccession: \"\",\r\n  // HerbariumNo: \"\",\r\n  // InternalIdentityCheck: \"\",\r\n  // ModeOfPreservation: \"\",\r\n  // BioHazardLevel: \"1\",\r\n  // RestrictionRemarks: \"\",\r\n  // CountryOfExport: \"\",\r\n  // MTA: \"\",\r\n  // DistributionRestriction: \"\",\r\n  // AnimalQuarantineNo: \"\",\r\n  // PlantQuarantineNo: \"\",\r\n  // FormOfSupply: \"\",\r\n  // SubStrate: \"\",\r\n  // Habitat: \"\",\r\n  // Latitude: \"\",\r\n  // Longitude: \"\",\r\n  // Altitude: \"\",\r\n  // Depth: \"\",\r\n  // Humidity: \"\",\r\n  // PHForEnviroment: \"\",\r\n  // TemperatureForEnviroment: \"\",\r\n  // CollectionMethod: \"\",\r\n  // DateOfCollection: \"\",\r\n  // CountryOfCollection: \"\",\r\n  // State: \"\",\r\n  // RegionOfCollection: \"\",\r\n  // CollectedBy: \"\",\r\n  // IsolatedBy: \"\",\r\n  // MethodOfIsolation: \"\",\r\n  // IdentifiedBy: \"\",\r\n  // DateOfIdentification: \"\",\r\n  // DepositedBy: \"\",\r\n  // DateOfDeposition: \"\",\r\n  // NameAtAccept: \"\",\r\n  // LiteratureCategories: \"\",\r\n  // Title: \"\",\r\n  // Author: \"\",\r\n  // Journal: \"\",\r\n  // Volume: \"\",\r\n  // Number: \"\",\r\n  // StartingPage: \"\",\r\n  // PageRange: \"\",\r\n  // Year: \"\",\r\n  // DOINumber: \"\",\r\n  // Symbiosis: \"\",\r\n  // Mycoparasitism: \"\",\r\n  // Pathogenicity: \"\",\r\n  // Allergenicity: \"\",\r\n  // OtherOrganismToxicity: \"\",\r\n  // AntagonisticActivities: \"\",\r\n  // SexualBehaviour: \"\",\r\n  // SexualState: \"\",\r\n  // NumberOfNuclei: \"\",\r\n  // RehyderationFluid: \"\",\r\n  // FineStructureData: \"\",\r\n  // WallConstituents: \"\",\r\n  // CellContents: \"\",\r\n  // CoenzymeQSystem: \"\",\r\n  // StainingReactions: \"Positive\",\r\n  // PigmentProduction: \"\",\r\n  // CellShape: \"\",\r\n  // CellSize: \"\",\r\n  // Motile: \"Motile\",\r\n  // SporeForming: \"\",\r\n  // MotileBy: \"\",\r\n};\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\useFormMicroorganismAdd.js",["1621"],"import { useEffect, useState } from \"react\";\r\n\r\nconst useFormMicroorganismAdd = (\r\n  initialValue,\r\n  handleSubmission,\r\n  MicroorganismDetailsValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    // e.preventDefault();\r\n    setErrors(MicroorganismDetailsValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e, parent) => {\r\n    setValue({\r\n      ...value,\r\n      [parent]: {\r\n        ...value[parent],\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const setData = (data) => {\r\n    setValue(data);\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors, setData };\r\n};\r\n\r\nexport default useFormMicroorganismAdd;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\initialFormData.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\MicroorganismAdd\\MicroorganismAddValidator.js",["1622"],"const getCurrentDate = (seperator = \"-\") => {\r\n  let newDate = new Date();\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth() + 1;\r\n  let year = newDate.getFullYear();\r\n\r\n  return `${year}${seperator}${month}${seperator}${date}`;\r\n};\r\n\r\nconst MicroorganismAddValidator = (value) => {\r\n  let errors = {\r\n    // Name: {},\r\n    // StrainAdministration: {...errors.StrainAdministration,},\r\n    // EnviromentAndHistory: {...errors.EnviromentAndHistory,},\r\n    // Publication: {},\r\n    // BiologicalInteractions: {},\r\n    // Sexuality: {},\r\n    // Properties: {},\r\n    // GenotypeAndGenetics: {},\r\n    // GrowthConditions: {...errors.GrowthConditions,},\r\n    // ChemistryAndEnzymes: {},\r\n    // Medium: {},\r\n    // Sequence: {},\r\n    // Catalogue: {},\r\n  };\r\n  if (!value.CoreDataSets.Genus) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: { ...errors.CoreDataSets, Genus: \"Genus cannot be empty\" },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.AccessionNumber) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        AccessionNumber: \"Accession Number cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.SpeciesEpithet) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        SpeciesEpithet: \"Species Epithet cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.Author) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        Author: \"Author cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.OrganismType) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        OrganismType: \"One of the Organism Type must be selected\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.HistoryOfDeposit) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        HistoryOfDeposit: \"History of Deposit cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.DateOfIsolation) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        DateOfIsolation: \"Date of Isolation cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.IsolatedFrom) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        IsolatedFrom: \"Isolated From cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.GeographicOrigin) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        GeographicOrigin: \"Geographic Origin cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.Status) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        Status: \"One of the Status must be selected\",\r\n      },\r\n    };\r\n  }\r\n\r\n  if (!value.CoreDataSets.Medium) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        Medium: \"Medium cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.OptimumGrowthTemperature) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        OptimumGrowthTemperature: \"Optimum Growth Temperature cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.MaximumGrowthTemperature) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        MaximumGrowthTemperature: \"Maximum Growth Temperature cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.CoreDataSets.MinimumGrowthTemperature) {\r\n    errors = {\r\n      ...errors,\r\n      CoreDataSets: {\r\n        ...errors.CoreDataSets,\r\n        MinimumGrowthTemperature: \"Minimum Growth Temperature cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //   Screen 2\r\n\r\n  if (!value.Name.TaxonomyID) {\r\n    errors = {\r\n      ...errors,\r\n      Name: { ...errors.Name, TaxonomyID: \"Taxonomy ID cannot be empty\" },\r\n    };\r\n  } else if (!parseInt(value.Name.TaxonomyID)) {\r\n    errors = {\r\n      ...errors,\r\n      Name: { ...errors.Name, TaxonomyID: \"Taxonomy ID must be a number\" },\r\n    };\r\n  }\r\n\r\n  //   Screen 3\r\n\r\n  if (!value.StrainAdministration.DateOfAccession) {\r\n    errors = {\r\n      ...errors,\r\n      StrainAdministration: {\r\n        ...errors.StrainAdministration,\r\n        DateOfAccession: \"Date Of Accession cannot be empty\",\r\n      },\r\n    };\r\n  } else if (new Date(value.DateOfAccession) > new Date()) {\r\n    errors = {\r\n      ...errors,\r\n      StrainAdministration: {\r\n        ...errors.StrainAdministration,\r\n        DateOfAccession: \"Date of Accession cannot be in the future\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.StrainAdministration.HerbariumNo &&\r\n    !parseInt(value.StrainAdministration.HerbariumNo)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      StrainAdministration: {\r\n        ...errors.StrainAdministration,\r\n        HerbariumNo: \"Herbarium No must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.StrainAdministration.AnimalQuarantineNo &&\r\n    !parseInt(value.StrainAdministration.AnimalQuarantineNo)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      StrainAdministration: {\r\n        ...errors.StrainAdministration,\r\n        AnimalQuarantineNo: \"Animal Quarantine No must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.StrainAdministration.PlantQuarantineNo &&\r\n    !parseInt(value.StrainAdministration.PlantQuarantineNo)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      StrainAdministration: {\r\n        ...errors.StrainAdministration,\r\n        PlantQuarantineNo: \"Plant Quarantine No must be a number\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //   Screen 4\r\n\r\n  if (\r\n    !value.EnviromentAndHistory.DateOfCollection &&\r\n    new Date(value.EnviromentAndHistory.DateOfCollection) > new Date()\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      EnviromentAndHistory: {\r\n        ...errors.EnviromentAndHistory,\r\n        DateOfCollection: \"Date of Collection cannot be in the future\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.EnviromentAndHistory.DateOfIdentification &&\r\n    new Date(value.EnviromentAndHistory.DateOfIdentification) > new Date()\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      EnviromentAndHistory: {\r\n        ...errors.EnviromentAndHistory,\r\n        DateOfIdentification: \"Date of Identification cannot be in the future\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.EnviromentAndHistory.DateOfDeposition &&\r\n    new Date(value.EnviromentAndHistory.DateOfDeposition) > new Date()\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      EnviromentAndHistory: {\r\n        ...errors.EnviromentAndHistory,\r\n        DateOfDeposition: \"Date of Deposition cannot be in the future\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //   Screen 10\r\n  if (\r\n    !value.GrowthConditions.MaximumGrowthPH &&\r\n    !parseFloat(value.GrowthConditions.MaximumGrowthPH)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      GrowthConditions: {\r\n        ...errors.GrowthConditions,\r\n        MaximumGrowthPH: \"MaximumGrowthPH must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.GrowthConditions.MinimumGrowthPH &&\r\n    !parseFloat(value.GrowthConditions.MinimumGrowthPH)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      GrowthConditions: {\r\n        ...errors.GrowthConditions,\r\n        MinimumGrowthPH: \"MinimumGrowthPH must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.GrowthConditions.MaximumNaClConcentration &&\r\n    !parseFloat(value.GrowthConditions.MaximumNaClConcentration)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      GrowthConditions: {\r\n        ...errors.GrowthConditions,\r\n        MaximumNaClConcentration: \"MaximumNaClConcentration must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.GrowthConditions.MinimumNaClConcentration &&\r\n    !parseFloat(value.GrowthConditions.MinimumNaClConcentration)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      GrowthConditions: {\r\n        ...errors.GrowthConditions,\r\n        MinimumNaClConcentration: \"MinimumNaClConcentration must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.GrowthConditions.MaximumSugarConcentration &&\r\n    !parseFloat(value.GrowthConditions.MaximumSugarConcentration)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      GrowthConditions: {\r\n        ...errors.GrowthConditions,\r\n        MaximumSugarConcentration: \"MaximumSugarConcentration must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (\r\n    !value.GrowthConditions.MinimumSugarConcentration &&\r\n    !parseFloat(value.GrowthConditions.MinimumSugarConcentration)\r\n  ) {\r\n    errors = {\r\n      ...errors,\r\n      GrowthConditions: {\r\n        ...errors.GrowthConditions,\r\n        MinimumSugarConcentration: \"MinimumSugarConcentration must be a number\",\r\n      },\r\n    };\r\n  }\r\n  //   Screen 12\r\n\r\n  if (!value.Medium.MediumNumber && !parseInt(value.Medium.MediumNumber)) {\r\n    errors = {\r\n      ...errors,\r\n      Medium: {\r\n        ...errors.Medium,\r\n        MediumNumber: \"Medium Number must be a number\",\r\n      },\r\n    };\r\n  }\r\n  if (!value.Medium.MediumPH && !parseFloat(value.Medium.MediumPH)) {\r\n    errors = {\r\n      ...errors,\r\n      Medium: { ...errors.Medium, MediumPH: \"Medium PH must be a number\" },\r\n    };\r\n  }\r\n\r\n  //   Screen 13\r\n\r\n  if (!value.Sequence.Length && !parseInt(value.Sequence.Length)) {\r\n    errors = {\r\n      ...errors,\r\n      Sequence: { ...errors.Sequence, Length: \"Length must be a number\" },\r\n    };\r\n  }\r\n  if (!value.Catalogue.CatalogueName) {\r\n    errors = {\r\n      ...errors,\r\n      Catalogue: {\r\n        ...errors.Catalogue,\r\n        CatalogueName: \"Catalogue Name cannot be empty\",\r\n      },\r\n    };\r\n  }\r\n  // Screen 14\r\n  // if (value.MediumNumber && !parseInt(value.MediumNumber)) {\r\n  //   errors.MediumNumber : \"Medium Number must be a number\";\r\n  // }\r\n  // if (value.MediumPH && !parseFloat(value.MediumPH)) {\r\n  //   errors.MediumPH : \"Medium PH must be a number\";\r\n  // }\r\n  return errors;\r\n};\r\n\r\nexport default MicroorganismAddValidator;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\logs.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\log.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\LogDetails\\index.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\ReportsAndLogs\\index.js",["1623","1624"],"import {\r\n  Divider,\r\n  Drawer,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport Logs from \"components/Logs\";\r\nimport DepositReport from \"components/Reports/Deposit Report\";\r\nimport MicroorganismReport from \"components/Reports/Microorganism Report\";\r\nimport OrderReport from \"components/Reports/Order Report\";\r\nimport PaymentReport from \"components/Reports/Payment Report\";\r\nimport UserReport from \"components/Reports/User Report\";\r\nimport SideBar from \"components/SideBar\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReportsAndLogs = () => {\r\n  const [option, setOption] = useState(\"\");\r\n\r\n  const getContent = () => {\r\n    switch (option) {\r\n      case \"\" || \"Payment Report\":\r\n        return <PaymentReport />;\r\n      case \"Order Report\":\r\n        return <OrderReport />;\r\n      case \"Deposit Report\":\r\n        return <DepositReport />;\r\n      case \"User Report\":\r\n        return <UserReport />;\r\n      case \"Microorganism Report\":\r\n        return <MicroorganismReport />;\r\n      case \"Deposit Report\":\r\n        return <DepositReport />;\r\n      case \"Logs\":\r\n        return <Logs />;\r\n      default:\r\n        return <PaymentReport />;\r\n    }\r\n  };\r\n  return (\r\n    <SideBar active=\"ReportsAndLogs\">\r\n      <Grid container style={{ minHeight: \"90vh\" }}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={2}\r\n          lg={2}\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            PaperProps={{\r\n              style: {\r\n                position: \"absolute\",\r\n                width: \"130%\",\r\n                marginLeft: \"-30px\",\r\n              },\r\n            }}\r\n          >\r\n            <div style={{ margin: \"1rem 1rem\" }}>\r\n              <h4>Reports</h4>\r\n            </div>\r\n            <List>\r\n              {[\r\n                \"Payment Report\",\r\n                \"Order Report\",\r\n                \"Deposit Report\",\r\n                \"Microorganism Report\",\r\n                \"User Report\",\r\n              ].map((text, index) => (\r\n                <ListItem button key={text} onClick={(e) => setOption(text)}>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n            <div style={{ margin: \"1rem 1rem\" }}>\r\n              <h4>Logs</h4>\r\n            </div>\r\n            <List>\r\n              {[\"Logs\"].map((text, index) => (\r\n                <ListItem button key={text} onClick={(e) => setOption(text)}>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Drawer>\r\n        </Grid>\r\n        <Grid item xs md lg sm style={{ marginLeft: \"1.5rem\" }}>\r\n          {getContent()}\r\n        </Grid>\r\n        {/* <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          // lg={1}\r\n          // md={1}\r\n          style={{ backgroundColor: \"red\" }}\r\n        >\r\n          SideBar\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          // lg={5}\r\n          // md={5}\r\n          style={{ backgroundColor: \"yellow\" }}\r\n        >\r\n          Content\r\n        </Grid> */}\r\n      </Grid>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default ReportsAndLogs;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Payment Report\\index.js",["1625","1626","1627","1628"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport CustomReportTable from \"components/CustomReportTable\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../../actions\";\r\n\r\nconst PaymentReport = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const report = useSelector((state) => state.report.fetchReport);\r\n  useEffect(() => dispatch(getReport(\"payment\")), []);\r\n  useEffect(() => setData(report.data || []), [report.data]);\r\n  //   useEffect(() => {\r\n  //     dispatch(getMicroorganisms());\r\n  //   }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     setData(report.microorganisms || []);\r\n  //   }, [catalogue]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          row.username &&\r\n          row.username.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n          // ||\r\n          // row.email.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          //   -1\r\n        );\r\n        //   ||\r\n        // row.species_epithet\r\n        //   .toString()\r\n        //   .toLowerCase()\r\n        //   .indexOf(query.toLowerCase()) > -1)\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Report is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (report.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (report.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(report.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const payment_report_table_head = [\r\n    {\r\n      id: \"username\",\r\n      align: \"center\",\r\n      disablePadding: true,\r\n      alignData: \"center\",\r\n      label: \"Username\",\r\n    },\r\n    {\r\n      id: \"email\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Email\",\r\n    },\r\n    {\r\n      id: \"amount\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Amount\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"card\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Card\",\r\n    },\r\n\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n  const onRowsDelete = (values) => {\r\n    alert(`These values were requested to be deleted ${values}`);\r\n  };\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs lg md sm>\r\n        <h4 style={{ margin: \"2.3rem 1rem 1rem 2rem\" }}>Payment Report</h4>\r\n        <p style={{ color: \"grey\", fontSize: \"14px\", margin: \"0 2rem\" }}>\r\n          Check the history of payment in a comprehensive way in these reports\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"1rem 0rem 0.7rem 2rem\" }}>\r\n        <SearchBar\r\n          query={query}\r\n          setQuery={setQuery}\r\n          width=\"60%\"\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"0rem 0rem 1rem 2rem\" }}>\r\n        {data && (\r\n          <CustomReportTable\r\n            head={payment_report_table_head}\r\n            rows={search(data)}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PaymentReport;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Order Report\\index.js",["1629","1630","1631"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport CustomReportTable from \"components/CustomReportTable\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../../actions\";\r\n\r\nconst OrderReport = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const report = useSelector((state) => state.report.fetchReport);\r\n  useEffect(() => dispatch(getReport(\"order\")), []);\r\n  useEffect(() => setData(report.data), [report.data]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          row.user_name &&\r\n          row.user_name.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Report is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (report.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (report.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(report.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const order_report_table_head = [\r\n    {\r\n      id: \"user_name\",\r\n      align: \"center\",\r\n      disablePadding: true,\r\n      alignData: \"center\",\r\n      label: \"Username\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"payment_amount\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Amount\",\r\n    },\r\n    {\r\n      id: \"current_status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n\r\n    {\r\n      id: \"microorganism_names\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Microorganisms\",\r\n    },\r\n    {\r\n      id: \"tracking_id\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Tracking\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs lg md sm>\r\n        <h4 style={{ margin: \"2.3rem 1rem 1rem 2rem\" }}>Order Report</h4>\r\n        <p style={{ color: \"grey\", fontSize: \"14px\", margin: \"0 2rem\" }}>\r\n          Check the history of orders in a comprehensive way in these reports\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"1rem 0rem 0.7rem 2rem\" }}>\r\n        <SearchBar\r\n          query={query}\r\n          setQuery={setQuery}\r\n          width=\"60%\"\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"0rem 0rem 1rem 2rem\" }}>\r\n        {data && (\r\n          <CustomReportTable\r\n            head={order_report_table_head}\r\n            rows={search(data)}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderReport;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\reports.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\report.reducer.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\CustomReportTable\\index.js",["1632","1633"],"import {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst CustomReportTable = (props) => {\r\n  const { rows, head } = props;\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  function getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n  //   const createSortHandler = (property) => (event) => {\r\n  //     onRequestSort(event, property);\r\n  //   };\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {head.map((headCell) => (\r\n                  <TableCell\r\n                    key={headCell.id}\r\n                    align={headCell.align}\r\n                    padding={\"default\"}\r\n                    sortDirection={orderBy === headCell.id ? order : false}\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === headCell.id}\r\n                      direction={orderBy === headCell.id ? order : \"asc\"}\r\n                      onClick={(e) => handleRequestSort(e, headCell.id)}\r\n                    >\r\n                      {headCell.label}\r\n                    </TableSortLabel>\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy)).map(\r\n                (row, index) => (\r\n                  <TableRow hover>\r\n                    {Object.keys(row).map((row_cell_name, index) => (\r\n                      <TableCell\r\n                        component={index === 0 ? \"th\" : undefined}\r\n                        scope={index === 0 ? \"row\" : undefined}\r\n                        padding={undefined}\r\n                        tabIndex={-1}\r\n                        key={index}\r\n                        align={head[index] && head[index].alignData}\r\n                      >\r\n                        {/* {console.log(head[index].id, head[index].alignData)} */}\r\n                        {row[row_cell_name]}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                )\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomReportTable;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Deposit Report\\index.js",["1634","1635","1636"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport CustomReportTable from \"components/CustomReportTable\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../../actions\";\r\n\r\nconst DepositReport = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const report = useSelector((state) => state.report.fetchReport);\r\n  useEffect(() => dispatch(getReport(\"deposit\")), []);\r\n  useEffect(() => setData(report.data), [report.data]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          row.user_name &&\r\n          row.user_name.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Report is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (report.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (report.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(report.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const order_report_table_head = [\r\n    {\r\n      id: \"user_name\",\r\n      align: \"center\",\r\n      disablePadding: true,\r\n      alignData: \"center\",\r\n      label: \"Username\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      id: \"payment_amount\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Amount\",\r\n    },\r\n    {\r\n      id: \"current_status\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Status\",\r\n    },\r\n\r\n    {\r\n      id: \"microorganism_names\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Microorganisms\",\r\n    },\r\n    {\r\n      id: \"tracking_id\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Tracking\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs lg md sm>\r\n        <h4 style={{ margin: \"2.3rem 1rem 1rem 2rem\" }}>Order Report</h4>\r\n        <p style={{ color: \"grey\", fontSize: \"14px\", margin: \"0 2rem\" }}>\r\n          Check the history of orders in a comprehensive way in these reports\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"1rem 0rem 0.7rem 2rem\" }}>\r\n        <SearchBar\r\n          query={query}\r\n          setQuery={setQuery}\r\n          width=\"60%\"\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"0rem 0rem 1rem 2rem\" }}>\r\n        {data && (\r\n          <CustomReportTable\r\n            head={order_report_table_head}\r\n            rows={search(data)}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DepositReport;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\Microorganism Report\\index.js",["1637","1638","1639"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport CustomReportTable from \"components/CustomReportTable\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../../actions\";\r\n\r\nconst MicroorganismReport = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const report = useSelector((state) => state.report.fetchReport);\r\n  useEffect(() => dispatch(getReport(\"microorganism\")), []);\r\n  useEffect(() => setData(report.data), [report.data]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return applyFilter;\r\n        //   applyFilter && row.accession_number\r\n        //   &&\r\n        //   row.accession_number\r\n        //     .toString()\r\n        //     .toLowerCase()\r\n        //     .indexOf(query.toLowerCase()) > -1\r\n        //     &&\r\n        //   row.name &&\r\n        //   row.name.toString().toLowerCase().indexOf(query.toLowerCase()) > -1\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Report is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (report.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (report.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(report.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const microorganism_report_table_head = [\r\n    {\r\n      id: \"accesion_number\",\r\n      align: \"center\",\r\n      disablePadding: true,\r\n      alignData: \"center\",\r\n      label: \"Accession Number\",\r\n    },\r\n    {\r\n      id: \"name\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Name\",\r\n    },\r\n    {\r\n      id: \"bio_hazard_level\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Bio Hazard Level\",\r\n    },\r\n\r\n    {\r\n      id: \"organismType\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Organism Type\",\r\n    },\r\n    {\r\n      id: \"other_collection_numbers\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Other Collection Numbers\",\r\n    },\r\n\r\n    {\r\n      id: \"date_of_isolation\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date of Isolation\",\r\n    },\r\n    {\r\n      id: \"order_count\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Order Count\",\r\n    },\r\n    {\r\n      id: \"deposit_count\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Deposit Count\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs lg md sm>\r\n        <h4 style={{ margin: \"2.3rem 1rem 1rem 2rem\" }}>User Report</h4>\r\n        <p style={{ color: \"grey\", fontSize: \"14px\", margin: \"0 2rem\" }}>\r\n          Check the history of user in a comprehensive way in these reports\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"1rem 0rem 0.7rem 2rem\" }}>\r\n        <SearchBar\r\n          query={query}\r\n          setQuery={setQuery}\r\n          width=\"60%\"\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"0rem 0rem 1rem 2rem\" }}>\r\n        {console.log(search(data))}\r\n        {data && (\r\n          <CustomReportTable\r\n            head={microorganism_report_table_head}\r\n            rows={search(data)}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MicroorganismReport;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Reports\\User Report\\index.js",["1640","1641","1642"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport CustomReportTable from \"components/CustomReportTable\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../../actions\";\r\n\r\nconst UserReport = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const report = useSelector((state) => state.report.fetchReport);\r\n  useEffect(() => dispatch(getReport(\"user\")), []);\r\n  useEffect(() => setData(report.data), [report.data]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          row.username &&\r\n          row.username.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Report is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (report.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (report.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(report.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const user_report_table_head = [\r\n    {\r\n      id: \"username\",\r\n      align: \"center\",\r\n      disablePadding: true,\r\n      alignData: \"center\",\r\n      label: \"Username\",\r\n    },\r\n    {\r\n      id: \"email\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Email\",\r\n    },\r\n    {\r\n      id: \"usertype\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"User Type\",\r\n    },\r\n    {\r\n      id: \"order_count\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Order Count\",\r\n    },\r\n\r\n    {\r\n      id: \"deposit_count\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Deposit Count\",\r\n    },\r\n    {\r\n      id: \"payment_count\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Payment Count\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs lg md sm>\r\n        <h4 style={{ margin: \"2.3rem 1rem 1rem 2rem\" }}>Order Report</h4>\r\n        <p style={{ color: \"grey\", fontSize: \"14px\", margin: \"0 2rem\" }}>\r\n          Check the history of orders in a comprehensive way in these reports\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"1rem 0rem 0.7rem 2rem\" }}>\r\n        <SearchBar\r\n          query={query}\r\n          setQuery={setQuery}\r\n          width=\"60%\"\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"0rem 0rem 1rem 2rem\" }}>\r\n        {data && (\r\n          <CustomReportTable\r\n            head={user_report_table_head}\r\n            rows={search(data)}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserReport;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\components\\Logs\\index.js",["1643","1644","1645"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport CustomReportTable from \"components/CustomReportTable\";\r\nimport CustomTable from \"components/CustomTable\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../actions\";\r\n\r\nconst Logs = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const report = useSelector((state) => state.report.fetchReport);\r\n  useEffect(() => dispatch(getReport(\"log\")), []);\r\n  useEffect(() => setData(report.data), [report.data]);\r\n\r\n  const search = (data) => {\r\n    return (\r\n      data &&\r\n      data.filter((row) => {\r\n        const applyFilter =\r\n          filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n        return (\r\n          applyFilter &&\r\n          row.username &&\r\n          row.username.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Report is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = (message) => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (report.fetching) {\r\n    return <div className=\"users__content__div\">{requestSent()}</div>;\r\n  }\r\n\r\n  if (report.error.found) {\r\n    return (\r\n      <div className=\"users__content__div\">\r\n        {ErrorMessage(report.error.message)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const log_table_head = [\r\n    {\r\n      id: \"username\",\r\n      align: \"center\",\r\n      disablePadding: true,\r\n      alignData: \"center\",\r\n      label: \"Username\",\r\n    },\r\n    {\r\n      id: \"request\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Request\",\r\n    },\r\n    {\r\n      id: \"output\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Output\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Date\",\r\n    },\r\n\r\n    {\r\n      id: \"time\",\r\n      align: \"left\",\r\n      disablePadding: false,\r\n      alignData: \"left\",\r\n      label: \"Time\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item xs lg md sm>\r\n        <h4 style={{ margin: \"2.3rem 1rem 1rem 2rem\" }}>Order Report</h4>\r\n        <p style={{ color: \"grey\", fontSize: \"14px\", margin: \"0 2rem\" }}>\r\n          Check the history of orders in a comprehensive way in these reports\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"1rem 0rem 0.7rem 2rem\" }}>\r\n        <SearchBar\r\n          query={query}\r\n          setQuery={setQuery}\r\n          width=\"60%\"\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs lg md sm style={{ margin: \"0rem 0rem 1rem 2rem\" }}>\r\n        {console.log(search(data))}\r\n        {data && (\r\n          <CustomReportTable head={log_table_head} rows={search(data)} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Logs;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboard\\Others\\index.js",["1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  Paper,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  addDocument,\r\n  getPricesAndDocuments,\r\n  removeDocuments,\r\n  updatePrices,\r\n  share,\r\n} from \"actions\";\r\nimport SideBar from \"components/SideBar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst PriceSection = (props) => {\r\n  const dispatch = useDispatch();\r\n  const price = useSelector((state) => state.other.prices);\r\n\r\n  const [data, setData] = useState({\r\n    order: 0,\r\n    general_deposit: 0,\r\n    safe_deposit: 0,\r\n    patent_deposit: 0,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    order: undefined,\r\n    general_deposit: undefined,\r\n    safe_deposit: undefined,\r\n    patent_deposit: undefined,\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    let error_check = {};\r\n    if (!data.order) {\r\n      error_check.order = \"Order Price cannot be empty\";\r\n    }\r\n    if (!data.general_deposit) {\r\n      error_check.general_deposit = \"General Deposit Price cannot be empty\";\r\n    }\r\n    if (!data.safe_deposit) {\r\n      error_check.safe_deposit = \"Safe Deposit Price cannot be empty\";\r\n    }\r\n    if (!data.patent_deposit) {\r\n      error_check.patent_deposit = \"Patent Deposit Price cannot be empty\";\r\n    }\r\n    if (Object.keys(error_check).length == 0) {\r\n      dispatch(updatePrices(data));\r\n    } else {\r\n      setErrors(error_check);\r\n    }\r\n  };\r\n  const handleUpdate = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    price && setData(price.data);\r\n  }, [price]);\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      component={Paper}\r\n      spacing={4}\r\n      style={{ width: \"100%\", margin: \"0 0.1rem\" }}\r\n    >\r\n      <Grid item>\r\n        <h5>Prices</h5>\r\n        <p style={{ color: \"#99A1AE\" }}>\r\n          Set the prices of the services that are provided by NCCP\r\n        </p>\r\n      </Grid>\r\n\r\n      <Grid item style={{ width: \"100%\" }}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Order Price\"\r\n          type=\"number\"\r\n          name=\"order\"\r\n          value={data.order}\r\n          onChange={handleUpdate}\r\n          inputProps={{ min: 0 }}\r\n          error={errors.order}\r\n          helperText={errors.order ? errors.order : \"\"}\r\n          style={{ backgroundColor: \"white\", minWidth: \"22rem\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} sm={4} md={4} lg={4}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"General Deposit Price\"\r\n              type=\"number\"\r\n              name=\"general_deposit\"\r\n              value={data.general_deposit}\r\n              onChange={handleUpdate}\r\n              fullWidth\r\n              inputProps={{ min: 0 }}\r\n              error={errors.general_deposit}\r\n              helperText={errors.general_deposit ? errors.general_deposit : \"\"}\r\n              style={{ backgroundColor: \"white\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Safe Deposit Price\"\r\n              type=\"number\"\r\n              name=\"safe_deposit\"\r\n              value={data.safe_deposit}\r\n              onChange={handleUpdate}\r\n              fullWidth\r\n              inputProps={{ min: 0 }}\r\n              error={errors.safe_deposit}\r\n              helperText={errors.safe_deposit ? errors.safe_deposit : \"\"}\r\n              style={{ backgroundColor: \"white\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Patent Deposit Price\"\r\n              type=\"number\"\r\n              name=\"patent_deposit\"\r\n              value={data.patent_deposit}\r\n              onChange={handleUpdate}\r\n              fullWidth\r\n              inputProps={{ min: 0 }}\r\n              error={errors.patent_deposit}\r\n              helperText={errors.patent_deposit ? errors.patent_deposit : \"\"}\r\n              style={{ backgroundColor: \"white\" }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs\r\n            lg\r\n            md\r\n            sm\r\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              style={{\r\n                // backgroundColor: \"#0621D4\",\r\n                padding: \"0.6rem 2rem\",\r\n                // color: \"white\",\r\n              }}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst DocumentSection = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const documents = useSelector((state) => state.other.documents);\r\n  const [documentData, setDocumentData] = useState({\r\n    title: \"\",\r\n    document: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const [errors, setError] = useState({\r\n    title: \"\",\r\n    document: \"\",\r\n    type: \"\",\r\n  });\r\n  useEffect(() => setData(documents.data), [documents.data]);\r\n\r\n  const handleChange = (e) => {\r\n    let value = \"\";\r\n    if (e.target.type == \"file\") {\r\n      value = e.target.files[0];\r\n    }\r\n    if (e.target.type == \"select-one\") {\r\n      value = e.target.value;\r\n    }\r\n    if (e.target.type == \"text\") {\r\n      value = e.target.value;\r\n    }\r\n    setDocumentData({\r\n      ...documentData,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n  const handleDocumentAdd = () => {\r\n    let error_check = {};\r\n    if (!documentData.title) {\r\n      error_check.title = \"Document Title cannot be empty\";\r\n    }\r\n    if (!documentData.document) {\r\n      error_check.document = \"A document must be uploaded\";\r\n    }\r\n    if (!documentData.type) {\r\n      error_check.type = \"Document Type must be selected\";\r\n    }\r\n    if (Object.keys(error_check).length == 0) {\r\n      const form = new FormData();\r\n      form.append(\"title\", documentData.title);\r\n      form.append(\"documentFor\", documentData.type);\r\n      form.append(\"file\", documentData.document);\r\n      dispatch(addDocument(form));\r\n    } else {\r\n      alert(documentData.type);\r\n      setError(error_check);\r\n    }\r\n  };\r\n  const handleDocumentRemove = (doc) => {\r\n    dispatch(removeDocuments({ document_id: doc._id }));\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      spacing={4}\r\n      style={{ width: \"100%\", margin: \"0 0.1rem\" }}\r\n      component={Paper}\r\n    >\r\n      <Grid item xs lg md sm>\r\n        <h5>Documents</h5>\r\n        <p style={{ color: \"#99A1AE\" }}>\r\n          View and change the documents for order and deposit services\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs lg md sm>\r\n        <p style={{ color: \"#99A1AE\" }}>\r\n          Add a new document by filling in this form\r\n        </p>{\" \"}\r\n        <Grid container direction=\"column\" xs lg md sm spacing={2}>\r\n          <Grid item xs lg md sm>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Title\"\r\n              inputProps={{ name: \"title\" }}\r\n              value={documentData.title}\r\n              onChange={handleChange}\r\n              error={errors.title}\r\n              helperText={errors.title ? errors.title : \"\"}\r\n            />\r\n            <FormControl style={{ margin: \"0 1rem\" }} variant=\"outlined\">\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\r\n              <Select\r\n                native\r\n                value={data.type}\r\n                onChange={handleChange}\r\n                label=\"Type\"\r\n                inputProps={{\r\n                  name: \"type\",\r\n                }}\r\n                error={errors.type}\r\n              >\r\n                <option value=\"\" />\r\n                <option value={\"order\"}>Order</option>\r\n                <option value={\"general_deposit\"}>General deposit</option>\r\n                <option value={\"safe_deposit\"}>Safe Deposit</option>\r\n                <option value={\"patent_deposit\"}>Patent Deposit</option>\r\n              </Select>\r\n              <FormHelperText>{errors.type ? errors.type : \"\"}</FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs sm md lg>\r\n            <Grid container>\r\n              <Grid item sm lg md xs>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  // margin=\"dense\"\r\n                  value={documentData.document.name || \"\"}\r\n                  fullWidth\r\n                  disabled\r\n                  error={errors.document}\r\n                  helperText={errors.document ? errors.document : \"\"}\r\n                />\r\n              </Grid>\r\n              <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Button variant=\"text\" color=\"primary\" component=\"label\">\r\n                  Browse\r\n                  <input\r\n                    name=\"document\"\r\n                    hidden\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs lg md sm>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleDocumentAdd}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          spacing={4}\r\n          style={{ margin: \"2rem 0\" }}\r\n        >\r\n          <Grid item xs lg md sm>\r\n            <p style={{ color: \"#99A1AE\" }}>\r\n              Following are the documents for orders{\" \"}\r\n            </p>{\" \"}\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Link</TableCell>\r\n                  <TableCell>Remove</TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.order &&\r\n                    data.order.map((doc, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{doc.title}</TableCell>\r\n                        <TableCell>\r\n                          <a href={doc.document} target=\"_blank\">\r\n                            Here\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            component=\"label\"\r\n                            onClick={(e) => handleDocumentRemove(doc)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </TableCell>\r\n                        {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"label\"\r\n                      >\r\n                        Submit\r\n                        <input type=\"file\" hidden />\r\n                      </Button>\r\n                    </TableCell> */}\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <Grid item xs lg md sm>\r\n            <p style={{ color: \"#99A1AE\" }}>\r\n              Following are the documents for general deposit{\" \"}\r\n            </p>{\" \"}\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Link</TableCell>\r\n                  <TableCell>Remove</TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.general_deposit &&\r\n                    data.general_deposit.map((doc, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{doc.title}</TableCell>\r\n                        <TableCell>\r\n                          <a href={doc.document} target=\"_blank\">\r\n                            Here\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            component=\"label\"\r\n                            onClick={(e) => handleDocumentRemove(doc)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </TableCell>\r\n                        {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"label\"\r\n                      >\r\n                        Submit\r\n                        <input type=\"file\" hidden />\r\n                      </Button>\r\n                    </TableCell> */}\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <Grid item xs lg md sm>\r\n            <p style={{ color: \"#99A1AE\" }}>\r\n              Following are the documents for safe deposit{\" \"}\r\n            </p>{\" \"}\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Link</TableCell>\r\n                  <TableCell>Remove</TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.safe_deposit &&\r\n                    data.safe_deposit.map((doc, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{doc.title}</TableCell>\r\n                        <TableCell>\r\n                          <a href={doc.document} target=\"_blank\">\r\n                            Here\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            component=\"label\"\r\n                            onClick={(e) => handleDocumentRemove(doc)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </TableCell>\r\n                        {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"label\"\r\n                      >\r\n                        Submit\r\n                        <input type=\"file\" hidden />\r\n                      </Button>\r\n                    </TableCell> */}\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <Grid item xs lg md sm>\r\n            <p style={{ color: \"#99A1AE\" }}>\r\n              Following are the documents for patent deposit{\" \"}\r\n            </p>{\" \"}\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Link</TableCell>\r\n                  <TableCell>Remove</TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.patent_deposit &&\r\n                    data.patent_deposit.map((doc, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{doc.title}</TableCell>\r\n                        <TableCell>\r\n                          <a href={doc.document} target=\"_blank\">\r\n                            Here\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            component=\"label\"\r\n                            onClick={(e) => handleDocumentRemove(doc)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </TableCell>\r\n                        {/* <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"label\"\r\n                      >\r\n                        Submit\r\n                        <input type=\"file\" hidden />\r\n                      </Button>\r\n                    </TableCell> */}\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst ShareDataSection = (props) => {\r\n  const dispatch = useDispatch();\r\n  const shareData = useSelector((state) => state.other.shareData);\r\n  const [data, setData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    // username:'',\r\n    // password:\"\",\r\n  });\r\n\r\n  const handleUpdate = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let error_check = {};\r\n    if (!data.username) {\r\n      error_check.username = \"username cannot be empty\";\r\n    }\r\n    if (!data.password) {\r\n      error_check.password = \"passwod cannot by empty\";\r\n    }\r\n    if (Object.keys(error_check).length === 0) {\r\n      dispatch(share(data));\r\n    } else {\r\n      setErrors(error_check);\r\n    }\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      component={Paper}\r\n      spacing={4}\r\n      style={{ width: \"100%\", margin: \"0 0.1rem\" }}\r\n    >\r\n      <Grid item xs lg md sm>\r\n        <h5>Share</h5>\r\n        <p style={{ color: \"#99A1AE\" }}>\r\n          You can upload your catalogue to WDCM using the following form\r\n        </p>{\" \"}\r\n      </Grid>\r\n      <Grid item xs lg md sm>\r\n        {shareData.fetching && (\r\n          <div>\r\n            <p>Sharing data please wait</p>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n        {/* {alert(shareData.fetched && shareData.error.found)} */}\r\n        {shareData.fetched && !shareData.error.found && (\r\n          <div>\r\n            <p>Data has been shared successfully</p>\r\n          </div>\r\n        )}\r\n        {shareData.error.found && (\r\n          <div>\r\n            <h5>Error</h5>\r\n            <p>{shareData.error.message}</p>\r\n          </div>\r\n        )}\r\n        {!shareData.fetching && !shareData.fetching && !shareData.error.found && (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs lg={6} md={6} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                value={data.username}\r\n                fullWidth\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                error={errors.username}\r\n                onChange={handleUpdate}\r\n                helperText={errors.username ? errors.username : \"\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs lg={6} md={6} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                value={data.password}\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                error={errors.password}\r\n                onChange={handleUpdate}\r\n                helperText={errors.password ? errors.password : \"\"}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Share\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Others = (props) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(getPricesAndDocuments()), []);\r\n  return (\r\n    <SideBar active=\"Others\">\r\n      <div style={{ minHeight: \"90vh\", minWidth: \"100%\" }}>\r\n        <h3 style={{ fontWeight: \"bold\", marginBottom: \"1.5rem\" }}>Others</h3>\r\n\r\n        <Grid contianer direction=\"column\" spacing={6}>\r\n          <Grid item xs={12} sm={12} md={12} lg={12}>\r\n            <PriceSection />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={12}\r\n            lg={12}\r\n            style={{ marginTop: \"3rem\" }}\r\n          >\r\n            <DocumentSection />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={12}\r\n            lg={12}\r\n            style={{ marginTop: \"3rem\" }}\r\n          >\r\n            <ShareDataSection />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default Others;\r\n","E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\actions\\other.actions.js",[],"E:\\Study\\FYP\\FYP\\FYP-NCCP\\front-end\\src\\reducers\\other.reducer.js",[],{"ruleId":"1657","severity":1,"message":"1658","line":50,"column":1,"nodeType":"1659","endLine":51,"endColumn":81},{"ruleId":"1657","severity":1,"message":"1658","line":10,"column":1,"nodeType":"1659","endLine":48,"endColumn":3},{"ruleId":"1660","severity":1,"message":"1661","line":11,"column":3,"nodeType":"1662","messageId":"1663","endLine":46,"endColumn":4},{"ruleId":"1657","severity":1,"message":"1658","line":12,"column":1,"nodeType":"1659","endLine":41,"endColumn":3},{"ruleId":"1660","severity":1,"message":"1661","line":13,"column":3,"nodeType":"1662","messageId":"1663","endLine":39,"endColumn":4},{"ruleId":"1657","severity":1,"message":"1658","line":7,"column":1,"nodeType":"1659","endLine":19,"endColumn":3},{"ruleId":"1657","severity":1,"message":"1658","line":20,"column":1,"nodeType":"1659","endLine":53,"endColumn":3},{"ruleId":"1660","severity":1,"message":"1661","line":21,"column":3,"nodeType":"1662","messageId":"1663","endLine":51,"endColumn":4},{"ruleId":"1664","severity":1,"message":"1665","line":43,"column":5,"nodeType":"1666","messageId":"1667","endLine":50,"endColumn":13},{"ruleId":"1668","severity":1,"message":"1669","line":72,"column":24,"nodeType":"1670","messageId":"1671","endLine":72,"endColumn":26},{"ruleId":"1672","severity":1,"message":"1673","line":14,"column":11,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":23},{"ruleId":"1676","severity":1,"message":"1677","line":36,"column":6,"nodeType":"1678","endLine":36,"endColumn":8,"suggestions":"1679"},{"ruleId":"1680","severity":1,"message":"1681","line":233,"column":9,"nodeType":"1682","messageId":"1683","endLine":233,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1684","line":9,"column":9,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1685","line":11,"column":22,"nodeType":"1674","messageId":"1675","endLine":11,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1686","line":16,"column":32,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":55},{"ruleId":"1672","severity":1,"message":"1687","line":100,"column":26,"nodeType":"1674","messageId":"1675","endLine":100,"endColumn":43},{"ruleId":"1672","severity":1,"message":"1688","line":131,"column":38,"nodeType":"1674","messageId":"1675","endLine":131,"endColumn":67},{"ruleId":"1672","severity":1,"message":"1689","line":8,"column":16,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1690","line":24,"column":17,"nodeType":"1674","messageId":"1675","endLine":24,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1691","line":50,"column":9,"nodeType":"1674","messageId":"1675","endLine":50,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1692","line":59,"column":9,"nodeType":"1674","messageId":"1675","endLine":59,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1693","line":48,"column":9,"nodeType":"1674","messageId":"1675","endLine":48,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":20,"suggestions":"1696"},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":29,"column":6,"nodeType":"1678","endLine":29,"endColumn":14,"suggestions":"1697"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1698"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1699"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1700"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1701"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1702"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1703"},{"ruleId":"1668","severity":1,"message":"1669","line":10,"column":36,"nodeType":"1670","messageId":"1671","endLine":10,"endColumn":38},{"ruleId":"1672","severity":1,"message":"1704","line":2,"column":8,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":12},{"ruleId":"1705","replacedBy":"1706"},{"ruleId":"1707","replacedBy":"1708"},{"ruleId":"1676","severity":1,"message":"1677","line":14,"column":6,"nodeType":"1678","endLine":14,"endColumn":12,"suggestions":"1709"},{"ruleId":"1664","severity":1,"message":"1665","line":142,"column":5,"nodeType":"1666","messageId":"1667","endLine":150,"endColumn":6},{"ruleId":"1672","severity":1,"message":"1710","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":25},{"ruleId":"1711","severity":1,"message":"1712","line":177,"column":5,"nodeType":"1666","messageId":"1671","endLine":190,"endColumn":13},{"ruleId":"1711","severity":1,"message":"1712","line":191,"column":5,"nodeType":"1666","messageId":"1671","endLine":206,"endColumn":13},{"ruleId":"1711","severity":1,"message":"1712","line":207,"column":5,"nodeType":"1666","messageId":"1671","endLine":216,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1713","line":2,"column":10,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":24},{"ruleId":"1668","severity":1,"message":"1669","line":63,"column":22,"nodeType":"1670","messageId":"1671","endLine":63,"endColumn":24},{"ruleId":"1668","severity":1,"message":"1669","line":94,"column":22,"nodeType":"1670","messageId":"1671","endLine":94,"endColumn":24},{"ruleId":"1672","severity":1,"message":"1714","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1715","line":38,"column":8,"nodeType":"1674","messageId":"1675","endLine":38,"endColumn":29},{"ruleId":"1672","severity":1,"message":"1716","line":45,"column":8,"nodeType":"1674","messageId":"1675","endLine":45,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1717","line":49,"column":8,"nodeType":"1674","messageId":"1675","endLine":49,"endColumn":36},{"ruleId":"1672","severity":1,"message":"1718","line":57,"column":8,"nodeType":"1674","messageId":"1675","endLine":57,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1719","line":12,"column":15,"nodeType":"1674","messageId":"1675","endLine":12,"endColumn":20},{"ruleId":"1657","severity":1,"message":"1720","line":89,"column":1,"nodeType":"1659","endLine":163,"endColumn":2},{"ruleId":"1672","severity":1,"message":"1721","line":22,"column":8,"nodeType":"1674","messageId":"1675","endLine":22,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1722","line":24,"column":8,"nodeType":"1674","messageId":"1675","endLine":24,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1723","line":25,"column":8,"nodeType":"1674","messageId":"1675","endLine":25,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1716","line":27,"column":8,"nodeType":"1674","messageId":"1675","endLine":27,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1724","line":28,"column":8,"nodeType":"1674","messageId":"1675","endLine":28,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1725","line":44,"column":22,"nodeType":"1674","messageId":"1675","endLine":44,"endColumn":35},{"ruleId":"1676","severity":1,"message":"1726","line":51,"column":6,"nodeType":"1678","endLine":51,"endColumn":8,"suggestions":"1727"},{"ruleId":"1672","severity":1,"message":"1728","line":57,"column":9,"nodeType":"1674","messageId":"1675","endLine":57,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1681","line":95,"column":9,"nodeType":"1682","messageId":"1683","endLine":95,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1681","line":106,"column":9,"nodeType":"1682","messageId":"1683","endLine":106,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1729","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1730","line":4,"column":8,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1731","line":15,"column":18,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":21,"column":6,"nodeType":"1678","endLine":21,"endColumn":8,"suggestions":"1732"},{"ruleId":"1676","severity":1,"message":"1677","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":8,"suggestions":"1733"},{"ruleId":"1672","severity":1,"message":"1730","line":4,"column":8,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1734","line":7,"column":10,"nodeType":"1674","messageId":"1675","endLine":7,"endColumn":24},{"ruleId":"1672","severity":1,"message":"1735","line":8,"column":8,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1736","line":9,"column":10,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1737","line":9,"column":17,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1738","line":20,"column":18,"nodeType":"1674","messageId":"1675","endLine":20,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":27,"column":6,"nodeType":"1678","endLine":27,"endColumn":8,"suggestions":"1739"},{"ruleId":"1672","severity":1,"message":"1740","line":75,"column":9,"nodeType":"1674","messageId":"1675","endLine":75,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1741","line":7,"column":3,"nodeType":"1674","messageId":"1675","endLine":7,"endColumn":11},{"ruleId":"1672","severity":1,"message":"1742","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1743","line":10,"column":3,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1744","line":14,"column":3,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":14},{"ruleId":"1672","severity":1,"message":"1730","line":19,"column":8,"nodeType":"1674","messageId":"1675","endLine":19,"endColumn":15},{"ruleId":"1676","severity":1,"message":"1745","line":96,"column":6,"nodeType":"1678","endLine":96,"endColumn":12,"suggestions":"1746"},{"ruleId":"1668","severity":1,"message":"1669","line":108,"column":44,"nodeType":"1670","messageId":"1671","endLine":108,"endColumn":46},{"ruleId":"1668","severity":1,"message":"1669","line":274,"column":37,"nodeType":"1670","messageId":"1671","endLine":274,"endColumn":39},{"ruleId":"1672","severity":1,"message":"1719","line":8,"column":11,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":16},{"ruleId":"1676","severity":1,"message":"1747","line":22,"column":13,"nodeType":"1748","endLine":29,"endColumn":4},{"ruleId":"1676","severity":1,"message":"1749","line":29,"column":6,"nodeType":"1678","endLine":29,"endColumn":8,"suggestions":"1750"},{"ruleId":"1672","severity":1,"message":"1734","line":7,"column":10,"nodeType":"1674","messageId":"1675","endLine":7,"endColumn":24},{"ruleId":"1672","severity":1,"message":"1735","line":8,"column":8,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1736","line":9,"column":10,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1737","line":9,"column":17,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":33},{"ruleId":"1672","severity":1,"message":"1738","line":19,"column":18,"nodeType":"1674","messageId":"1675","endLine":19,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":26,"column":6,"nodeType":"1678","endLine":26,"endColumn":8,"suggestions":"1751"},{"ruleId":"1672","severity":1,"message":"1740","line":74,"column":9,"nodeType":"1674","messageId":"1675","endLine":74,"endColumn":16},{"ruleId":"1680","severity":1,"message":"1681","line":233,"column":9,"nodeType":"1682","messageId":"1683","endLine":233,"endColumn":15},{"ruleId":"1705","replacedBy":"1752"},{"ruleId":"1707","replacedBy":"1753"},{"ruleId":"1672","severity":1,"message":"1754","line":9,"column":8,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":16},{"ruleId":"1676","severity":1,"message":"1677","line":26,"column":6,"nodeType":"1678","endLine":26,"endColumn":8,"suggestions":"1755"},{"ruleId":"1672","severity":1,"message":"1740","line":153,"column":9,"nodeType":"1674","messageId":"1675","endLine":153,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1756","line":14,"column":10,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1757","line":16,"column":3,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1758","line":17,"column":3,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":28},{"ruleId":"1672","severity":1,"message":"1759","line":20,"column":10,"nodeType":"1674","messageId":"1675","endLine":20,"endColumn":26},{"ruleId":"1672","severity":1,"message":"1760","line":25,"column":3,"nodeType":"1674","messageId":"1675","endLine":25,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1761","line":26,"column":3,"nodeType":"1674","messageId":"1675","endLine":26,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1762","line":30,"column":8,"nodeType":"1674","messageId":"1675","endLine":30,"endColumn":14},{"ruleId":"1672","severity":1,"message":"1713","line":32,"column":10,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":24},{"ruleId":"1676","severity":1,"message":"1763","line":32,"column":6,"nodeType":"1678","endLine":32,"endColumn":8,"suggestions":"1764"},{"ruleId":"1672","severity":1,"message":"1765","line":103,"column":9,"nodeType":"1674","messageId":"1675","endLine":103,"endColumn":28},{"ruleId":"1672","severity":1,"message":"1766","line":1,"column":26,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":44},{"ruleId":"1672","severity":1,"message":"1767","line":5,"column":10,"nodeType":"1674","messageId":"1675","endLine":5,"endColumn":14},{"ruleId":"1672","severity":1,"message":"1673","line":14,"column":11,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":23},{"ruleId":"1676","severity":1,"message":"1677","line":36,"column":6,"nodeType":"1678","endLine":36,"endColumn":8,"suggestions":"1768"},{"ruleId":"1680","severity":1,"message":"1681","line":75,"column":7,"nodeType":"1769","messageId":"1683","endLine":91,"endColumn":9},{"ruleId":"1676","severity":1,"message":"1770","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":8,"suggestions":"1771"},{"ruleId":"1676","severity":1,"message":"1747","line":19,"column":13,"nodeType":"1748","endLine":31,"endColumn":4},{"ruleId":"1676","severity":1,"message":"1772","line":31,"column":6,"nodeType":"1678","endLine":31,"endColumn":8,"suggestions":"1773"},{"ruleId":"1672","severity":1,"message":"1684","line":9,"column":9,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1684","line":25,"column":9,"nodeType":"1674","messageId":"1675","endLine":25,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1774","line":27,"column":20,"nodeType":"1674","messageId":"1675","endLine":27,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1775","line":33,"column":9,"nodeType":"1674","messageId":"1675","endLine":33,"endColumn":25},{"ruleId":"1776","severity":1,"message":"1777","line":94,"column":13,"nodeType":"1778","endLine":94,"endColumn":57},{"ruleId":"1779","severity":1,"message":"1780","line":324,"column":15,"nodeType":"1778","endLine":324,"endColumn":18},{"ruleId":"1779","severity":1,"message":"1780","line":334,"column":17,"nodeType":"1778","endLine":334,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1743","line":10,"column":3,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1781","line":32,"column":10,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1782","line":32,"column":22,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":35},{"ruleId":"1676","severity":1,"message":"1726","line":90,"column":6,"nodeType":"1678","endLine":90,"endColumn":8,"suggestions":"1783"},{"ruleId":"1676","severity":1,"message":"1745","line":104,"column":6,"nodeType":"1678","endLine":104,"endColumn":12,"suggestions":"1784"},{"ruleId":"1668","severity":1,"message":"1669","line":115,"column":44,"nodeType":"1670","messageId":"1671","endLine":115,"endColumn":46},{"ruleId":"1668","severity":1,"message":"1669","line":281,"column":37,"nodeType":"1670","messageId":"1671","endLine":281,"endColumn":39},{"ruleId":"1668","severity":1,"message":"1669","line":356,"column":42,"nodeType":"1670","messageId":"1671","endLine":356,"endColumn":44},{"ruleId":"1672","severity":1,"message":"1785","line":156,"column":10,"nodeType":"1674","messageId":"1675","endLine":156,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1786","line":156,"column":25,"nodeType":"1674","messageId":"1675","endLine":156,"endColumn":41},{"ruleId":"1672","severity":1,"message":"1787","line":22,"column":8,"nodeType":"1674","messageId":"1675","endLine":22,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1788","line":25,"column":10,"nodeType":"1674","messageId":"1675","endLine":25,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1789","line":33,"column":9,"nodeType":"1674","messageId":"1675","endLine":33,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1790","line":34,"column":10,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1791","line":34,"column":17,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1792","line":35,"column":10,"nodeType":"1674","messageId":"1675","endLine":35,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1793","line":35,"column":20,"nodeType":"1674","messageId":"1675","endLine":35,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1794","line":37,"column":10,"nodeType":"1674","messageId":"1675","endLine":37,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1795","line":37,"column":22,"nodeType":"1674","messageId":"1675","endLine":37,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1796","line":49,"column":10,"nodeType":"1674","messageId":"1675","endLine":49,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1797","line":51,"column":9,"nodeType":"1674","messageId":"1675","endLine":51,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1798","line":59,"column":9,"nodeType":"1674","messageId":"1675","endLine":59,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1799","line":113,"column":9,"nodeType":"1674","messageId":"1675","endLine":113,"endColumn":21},{"ruleId":"1676","severity":1,"message":"1677","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":8,"suggestions":"1800"},{"ruleId":"1672","severity":1,"message":"1685","line":11,"column":22,"nodeType":"1674","messageId":"1675","endLine":11,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1686","line":16,"column":32,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":55},{"ruleId":"1672","severity":1,"message":"1687","line":100,"column":26,"nodeType":"1674","messageId":"1675","endLine":100,"endColumn":43},{"ruleId":"1672","severity":1,"message":"1688","line":131,"column":38,"nodeType":"1674","messageId":"1675","endLine":131,"endColumn":67},{"ruleId":"1672","severity":1,"message":"1729","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1731","line":14,"column":18,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":20,"column":6,"nodeType":"1678","endLine":20,"endColumn":8,"suggestions":"1801"},{"ruleId":"1672","severity":1,"message":"1741","line":7,"column":3,"nodeType":"1674","messageId":"1675","endLine":7,"endColumn":11},{"ruleId":"1672","severity":1,"message":"1742","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1743","line":10,"column":3,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1744","line":14,"column":3,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":14},{"ruleId":"1676","severity":1,"message":"1745","line":94,"column":6,"nodeType":"1678","endLine":94,"endColumn":12,"suggestions":"1802"},{"ruleId":"1668","severity":1,"message":"1669","line":106,"column":44,"nodeType":"1670","messageId":"1671","endLine":106,"endColumn":46},{"ruleId":"1668","severity":1,"message":"1669","line":272,"column":37,"nodeType":"1670","messageId":"1671","endLine":272,"endColumn":39},{"ruleId":"1672","severity":1,"message":"1767","line":32,"column":10,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":14},{"ruleId":"1803","severity":1,"message":"1804","line":40,"column":42,"nodeType":"1748","messageId":"1805","endLine":40,"endColumn":44},{"ruleId":"1668","severity":1,"message":"1669","line":44,"column":16,"nodeType":"1670","messageId":"1671","endLine":44,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1806","line":53,"column":9,"nodeType":"1674","messageId":"1675","endLine":53,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1807","line":57,"column":9,"nodeType":"1674","messageId":"1675","endLine":57,"endColumn":18},{"ruleId":"1808","severity":1,"message":"1809","line":33,"column":23,"nodeType":"1778","endLine":33,"endColumn":81},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":29,"column":6,"nodeType":"1678","endLine":29,"endColumn":14,"suggestions":"1810"},{"ruleId":"1811","severity":1,"message":"1812","line":54,"column":5,"nodeType":"1813","messageId":"1671","endLine":54,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1814","line":10,"column":10,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1815","line":12,"column":9,"nodeType":"1674","messageId":"1675","endLine":12,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":28,"column":6,"nodeType":"1678","endLine":28,"endColumn":20,"suggestions":"1816"},{"ruleId":"1672","severity":1,"message":"1693","line":48,"column":9,"nodeType":"1674","messageId":"1675","endLine":48,"endColumn":21},{"ruleId":"1705","replacedBy":"1817"},{"ruleId":"1707","replacedBy":"1818"},{"ruleId":"1672","severity":1,"message":"1693","line":48,"column":9,"nodeType":"1674","messageId":"1675","endLine":48,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":20,"suggestions":"1819"},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":27,"suggestions":"1820"},{"ruleId":"1672","severity":1,"message":"1704","line":2,"column":8,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1821","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":9},{"ruleId":"1672","severity":1,"message":"1822","line":10,"column":10,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":14},{"ruleId":"1672","severity":1,"message":"1823","line":17,"column":8,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":26},{"ruleId":"1672","severity":1,"message":"1824","line":30,"column":10,"nodeType":"1674","messageId":"1675","endLine":30,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1825","line":30,"column":25,"nodeType":"1674","messageId":"1675","endLine":30,"endColumn":41},{"ruleId":"1672","severity":1,"message":"1826","line":33,"column":9,"nodeType":"1674","messageId":"1675","endLine":33,"endColumn":14},{"ruleId":"1779","severity":1,"message":"1780","line":93,"column":17,"nodeType":"1778","endLine":93,"endColumn":61},{"ruleId":"1779","severity":1,"message":"1780","line":96,"column":17,"nodeType":"1778","endLine":96,"endColumn":61},{"ruleId":"1779","severity":1,"message":"1780","line":99,"column":17,"nodeType":"1778","endLine":99,"endColumn":61},{"ruleId":"1779","severity":1,"message":"1780","line":102,"column":17,"nodeType":"1778","endLine":102,"endColumn":61},{"ruleId":"1705","replacedBy":"1827"},{"ruleId":"1707","replacedBy":"1828"},{"ruleId":"1672","severity":1,"message":"1829","line":5,"column":3,"nodeType":"1674","messageId":"1675","endLine":5,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1830","line":1,"column":18,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":54,"column":6,"nodeType":"1678","endLine":54,"endColumn":21,"suggestions":"1831"},{"ruleId":"1668","severity":1,"message":"1669","line":10,"column":36,"nodeType":"1670","messageId":"1671","endLine":10,"endColumn":38},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1832"},{"ruleId":"1672","severity":1,"message":"1833","line":1,"column":7,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":21},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1834"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1835"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1836"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1837"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1838"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1839"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1840"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1841"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1842"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1843"},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1844"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1845"},{"ruleId":"1676","severity":1,"message":"1695","line":19,"column":6,"nodeType":"1678","endLine":19,"endColumn":14,"suggestions":"1846"},{"ruleId":"1672","severity":1,"message":"1847","line":13,"column":10,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1848","line":1,"column":17,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":26},{"ruleId":"1672","severity":1,"message":"1849","line":226,"column":67,"nodeType":"1674","messageId":"1675","endLine":226,"endColumn":75},{"ruleId":"1672","severity":1,"message":"1714","line":2,"column":8,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":12},{"ruleId":"1711","severity":1,"message":"1712","line":241,"column":5,"nodeType":"1666","messageId":"1671","endLine":255,"endColumn":13},{"ruleId":"1711","severity":1,"message":"1712","line":256,"column":5,"nodeType":"1666","messageId":"1671","endLine":265,"endColumn":13},{"ruleId":"1711","severity":1,"message":"1712","line":266,"column":5,"nodeType":"1666","messageId":"1671","endLine":280,"endColumn":13},{"ruleId":"1711","severity":1,"message":"1712","line":183,"column":5,"nodeType":"1666","messageId":"1671","endLine":197,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1850","line":9,"column":10,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":21},{"ruleId":"1676","severity":1,"message":"1677","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":8,"suggestions":"1851"},{"ruleId":"1657","severity":1,"message":"1720","line":48,"column":1,"nodeType":"1659","endLine":117,"endColumn":2},{"ruleId":"1672","severity":1,"message":"1728","line":15,"column":7,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1767","line":15,"column":10,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":14},{"ruleId":"1852","severity":1,"message":"1853","line":61,"column":11,"nodeType":"1778","messageId":"1854","endLine":61,"endColumn":54,"fix":"1855"},{"ruleId":"1672","severity":1,"message":"1849","line":107,"column":10,"nodeType":"1674","messageId":"1675","endLine":107,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1856","line":107,"column":20,"nodeType":"1674","messageId":"1675","endLine":107,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1857","line":108,"column":9,"nodeType":"1674","messageId":"1675","endLine":108,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1728","line":164,"column":7,"nodeType":"1674","messageId":"1675","endLine":164,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1728","line":41,"column":7,"nodeType":"1674","messageId":"1675","endLine":41,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1728","line":9,"column":7,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1858","line":15,"column":11,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1859","line":15,"column":49,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":53},{"ruleId":"1672","severity":1,"message":"1860","line":1,"column":29,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":36},{"ruleId":"1672","severity":1,"message":"1861","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1821","line":3,"column":3,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":9},{"ruleId":"1672","severity":1,"message":"1722","line":28,"column":8,"nodeType":"1674","messageId":"1675","endLine":28,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1723","line":29,"column":8,"nodeType":"1674","messageId":"1675","endLine":29,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1716","line":31,"column":8,"nodeType":"1674","messageId":"1675","endLine":31,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1724","line":32,"column":8,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":30},{"ruleId":"1676","severity":1,"message":"1726","line":50,"column":6,"nodeType":"1678","endLine":50,"endColumn":8,"suggestions":"1862"},{"ruleId":"1672","severity":1,"message":"1863","line":92,"column":9,"nodeType":"1674","messageId":"1675","endLine":92,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1864","line":97,"column":9,"nodeType":"1674","messageId":"1675","endLine":97,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1865","line":103,"column":9,"nodeType":"1674","messageId":"1675","endLine":103,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1866","line":107,"column":9,"nodeType":"1674","messageId":"1675","endLine":107,"endColumn":32},{"ruleId":"1672","severity":1,"message":"1867","line":113,"column":9,"nodeType":"1674","messageId":"1675","endLine":113,"endColumn":29},{"ruleId":"1680","severity":1,"message":"1681","line":144,"column":9,"nodeType":"1682","messageId":"1683","endLine":144,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1681","line":156,"column":9,"nodeType":"1682","messageId":"1683","endLine":156,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1868","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1861","line":9,"column":3,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1869","line":2,"column":3,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1870","line":3,"column":3,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1871","line":4,"column":3,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1872","line":5,"column":3,"nodeType":"1674","messageId":"1675","endLine":5,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1873","line":6,"column":3,"nodeType":"1674","messageId":"1675","endLine":6,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1861","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1874","line":9,"column":3,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1821","line":10,"column":3,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":9},{"ruleId":"1672","severity":1,"message":"1858","line":15,"column":11,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1875","line":15,"column":15,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":26},{"ruleId":"1672","severity":1,"message":"1859","line":15,"column":49,"nodeType":"1674","messageId":"1675","endLine":15,"endColumn":53},{"ruleId":"1672","severity":1,"message":"1857","line":17,"column":9,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1876","line":18,"column":10,"nodeType":"1674","messageId":"1675","endLine":18,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1877","line":19,"column":30,"nodeType":"1674","messageId":"1675","endLine":19,"endColumn":50},{"ruleId":"1672","severity":1,"message":"1878","line":20,"column":9,"nodeType":"1674","messageId":"1675","endLine":20,"endColumn":26},{"ruleId":"1672","severity":1,"message":"1879","line":24,"column":9,"nodeType":"1674","messageId":"1675","endLine":24,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1863","line":28,"column":9,"nodeType":"1674","messageId":"1675","endLine":28,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1864","line":32,"column":9,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1861","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1767","line":16,"column":10,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":14},{"ruleId":"1668","severity":1,"message":"1880","line":35,"column":60,"nodeType":"1670","messageId":"1671","endLine":35,"endColumn":62},{"ruleId":"1668","severity":1,"message":"1669","line":141,"column":57,"nodeType":"1670","messageId":"1671","endLine":141,"endColumn":59},{"ruleId":"1672","severity":1,"message":"1849","line":203,"column":10,"nodeType":"1674","messageId":"1675","endLine":203,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1856","line":203,"column":20,"nodeType":"1674","messageId":"1675","endLine":203,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1857","line":206,"column":9,"nodeType":"1674","messageId":"1675","endLine":206,"endColumn":16},{"ruleId":"1852","severity":1,"message":"1853","line":229,"column":15,"nodeType":"1778","messageId":"1854","endLine":229,"endColumn":54,"fix":"1881"},{"ruleId":"1672","severity":1,"message":"1728","line":283,"column":7,"nodeType":"1674","messageId":"1675","endLine":283,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1882","line":12,"column":3,"nodeType":"1674","messageId":"1675","endLine":12,"endColumn":11},{"ruleId":"1672","severity":1,"message":"1883","line":16,"column":10,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1767","line":22,"column":10,"nodeType":"1674","messageId":"1675","endLine":22,"endColumn":14},{"ruleId":"1672","severity":1,"message":"1884","line":23,"column":10,"nodeType":"1674","messageId":"1675","endLine":23,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1885","line":34,"column":10,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":14},{"ruleId":"1672","severity":1,"message":"1886","line":34,"column":16,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":23},{"ruleId":"1668","severity":1,"message":"1880","line":42,"column":44,"nodeType":"1670","messageId":"1671","endLine":42,"endColumn":46},{"ruleId":"1887","severity":1,"message":"1888","line":93,"column":18,"nodeType":"1889","messageId":"1890","endLine":93,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1891","line":290,"column":33,"nodeType":"1674","messageId":"1675","endLine":290,"endColumn":41},{"ruleId":"1668","severity":1,"message":"1669","line":441,"column":24,"nodeType":"1670","messageId":"1671","endLine":441,"endColumn":26},{"ruleId":"1668","severity":1,"message":"1880","line":441,"column":51,"nodeType":"1670","messageId":"1671","endLine":441,"endColumn":53},{"ruleId":"1672","severity":1,"message":"1892","line":7,"column":3,"nodeType":"1674","messageId":"1675","endLine":7,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1893","line":12,"column":3,"nodeType":"1674","messageId":"1675","endLine":12,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1894","line":17,"column":3,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":28},{"ruleId":"1672","severity":1,"message":"1895","line":18,"column":3,"nodeType":"1674","messageId":"1675","endLine":18,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1896","line":25,"column":8,"nodeType":"1674","messageId":"1675","endLine":25,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1897","line":28,"column":8,"nodeType":"1674","messageId":"1675","endLine":28,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1722","line":31,"column":8,"nodeType":"1674","messageId":"1675","endLine":31,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1723","line":32,"column":8,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1898","line":33,"column":8,"nodeType":"1674","messageId":"1675","endLine":33,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1716","line":34,"column":8,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1724","line":35,"column":8,"nodeType":"1674","messageId":"1675","endLine":35,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1899","line":46,"column":9,"nodeType":"1674","messageId":"1675","endLine":46,"endColumn":19},{"ruleId":"1676","severity":1,"message":"1726","line":56,"column":6,"nodeType":"1678","endLine":56,"endColumn":8,"suggestions":"1900"},{"ruleId":"1672","severity":1,"message":"1863","line":99,"column":9,"nodeType":"1674","messageId":"1675","endLine":99,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1864","line":104,"column":9,"nodeType":"1674","messageId":"1675","endLine":104,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1865","line":110,"column":9,"nodeType":"1674","messageId":"1675","endLine":110,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1866","line":114,"column":9,"nodeType":"1674","messageId":"1675","endLine":114,"endColumn":32},{"ruleId":"1672","severity":1,"message":"1901","line":144,"column":9,"nodeType":"1674","messageId":"1675","endLine":144,"endColumn":31},{"ruleId":"1680","severity":1,"message":"1681","line":155,"column":9,"nodeType":"1682","messageId":"1683","endLine":155,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1681","line":167,"column":9,"nodeType":"1682","messageId":"1683","endLine":167,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1869","line":2,"column":3,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1870","line":3,"column":3,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1871","line":4,"column":3,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1872","line":5,"column":3,"nodeType":"1674","messageId":"1675","endLine":5,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1873","line":6,"column":3,"nodeType":"1674","messageId":"1675","endLine":6,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1861","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1874","line":9,"column":3,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1821","line":10,"column":3,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":9},{"ruleId":"1672","severity":1,"message":"1902","line":12,"column":17,"nodeType":"1674","messageId":"1675","endLine":12,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1861","line":9,"column":3,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1767","line":16,"column":10,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":14},{"ruleId":"1668","severity":1,"message":"1880","line":35,"column":60,"nodeType":"1670","messageId":"1671","endLine":35,"endColumn":62},{"ruleId":"1668","severity":1,"message":"1669","line":141,"column":57,"nodeType":"1670","messageId":"1671","endLine":141,"endColumn":59},{"ruleId":"1672","severity":1,"message":"1849","line":203,"column":10,"nodeType":"1674","messageId":"1675","endLine":203,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1856","line":203,"column":20,"nodeType":"1674","messageId":"1675","endLine":203,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1857","line":206,"column":9,"nodeType":"1674","messageId":"1675","endLine":206,"endColumn":16},{"ruleId":"1852","severity":1,"message":"1853","line":229,"column":15,"nodeType":"1778","messageId":"1854","endLine":229,"endColumn":54,"fix":"1903"},{"ruleId":"1672","severity":1,"message":"1728","line":283,"column":7,"nodeType":"1674","messageId":"1675","endLine":283,"endColumn":13},{"ruleId":"1672","severity":1,"message":"1868","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1861","line":9,"column":3,"nodeType":"1674","messageId":"1675","endLine":9,"endColumn":8},{"ruleId":"1672","severity":1,"message":"1861","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1730","line":4,"column":8,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":15},{"ruleId":"1676","severity":1,"message":"1677","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":8,"suggestions":"1904"},{"ruleId":"1672","severity":1,"message":"1893","line":10,"column":3,"nodeType":"1674","messageId":"1675","endLine":10,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1905","line":11,"column":3,"nodeType":"1674","messageId":"1675","endLine":11,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1906","line":12,"column":3,"nodeType":"1674","messageId":"1675","endLine":12,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1907","line":13,"column":3,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1908","line":14,"column":3,"nodeType":"1674","messageId":"1675","endLine":14,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1896","line":24,"column":8,"nodeType":"1674","messageId":"1675","endLine":24,"endColumn":17},{"ruleId":"1672","severity":1,"message":"1721","line":29,"column":8,"nodeType":"1674","messageId":"1675","endLine":29,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1722","line":31,"column":8,"nodeType":"1674","messageId":"1675","endLine":31,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1723","line":32,"column":8,"nodeType":"1674","messageId":"1675","endLine":32,"endColumn":35},{"ruleId":"1672","severity":1,"message":"1898","line":33,"column":8,"nodeType":"1674","messageId":"1675","endLine":33,"endColumn":23},{"ruleId":"1672","severity":1,"message":"1716","line":34,"column":8,"nodeType":"1674","messageId":"1675","endLine":34,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1724","line":35,"column":8,"nodeType":"1674","messageId":"1675","endLine":35,"endColumn":30},{"ruleId":"1672","severity":1,"message":"1909","line":54,"column":10,"nodeType":"1674","messageId":"1675","endLine":54,"endColumn":20},{"ruleId":"1672","severity":1,"message":"1725","line":54,"column":22,"nodeType":"1674","messageId":"1675","endLine":54,"endColumn":35},{"ruleId":"1676","severity":1,"message":"1726","line":61,"column":6,"nodeType":"1678","endLine":61,"endColumn":8,"suggestions":"1910"},{"ruleId":"1672","severity":1,"message":"1728","line":67,"column":9,"nodeType":"1674","messageId":"1675","endLine":67,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1867","line":91,"column":9,"nodeType":"1674","messageId":"1675","endLine":91,"endColumn":29},{"ruleId":"1680","severity":1,"message":"1681","line":115,"column":9,"nodeType":"1682","messageId":"1683","endLine":115,"endColumn":15},{"ruleId":"1680","severity":1,"message":"1681","line":126,"column":9,"nodeType":"1682","messageId":"1683","endLine":126,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1861","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":15},{"ruleId":"1672","severity":1,"message":"1861","line":8,"column":3,"nodeType":"1674","messageId":"1675","endLine":8,"endColumn":8},{"ruleId":"1803","severity":1,"message":"1911","line":72,"column":46,"nodeType":"1748","messageId":"1912","endLine":72,"endColumn":48},{"ruleId":"1887","severity":1,"message":"1888","line":181,"column":17,"nodeType":"1889","messageId":"1890","endLine":181,"endColumn":32},{"ruleId":"1672","severity":1,"message":"1821","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":16},{"ruleId":"1672","severity":1,"message":"1874","line":1,"column":18,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1860","line":1,"column":29,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":36},{"ruleId":"1672","severity":1,"message":"1902","line":3,"column":17,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1728","line":26,"column":7,"nodeType":"1674","messageId":"1675","endLine":26,"endColumn":13},{"ruleId":"1887","severity":1,"message":"1888","line":28,"column":9,"nodeType":"1889","messageId":"1890","endLine":28,"endColumn":20},{"ruleId":"1887","severity":1,"message":"1888","line":92,"column":17,"nodeType":"1889","messageId":"1890","endLine":92,"endColumn":32},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":33,"column":6,"nodeType":"1678","endLine":33,"endColumn":33,"suggestions":"1913"},{"ruleId":"1668","severity":1,"message":"1669","line":38,"column":23,"nodeType":"1670","messageId":"1671","endLine":38,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1914","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1915","line":4,"column":7,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":24},{"ruleId":"1672","severity":1,"message":"1916","line":1,"column":7,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":22,"suggestions":"1917"},{"ruleId":"1668","severity":1,"message":"1669","line":27,"column":23,"nodeType":"1670","messageId":"1671","endLine":27,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":33,"column":6,"nodeType":"1678","endLine":33,"endColumn":33,"suggestions":"1918"},{"ruleId":"1668","severity":1,"message":"1669","line":38,"column":23,"nodeType":"1670","messageId":"1671","endLine":38,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":22,"suggestions":"1919"},{"ruleId":"1668","severity":1,"message":"1669","line":27,"column":23,"nodeType":"1670","messageId":"1671","endLine":27,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1914","line":1,"column":10,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":27},{"ruleId":"1672","severity":1,"message":"1915","line":4,"column":7,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":24},{"ruleId":"1672","severity":1,"message":"1916","line":1,"column":7,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1916","line":1,"column":7,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":33,"column":6,"nodeType":"1678","endLine":33,"endColumn":33,"suggestions":"1920"},{"ruleId":"1668","severity":1,"message":"1669","line":38,"column":23,"nodeType":"1670","messageId":"1671","endLine":38,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1915","line":2,"column":7,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":24},{"ruleId":"1672","severity":1,"message":"1694","line":1,"column":8,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":13},{"ruleId":"1676","severity":1,"message":"1695","line":22,"column":6,"nodeType":"1678","endLine":22,"endColumn":22,"suggestions":"1921"},{"ruleId":"1668","severity":1,"message":"1669","line":27,"column":23,"nodeType":"1670","messageId":"1671","endLine":27,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1922","line":6,"column":3,"nodeType":"1674","messageId":"1675","endLine":6,"endColumn":13},{"ruleId":"1668","severity":1,"message":"1669","line":85,"column":23,"nodeType":"1670","messageId":"1671","endLine":85,"endColumn":25},{"ruleId":"1672","severity":1,"message":"1923","line":101,"column":9,"nodeType":"1674","messageId":"1675","endLine":101,"endColumn":19},{"ruleId":"1668","severity":1,"message":"1669","line":115,"column":29,"nodeType":"1670","messageId":"1671","endLine":115,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1689","line":123,"column":53,"nodeType":"1674","messageId":"1675","endLine":123,"endColumn":60},{"ruleId":"1668","severity":1,"message":"1880","line":130,"column":15,"nodeType":"1670","messageId":"1671","endLine":130,"endColumn":17},{"ruleId":"1676","severity":1,"message":"1924","line":133,"column":6,"nodeType":"1678","endLine":133,"endColumn":14,"suggestions":"1925"},{"ruleId":"1672","severity":1,"message":"1926","line":2,"column":3,"nodeType":"1674","messageId":"1675","endLine":2,"endColumn":12},{"ruleId":"1672","severity":1,"message":"1927","line":3,"column":3,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1928","line":4,"column":3,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1929","line":6,"column":3,"nodeType":"1674","messageId":"1675","endLine":6,"endColumn":6},{"ruleId":"1672","severity":1,"message":"1930","line":16,"column":8,"nodeType":"1674","messageId":"1675","endLine":16,"endColumn":22},{"ruleId":"1672","severity":1,"message":"1931","line":17,"column":10,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":22},{"ruleId":"1676","severity":1,"message":"1726","line":69,"column":6,"nodeType":"1678","endLine":69,"endColumn":8,"suggestions":"1932"},{"ruleId":"1676","severity":1,"message":"1933","line":73,"column":6,"nodeType":"1678","endLine":73,"endColumn":13,"suggestions":"1934"},{"ruleId":"1935","severity":1,"message":"1936","line":240,"column":1,"nodeType":"1937","messageId":"1938","endLine":262,"endColumn":2},{"ruleId":"1672","severity":1,"message":"1833","line":1,"column":7,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":21},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1939"},{"ruleId":"1811","severity":1,"message":"1940","line":16,"column":3,"nodeType":"1813","messageId":"1671","endLine":16,"endColumn":9},{"ruleId":"1811","severity":1,"message":"1941","line":66,"column":3,"nodeType":"1813","messageId":"1671","endLine":66,"endColumn":9},{"ruleId":"1811","severity":1,"message":"1942","line":167,"column":3,"nodeType":"1813","messageId":"1671","endLine":167,"endColumn":9},{"ruleId":"1811","severity":1,"message":"1943","line":173,"column":3,"nodeType":"1813","messageId":"1671","endLine":173,"endColumn":18},{"ruleId":"1811","severity":1,"message":"1944","line":180,"column":3,"nodeType":"1813","messageId":"1671","endLine":180,"endColumn":11},{"ruleId":"1811","severity":1,"message":"1940","line":16,"column":3,"nodeType":"1813","messageId":"1671","endLine":16,"endColumn":9},{"ruleId":"1811","severity":1,"message":"1941","line":66,"column":3,"nodeType":"1813","messageId":"1671","endLine":66,"endColumn":9},{"ruleId":"1811","severity":1,"message":"1942","line":165,"column":3,"nodeType":"1813","messageId":"1671","endLine":165,"endColumn":9},{"ruleId":"1811","severity":1,"message":"1943","line":171,"column":3,"nodeType":"1813","messageId":"1671","endLine":171,"endColumn":18},{"ruleId":"1811","severity":1,"message":"1944","line":178,"column":3,"nodeType":"1813","messageId":"1671","endLine":178,"endColumn":11},{"ruleId":"1676","severity":1,"message":"1695","line":23,"column":6,"nodeType":"1678","endLine":23,"endColumn":14,"suggestions":"1945"},{"ruleId":"1672","severity":1,"message":"1833","line":1,"column":7,"nodeType":"1674","messageId":"1675","endLine":1,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1946","line":7,"column":3,"nodeType":"1674","messageId":"1675","endLine":7,"endColumn":15},{"ruleId":"1711","severity":1,"message":"1712","line":34,"column":7,"nodeType":"1666","messageId":"1671","endLine":35,"endColumn":34},{"ruleId":"1672","severity":1,"message":"1947","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1731","line":13,"column":18,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":16,"column":51,"nodeType":"1678","endLine":16,"endColumn":53,"suggestions":"1948"},{"ruleId":"1672","severity":1,"message":"1949","line":124,"column":9,"nodeType":"1674","messageId":"1675","endLine":124,"endColumn":21},{"ruleId":"1672","severity":1,"message":"1947","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1731","line":13,"column":18,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":16,"column":49,"nodeType":"1678","endLine":16,"endColumn":51,"suggestions":"1950"},{"ruleId":"1672","severity":1,"message":"1951","line":17,"column":10,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":18},{"ruleId":"1672","severity":1,"message":"1952","line":17,"column":20,"nodeType":"1674","messageId":"1675","endLine":17,"endColumn":31},{"ruleId":"1672","severity":1,"message":"1947","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1731","line":13,"column":18,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":16,"column":51,"nodeType":"1678","endLine":16,"endColumn":53,"suggestions":"1953"},{"ruleId":"1672","severity":1,"message":"1947","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1731","line":13,"column":18,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":16,"column":57,"nodeType":"1678","endLine":16,"endColumn":59,"suggestions":"1954"},{"ruleId":"1672","severity":1,"message":"1947","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1731","line":13,"column":18,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":16,"column":48,"nodeType":"1678","endLine":16,"endColumn":50,"suggestions":"1955"},{"ruleId":"1672","severity":1,"message":"1947","line":3,"column":8,"nodeType":"1674","messageId":"1675","endLine":3,"endColumn":19},{"ruleId":"1672","severity":1,"message":"1731","line":13,"column":18,"nodeType":"1674","messageId":"1675","endLine":13,"endColumn":27},{"ruleId":"1676","severity":1,"message":"1677","line":16,"column":47,"nodeType":"1678","endLine":16,"endColumn":49,"suggestions":"1956"},{"ruleId":"1672","severity":1,"message":"1957","line":4,"column":3,"nodeType":"1674","messageId":"1675","endLine":4,"endColumn":10},{"ruleId":"1668","severity":1,"message":"1669","line":62,"column":41,"nodeType":"1670","messageId":"1671","endLine":62,"endColumn":43},{"ruleId":"1668","severity":1,"message":"1669","line":200,"column":23,"nodeType":"1670","messageId":"1671","endLine":200,"endColumn":25},{"ruleId":"1668","severity":1,"message":"1669","line":203,"column":23,"nodeType":"1670","messageId":"1671","endLine":203,"endColumn":25},{"ruleId":"1668","severity":1,"message":"1669","line":206,"column":23,"nodeType":"1670","messageId":"1671","endLine":206,"endColumn":25},{"ruleId":"1668","severity":1,"message":"1669","line":225,"column":41,"nodeType":"1670","messageId":"1671","endLine":225,"endColumn":43},{"ruleId":"1852","severity":1,"message":"1853","line":349,"column":27,"nodeType":"1778","messageId":"1854","endLine":349,"endColumn":66,"fix":"1958"},{"ruleId":"1852","severity":1,"message":"1853","line":396,"column":27,"nodeType":"1778","messageId":"1854","endLine":396,"endColumn":66,"fix":"1959"},{"ruleId":"1852","severity":1,"message":"1853","line":443,"column":27,"nodeType":"1778","messageId":"1854","endLine":443,"endColumn":66,"fix":"1960"},{"ruleId":"1852","severity":1,"message":"1853","line":490,"column":27,"nodeType":"1778","messageId":"1854","endLine":490,"endColumn":66,"fix":"1961"},{"ruleId":"1676","severity":1,"message":"1677","line":636,"column":54,"nodeType":"1678","endLine":636,"endColumn":56,"suggestions":"1962"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'authenticate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1963"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'dispatch' is assigned a value but never used.","'setRangeDates' is assigned a value but never used.","'setActiveUsersChartData' is assigned a value but never used.","'setsalesChartData' is assigned a value but never used.","'setpopularCategoriesChartData' is assigned a value but never used.","'setData' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'changeActive' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'handleSubmission' and 'isSubmitting'. Either include them or remove the dependency array. If 'handleSubmission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1964"],["1965"],["1966"],["1967"],["1968"],["1969"],["1970"],["1971"],"'urls' is defined but never used.","no-native-reassign",["1972"],"no-negated-in-lhs",["1973"],["1974"],"'StarRateTwoTone' is defined but never used.","no-duplicate-case","Duplicate case label.","'isUserLoggedIn' is defined but never used.","'auth' is defined but never used.","'UserDepositsDashboard' is defined but never used.","'OrderPayment' is defined but never used.","'adminDashboardMicroorganisms' is defined but never used.","'Logs' is defined but never used.","'token' is assigned a value but never used.","Unexpected default export of anonymous function","'DepositPayment' is defined but never used.","'OrderDelivered' is defined but never used.","'OrderDetailsInformationList' is defined but never used.","'OrderRejectDescription' is defined but never used.","'setDatastatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["1975"],"'styles' is assigned a value but never used.","'DropDown' is defined but never used.","'SideBar' is defined but never used.","'setFilter' is assigned a value but never used.",["1976"],["1977"],"'confirmPayment' is defined but never used.","'StripeCheckout' is defined but never used.","'Close' is defined but never used.","'FavoriteOutlined' is defined but never used.","'setSortBy' is assigned a value but never used.",["1978"],"'columns' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'IconButton' is defined but never used.","'getUserData' is defined but never used.","React Hook useEffect has a missing dependency: 'setInitial'. Either include it or remove the dependency array.",["1979"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1980"],["1981"],["1972"],["1973"],"'ItemList' is defined but never used.",["1982"],"'Jumbotron' is defined but never used.","'IoIosArrowDropleftCircle' is defined but never used.","'IoIosArrowDroprightCircle' is defined but never used.","'RiDeleteBin6Line' is defined but never used.","'decreaseQuantity' is defined but never used.","'increaseQuantity' is defined but never used.","'Layout' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["1983"],"'microroganismAddRef' is assigned a value but never used.","'TrendingUpOutlined' is defined but never used.","'Link' is defined but never used.",["1984"],"ExpressionStatement","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.state'. Either include them or remove the dependency array.",["1985"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["1986"],"'setViewport' is assigned a value but never used.","'loggedInNavLinks' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'permission' is assigned a value but never used.","'setPermission' is assigned a value but never used.",["1987"],["1988"],"'currentSlider' is assigned a value but never used.","'setCurrentSlider' is assigned a value but never used.","'ReCAPTCHA' is defined but never used.","'authConstants' is defined but never used.","'history' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'signUpForm' is assigned a value but never used.","'setSignUpForm' is assigned a value but never used.","'userType' is assigned a value but never used.","'selectUserType' is assigned a value but never used.","'goBack' is assigned a value but never used.","'recaptchaRef' is assigned a value but never used.",["1989"],["1990"],["1991"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'nextSlide' is assigned a value but never used.","'prevSlide' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["1992"],"no-dupe-keys","Duplicate key 'borderradius'.","ObjectExpression","'options' is assigned a value but never used.","'sideBarOptions' is assigned a value but never used.",["1993"],["1972"],["1973"],["1994"],["1995"],"'Button' is defined but never used.","'esES' is defined but never used.","'SearchOutlinedIcon' is defined but never used.","'searchBarShow' is assigned a value but never used.","'setSearchBarShow' is assigned a value but never used.","'error' is assigned a value but never used.",["1972"],["1973"],"'InputLabel' is defined but never used.","'Card' is defined but never used.",["1996"],["1997"],"'getCurrentDate' is assigned a value but never used.",["1998"],["1999"],["2000"],["2001"],["2002"],["2003"],["2004"],["2005"],["2006"],["2007"],["2008"],["2009"],["2010"],"'cartCount' is assigned a value but never used.","'useEffect' is defined but never used.","'collapse' is assigned a value but never used.","'getDeposits' is defined but never used.",["2011"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"2012","text":"2013"},"'setCollapse' is assigned a value but never used.","'headers' is assigned a value but never used.","'id' is assigned a value but never used.","'data' is assigned a value but never used.","'Toolbar' is defined but never used.","'Paper' is defined but never used.",["2014"],"'handleRequestApproval' is assigned a value but never used.","'handleRequestRejection' is assigned a value but never used.","'handleDocumentApproval' is assigned a value but never used.","'handleDocumentRejection' is assigned a value but never used.","'handleSubmitTracking' is assigned a value but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableContainer' is defined but never used.","'TextField' is defined but never used.","'description' is assigned a value but never used.","'orderRejected' is assigned a value but never used.","'setCancelDescription' is assigned a value but never used.","'handleOrderReject' is assigned a value but never used.","'handleRejectCancel' is assigned a value but never used.","Expected '!==' and instead saw '!='.",{"range":"2015","text":"2013"},"'MenuItem' is defined but never used.","'confirmOrderDelivery' is defined but never used.","'resetWarningCache' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'setError' is assigned a value but never used.","'CircularProgress' is defined but never used.","'getOrderDetails' is defined but never used.","'submitOrderTrackingNumber' is defined but never used.","'submitOrderFile' is defined but never used.","'Delivered' is defined but never used.","'Processing' is defined but never used.","'OrderDispatched' is defined but never used.","'order_made' is assigned a value but never used.",["2016"],"'onOrderDeliveryConfirm' is assigned a value but never used.","'useState' is defined but never used.",{"range":"2017","text":"2013"},["2018"],"'adminOrderReject' is defined but never used.","'changeAdminOrderStatus' is defined but never used.","'approveOrderDocument' is defined but never used.","'rejectOrderDocument' is defined but never used.","'datastatus' is assigned a value but never used.",["2019"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["2020"],"'ErrorOutlineSharp' is defined but never used.","'passwordValidator' is assigned a value but never used.","'emailValidator' is assigned a value but never used.",["2021"],["2022"],["2023"],["2024"],["2025"],"'StepButton' is defined but never used.","'handleStep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleNext' and 'label'. Either include them or remove the dependency array.",["2026"],"'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.","'Box' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Autocomplete' is defined but never used.",["2027"],"React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.",["2028"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["2029"],"Duplicate key 'Status'.","Duplicate key 'Author'.","Duplicate key 'Medium'.","Duplicate key 'AccessionNumber'.","Duplicate key 'Sequence'.",["2030"],"'ListItemIcon' is defined but never used.","'CustomTable' is defined but never used.",["2031"],"'onRowsDelete' is assigned a value but never used.",["2032"],"'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.",["2033"],["2034"],["2035"],["2036"],"'Divider' is defined but never used.",{"range":"2037","text":"2013"},{"range":"2038","text":"2013"},{"range":"2039","text":"2013"},{"range":"2040","text":"2013"},["2041"],{"desc":"2042","fix":"2043"},{"desc":"2044","fix":"2045"},{"desc":"2046","fix":"2047"},{"desc":"2046","fix":"2048"},{"desc":"2046","fix":"2049"},{"desc":"2046","fix":"2050"},{"desc":"2046","fix":"2051"},{"desc":"2046","fix":"2052"},{"desc":"2046","fix":"2053"},"no-global-assign","no-unsafe-negation",{"desc":"2054","fix":"2055"},{"desc":"2056","fix":"2057"},{"desc":"2042","fix":"2058"},{"desc":"2042","fix":"2059"},{"desc":"2042","fix":"2060"},{"desc":"2061","fix":"2062"},{"desc":"2063","fix":"2064"},{"desc":"2042","fix":"2065"},{"desc":"2042","fix":"2066"},{"desc":"2067","fix":"2068"},{"desc":"2042","fix":"2069"},{"desc":"2070","fix":"2071"},{"desc":"2072","fix":"2073"},{"desc":"2056","fix":"2074"},{"desc":"2061","fix":"2075"},{"desc":"2042","fix":"2076"},{"desc":"2042","fix":"2077"},{"desc":"2061","fix":"2078"},{"desc":"2046","fix":"2079"},{"desc":"2080","fix":"2081"},{"desc":"2044","fix":"2082"},{"desc":"2083","fix":"2084"},{"desc":"2085","fix":"2086"},{"desc":"2046","fix":"2087"},{"desc":"2046","fix":"2088"},{"desc":"2046","fix":"2089"},{"desc":"2046","fix":"2090"},{"desc":"2046","fix":"2091"},{"desc":"2046","fix":"2092"},{"desc":"2046","fix":"2093"},{"desc":"2046","fix":"2094"},{"desc":"2046","fix":"2095"},{"desc":"2046","fix":"2096"},{"desc":"2046","fix":"2097"},{"desc":"2046","fix":"2098"},{"desc":"2046","fix":"2099"},{"desc":"2046","fix":"2100"},{"desc":"2042","fix":"2101"},[1580,1580]," rel=\"noreferrer\"",{"desc":"2056","fix":"2102"},[6490,6490],{"desc":"2056","fix":"2103"},[6492,6492],{"desc":"2042","fix":"2104"},{"desc":"2056","fix":"2105"},{"desc":"2106","fix":"2107"},{"desc":"2108","fix":"2109"},{"desc":"2106","fix":"2110"},{"desc":"2108","fix":"2111"},{"desc":"2106","fix":"2112"},{"desc":"2108","fix":"2113"},{"desc":"2114","fix":"2115"},{"desc":"2056","fix":"2116"},{"desc":"2117","fix":"2118"},{"desc":"2046","fix":"2119"},{"desc":"2046","fix":"2120"},{"desc":"2042","fix":"2121"},{"desc":"2042","fix":"2122"},{"desc":"2042","fix":"2123"},{"desc":"2042","fix":"2124"},{"desc":"2042","fix":"2125"},{"desc":"2042","fix":"2126"},[10619,10619],[12469,12469],[14310,14310],[16157,16157],{"desc":"2042","fix":"2127"},"Update the dependencies array to be: [dispatch]",{"range":"2128","text":"2129"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signInErrors]",{"range":"2130","text":"2131"},"Update the dependencies array to be: [errors, handleSubmission, isSubmitting]",{"range":"2132","text":"2133"},{"range":"2134","text":"2133"},{"range":"2135","text":"2133"},{"range":"2136","text":"2133"},{"range":"2137","text":"2133"},{"range":"2138","text":"2133"},{"range":"2139","text":"2133"},"Update the dependencies array to be: [auth, dispatch]",{"range":"2140","text":"2141"},"Update the dependencies array to be: [dispatch, id]",{"range":"2142","text":"2143"},{"range":"2144","text":"2129"},{"range":"2145","text":"2129"},{"range":"2146","text":"2129"},"Update the dependencies array to be: [setInitial, user]",{"range":"2147","text":"2148"},"Update the dependencies array to be: [id]",{"range":"2149","text":"2150"},{"range":"2151","text":"2129"},{"range":"2152","text":"2129"},"Update the dependencies array to be: [dispatch, token]",{"range":"2153","text":"2154"},{"range":"2155","text":"2129"},"Update the dependencies array to be: [dispatch, props.location.state]",{"range":"2156","text":"2157"},"Update the dependencies array to be: [token]",{"range":"2158","text":"2159"},{"range":"2160","text":"2143"},{"range":"2161","text":"2148"},{"range":"2162","text":"2129"},{"range":"2163","text":"2129"},{"range":"2164","text":"2148"},{"range":"2165","text":"2133"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signUpErrors]",{"range":"2166","text":"2167"},{"range":"2168","text":"2131"},"Update the dependencies array to be: [handleSubmission, isSubmitting, resetPasswordErrors]",{"range":"2169","text":"2170"},"Update the dependencies array to be: [addUserErrors, handleSubmission, isSubmitting]",{"range":"2171","text":"2172"},{"range":"2173","text":"2133"},{"range":"2174","text":"2133"},{"range":"2175","text":"2133"},{"range":"2176","text":"2133"},{"range":"2177","text":"2133"},{"range":"2178","text":"2133"},{"range":"2179","text":"2133"},{"range":"2180","text":"2133"},{"range":"2181","text":"2133"},{"range":"2182","text":"2133"},{"range":"2183","text":"2133"},{"range":"2184","text":"2133"},{"range":"2185","text":"2133"},{"range":"2186","text":"2133"},{"range":"2187","text":"2129"},{"range":"2188","text":"2143"},{"range":"2189","text":"2143"},{"range":"2190","text":"2129"},{"range":"2191","text":"2143"},"Update the dependencies array to be: [handleSubmission, isSubmitting, personalInformationErrors]",{"range":"2192","text":"2193"},"Update the dependencies array to be: [handleSubmission, isSubmitting, passwordErrors]",{"range":"2194","text":"2195"},{"range":"2196","text":"2193"},{"range":"2197","text":"2195"},{"range":"2198","text":"2193"},{"range":"2199","text":"2195"},"Update the dependencies array to be: [errors, handleNext, label]",{"range":"2200","text":"2201"},{"range":"2202","text":"2143"},"Update the dependencies array to be: [micro, setData]",{"range":"2203","text":"2204"},{"range":"2205","text":"2133"},{"range":"2206","text":"2133"},{"range":"2207","text":"2129"},{"range":"2208","text":"2129"},{"range":"2209","text":"2129"},{"range":"2210","text":"2129"},{"range":"2211","text":"2129"},{"range":"2212","text":"2129"},{"range":"2213","text":"2129"},[1272,1274],"[dispatch]",[753,767],"[handleSubmission, isSubmitting, signInErrors]",[1120,1128],"[errors, handleSubmission, isSubmitting]",[545,553],[569,577],[563,571],[542,550],[545,553],[560,568],[410,416],"[auth, dispatch]",[1822,1824],"[dispatch, id]",[827,829],[836,838],[1054,1056],[2831,2837],"[setInitial, user]",[1012,1014],"[id]",[1009,1011],[1032,1034],[1361,1363],"[dispatch, token]",[1191,1193],[857,859],"[dispatch, props.location.state]",[1247,1249],"[token]",[2614,2616],[2971,2977],[808,810],[758,760],[2706,2712],[1120,1128],[1220,1234],"[handleSubmission, isSubmitting, signUpErrors]",[753,767],[835,856],"[handleSubmission, isSubmitting, resetPasswordErrors]",[1727,1742],"[addUserErrors, handleSubmission, isSubmitting]",[542,550],[563,571],[563,571],[542,550],[542,550],[545,553],[560,568],[569,577],[560,568],[569,577],[545,553],[560,568],[545,553],[542,550],[897,899],[1818,1820],[2166,2168],[812,814],[2281,2283],[883,910],"[handleSubmission, isSubmitting, personalInformationErrors]",[641,657],"[handleSubmission, isSubmitting, passwordErrors]",[883,910],[641,657],[883,910],[641,657],[3871,3879],"[errors, handleNext, label]",[1940,1942],[1995,2002],"[micro, setData]",[593,601],[592,600],[699,701],[695,697],[699,701],[711,713],[693,695],[683,685],[20489,20491]]