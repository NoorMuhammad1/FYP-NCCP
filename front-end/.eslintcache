<<<<<<< HEAD
[{"E:\\Study\\FYP\\Project\\front-end\\src\\index.js":"1","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js":"2","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\HomePage\\index.js":"3","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Microorganism\\index.js":"4","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Details\\index.js":"5","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Deposits\\index.js":"6","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js":"7","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Cart\\index.js":"8","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardPayments\\index.js":"9","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardReports\\index.js":"10","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js":"11","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardUsers\\index.js":"12","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpValidator.js":"13","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInValidator.js":"14","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js":"15","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js":"16","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js":"17","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js":"18","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js":"19","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js":"20","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\cart.reducer.js":"21","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\catalogue.reducers.js":"22","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemListCard\\index.js":"23","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DropDown\\index.js":"24","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\sidebardata.js":"25","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\auth.actions.js":"26","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"27","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"28","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"29","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js":"30","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js":"31","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"32","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js":"33","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Logo\\index.js":"34","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js":"35","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"36","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"37","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"38","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js":"39","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"40","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js":"41","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"42","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js":"43","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js":"44","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js":"45","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\index.js":"46","E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\axios.js":"47","E:\\Study\\FYP\\Project\\front-end\\src\\store\\index.js":"48","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js":"49","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js":"50","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\index.js":"51","E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js":"52","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\index.js":"53","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Orders\\index.js":"54","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\index.js":"55","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js":"56","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\index.js":"57","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDetails\\index.js":"58","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddUserForm\\index.js":"59","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpValidator.js":"60","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js":"61","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js":"62","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js":"63","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\index.js":"64","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js":"65","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\user.reducer.js":"66","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SearchBar\\index.js":"67","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js":"68","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositItemList\\index.js":"69","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js":"70","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js":"71","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js":"72","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddMicroorganismModal\\index.js":"73","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js":"74","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js":"75","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js":"76","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js":"77","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"78","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js":"79","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"80","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js":"81","E:\\Study\\FYP\\Project\\front-end\\src\\components\\TagInput\\index.js":"82","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\index.js":"83","E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Button\\Button.js":"84","E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js":"85","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Users\\index.js":"86","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js":"87","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js":"88","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js":"89","E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Input\\input.js":"90","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\cart.actions.js":"91","E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\templates.js":"92","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\signup.reducers.js":"93","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\itemInfo.reducer.js":"94","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js":"95","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js":"96","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js":"97","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js":"98","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js":"99","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"100","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Status\\index.js":"101","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js":"102","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\User\\index.js":"103","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js":"104","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\catalogue.actions.js":"105","E:\\Study\\FYP\\Project\\front-end\\src\\components\\PageHeader\\index.js":"106","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js":"107","E:\\Study\\FYP\\Project\\front-end\\src\\server_urls.js\\index.js":"108","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js":"109","E:\\Study\\FYP\\Project\\front-end\\src\\components\\OrderItemList\\index.js":"110","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\ResponseModal\\index.js":"111","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js":"112","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js":"113","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js":"114","E:\\Study\\FYP\\Project\\front-end\\src\\App.js":"115","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardOrders\\index.js":"116","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\EmailVerified\\index.js":"117","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js":"118","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js":"119","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js":"120","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js":"121","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"122","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js":"123","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\index.js":"124","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\useFormUserSettings.js":"125","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\userSettingsValidator.js":"126","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js":"127","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js":"128","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\payment.reducer.js":"129","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\payment.actions.js":"130","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js":"131"},{"size":730,"mtime":1609760640859,"results":"132","hashOfConfig":"133"},{"size":7571,"mtime":1610028026504,"results":"134","hashOfConfig":"133"},{"size":19426,"mtime":1616415939032,"results":"135","hashOfConfig":"133"},{"size":200,"mtime":1610703340036,"results":"136","hashOfConfig":"133"},{"size":2387,"mtime":1615154773802,"results":"137","hashOfConfig":"133"},{"size":275,"mtime":1614933751197,"results":"138","hashOfConfig":"133"},{"size":9169,"mtime":1618426723054,"results":"139","hashOfConfig":"133"},{"size":3391,"mtime":1618847028373,"results":"140","hashOfConfig":"133"},{"size":311,"mtime":1615226256945,"results":"141","hashOfConfig":"133"},{"size":253,"mtime":1615226310899,"results":"142","hashOfConfig":"133"},{"size":12758,"mtime":1615226580618,"results":"143","hashOfConfig":"133"},{"size":4843,"mtime":1616415938848,"results":"144","hashOfConfig":"133"},{"size":1688,"mtime":1614295139760,"results":"145","hashOfConfig":"133"},{"size":748,"mtime":1614271165695,"results":"146","hashOfConfig":"133"},{"size":1037,"mtime":1618857049766,"results":"147","hashOfConfig":"133"},{"size":1735,"mtime":1615116735436,"results":"148","hashOfConfig":"149"},{"size":705,"mtime":1614352234225,"results":"150","hashOfConfig":"133"},{"size":6062,"mtime":1618052484767,"results":"151","hashOfConfig":"133"},{"size":961,"mtime":1611325418573,"results":"152","hashOfConfig":"133"},{"size":386,"mtime":1614936932140,"results":"153","hashOfConfig":"133"},{"size":2818,"mtime":1613556271952,"results":"154","hashOfConfig":"133"},{"size":3175,"mtime":1612234828088,"results":"155","hashOfConfig":"133"},{"size":152,"mtime":1614951402830,"results":"156","hashOfConfig":"133"},{"size":1188,"mtime":1614981659971,"results":"157","hashOfConfig":"133"},{"size":1432,"mtime":1616415938828,"results":"158","hashOfConfig":"133"},{"size":1779,"mtime":1615224908191,"results":"159","hashOfConfig":"133"},{"size":4204,"mtime":1612099911161,"results":"160","hashOfConfig":"133"},{"size":3041,"mtime":1612089178067,"results":"161","hashOfConfig":"133"},{"size":1512,"mtime":1612089344923,"results":"162","hashOfConfig":"133"},{"size":1107,"mtime":1612099334005,"results":"163","hashOfConfig":"149"},{"size":2554,"mtime":1612096116912,"results":"164","hashOfConfig":"133"},{"size":1630,"mtime":1612162438518,"results":"165","hashOfConfig":"133"},{"size":6484,"mtime":1612105057163,"results":"166","hashOfConfig":"133"},{"size":209,"mtime":1613760444923,"results":"167","hashOfConfig":"133"},{"size":354,"mtime":1612088880577,"results":"168","hashOfConfig":"133"},{"size":774,"mtime":1612081649405,"results":"169","hashOfConfig":"133"},{"size":774,"mtime":1612093359239,"results":"170","hashOfConfig":"133"},{"size":343,"mtime":1612089355765,"results":"171","hashOfConfig":"133"},{"size":365,"mtime":1612096387800,"results":"172","hashOfConfig":"133"},{"size":345,"mtime":1612096115416,"results":"173","hashOfConfig":"133"},{"size":230,"mtime":1612099676754,"results":"174","hashOfConfig":"133"},{"size":770,"mtime":1612094125839,"results":"175","hashOfConfig":"133"},{"size":1429,"mtime":1612096412221,"results":"176","hashOfConfig":"133"},{"size":770,"mtime":1612156927091,"results":"177","hashOfConfig":"149"},{"size":1652,"mtime":1611504892762,"results":"178","hashOfConfig":"133"},{"size":641,"mtime":1611497074412,"results":"179","hashOfConfig":"133"},{"size":1196,"mtime":1616597371762,"results":"180","hashOfConfig":"133"},{"size":1229,"mtime":1611219496629,"results":"181","hashOfConfig":"133"},{"size":12481,"mtime":1614964268739,"results":"182","hashOfConfig":"133"},{"size":281,"mtime":1614933608662,"results":"183","hashOfConfig":"133"},{"size":25776,"mtime":1614933393627,"results":"184","hashOfConfig":"133"},{"size":619,"mtime":1611212907524,"results":"185","hashOfConfig":"133"},{"size":33,"mtime":1609760109116,"results":"186","hashOfConfig":"133"},{"size":258,"mtime":1610517428921,"results":"187","hashOfConfig":"133"},{"size":5570,"mtime":1612352457172,"results":"188","hashOfConfig":"133"},{"size":2761,"mtime":1614370591487,"results":"189","hashOfConfig":"133"},{"size":6059,"mtime":1614370693228,"results":"190","hashOfConfig":"133"},{"size":16141,"mtime":1616415938847,"results":"191","hashOfConfig":"133"},{"size":172,"mtime":1612365106669,"results":"192","hashOfConfig":"133"},{"size":1528,"mtime":1610000731423,"results":"193","hashOfConfig":"133"},{"size":1016,"mtime":1614295192475,"results":"194","hashOfConfig":"133"},{"size":934,"mtime":1614203385289,"results":"195","hashOfConfig":"133"},{"size":2614,"mtime":1615152111026,"results":"196","hashOfConfig":"133"},{"size":1623,"mtime":1616415938399,"results":"197","hashOfConfig":"133"},{"size":539,"mtime":1612331046077,"results":"198","hashOfConfig":"133"},{"size":3476,"mtime":1615151896142,"results":"199","hashOfConfig":"133"},{"size":921,"mtime":1614951035192,"results":"200","hashOfConfig":"133"},{"size":1307,"mtime":1618433692377,"results":"201","hashOfConfig":"133"},{"size":3344,"mtime":1615405130500,"results":"202","hashOfConfig":"133"},{"size":1834,"mtime":1611594161844,"results":"203","hashOfConfig":"133"},{"size":6297,"mtime":1612093815090,"results":"204","hashOfConfig":"133"},{"size":3514,"mtime":1612099729393,"results":"205","hashOfConfig":"133"},{"size":754,"mtime":1611761863125,"results":"206","hashOfConfig":"133"},{"size":774,"mtime":1612087480651,"results":"207","hashOfConfig":"133"},{"size":770,"mtime":1612088989396,"results":"208","hashOfConfig":"133"},{"size":369,"mtime":1612099856264,"results":"209","hashOfConfig":"133"},{"size":649,"mtime":1612087367143,"results":"210","hashOfConfig":"133"},{"size":802,"mtime":1612099703576,"results":"211","hashOfConfig":"133"},{"size":1929,"mtime":1611934862527,"results":"212","hashOfConfig":"133"},{"size":794,"mtime":1612099149958,"results":"213","hashOfConfig":"133"},{"size":791,"mtime":1612081099560,"results":"214","hashOfConfig":"133"},{"size":1413,"mtime":1612105229810,"results":"215","hashOfConfig":"133"},{"size":7765,"mtime":1618435489539,"results":"216","hashOfConfig":"133"},{"size":337,"mtime":1616599482793,"results":"217","hashOfConfig":"133"},{"size":362,"mtime":499162500000,"results":"218","hashOfConfig":"133"},{"size":5823,"mtime":1612366309019,"results":"219","hashOfConfig":"133"},{"size":2718,"mtime":1615154659999,"results":"220","hashOfConfig":"133"},{"size":3960,"mtime":1615406098948,"results":"221","hashOfConfig":"133"},{"size":3663,"mtime":1614302803162,"results":"222","hashOfConfig":"133"},{"size":410,"mtime":1610940204809,"results":"223","hashOfConfig":"133"},{"size":838,"mtime":1613556268005,"results":"224","hashOfConfig":"133"},{"size":161,"mtime":1611765866106,"results":"225","hashOfConfig":"133"},{"size":1298,"mtime":1614299856936,"results":"226","hashOfConfig":"133"},{"size":1057,"mtime":1610303889817,"results":"227","hashOfConfig":"133"},{"size":2190,"mtime":1612096389248,"results":"228","hashOfConfig":"133"},{"size":12264,"mtime":1612095907628,"results":"229","hashOfConfig":"133"},{"size":4181,"mtime":1615225728963,"results":"230","hashOfConfig":"133"},{"size":794,"mtime":1612095969407,"results":"231","hashOfConfig":"133"},{"size":790,"mtime":1612081405740,"results":"232","hashOfConfig":"133"},{"size":343,"mtime":1612093014041,"results":"233","hashOfConfig":"133"},{"size":844,"mtime":1616415938845,"results":"234","hashOfConfig":"133"},{"size":1596,"mtime":1611577118003,"results":"235","hashOfConfig":"133"},{"size":5307,"mtime":1612364728842,"results":"236","hashOfConfig":"133"},{"size":927,"mtime":1609997157202,"results":"237","hashOfConfig":"133"},{"size":4628,"mtime":1614188373409,"results":"238","hashOfConfig":"133"},{"size":5917,"mtime":1614208315155,"results":"239","hashOfConfig":"133"},{"size":2747,"mtime":1618856756771,"results":"240","hashOfConfig":"133"},{"size":383,"mtime":1610948684148,"results":"241","hashOfConfig":"133"},{"size":1067,"mtime":1614352819852,"results":"242","hashOfConfig":"133"},{"size":3495,"mtime":1615392101937,"results":"243","hashOfConfig":"133"},{"size":741,"mtime":1611579988023,"results":"244","hashOfConfig":"133"},{"size":3950,"mtime":1612088856001,"results":"245","hashOfConfig":"133"},{"size":339,"mtime":1612089188318,"results":"246","hashOfConfig":"133"},{"size":324,"mtime":1611938427297,"results":"247","hashOfConfig":"133"},{"size":4936,"mtime":1615227016510,"results":"248","hashOfConfig":"133"},{"size":5424,"mtime":1618858828449,"results":"249","hashOfConfig":"133"},{"size":2390,"mtime":1614304414037,"results":"250","hashOfConfig":"133"},{"size":745,"mtime":1611661892689,"results":"251","hashOfConfig":"133"},{"size":8500,"mtime":1612157285641,"results":"252","hashOfConfig":"133"},{"size":5466,"mtime":1612158903313,"results":"253","hashOfConfig":"133"},{"size":341,"mtime":1612093363071,"results":"254","hashOfConfig":"133"},{"size":790,"mtime":1612089286801,"results":"255","hashOfConfig":"133"},{"size":1138,"mtime":1611334830974,"results":"256","hashOfConfig":"133"},{"size":6085,"mtime":1611505426679,"results":"257","hashOfConfig":"133"},{"size":1515,"mtime":1618435213523,"results":"258","hashOfConfig":"133"},{"size":995,"mtime":1618405917391,"results":"259","hashOfConfig":"133"},{"size":4514,"mtime":1618435638382,"results":"260","hashOfConfig":"133"},{"size":5702,"mtime":1612093270364,"results":"261","hashOfConfig":"133"},{"size":1054,"mtime":1618857032023,"results":"262","hashOfConfig":"133"},{"size":1078,"mtime":1618858339969,"results":"263","hashOfConfig":"133"},{"size":802,"mtime":1612099889944,"results":"264","hashOfConfig":"133"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},"v6ki43",{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"267"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"277"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"277"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a9qnim",{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"281"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"277"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"267"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"271"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"281"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"277"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"281"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"281"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"271"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"271"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"271"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"277"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"271"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"271"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"271"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"267"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"277"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"323"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"277"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"267"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"277"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"277"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"271"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"277"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"277"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"277"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"271"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"277"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"271"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"281"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"323"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"267"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"277"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"323"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"323"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"281"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"281"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"281"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"277"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"277"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"267"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"277"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"277"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"277"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"277"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"277"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"277"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"277"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"281"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"281"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"267"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Study\\FYP\\Project\\front-end\\src\\index.js",[],["592","593"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js",["594"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useForm from \"./SignUpUseForm\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport { signup } from \"../../actions/signup.actions\";\r\nconst Signup = (props) => {\r\n  const signupStore = useSelector((state) => state.sign);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmission = () => {\r\n    console.log(\"handling submission\");\r\n    const userData = {\r\n      ...value,\r\n      role: \"external\",\r\n    };\r\n    dispatch(signup(userData));\r\n  };\r\n\r\n  const { value, handleSubmit, updateValue, errors } = useForm(\r\n    handleSubmission,\r\n    SignUpValidator\r\n  );\r\n\r\n  if (signupStore.registered) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              {signupStore.error.code > 300 && (\r\n                <h2>{signupStore.error.message}</h2>\r\n              )}\r\n              <Form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"first_name\"\r\n                      label=\"Fristname\"\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      value={value.firstname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Firstname\"\r\n                    />\r\n                    {errors.firstname && <p>{errors.firstname}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"last_name\"\r\n                      label=\"Lastname\"\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      value={value.lastname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Lastname\"\r\n                    />\r\n                    {errors.lastname && <p>{errors.lastname}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"username\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      value={value.username}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"username\"\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={value.email}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Email\"\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <Form.Label>What type of user are you:</Form.Label>\r\n                    <div key={`default-radio`} className=\"mb-3\">\r\n                      <Form.Check\r\n                        label=\"Student\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-1`}\r\n                        name=\"user-type\"\r\n                        value=\"Student\"\r\n                        checked={value.type === \"Student\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Research Institute Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-2`}\r\n                        name=\"user-type\"\r\n                        value=\"ResearchInstituteRepresentative\"\r\n                        checked={\r\n                          value.type === \"ResearchInstituteRepresentative\"\r\n                        }\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Industry Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-3`}\r\n                        name=\"user-type\"\r\n                        value=\"IndustryRepresentative\"\r\n                        checked={value.type === \"IndustryRepresentative\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Input\r\n                      id=\"associated-institute-name\"\r\n                      label=\"Associated Institute Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Institute name\"\r\n                      name=\"affiliation\"\r\n                      value={value.affiliation}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.affiliation && <p>{errors.affiliation}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Group controlId=\"description-text-area\">\r\n                      <Form.Label>Description (of what you do)</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={value.description}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      {errors.description && <p>{errors.description}</p>}\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      value={value.password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                  </Col>\r\n                  {errors.password && <p>{errors.password}</p>}\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      name=\"confirm_password\"\r\n                      value={value.confirm_password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <p>{errors.confirm_password}</p>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={(e) => handleSubmit(e)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n",["595","596"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\HomePage\\index.js",["597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  NavLink,\r\n  Carousel,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\n//import SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n// import \"../HomePage/index.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Logo from \"../../components/Logo\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Bacteria from \"./Images/bacteria.jpg\";\r\nimport Miccroorganism from \"./Images/hqdefault.jpg\";\r\nimport Bacteria2 from \"./Images/bacteria-2.jpg\";\r\nimport AboutUsImage from \"./Images/about-us-image.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ObjectSlider from \"../../components/ObjectSlider\";\r\n\r\nimport \"./style.css\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\n\r\nimport AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [viewport, setViewport] = React.useState({\r\n    latitude: 33.678403942756674,\r\n    longitude: 73.13901040682869,\r\n    zoom: 15,\r\n  });\r\n\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Item>Item 1</Dropdown.Item>\r\n          <Dropdown.Item>Item 2</Dropdown.Item>\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // const products = [\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  // ];\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n      <div id=\"hero-div\" className=\"hero-div\">\r\n        <Container>\r\n          {/* {searchBarShow ? (\r\n            <div className=\"search-box\">\r\n              <input placeholder=\"Enter Keyword\" />\r\n            </div>\r\n          ) : null} */}\r\n        </Container>\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000} className=\"carousel-item\">\r\n            <img\r\n              src={Bacteria2}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h1>Welcome</h1>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img\r\n              src={Bacteria}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h1>Welcome to</h1>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n\r\n      <div id=\"about-us\" className=\"about-us-div\">\r\n        <Container className=\"about-us-content\">\r\n          <div className=\"about-us-image\">\r\n            <img src={Bacteria2} alt=\"about-us-image\" />\r\n          </div>\r\n          <div className=\"about-us-details\">\r\n            <div className=\"about-us-title\">\r\n              <h5>ABOUT US</h5>\r\n              <h2>\r\n                We are the leading institute for microorganism reasearch in\r\n                Pakistan\r\n              </h2>\r\n            </div>\r\n            <div className=\"about-us-description\">\r\n              NCCP plays an important role in offering services not only to\r\n              preserve microorganisms using techniques that maintain viability,\r\n              purity, and important characteristics of microorganisms, but also\r\n              to supply high quality microorganisms for use in teaching,\r\n              research and industrial applications.\r\n            </div>\r\n            {/* <div className=\"about-us-featured-list\">\r\n              <Timeline>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Eat</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Code</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Sleep</TimelineContent>\r\n                </TimelineItem>\r\n              </Timeline>\r\n            </div> */}\r\n            <div className=\"about-us-featured-list\">\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">01</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Plant growth promoting microbess</h5>\r\n                  <p>\r\n                    Isolation, identification and molecular characterization of\r\n                    plant growth promoting microbes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">02</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Heavy metal tolerant bacteria</h5>\r\n                  <p>\r\n                    solation, identification and characterization of heavy metal\r\n                    tolerant bacteria for bioremediation of contaminated soil.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">03</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Halotolerant rhizobacteria </h5>\r\n                  <p>\r\n                    Identification and characterization of halotolerant\r\n                    rhizobacteria containing ACC-deaminase, for growth promotion\r\n                    of Phaseolus vulgaris L. under salt stress\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"achievements\" className=\"achievements-div\">\r\n        <Container className=\"achievement-content\">\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublishIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3 onClick={(e) => alert(\"odsfjo\")}> 40+</h3>\r\n              <h4>Publications</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Accomplishment</h3>\r\n              <h4>Women in agriculture forum</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarsIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Achievement</h3>\r\n              <h4>Association of Farmers association</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublicIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>81+</h3>\r\n              <h4>International linkages</h4>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"services\" className=\"services\">\r\n        <h5>OUR SERVICES</h5>\r\n        <h2>Explore Our Main Services</h2>\r\n        <div className=\"services-tag\">\r\n          <Container className=\"services-content\">\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Order</h5>\r\n                <p>Order some things from us</p>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Deposit</h5>\r\n                <p>Deposit some things from us</p>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"/catalogue\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Resources</h5>\r\n                <p>Seek some things from us</p>\r\n              </div>\r\n            </Link>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"location\" className=\"location\">\r\n        <div className=\"location-heading\">\r\n          <h5>Where are we</h5>\r\n          <h2>Our Current Location</h2>\r\n        </div>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          width=\"100%\"\r\n          height=\"450px\"\r\n          mapboxApiAccessToken={`pk.eyJ1IjoiemFpbm5vb3IwMzUwMjAiLCJhIjoiY2tsZ2ZubG80MndtdDJvbnAwYnVya2tjZiJ9.r49QIKppAmNWiDhexQhQTw`}\r\n          mapStyle=\"mapbox://styles/zainnoor035020/cklgg7lq54jp617meh87g9vqi\"\r\n        >\r\n          <Marker longitude={viewport.longitude} latitude={viewport.latitude}>\r\n            <LocationOnIcon fontSize=\"large\" color=\"blue\" />\r\n          </Marker>\r\n          <div className=\"map-detials\">\r\n            <Container className=\"map-content\">\r\n              <h3>\r\n                Park Rd, National Agricultural Research Center, Islamabad,\r\n                Islamabad Capital Territory, Pakistan\r\n              </h3>\r\n            </Container>\r\n          </div>\r\n        </ReactMapGL>\r\n        {/* <Container className=\"location-content\">\r\n          <div className=\"location-map\">\r\n           \r\n          </div>\r\n          {/* <div className=\"location-details\">Details</div> */}\r\n        {/* </Container> */}\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <Container className=\"footer-content\">\r\n          <div className=\"first-footer\">\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <LocationOnOutlinedIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Address</h5>\r\n                <p>National Agricultural Research Center, Islamabad</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <PhoneIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Contact Number</h5>\r\n                <p>+92335 6291805</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <EmailOutlined />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Email</h5>\r\n                <p>zainnoor6035020@gmail.com</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"second-footer\">\r\n            <div className=\"second-footer-detail-box\">\r\n              <div>Logo</div>\r\n              <p>\r\n                NCCP plays an important role in offering services not only to\r\n                preserve microorganisms using techniques that maintain\r\n                viability, purity, and important characteristics of\r\n                microorganisms, but also to supply high quality microorganisms\r\n                for use in teaching, research and industrial applications.\r\n              </p>\r\n              <a>Read More!</a>\r\n            </div>\r\n            <div className=\"second-footer-useful-links-box\">\r\n              <h3>Useful Links</h3>\r\n              <div className=\"useful-links-div\">\r\n                <a href=\"#hero-div\">Home</a>\r\n                <a href=\"#about-us\">About Us</a>\r\n                <a href=\"#achievements\">Achievement</a>\r\n                <a href=\"#services\">Services</a>\r\n                <a href=\"#location\">Current Location</a>\r\n                <a>Cart</a>\r\n                {/* <a>- Home</a> */}\r\n                {/* <a>- Home</a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"third-footer\">\r\n            <div>Copyright</div>\r\n            <div>social links</div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n        <div className=\"sidebar-upper-div\">\r\n          <div className=\"sidebar-upper-div-options\">\r\n            <HomeIcon fontSize=\"large\" />\r\n            <span>Sign In</span>\r\n          </div>\r\n          <CloseIcon onClick={(e) => setSideBarShow(false)} />\r\n        </div>\r\n        <div className=\"sidebar-links\">\r\n          <ul className=\"sidebar-links-list\">\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Order</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebar-footer\">\r\n          <ul className=\"sidebar-footer-list\">\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"header-logo\">\r\n          <h1>NCCP</h1>\r\n        </div>\r\n        <div className=\"header-content\">\r\n          <div className=\"menu-content\">\r\n            <Link>Sign In</Link>\r\n          </div>\r\n          <div className=\"hamburger-menu-box\">\r\n            <MenuRoundedIcon\r\n              className=\"hamburger-menu\"\r\n              fontSize=\"large\"\r\n              onClick={(e) => setSideBarShow(!sideBarshow)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-bar\">\r\n        <Link>About NCCP</Link>\r\n        <Link>Deposit</Link>\r\n        <Link>Order</Link>\r\n        <Link>Contact Us</Link>\r\n      </div>\r\n\r\n      <div className=\"hero-div\">\r\n        <div>\r\n          <h1>Welcome to NCCP</h1>\r\n          <p>\r\n            We are the leading institute of microbial research and preservation\r\n            in Pakistan...\r\n          </p>\r\n        </div>\r\n        <Link>Learn More</Link>\r\n      </div>\r\n\r\n      <div className=\"product-category-div\">\r\n        <h1>Resources</h1>\r\n        <ObjectSlider />\r\n      </div>\r\n      <div className=\"about-us-div\">\r\n        <img src={AboutUsImage} />\r\n      </div> */}\r\n\r\n      {/* <div className=\"carousel-div\">\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>Welcome to NCCP</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>We are a leading institute in Microorganism reasearch</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div> */}\r\n\r\n      {/* <div className=\"navigation-bar\">\r\n        <Container className=\"navigation-bar-content\">\r\n          <Logo />\r\n          <div className=\"navigation-links\">\r\n            <SearchOutlinedIcon />\r\n            <MenuRoundedIcon />\r\n          </div>\r\n        </Container>\r\n      </div> */}\r\n\r\n      {/* <Layout>\r\n        <div id=\"homepage-upper-nav-bar\">\r\n          <NavDropdown\r\n            title=\"NCCP\"\r\n            id=\"collasible-nav-dropdown\"\r\n            show={show}\r\n            onMouseEnter={(e) => setShow(true)}\r\n            onMouseLeave={(e) => setShow(false)}\r\n          >\r\n            <NavLink>NCCP</NavLink>\r\n\r\n            <NavLink>Deposit</NavLink>\r\n            <NavLink>Orders</NavLink>\r\n            <NavLink>Catalogue</NavLink>\r\n            <NavDropdown\r\n              title=\"NCCP\"\r\n              id=\"collasible-nav-dropdown\"\r\n              show={show}\r\n              onMouseEnter={(e) => setShow(true)}\r\n              onMouseLeave={(e) => setShow(false)}\r\n              subme\r\n            >\r\n              <NavLink>NCCP</NavLink>\r\n\r\n              <NavLink>Deposit</NavLink>\r\n              <NavLink>Orders</NavLink>\r\n              <NavLink>Catalogue</NavLink>\r\n            </NavDropdown>\r\n          </NavDropdown>\r\n          <NavLink>NCCP</NavLink>\r\n\r\n          <NavLink>Deposit</NavLink>\r\n          <NavLink>Orders</NavLink>\r\n          <NavLink>Catalogue</NavLink>\r\n        </div>\r\n        <div>other content</div>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Microorganism\\index.js",[],["634","635"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Details\\index.js",["636"],"import React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Container, Jumbotron } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchItemDetails } from \"../../actions/catalogue.actions\";\r\nimport Layout from \"../../components/Layout\";\r\n\r\nconst ItemDetails = (props) => {\r\n  const [itemDetail, setItemDetail] = useState({});\r\n  const detail = useSelector((state) => state.details);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setItemDetail(detail.details);\r\n  }, [detail]);\r\n\r\n  useEffect(() => {\r\n    const { id } = props.location.state;\r\n    // console.log(id);\r\n    if (id) {\r\n      console.log(\"Dispatching fetch Item request\");\r\n      dispatch(fetchItemDetails(id, \"external\"));\r\n    }\r\n  }, []);\r\n\r\n  const itemData = () => {\r\n    return (\r\n      <div>\r\n        {Object.keys(itemDetail).map((value, index) => {\r\n          return (\r\n            <Accordion key={index}>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\r\n                  {value}\r\n                </Accordion.Toggle>\r\n\r\n                {Object.keys(itemDetail[value]).map((v, i) => {\r\n                  return (\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                      <Card.Body\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <span>{v}</span>\r\n                        <span>\r\n                          {itemDetail[value][v] === \"\"\r\n                            ? \"Nill\"\r\n                            : itemDetail[value][v]}\r\n                        </span>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  );\r\n                })}\r\n              </Card>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Jumbotron>\r\n        <h1>\r\n          {itemDetail.CoreDataSets\r\n            ? `${itemDetail.CoreDataSets.Genus} ${itemDetail.CoreDataSets.SpeciesEpithet}`\r\n            : \"\"}\r\n        </h1>\r\n      </Jumbotron>\r\n      <Container>\r\n        {detail.error.code > 200 ? detail.error.message : itemData()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ItemDetails;\r\n",["637","638"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Deposits\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js",["639","640"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Cart\\index.js",["641","642","643","644","645","646","647"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardPayments\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardReports\\index.js",[],["648","649"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js",["650","651","652","653"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  Fade,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Modal,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport useFormAddUser from \"./useFormAddUser\";\r\nimport AddUserValidator from \"./addUserValidator\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser } from \"../../actions/user.actions\";\r\nconst AdminDashboardAddUser = (props) => {\r\n  const dispatch = useDispatch();\r\n  const add_user = useSelector((state) => state.user.add_user);\r\n  const handleAddUser = () => {\r\n    // var form = new FormData();\r\n    // Object.keys(addUserValue).map((item) => {\r\n    //   form.append(item, addUserValue[item]);\r\n    // });\r\n    dispatch(addUser(addUserValue));\r\n    console.log(\"sdfjsd\");\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    const slider_div = document.getElementById(\"add__user__details__slides\");\r\n    slider_div.style.transform = \"translateX(-50%)\";\r\n  };\r\n  const prevSlide = () => {\r\n    const slider_div = document.getElementById(\"add__user__details__slides\");\r\n    slider_div.style.transform = \"translateX(0%)\";\r\n  };\r\n  const {\r\n    addUserValue,\r\n    handleAddUserSubmit,\r\n    updateAddUser,\r\n    addUserErrors,\r\n  } = useFormAddUser(nextSlide, AddUserValidator);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // const ErrorModal = () => {\r\n  //   return(\r\n  // );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"add-user-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          props.history.goBack();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {add_user.added ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {add_user.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {add_user.added\r\n                ? \"Success\"\r\n                : add_user.error\r\n                ? \"Error\"\r\n                : \"Waiting for response\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {add_user.added\r\n                ? \"User creation successfull\"\r\n                : add_user.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <SideBar active=\"Users\">\r\n        <div className=\"add__user__div\">\r\n          <h3>Add User</h3>\r\n          <div className=\"add__user__details__outer__div\">\r\n            <div\r\n              id=\"add__user__details__slides\"\r\n              className=\"add__user__details__slides\"\r\n            >\r\n              <div className=\"add__user__details__slide add__user__details__div\">\r\n                <h4>Details</h4>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  className=\"input\"\r\n                  label=\"Firstname\"\r\n                  value={addUserValue.firstname}\r\n                  onChange={(e) => updateAddUser(e)}\r\n                  error={addUserErrors.firstname ? true : false}\r\n                  helperText={addUserErrors.firstname}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  className=\"input\"\r\n                  label=\"Lastname\"\r\n                  value={addUserValue.lastname}\r\n                  onChange={(e) => updateAddUser(e)}\r\n                  error={addUserErrors.lastname ? true : false}\r\n                  helperText={addUserErrors.lastname}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={addUserValue.email}\r\n                  onChange={(e) => updateAddUser(e)}\r\n                  error={addUserErrors.email ? true : false}\r\n                  helperText={addUserErrors.email}\r\n                />\r\n\r\n                <FormControl variant=\"outlined\" className=\"input\">\r\n                  <Avatar src={addUserValue.profile_picture} />\r\n                  <InputLabel htmlFor=\"outlined-profile-picture\">\r\n                    Profile Picture\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    type=\"file\"\r\n                    id=\"outlined-profile-picture\"\r\n                    name=\"profile_picture\"\r\n                    onChange={(e) => updateAddUser(e)}\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className=\"input password-input\"\r\n                  error={addUserErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={addUserValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateAddUser(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {addUserErrors.password ? addUserErrors.password : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  required\r\n                  error={addUserErrors.confirm_password ? true : false}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={addUserValue.confirm_password}\r\n                    onChange={(e) => updateAddUser(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {addUserErrors.confirm_password}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                {/* <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  value={addUserValue.role}\r\n                  label=\"Role\"\r\n                  inputProps={{\r\n                    name: \"role\",\r\n                    id: \"outlined-age-native-simple\",\r\n                  }}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"internal\">Internal</option>\r\n                </Select>\r\n              </FormControl> */}\r\n                <div className=\"button__div\">\r\n                  <button className=\"btn add__user__cancel__form__button\">\r\n                    <Link\r\n                      to=\"/dashboard/users\"\r\n                      style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    >\r\n                      Cancel\r\n                    </Link>\r\n                  </button>\r\n                  <button\r\n                    className=\"btn add__user__next__form__button\"\r\n                    onClick={(e) => handleAddUserSubmit(e)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"add__user__details__slide add__user__permissions__div\">\r\n                <h4>Permissions</h4>\r\n                <div className=\"add__user__permissions\">\r\n                  {Object.keys(addUserValue.permissions).map(\r\n                    (permission, key) => {\r\n                      return (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={addUserValue.permissions[permission]}\r\n                              onChange={(e) => updateAddUser(e)}\r\n                              name={permission}\r\n                              color=\"primary\"\r\n                              className=\"add__user__permission__checkbox\"\r\n                            />\r\n                          }\r\n                          // style={{ backgroundColor: \"red\", fontSize: \"12px\" }}\r\n                          label={permission.replaceAll(\"_\", \" \").toUpperCase()}\r\n                          key={key}\r\n                        />\r\n                      );\r\n                    }\r\n                  )}\r\n                  <div className=\"permission__button__div\">\r\n                    <button\r\n                      className=\"btn add__user__cancel__form__button\"\r\n                      onClick={(e) => prevSlide()}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                    <button\r\n                      className=\"btn add__user__next__form__button\"\r\n                      onClick={(e) => handleAddUser()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    // checked={state.checkedB}\r\n                    // onChange={handleChange}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Primary\"\r\n              /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SideBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardAddUser;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardUsers\\index.js",["654","655","656"],"import { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\n// import { Dropdown } from \"bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport ItemList from \"../../components/ItemList\";\r\nimport ItemListCard from \"../../components/ItemListCard\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\n\r\nimport \"./style.css\";\r\nconst AdminDashboardUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users);\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      users.userList.map((row) => {\r\n        return {\r\n          ...row,\r\n          orders: Math.floor(Math.random() * 10),\r\n          deposits: Math.floor(Math.random() * 10),\r\n        };\r\n      })\r\n    );\r\n    // setData(users.userList);\r\n  }, [users]);\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.role.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.firstname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.lastname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{users.error.message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (users.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (users.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{ErrorMessage()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Orders\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"Deposits\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n  return (\r\n    <SideBar active=\"Users\">\r\n      <div className=\"div__one\">\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Users</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Name\",\r\n                value: \"name\",\r\n              },\r\n              {\r\n                title: \"Orders\",\r\n                value: \"orders\",\r\n              },\r\n              {\r\n                title: \"Deposits\",\r\n                value: \"deposits\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Role\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Admin\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                title: \"Internal\",\r\n                value: \"internal\",\r\n              },\r\n              {\r\n                title: \"External\",\r\n                value: \"External\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <ItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardUsers;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js",["657"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js",["658","659","660","661"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js",["662","663"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  data: {},\r\n  updating: false,\r\n  updated: false,\r\n  updateError: false,\r\n  code: 0,\r\n  message: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.UPDATING_USER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        updating: true,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated: true,\r\n        code: action.payload.status_code,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated: false,\r\n        updateError: true,\r\n        code: action.payload.status_code,\r\n        message: action.payload.message,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js",["664"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  collapsed: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.COLLAPSE_SIDEBAR:\r\n      state = {\r\n        ...state,\r\n        collapsed: !state.collapsed,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\cart.reducer.js",["665"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  cartData: [],\r\n  size: 0,\r\n  submitting: false,\r\n  submitted: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CART_ITEM_ADD:\r\n      let item_exists = state.cartData.find(\r\n        (el) => el.id === action.payload.id\r\n      );\r\n      if (item_exists) {\r\n        state = {\r\n          ...state,\r\n          cartData: state.cartData.map((item) => {\r\n            if (item.id === action.payload.id) {\r\n              return {\r\n                ...item,\r\n                qty: item.qty + 1,\r\n              };\r\n            }\r\n            return item;\r\n          }),\r\n        };\r\n      } else {\r\n        state = {\r\n          ...state,\r\n          cartData: [\r\n            ...state.cartData,\r\n            {\r\n              ...action.payload,\r\n              qty: 1,\r\n            },\r\n          ],\r\n          size: state.size + 1,\r\n        };\r\n      }\r\n      break;\r\n    case authConstants.CART_ITEM_REMOVE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.filter((item) => {\r\n          return item.id !== action.payload.id;\r\n        }),\r\n        size: state.size - 1,\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_INCREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          console.log(action.payload.id);\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty + 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_DECREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          if (item.id === action.payload.id && item.qty > 1) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty - 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n\r\n    case authConstants.CART_SUBMIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        submitting: true,\r\n        submitted: false,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        submitted: true,\r\n        submitting: false,\r\n        size: 0,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        submitting: false,\r\n        submitted: true,\r\n        error: {\r\n          code: action.payload.code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CART_RESET:\r\n      state = initialState;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\catalogue.reducers.js",["666","667","668"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  catalogueData: [],\r\n  fetching: false,\r\n  fetched: false,\r\n  addMicroorganism: {\r\n    adding: false,\r\n    added: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete: {\r\n    deleting: false,\r\n    deleted: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_INFO_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n        fetched: false,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        catalogueData: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case authConstants.ADD_MICROORGANISM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          adding: true,\r\n          added: false,\r\n          data: action.payload.data,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: true,\r\n          adding: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.RESET_ADD_MICROORGANISM_STATE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...initialState.addMicroorganism,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          data: action.payload.data,\r\n          deleting: true,\r\n          deleted: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n",["669","670"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemListCard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\DropDown\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\sidebardata.js",["671","672","673","674"],"import HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n// import { ReactComponent as Cell } from \"./Icons/cell.svg\";\r\nimport PeopleRoundedIcon from \"@material-ui/icons/PeopleRounded\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nexport const sidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    icon: <DashboardIcon />,\r\n    link: \"/AdminDashboard\",\r\n  },\r\n  {\r\n    title: \"Users\",\r\n    icon: <PeopleRoundedIcon />,\r\n    link: \"/adminDashboard/users\",\r\n  },\r\n  {\r\n    title: \"Orders\",\r\n    icon: <ListAltIcon />,\r\n    link: \"/adminDashboard/orders\",\r\n  },\r\n  {\r\n    title: \"Deposits\",\r\n    icon: <AccountBalanceIcon />,\r\n    link: \"/adminDashboard/deposits\",\r\n  },\r\n  {\r\n    title: \"Payments\",\r\n    icon: <MonetizationOnIcon />,\r\n    link: \"/adminDashboard/payments\",\r\n  },\r\n  // {\r\n  //   title: \"Reports\",\r\n  //   icon: <AssessmentIcon />,\r\n  //   link: \"/adminDashboard/reports\",\r\n  // },\r\n\r\n  {\r\n    title: \"Settings\",\r\n    icon: <SettingsIcon />,\r\n    link: \"/adminDashboard/settings\",\r\n  },\r\n];\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\auth.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",["675"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourteenValidator from \"./StepFourteenValidator\";\r\nimport useStepFourteenForm from \"./useStepFourteenForm\";\r\n\r\nfunction Step14(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Catalogue: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourteenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourteenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Catalogue</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Catalogue Name\"\r\n          type=\"text\"\r\n          name=\"CatalogueName\"\r\n          placeholder=\"Enter Catalogue Name here\"\r\n          value={value.CatalogueName}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueName && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueName}</p>\r\n        )}\r\n        <Input\r\n          label=\"Catalogue URL\"\r\n          type=\"text\"\r\n          name=\"CatalogueURL\"\r\n          placeholder=\"Enter Catalogue URL here\"\r\n          value={value.CatalogueURL}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueURL && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueURL}</p>\r\n        )}\r\n        <Input\r\n          label=\"Catalogue Update Time\"\r\n          type=\"time\"\r\n          name=\"CatalogueUpdateTime\"\r\n          placeholder=\"Enter Catalogue Update Time here\"\r\n          value={value.CatalogueUpdateTime}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueUpdateTime && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueUpdateTime}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Person Of Catalogue\"\r\n          type=\"text\"\r\n          name=\"ContactPersonOfCatalogue\"\r\n          placeholder=\"Enter Contact Person Of Catalogue here\"\r\n          value={value.ContactPersonOfCatalogue}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactPersonOfCatalogue && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactPersonOfCatalogue}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Email\"\r\n          type=\"email\"\r\n          name=\"ContactEmail\"\r\n          placeholder=\"Enter Contact Email here\"\r\n          value={value.ContactEmail}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactEmail && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactEmail}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Address\"\r\n          type=\"text\"\r\n          name=\"ContactAddress\"\r\n          placeholder=\"Enter Contact Address here\"\r\n          value={value.ContactAddress}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactAddress && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactAddress}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Telephone\"\r\n          type=\"text\"\r\n          name=\"ContactTelephone\"\r\n          placeholder=\"Enter Contact Telephone here\"\r\n          value={value.ContactTelephone}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactTelephone && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactTelephone}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Fax\"\r\n          type=\"text\"\r\n          name=\"ContactFax\"\r\n          placeholder=\"Enter Contact Fax here\"\r\n          value={value.ContactFax}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactFax && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactFax}</p>\r\n        )}\r\n        <Input\r\n          label=\"Number of Strains\"\r\n          type=\"text\"\r\n          name=\"NumberOfStrains\"\r\n          placeholder=\"Enter Number of Strains here\"\r\n          value={value.NumberOfStrains}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NumberOfStrains && (\r\n          <p style={{ color: \"red\" }}>{errors.NumberOfStrains}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step14;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",["676"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSixValidator from \"./StepSixValidator\";\r\nimport useStepSixForm from \"./useStepSixForm\";\r\n\r\nfunction Step6(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      BiologicalInteractions: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSixForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSixValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Biological Interactions</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Symbiosis\"\r\n          type=\"text\"\r\n          name=\"Symbiosis\"\r\n          placeholder=\"Enter Symbiosis here\"\r\n          value={value.Symbiosis}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Symbiosis && <p style={{ color: \"red\" }}>{errors.Symbiosis}</p>}\r\n        <Input\r\n          label=\"Mycoparasitism\"\r\n          type=\"text\"\r\n          name=\"Mycoparasitism\"\r\n          placeholder=\"Enter Mycoparasitism here\"\r\n          value={value.Mycoparasitism}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Mycoparasitism && (\r\n          <p style={{ color: \"red\" }}>{errors.Mycoparasitism}</p>\r\n        )}\r\n        <Input\r\n          label=\"Pathogenicity\"\r\n          type=\"text\"\r\n          name=\"Pathogenicity\"\r\n          placeholder=\"Enter Pathogenicity here\"\r\n          value={value.Pathogenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Pathogenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Pathogenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Allergenicity\"\r\n          type=\"text\"\r\n          name=\"Allergenicity\"\r\n          placeholder=\"Enter Allergenicity here\"\r\n          value={value.Allergenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Allergenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Allergenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Other Organism Toxicity\"\r\n          type=\"text\"\r\n          name=\"OtherOrganismToxicity\"\r\n          placeholder=\"Enter Other Organism Toxicity here\"\r\n          value={value.OtherOrganismToxicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherOrganismToxicity && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherOrganismToxicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Antagonistic Activities\"\r\n          type=\"text\"\r\n          name=\"AntagonisticActivities\"\r\n          placeholder=\"Enter Antagonistic Activities here\"\r\n          value={value.AntagonisticActivities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AntagonisticActivities && (\r\n          <p style={{ color: \"red\" }}>{errors.AntagonisticActivities}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step6;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",["677"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSevenValidator from \"./StepSevenValidator\";\r\nimport useStepSevenForm from \"./useStepSevenForm\";\r\n\r\nfunction Step7(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Sexuality: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Sexuality</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Sexual Behaviour\"\r\n          type=\"text\"\r\n          name=\"SexualBehaviour\"\r\n          placeholder=\"Enter Sexual Behaviour here\"\r\n          value={value.SexualBehaviour}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualBehaviour && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualBehaviour}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sexual State\"\r\n          type=\"text\"\r\n          name=\"SexualState\"\r\n          placeholder=\"Enter Sexual State here\"\r\n          value={value.SexualState}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualState && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualState}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step7;\r\n",["678","679"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js",["680"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js",["681"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepElevenValidator from \"./StepElevenValidator\";\r\nimport useStepElevenForm from \"./useStepElevenForm\";\r\n\r\nfunction Step11(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      ChemistryAndEnzymes: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepElevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepElevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Chemistry And Enzymes</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Enzymes Produced\"\r\n          type=\"text\"\r\n          name=\"EnzymesProduced\"\r\n          placeholder=\"Enter Enzymes Produced here\"\r\n          value={value.EnzymesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.EnzymesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.EnzymesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Decomposition And Deteriorating Capabilities\"\r\n          type=\"text\"\r\n          name=\"DecompositionAndDeterioratingCapabilities\"\r\n          placeholder=\"Enter Decomposition And Deteriorating Capabilities here\"\r\n          value={value.DecompositionAndDeterioratingCapabilities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DecompositionAndDeterioratingCapabilities && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.DecompositionAndDeterioratingCapabilities}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Metabolities Produced\"\r\n          type=\"text\"\r\n          name=\"MetabolitiesProduced\"\r\n          placeholder=\"Enter Metabolities Produced here\"\r\n          value={value.MetabolitiesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MetabolitiesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.MetabolitiesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Bio transformations\"\r\n          type=\"text\"\r\n          name=\"Biotransformations\"\r\n          placeholder=\"Enter Bio transformations here\"\r\n          value={value.Biotransformations}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Biotransformations && (\r\n          <p style={{ color: \"red\" }}>{errors.Biotransformations}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step11;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js",["682"],"import { Button, Container, Form } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport TagInput from \"../../TagInput\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport useStepOneForm from \"./useStepOneForm\";\r\nimport StepOneValidator from \"./StepOneValidator\";\r\n\r\nfunction Step1(props) {\r\n  const handleSubmission = () => {\r\n    props.next({ CoreDataSets: value });\r\n  };\r\n  const { handleSubmit, value, updateValue, errors } = useStepOneForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepOneValidator\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Core Data Sets</h2>\r\n      <Form>\r\n        <Input\r\n          label=\"Genus\"\r\n          type=\"text\"\r\n          name=\"Genus\"\r\n          placeholder=\"Enter Genus here\"\r\n          value={value.Genus}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Genus && <p style={{ color: \"red\" }}>{errors.Genus}</p>}\r\n        <Input\r\n          label=\"AccessionNumber\"\r\n          type=\"text\"\r\n          name=\"AccessionNumber\"\r\n          placeholder=\"Enter Accession Number here\"\r\n          value={value.AccessionNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AccessionNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.AccessionNumber}</p>\r\n        )}\r\n        <TagInput\r\n          label=\"Other Acession Numbers\"\r\n          name=\"OtherCollection\"\r\n          selected={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Species Epithet\"\r\n          type=\"text\"\r\n          name=\"SpeciesEpithet\"\r\n          placeholder=\"Enter Species Name Here\"\r\n          value={value.SpeciesEpithet}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SpeciesEpithet && (\r\n          <p style={{ color: \"red\" }}>{errors.SpeciesEpithet}</p>\r\n        )}\r\n        <Input\r\n          label=\"Author\"\r\n          type=\"text\"\r\n          name=\"Author\"\r\n          placeholder=\"Enter Author Name Here\"\r\n          value={value.Author}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Author && <p style={{ color: \"red\" }}>{errors.Author}</p>}\r\n        <Form.Label>Organism Type</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          name=\"OrganismType\"\r\n          value={value.OrganismType}\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>Bacteria</option>\r\n          <option>Yeast</option>\r\n          <option>Fungi</option>\r\n          <option>Phage</option>\r\n          <option>Algae</option>\r\n          <option>MicroAlgae</option>\r\n          <option>Virus</option>\r\n          <option>Archaea</option>\r\n          <option>Antibody</option>\r\n        </Form.Control>\r\n        {errors.OrganismType && (\r\n          <p style={{ color: \"red\" }}>{errors.OrganismType}</p>\r\n        )}\r\n        <Input\r\n          label=\"History of Deposit\"\r\n          type=\"text\"\r\n          name=\"HistoryOfDeposit\"\r\n          placeholder=\"Enter History of Deposit Here\"\r\n          value={value.HistoryOfDeposit}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HistoryOfDeposit && (\r\n          <p style={{ color: \"red\" }}>{errors.HistoryOfDeposit}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Isolation\"\r\n          type=\"date\"\r\n          name=\"DateOfIsolation\"\r\n          placeholder=\"Enter Date of Isolation Here\"\r\n          value={value.DateOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated From\"\r\n          type=\"text\"\r\n          name=\"IsolatedFrom\"\r\n          placeholder=\"Isolated From\"\r\n          value={value.IsolatedFrom}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedFrom && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedFrom}</p>\r\n        )}\r\n        <Input\r\n          label=\"Geographic Origin\"\r\n          type=\"text\"\r\n          name=\"GeographicOrigin\"\r\n          placeholder=\"Enter Geographic Origin Here\"\r\n          value={value.GeographicOrigin}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.GeographicOrigin && (\r\n          <p style={{ color: \"red\" }}>{errors.GeographicOrigin}</p>\r\n        )}\r\n        <Form.Label>Status</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={value.Status}\r\n          name=\"Status\"\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>Type</option>\r\n          <option>Non-Type</option>\r\n        </Form.Control>\r\n        {errors.Status && <p style={{ color: \"red\" }}>{errors.Status}</p>}\r\n        <Input\r\n          label=\"Medium\"\r\n          type=\"text\"\r\n          name=\"Medium\"\r\n          placeholder=\"Enter Medium Here\"\r\n          value={value.Medium}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Medium && <p style={{ color: \"red\" }}>{errors.Medium}</p>}\r\n        <Input\r\n          label=\"Optimum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"OptimumGrowthTemperature\"\r\n          placeholder=\"Enter Optimum Growth Temperature Here\"\r\n          value={value.OptimumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimumGrowthTemperature}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"MaximumGrowthTemperature\"\r\n          placeholder=\"Enter Maximum Growth Temperature Here\"\r\n          value={value.MaximumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumGrowthTemperature}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"MinimumGrowthTemperature\"\r\n          placeholder=\"Enter Minimum Growth Temperature Here\"\r\n          value={value.MinimumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumGrowthTemperature}</p>\r\n        )}\r\n        <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step1;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Logo\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["683"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["684"],"import { useEffect, useState } from \"react\";\r\nconst useStepNineForm = (initialValue, handleSubmission, StepNineValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepNineValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepNineForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["685"],"import { useEffect, useState } from \"react\";\r\nconst useStepTenForm = (initialValue, handleSubmission, StepTenValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js",["686"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\axios.js",["687","688","689"],"E:\\Study\\FYP\\Project\\front-end\\src\\store\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js",["690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Jumbotron,\r\n  Nav,\r\n  Row,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  fetchCatalogueData,\r\n  fetchItemDetails,\r\n  getCatalogueData,\r\n} from \"../../actions/catalogue.actions\";\r\nimport { addItemToCart } from \"../../actions/cart.actions\";\r\nimport \"./style.css\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { ReactComponent as Arrow } from \"./Icons/right-arrow.svg\";\r\nimport { ReactComponent as Bacteria } from \"./Icons/bacterium-solid.svg\";\r\nimport { ReactComponent as ShoppingCart } from \"./Icons/shopping-cart-solid.svg\";\r\nimport HomePage from \"../HomePage\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst Catalogue = (props) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\r\n    \"bacteria\",\r\n    \"fungi\",\r\n    \"archaea\",\r\n    \"antibody\",\r\n    \"microalgae\",\r\n    \"phage\",\r\n    \"virus\",\r\n    \"yeast\",\r\n  ];\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [addedToCart, setAddedToCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"OrganismType\"].toLowerCase())\r\n        : true;\r\n      // console.log(\r\n      //   columns &&\r\n      //     columns.some((column) => {\r\n      //       return (\r\n      //         applyFilter &&\r\n      //         row[column]\r\n      //           .toString()\r\n      //           .toLowerCase()\r\n      //           .indexOf(query.toLowerCase()) > -1\r\n      //       );\r\n      //     })\r\n      // );\r\n      return (\r\n        columns &&\r\n        columns.some((column) => {\r\n          return (\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n          );\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const addToCart = (row) => {\r\n    const { id } = row;\r\n    setAddedToCart([...addedToCart, id]);\r\n    const { OrganismType, Genus, SpeciesEpithet } = row;\r\n    dispatch(addItemToCart({ id: id, OrganismType, Genus, SpeciesEpithet }));\r\n  };\r\n\r\n  if (fetching) {\r\n    <Layout>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Layout>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n\r\n      <div className=\"page-heading\">\r\n        <Container className=\"page-heading-content\">\r\n          <h1>Catalogue</h1>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"catalogue-div\">\r\n        <Container className=\"catalogue-content\">\r\n          <div className=\"search-bar-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              id=\"search-bar-input\"\r\n            />\r\n            <SearchOutlined className=\"search-bar-icon\" fontSize=\"32px\" />\r\n          </div>\r\n          <div className=\"search-filters-box\">\r\n            <h3>Filters</h3>\r\n            <hr />\r\n            {filters &&\r\n              filters.map((filter) => {\r\n                return (\r\n                  <Form.Check\r\n                    label={filter}\r\n                    name={filter}\r\n                    className=\"filter-check\"\r\n                    checked={searchFilters.includes(filter)}\r\n                    onChange={(e) => {\r\n                      const checked = searchFilters.includes(filter);\r\n                      setSearchFilters((prev) =>\r\n                        checked\r\n                          ? prev.filter((sf) => sf !== filter)\r\n                          : [...prev, filter]\r\n                      );\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"catalogue-data-content-box\">\r\n            <div>\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"catalogue-data-item\">\r\n                    <div>\r\n                      <Bacteria className=\"image\" />\r\n                      <h4 className=\"catalogue-data-item-organism-type\">\r\n                        {row.OrganismType}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"item-detail\">\r\n                      <Link\r\n                        className=\"catalogue-data-item-name\"\r\n                        to={{\r\n                          pathname: \"/itemDetails\",\r\n                          state: { id: row.id },\r\n                        }}\r\n                      >\r\n                        <h4 className=\"item-name\">{`${row.Genus} ${row.SpeciesEpithet}`}</h4>\r\n                        {/* <h3 className=\"arrow-box\">\r\n                          <Arrow className=\"arrow\" />\r\n                        </h3> */}\r\n                      </Link>\r\n                      <span className=\"catalogue-data-item-accession-number\">{`Accession Number    ${row.AccessionNumber}`}</span>\r\n                      <span className=\"catalogue-data-item-strain-type\">{`Strain Type      ${row.Status}`}</span>\r\n                      <span className=\"catalogue-data-item-bio-hazard-level\">{`Bio Hazard Level     ${row.BioHazardLevel}`}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        className={\r\n                          addedToCart.includes(row.id)\r\n                            ? \"add-to-cart-button-disabled\"\r\n                            : \"add-to-cart-button\"\r\n                        }\r\n                        onClick={(e) => addToCart(row)}\r\n                      >\r\n                        {addedToCart.includes(row.id)\r\n                          ? \"Added To Cart\"\r\n                          : \"Add To Cart\"}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row.OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row.Genus} ${row.SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row.AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <Layout>\r\n        <Jumbotron>\r\n          <div id=\"upper-content\">\r\n            <h1>Catalogue</h1>\r\n          </div>\r\n          <div id=\"catalogue\">\r\n            <div id=\"filter-box\">\r\n              <div id=\"filters\">\r\n                <h5>Filters</h5>\r\n                <hr />\r\n                {filters &&\r\n                  filters.map((filter) => {\r\n                    return (\r\n                      <Form.Check\r\n                        label={filter}\r\n                        name={filter}\r\n                        className\r\n                        checked={searchFilters.includes(filter)}\r\n                        onChange={(e) => {\r\n                          const checked = searchFilters.includes(filter);\r\n                          setSearchFilters((prev) =>\r\n                            checked\r\n                              ? prev.filter((sf) => sf !== filter)\r\n                              : [...prev, filter]\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div id=\"items\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row[\"CoreDataSets\"].OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row[\"CoreDataSets\"].Genus} ${row[\"CoreDataSets\"].SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row[\"CoreDataSets\"].AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\index.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col, FormLabel } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { login } from \"../../actions\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport \"./style.css\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport useSignInForm from \"./SignInUseForm\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport useFormSignUp from \"./SignUpUseForm\";\r\nimport { authConstants } from \"../../actions/constants\";\r\nimport { resetSignUpStore, signup } from \"../../actions/signup.actions\";\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signInForm, setSignInForm] = useState(true);\r\n  const [signUpForm, setSignUpForm] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const signUpStore = useSelector((state) => state.sign);\r\n  const signInStore = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal show code\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const selectUserType = (e) => {\r\n    setUserType(e.target.name);\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  const goBack = () => {\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(0%)\";\r\n  };\r\n\r\n  // method to reset the sign up  store on modal close\r\n\r\n  const reset = () => {\r\n    dispatch(resetSignUpStore());\r\n  };\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    if (signUpStore.error.found || signUpStore.registered) {\r\n      setModalOpen(true);\r\n    }\r\n  }, [signUpStore]);\r\n\r\n  useEffect(() => {\r\n    if (signInStore.error.found) {\r\n      setSignInModal(true);\r\n    }\r\n  }, [signInStore]);\r\n\r\n  const userLogin = () => {\r\n    // e.preventDefault();\r\n    const { email, password } = signInValue;\r\n    const user = {\r\n      email,\r\n      password,\r\n      token: recaptchaRef.current.getValue(),\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  // Material Ui React Material\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handleSignUpSubmission = () => {\r\n    dispatch(signup(signUpValue));\r\n  };\r\n\r\n  const {\r\n    signInValue,\r\n    handleSignInSubmit,\r\n    updateSignInValue,\r\n    signInErrors,\r\n  } = useSignInForm(userLogin, SignInValidator);\r\n\r\n  const {\r\n    handleSignUpSubmit,\r\n    signUpValue,\r\n    updateSignUpValue,\r\n    signUpErrors,\r\n  } = useFormSignUp(handleSignUpSubmission, SignUpValidator);\r\n\r\n  // Captcha functions\r\n\r\n  const recaptchaRef = useRef();\r\n\r\n  if (auth.authenticate) {\r\n    if (userType === \"employee\") {\r\n      return <Redirect to={\"/adminDashboard\"} />;\r\n    } else {\r\n      return <Redirect to={\"/\"} />;\r\n    }\r\n  }\r\n\r\n  // const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n  // const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n  // const container = document.querySelector(\".container\");\r\n\r\n  // console.log(container);\r\n\r\n  const signInButtonPress = () => {\r\n    setSignInForm(true);\r\n  };\r\n\r\n  const signUpButtonPress = () => {\r\n    setSignInForm(false);\r\n  };\r\n\r\n  // sign_up_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.add(\"sign-up-mode\");\r\n  // });\r\n\r\n  // sign_in_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.remove(\"sign-up-mode\");\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          reset();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signUpStore.registered ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {signUpStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signUpStore.registered ? \"Success\" : \"Error\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signUpStore.registered\r\n                ? \"The signup request was successful. Check your email for verification\"\r\n                : signUpStore.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={signInModal}\r\n        onClose={(e) => {\r\n          setSignInModal(false);\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={signInModal}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signInStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signInStore.error.found ? \"Error\" : null}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signInStore.error.found ? signInStore.error.message : null}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <div class={`container-div ${signInForm ? \"\" : \"sign-up-mode\"}`}>\r\n        <div class=\"forms-container\">\r\n          <div class=\"signin-signup\">\r\n            <form action=\"#\" className=\"sign-in-form\">\r\n              <div className=\"sign-in-form-slides-outer-div\">\r\n                <div\r\n                  className=\"sign-in-form-slides-inner-div\"\r\n                  id=\"sign-in-form-slides-inner-div\"\r\n                >\r\n                  <div className=\"sign-in-type\">\r\n                    <h3>What type of user are you?</h3>\r\n                    <Button name=\"user\" onClick={(e) => selectUserType(e)}>\r\n                      General User\r\n                    </Button>\r\n                    <Button name=\"employee\" onClick={(e) => selectUserType(e)}>\r\n                      Employee\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"title\">Sign In</h2>\r\n                    <TextField\r\n                      error={signInErrors.email ? true : undefined}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"e.g. name@gmail.com\"\r\n                      value={signInValue.email}\r\n                      onChange={(e) => updateSignInValue(e)}\r\n                      helperText={signInErrors.email ? signInErrors.email : \"\"}\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                    />\r\n                    <FormControl\r\n                      // className={clsx(classes.margin, classes.textField)}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                      error={signInErrors.password ? true : undefined}\r\n                      // helperText={signInErrors.password ? signInErrors.password : \"\"}\r\n                    >\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Min 6 letters & a capital letter\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={signInValue.password}\r\n                        onChange={(e) => updateSignInValue(e)}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => setShowPassword(!showPassword)}\r\n                              onMouseDown={(e) => e.preventDefault()}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <Visibility />\r\n                              ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                      />\r\n                      <FormHelperText id=\"my-helper-text\">\r\n                        {signInErrors.password ? signInErrors.password : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <Link to=\"/forgetPassword\" className=\"forget-password-link\">\r\n                      Forgot your password?\r\n                    </Link>\r\n                    <ReCAPTCHA\r\n                      ref={recaptchaRef}\r\n                      sitekey={authConstants.ReCAPTCHA_KEY}\r\n                    />\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"sign-in-btn\"\r\n                      onClick={(e) => handleSignInSubmit(e)}\r\n                    >\r\n                      sign in\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form class=\"sign-up-form\">\r\n              <h2 className=\"title\">Sign Up</h2>\r\n              <div className=\"sign-up-form-content\">\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  name=\"firstname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.firstname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.firstname}\r\n                  helperText={signUpErrors.firstname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.lastname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.lastname}\r\n                  helperText={signUpErrors.lastname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.email}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.email}\r\n                  helperText={signUpErrors.email}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Affiliation\"\r\n                  name=\"affiliation\"\r\n                  placeholder=\"Institute affiliated to\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.affiliation}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.affiliation}\r\n                  helperText={signUpErrors.affiliation}\r\n                  required\r\n                />\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={signUpErrors.type}\r\n                  className=\"user-type-radio-group\"\r\n                >\r\n                  <FormLabel component=\"legend\">\r\n                    What type of user are you?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-label=\"user-type\"\r\n                    name=\"type\"\r\n                    value={signUpValue.type}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"ResearchInstitute\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Research Institute\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Industry\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Industry\"\r\n                    />\r\n                  </RadioGroup>\r\n                  <FormHelperText>\r\n                    {signUpErrors.type ? signUpErrors.type : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                {/* \r\n                <TextField\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.description}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.description}\r\n                  helperText={signUpErrors.description}\r\n                  multiline\r\n                  rows={4}\r\n                /> */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  className=\"input password-input\"\r\n                  error={signUpErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.password ? signUpErrors.password : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  error={signUpErrors.confirm_password ? true : undefined}\r\n                  className=\"input\"\r\n                  required\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.confirme_password}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.confirm_password\r\n                      ? signUpErrors.confirm_password\r\n                      : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Link className=\"forget-password-link\">\r\n                  Already a user Sign In\r\n                </Link>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"sign-up-btn\"\r\n                  onClick={(e) => handleSignUpSubmit(e)}\r\n                >\r\n                  sign up\r\n                </Button>\r\n                {/* <TextField\r\n                  error={signUpErrors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                /> */}\r\n              </div>\r\n            </form>\r\n            {/* <form action=\"#\" class=\"sign-in-form\">\r\n              <h2 class=\"title\">Sign in</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" value=\"Login\" class=\"btn solid\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign in with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n            {/* <form action=\"#\" class=\"sign-up-form\">\r\n              <h2 class=\"title\">Sign up</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-envelope\"></i>\r\n                <input type=\"email\" placeholder=\"Email\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" class=\"btn\" value=\"Sign up\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign up with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n          </div>\r\n        </div>\r\n        <div class=\"panels-container\">\r\n          <div class=\"panel left-panel\">\r\n            <div class=\"content\">\r\n              <h3>New here ?</h3>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Debitis, ex ratione. Aliquid!\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-up-btn\"\r\n                onClick={signUpButtonPress}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/log.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n          <div class=\"panel right-panel\">\r\n            <div class=\"content\">\r\n              <h3>One of us ?</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                laboriosam ad deleniti.\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-in-btn\"\r\n                onClick={signInButtonPress}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/register.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userLogin}>\r\n                <Input\r\n                  id=\"email_username\"\r\n                  label=\"Email/Username\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email/Username\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"basicPassword\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Orders\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\index.js",["725","726","727","728","729"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js",["730","731","732"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgetPassword } from \"../../actions\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nconst ForgetPassword = () => {\r\n  const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  const dispatch = useDispatch();\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [slideChange, setSlideChange] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/forget-password\", { email: emailValue })\r\n      .then((response) => {\r\n        setSlideChange(true);\r\n        setEmailSent(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setSlideChange(true);\r\n        setEmailSent(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    // const slides = document.querySelector(\".slides\");\r\n    // slides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (slideChange) {\r\n  //     dispatch(\r\n  //       forgetPassword({\r\n  //         email: emailValue,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }, [slideChange]);\r\n  return (\r\n    <div className=\"outer-div\">\r\n      {/* <div className=\"upper-nav\">Logo</div> */}\r\n      {slideChange ? (\r\n        <div className=\"check-email-div\">\r\n          <h3>{emailSent ? \"Check your Email\" : \"Failed\"}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forget-password-div\">\r\n          <div className=\"forget-password-title\">\r\n            <h3>Forgot password</h3>\r\n            <p>Instructions will be sent to your email</p>\r\n          </div>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"example@name.com\"\r\n            variant=\"outlined\"\r\n            className=\"forgot-password-email-input\"\r\n            value={emailValue}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            error={!emailValidator.test(emailValue.trim()) && emailValue !== \"\"}\r\n            helperText=\"must be of form: name@gmail.com\"\r\n            required\r\n          />\r\n          <button\r\n            onClick={(e) => {\r\n              if (emailValidator.test(emailValue.trim())) {\r\n                handleSubmission();\r\n              }\r\n            }}\r\n            className=\"send-instructions-btn\"\r\n          >\r\n            Send Instructions\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\index.js",["733","734","735","736","737","738"],"import {\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport React, { useState } from \"react\";\r\nimport { translate } from \"react-range/lib/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nimport \"./style.css\";\r\nimport useFormResetPassword from \"./useFormResetPassword\";\r\nconst ResetPassword = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [passwordReset, setPasswordReset] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/resetPassword\", { token, password: resetPassword.password })\r\n      .then((response) => {\r\n        setPasswordReset(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setPasswordReset(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    const slides = document.querySelector(\".slides\");\r\n    slides.style.transform = \"translate(-50%)\";\r\n  };\r\n  const {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  } = useFormResetPassword(handleSubmission, ResetPasswordValidator);\r\n\r\n  const passwordForm = () => {\r\n    return (\r\n      <div className=\"reset-password-div\">\r\n        <h3>Set new password</h3>\r\n        <div className=\"reset-password-form\">\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.password}\r\n          >\r\n            <InputLabel htmlFor=\"password\">New password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"password\"\r\n              name=\"password\"\r\n              // className=\"password-input-box\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={resetPassword.password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) => setShowPassword(!showPassword)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.password ? resetPasswordErrors.password : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"confirm_password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.confirm_password}\r\n          >\r\n            <InputLabel htmlFor=\"confirm_password\">Confirm password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"confirm_password\"\r\n              name=\"confirm_password\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              value={resetPassword.confirm_password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) =>\r\n                      setShowConfirmPassword(!showConfirmPassword)\r\n                    }\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.confirm_password\r\n                ? resetPasswordErrors.confirm_password\r\n                : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <button\r\n          onClick={(e) => handleResetSubmit(e)}\r\n          className=\"reset-password-btn\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const resetResponseSlide = () => {\r\n    return (\r\n      <div className=\"reset-response-div\">\r\n        <h3 className=\"reset-response-title\">\r\n          {passwordReset\r\n            ? \"Your account password has been changed successfully\"\r\n            : \"Password reset failed\"}\r\n        </h3>\r\n        <p>{message}</p>\r\n        {passwordReset ? (\r\n          <Link to=\"\">Go to Sign In</Link>\r\n        ) : (\r\n          <Link\r\n            onClick={(e) => {\r\n              const slides = document.querySelector(\".slides\");\r\n              slides.style.transform = \"translate(0%)\";\r\n            }}\r\n          >\r\n            Go back to reset\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const [currentSlider, setCurrentSlider] = useState(true);\r\n\r\n  return (\r\n    <div className=\"reset-password-outer-div\">\r\n      <div className=\"slider-outer-div\">\r\n        <div className={`slides`}>\r\n          <div className=\"slide\">{passwordForm()}</div>\r\n          <div className=\"slide\">{resetResponseSlide()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDetails\\index.js",["739","740","741","742"],"import { TextField, Button, Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Status from \"../../components/Status\";\r\nconst AdminDashboardDetails = () => {\r\n  const [rangeDates, setRangeDates] = useState({\r\n    start: new Date().toISOString().substr(0, 10),\r\n    end: new Date().toISOString().substr(0, 10),\r\n  });\r\n\r\n  const [activeUsersChartData, setActiveUsersChartData] = useState({\r\n    series: [{\r\n      name: 'Visitors',\r\n      data: [23, 31, 40, 101, 40, 36, 32, 23, 14]\r\n    }],\r\n    options: {\r\n\r\n      chart: {\r\n\r\n        type: 'bar',\r\n\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 10,\r\n          dataLabels: {\r\n            position: 'top', // top, center, bottom\r\n          },\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n        formatter: function (val) {\r\n          return val;\r\n        },\r\n        offsetY: -20,\r\n        style: {\r\n          fontSize: '12px',\r\n          colors: [\"#304758\"]\r\n        }\r\n      },\r\n\r\n      xaxis: {\r\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\",],\r\n        position: 'top',\r\n        axisBorder: {\r\n          show: false\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        crosshairs: {\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              colorFrom: '#D8E3F0',\r\n              colorTo: '#BED1E6',\r\n              stops: [0, 100],\r\n              opacityFrom: 0.4,\r\n              opacityTo: 0.5,\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        }\r\n      },\r\n      yaxis: {\r\n        axisBorder: {\r\n          show: false\r\n        },\r\n        axisTicks: {\r\n          show: false,\r\n        },\r\n        labels: {\r\n          show: false,\r\n          formatter: function (val) {\r\n            return val;\r\n          }\r\n        }\r\n\r\n      },\r\n      // title: {\r\n      //   text: 'Monthly Inflation in Argentina, 2002',\r\n      //   floating: true,\r\n      //   offsetY: 330,\r\n      //   align: 'center',\r\n      //   style: {\r\n      //     color: '#444'\r\n      //   }\r\n      // }\r\n    },\r\n  });\r\n\r\n\r\n  const [salesChartData, setsalesChartData] = useState({\r\n    series: [{\r\n      name: 'series1',\r\n      data: [31, 40, 28, 51, 42, 109, 100]\r\n    }, {\r\n      name: 'series2',\r\n      data: [11, 32, 45, 32, 34, 52, 41]\r\n    }],\r\n    options: {\r\n      chart: {\r\n        height: 350,\r\n        type: 'area'\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth'\r\n      },\r\n      xaxis: {\r\n        type: 'datetime',\r\n        categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: 'dd/MM/yy HH:mm'\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const [popularCategoriesChartData, setpopularCategoriesChartData] = useState({\r\n    series: [44, 55, 41, 17],\r\n\r\n    options: {\r\n      labels: ['Apple', 'Mango', 'Orange', 'Watermelon'],\r\n      chart: {\r\n        background: '#fff',\r\n        animations: {\r\n          speed: 1300,\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n        // formatter: function (val) {\r\n        //   return val + \"%\"\r\n        // },\r\n      },\r\n      legend: {\r\n        position: 'bottom',\r\n        horizontalAlign: 'center',\r\n        fontSize: '14px',\r\n        markers: {\r\n          width: 20,\r\n          height: 20,\r\n          radius: 5,\r\n        }\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            size: '75%',\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true,\r\n                showAlways: true,\r\n                label: \"Samples Sold\",\r\n                fontSize: \"14px\",\r\n                color: \"grey\",\r\n                formatter: function (w) {\r\n                  return '129,345'\r\n                },\r\n              }\r\n            }\r\n          },\r\n\r\n        }\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    }\r\n  });\r\n  return (\r\n    <SideBar active=\"Dashboard\">\r\n      <div className=\"admin-dashboard\">\r\n        <h3 className=\"component-heading\">Main Dashboard</h3>\r\n        <div className=\"dashboard-dates\">\r\n          <TextField\r\n            id=\"start-date\"\r\n            className=\"starting-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"From\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"end-date\"\r\n            className=\"ending-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"To\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"card-div\">\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>25</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>49</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>78</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"top-selling-div card\">\r\n          <h4 className=\"card-title\">Top Selling</h4>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"sales-report card\">Sales Report\r\n        <ReactApexChart options={salesChartData.options} series={salesChartData.series} type=\"area\" /></div>\r\n        <div className=\"active-users card\">\r\n          <h4 className=\"card-title\">Visitors</h4>\r\n          <ReactApexChart options={activeUsersChartData.options} height=\"100%\" series={activeUsersChartData.series} type=\"bar\" />\r\n        </div>\r\n        <div className=\"recent-reviews card\">\r\n          <h4 className=\"card-title\">Recent Reviews</h4>\r\n          <hr />\r\n          <div>\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <Button variant=\"contained\">\r\n              <Link\r\n                to=\"/dashboard/addUser\"\r\n                style={{ color: \"black\", textDecoration: \"none\" }}\r\n              >\r\n                See All\r\n          </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"popular-categories card\">\r\n          <h4 className=\"card-title\">Popular Categories</h4>\r\n          <ReactApexChart className=\"popular-categories-chart\" height=\"90%\" options={popularCategoriesChartData.options} series={popularCategoriesChartData.series} type=\"donut\" /></div>\r\n        {/* <div className=\"deposit-periods card\">Deposits in Periods</div> */}\r\n        <div className=\"recent-orders card\">\r\n          <h4 className=\"card-title\">Recent Orders</h4>\r\n          <hr />\r\n          <div className=\"recent-order-headers\">\r\n            <span className=\"date-header\">Date</span>\r\n            <span className=\"customer-header\">Customer</span>\r\n            <span className=\"status-header\">Status</span>\r\n            <span className=\"total-header\">Total</span>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n                <Status status=\"Completed\"/>\r\n                {/* Completed */}\r\n              </span>\r\n              <span className=\"total-data\">\r\n\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Pending\"/>\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\"/>\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\"/>\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n          <Button variant=\"contained\" className=\"see-all-button\" style={{ marginRight: \"4rem\" }}>\r\n            <Link\r\n              to=\"/dashboard/addUser\"\r\n              style={{ color: \"black\", textDecoration: \"none\" }}\r\n            >\r\n              See All\r\n          </Link>\r\n          </Button>\r\n        </div>\r\n        <div className=\"city-order-statistics card\">City Order Statistics</div>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardDetails;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddUserForm\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js",["743","744"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js",["745","746","747"],"import React, { useEffect, useState } from \"react\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nconst useSignInForm = (handleSubmission, SignInValidator) => {\r\n  const [signInValue, setSignInValue] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signInErrors, setSignInErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignInErrors(SignInValidator(signInValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signInErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signInErrors]);\r\n\r\n  const updateSignInValue = (e) => {\r\n    setSignInValue({\r\n      ...signInValue,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { signInValue, handleSignInSubmit, updateSignInValue, signInErrors };\r\n};\r\n\r\nexport default useSignInForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js",["748","749"],"import React, { useEffect, useState } from \"react\";\r\nconst useFormAddUser = (handleSubmission, SignInValidator) => {\r\n  const [addUserValue, setAddUserValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"internal\",\r\n    profile_picture: \"null\",\r\n    permissions: {\r\n      view_microorganism_permission: false,\r\n      add_microorganism_permission: false,\r\n      delete_microorganism_permission: false,\r\n      update_microorganism_permission: false,\r\n      view_order_permission: false,\r\n      add_order_permission: false,\r\n      delete_order_permission: false,\r\n      update_order_permission: false,\r\n      view_deposit_permission: false,\r\n      add_deposit_permission: false,\r\n      delete_deposit_permission: false,\r\n      update_deposit_permission: false,\r\n      view_user_permission: false,\r\n      add_user_permission: false,\r\n      delete_user_permission: false,\r\n      update_user_permission: false,\r\n      view_report_permission: false,\r\n      add_report_permission: false,\r\n      delete_report_permission: false,\r\n      update_report_permission: false,\r\n      view_log_permission: false,\r\n      add_log_permission: false,\r\n      delete_log_permission: false,\r\n      update_log_permission: false,\r\n    },\r\n  });\r\n\r\n  const [addUserErrors, setaddUserErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleAddUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    setaddUserErrors(SignInValidator(addUserValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(addUserErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [addUserErrors]);\r\n\r\n  const updateAddUser = (e) => {\r\n    if (e.target.type === \"text\" || e.target.type === \"password\") {\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else if (e.target.type === \"file\") {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onloadend = () => {\r\n        setAddUserValue({\r\n          ...addUserValue,\r\n          [e.target.name]: reader.result,\r\n        });\r\n      };\r\n    } else if (e.target.type === \"checkbox\") {\r\n      //   alert(e.target.name);\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        permissions: {\r\n          ...addUserValue.permissions,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return { addUserValue, handleAddUserSubmit, updateAddUser, addUserErrors };\r\n};\r\n\r\nexport default useFormAddUser;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\user.reducer.js",["750","751"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: {\r\n    userList: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  add_user: {\r\n    data: {},\r\n    adding: false,\r\n    added: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete_user: {},\r\n  user_data: {},\r\n  // users: [],\r\n  // user: {\r\n  //   data: {},\r\n\r\n  //   deleting: false,\r\n  //   deleted: false,\r\n  // },\r\n  // add_user: {\r\n  //   data: {},\r\n  //   error: false,\r\n  //   message: \"\",\r\n  //   adding: false,\r\n  //   added: false,\r\n  // },\r\n  // fetching: false,\r\n  // fetched: false,\r\n  // error: {\r\n  //   found:false,\r\n  //   status_code: 0,\r\n  //   message: \"\",\r\n  // },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.USERS_FETCH_REQUEST:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetched: true,\r\n          fetching: false,\r\n          userList: action.payload.users,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_FAILURE:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: false,\r\n          error: {\r\n            found: true,\r\n            status_code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetched: true,\r\n        fetching: false,\r\n        user: action.payload.user,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...initialState.add_user,\r\n          data: action.payload.data,\r\n          adding: true,\r\n          added: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added: true,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: false,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: true,\r\n            message: action.payload.message,\r\n            status_code: action.payload.status,\r\n          },\r\n        },\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SearchBar\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js",["752","753","754"],"import { authConstants } from \"../actions/constants\";\r\nconst initialState = {\r\n  token: null,\r\n  user: {\r\n    id: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n  },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  error: {\r\n    found: false,\r\n    status_code: 0,\r\n    message: 0,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_UPDATE:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n    case authConstants.LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      // alert(\"everything reset\");\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositItemList\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js",["755","756","757","758","759","760","761"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useCatalogue = () => {\r\n  //catalogue state\r\n  const catalogue = useSelector((state) => state.catalogue);\r\n\r\n  //data for\r\n  const [dataList, setDataList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  //search string hook\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //search filters hook\r\n  const [searchFilter, setFilter] = useState({\r\n    bacteria: false,\r\n    fungi: false,\r\n    archaea: false,\r\n    antibody: false,\r\n    microalgae: false,\r\n    phage: false,\r\n    virus: false,\r\n    yeast: false,\r\n  });\r\n\r\n  //hook to identify if either to apply a filter or not\r\n  const [applySearchFilter, setApplySearchFilter] = useState(false);\r\n\r\n  //hook to identify if either to display th\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  //useEffect for updating the dataList and filtered datalist on updating data in the catalogue\r\n  useEffect(() => {\r\n    setDataList(catalogue.catalogueData);\r\n    setFilteredList(catalogue.catalogueData);\r\n  }, [catalogue.catalogueData]);\r\n\r\n  //useEffect for determining if to apply the search filter or not in case of change in the searchFilter\r\n  //values\r\n  useEffect(() => {\r\n    let x = false;\r\n    Object.keys(searchFilter).map((filter) => {\r\n      x = x ^ searchFilter[filter];\r\n      return true;\r\n    });\r\n    setApplySearchFilter(x);\r\n  }, [searchFilter]);\r\n\r\n  //useEffect to\r\n  useEffect(() => {\r\n    if (applySearchFilter) {\r\n      setFilteredList(\r\n        filteredList.filter((item) => {\r\n          return searchFilter[item.OrganismType.toLowerCase()];\r\n        })\r\n      );\r\n    } else {\r\n      setFilteredList(dataList);\r\n    }\r\n  }, [applySearchFilter]);\r\n\r\n  return { dataList, filteredList };\r\n};\r\n\r\nexport default useCatalogue;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js",["762"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepNineValidator from \"./StepNineValidator\";\r\nimport useStepNineForm from \"./useStepNineForm\";\r\n\r\nfunction Step9(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      GenotypeAndGenetics: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepNineForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepNineValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Genotype And Genetics</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Genotype\"\r\n          type=\"text\"\r\n          name=\"Genotype\"\r\n          placeholder=\"Enter Genotype here\"\r\n          value={value.Genotype}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Genotype && <p style={{ color: \"red\" }}>{errors.Genotype}</p>}\r\n        <Input\r\n          label=\"Phenotype\"\r\n          type=\"text\"\r\n          name=\"Phenotype\"\r\n          placeholder=\"Enter Phenotype here\"\r\n          value={value.Phenotype}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Phenotype && <p style={{ color: \"red\" }}>{errors.Phenotype}</p>}\r\n        <Input\r\n          label=\"MatingType\"\r\n          type=\"text\"\r\n          name=\"MatingType\"\r\n          placeholder=\"Enter MatingType here\"\r\n          value={value.MatingType}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MatingType && (\r\n          <p style={{ color: \"red\" }}>{errors.MatingType}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sexual Reproduction\"\r\n          type=\"text\"\r\n          name=\"SexualReproduction\"\r\n          placeholder=\"Enter Sexual Reproduction here\"\r\n          value={value.SexualReproduction}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualReproduction && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualReproduction}</p>\r\n        )}\r\n        <Input\r\n          label=\"GC Content of DNA\"\r\n          type=\"text\"\r\n          name=\"GCContentOfDNA\"\r\n          placeholder=\"Enter GC Content of DNA here\"\r\n          value={value.GCContentOfDNA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.GCContentOfDNA && (\r\n          <p style={{ color: \"red\" }}>{errors.GCContentOfDNA}</p>\r\n        )}\r\n        <Input\r\n          label=\"Other Strains Hybridization\"\r\n          type=\"text\"\r\n          name=\"OtherStrainsHybridization\"\r\n          placeholder=\"Enter Other Strains Hybridization here\"\r\n          value={value.OtherStrainsHybridization}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherStrainsHybridization && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherStrainsHybridization}</p>\r\n        )}\r\n        <Input\r\n          label=\"Hybridization Strain Number\"\r\n          type=\"text\"\r\n          name=\"HybridizationStrainNumber\"\r\n          placeholder=\"Enter Hybridization Strain Number here\"\r\n          value={value.HybridizationStrainNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HybridizationStrainNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.HybridizationStrainNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Type of DNA or RNA\"\r\n          type=\"text\"\r\n          name=\"TypeOfDNAOrRNA\"\r\n          placeholder=\"Enter Type of DNA or RNA here\"\r\n          value={value.TypeOfDNAOrRNA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TypeOfDNAOrRNA && (\r\n          <p style={{ color: \"red\" }}>{errors.TypeOfDNAOrRNA}</p>\r\n        )}\r\n        <Input\r\n          label=\"Percentage\"\r\n          type=\"text\"\r\n          name=\"Percentage\"\r\n          placeholder=\"Enter Percentage here\"\r\n          value={value.Percentage}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Percentage && (\r\n          <p style={{ color: \"red\" }}>{errors.Percentage}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature of Hybridization\"\r\n          type=\"text\"\r\n          name=\"TemperatureOfHybridization\"\r\n          placeholder=\"Enter Temperature of Hybridization here\"\r\n          value={value.TemperatureOfHybridization}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureOfHybridization && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureOfHybridization}</p>\r\n        )}\r\n        <Input\r\n          label=\"Mutants\"\r\n          type=\"text\"\r\n          name=\"Mutants\"\r\n          placeholder=\"Enter Mutants here\"\r\n          value={value.Mutants}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Mutants && <p style={{ color: \"red\" }}>{errors.Mutants}</p>}\r\n        <Input\r\n          label=\"Mutation Methods\"\r\n          type=\"text\"\r\n          name=\"MutationMethods\"\r\n          placeholder=\"Enter Mutation Methods here\"\r\n          value={value.MutationMethods}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MutationMethods && (\r\n          <p style={{ color: \"red\" }}>{errors.MutationMethods}</p>\r\n        )}\r\n        <Input\r\n          label=\"Hybrids\"\r\n          type=\"text\"\r\n          name=\"Hybrids\"\r\n          placeholder=\"Enter Hybrids here\"\r\n          value={value.Hybrids}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Hybrids && <p style={{ color: \"red\" }}>{errors.Hybrids}</p>}\r\n        <Input\r\n          label=\"Plasmid\"\r\n          type=\"text\"\r\n          name=\"Plasmid\"\r\n          placeholder=\"Enter Plasmid here\"\r\n          value={value.Plasmid}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Plasmid && <p style={{ color: \"red\" }}>{errors.Plasmid}</p>}\r\n        <Input\r\n          label=\"Killer Properties Of Yeast\"\r\n          type=\"text\"\r\n          name=\"KillerPropertiesOfYeast\"\r\n          placeholder=\"Enter Killer Properties of Yeast here\"\r\n          value={value.KillerPropertiesOfYeast}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.KillerPropertiesOfYeast && (\r\n          <p style={{ color: \"red\" }}>{errors.KillerPropertiesOfYeast}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step9;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js",["763"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepThirteenValidator from \"./StepThirteenValidator\";\r\nimport useStepThirteenForm from \"./useStepThirteenForm\";\r\n\r\nfunction Step13(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Sequence: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepThirteenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepThirteenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Sequence</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Accession Number\"\r\n          type=\"text\"\r\n          name=\"AccessionNumber\"\r\n          placeholder=\"Enter Accession Number here\"\r\n          value={value.AccessionNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AccessionNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.AccessionNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Target Gene\"\r\n          type=\"text\"\r\n          name=\"TargetGene\"\r\n          placeholder=\"Enter Target Gene here\"\r\n          value={value.TargetGene}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TargetGene && (\r\n          <p style={{ color: \"red\" }}>{errors.TargetGene}</p>\r\n        )}\r\n        <Input\r\n          label=\"Definition\"\r\n          type=\"text\"\r\n          name=\"Definition\"\r\n          placeholder=\"Enter Definition here\"\r\n          value={value.Definition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Definition && (\r\n          <p style={{ color: \"red\" }}>{errors.Definition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sequencing Method\"\r\n          type=\"text\"\r\n          name=\"SequencingMethod\"\r\n          placeholder=\"Enter Sequencing Method here\"\r\n          value={value.SequencingMethod}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SequencingMethod && (\r\n          <p style={{ color: \"red\" }}>{errors.SequencingMethod}</p>\r\n        )}\r\n        <Input\r\n          label=\"Length\"\r\n          type=\"text\"\r\n          name=\"Length\"\r\n          placeholder=\"Enter Length here\"\r\n          value={value.Length}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Length && <p style={{ color: \"red\" }}>{errors.Length}</p>}\r\n        <Input\r\n          label=\"Sequence Type\"\r\n          type=\"text\"\r\n          name=\"SequenceType\"\r\n          placeholder=\"Enter Sequence Type here\"\r\n          value={value.SequenceType}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SequenceType && (\r\n          <p style={{ color: \"red\" }}>{errors.SequenceType}</p>\r\n        )}\r\n        <Input\r\n          label=\"Source\"\r\n          type=\"text\"\r\n          name=\"Source\"\r\n          placeholder=\"Enter Source here\"\r\n          value={value.Source}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Source && <p style={{ color: \"red\" }}>{errors.Source}</p>}\r\n        <Input\r\n          label=\"Sequence\"\r\n          type=\"text\"\r\n          name=\"Sequence\"\r\n          placeholder=\"Enter Sequence here\"\r\n          value={value.Sequence}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Sequence && <p style={{ color: \"red\" }}>{errors.Sequence}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step13;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddMicroorganismModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js",["764"],"import { useEffect, useState } from \"react\";\r\nconst useStepFiveForm = (initialValue, handleSubmission, StepFiveValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFiveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFiveForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js",["765"],"import { useEffect, useState } from \"react\";\r\nconst useStepSixForm = (InitialValue, handleSubmission, StepSixValidator) => {\r\n  const [value, setValue] = useState(InitialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepSixValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepSixForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["766"],"import { useEffect, useState } from \"react\";\r\nconst useStepThirteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThirteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThirteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThirteenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js",["767"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["768"],"import { useEffect, useState } from \"react\";\r\nconst useStepTwelveForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepTwelveValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwelveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwelveForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\TagInput\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\index.js",["769"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Button\\Button.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Users\\index.js",["770"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Container, Form, Row, Spinner, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddUserModal from \"../../components/Modals/AddUserModal\";\r\nimport ResponseModal from \"../../components/Modals/ResponseModal\";\r\nimport DeleteUserModal from \"../../components/Modals/DeleteUserModal\";\r\nimport { deleteMicroorganism } from \"../../actions/catalogue.actions\";\r\nimport Input from \"../../components/UI/Input/input\";\r\n\r\nconst Users = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { fetching, users, add_user } = useSelector((state) => state.user);\r\n\r\n  /////delete record id\r\n  const [deleteRecordId, setDeleteRecordId] = useState(\"\");\r\n  const deleteRecordRef = useRef();\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    console.log(\"user deleted\");\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(token));\r\n  }, []);\r\n\r\n  ///////////////////////////////////////////////////////\r\n  //query and search\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\"admin\", \"internal\", \"external\"];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  useEffect(() => {\r\n    setData(users);\r\n  }, [users]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  //request response\r\n  const serverResponseRef = useRef();\r\n  const handleResponse = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  /////add user\r\n  const addUserRef = useRef();\r\n  const handleAddModalShow = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  const handleAddUser = (userData) => {\r\n    console.log(\"handling add user\");\r\n    // dispatch(addUser(userData, token));\r\n  };\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"role\"].toLowerCase())\r\n        : true;\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_U_Permission ? \"/dashboard/user\" : \"#\",\r\n            state: { userID: permissions.view_U_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_U_Permission ? \"primary\" : \"secondary\"}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_U_Permission ? \"danger\" : \"secondary\"}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <AddUserModal ref={addUserRef} confirm={handleAddUser} />\r\n      <ResponseModal\r\n        ref={serverResponseRef}\r\n        message={add_user.message}\r\n        confirm={handleResponse}\r\n      />\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                      checked\r\n                        ? prev.filter((sf) => sf !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          <Button variant=\"primary\" onClick={() => handleAddModalShow()}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n      <Table stripped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            {columns &&\r\n              columns.map((heading) => {\r\n                return heading === \"_id\" ? null : <th>{heading}</th>;\r\n              })}\r\n            <th className=\"text-center\">Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {search(data).map((row) => {\r\n            return (\r\n              <tr>\r\n                {columns.map((heading) => {\r\n                  return heading === \"_id\" ? null : <td>{row[heading]}</td>;\r\n                })}\r\n                <td style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                  {recordOptions(row._id)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js",["771","772","773"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nconst DashboardCatalogueDetail = (props) => {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = props.location.state;\r\n  const [data, setData] = useState({});\r\n\r\n  const [option, setOption] = useState(false);\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === \"save\") {\r\n      // dispatch(updateUserInfo(userData, token));\r\n      // setSavingData(!savingData);\r\n    }\r\n    setOption(!option);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.post(\r\n      \"/findmicroorganism\",\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    setData(res.data);\r\n  }, []);\r\n  return (\r\n    <Layout sidebar>\r\n      <Button\r\n        onClick={(e) =>\r\n          handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n        }\r\n      >\r\n        {option ? \"Save\" : \"Edit\"}\r\n      </Button>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {Object.keys(data).map((heading, key) => {\r\n          return (\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey={`${key}`}>\r\n                {heading}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${key}`}>\r\n                <Card.Body>\r\n                  {Object.keys(data[heading]).map((label, i) => {\r\n                    return (\r\n                      <Row className=\"p-2\" key={i}>\r\n                        <Col>{label}</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ backgroundColor: \"green\" }}\r\n                            value={data[heading][label]}\r\n                            onChange={(e) => {\r\n                              setData({\r\n                                ...data,\r\n                                [heading]: {\r\n                                  ...data[heading],\r\n                                  [label]: e.target.value,\r\n                                },\r\n                              });\r\n                            }}\r\n                            disabled={!option}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogueDetail;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js",["774","775","776","777","778","779"],"import React, { useState } from \"react\";\r\nimport DepositItemList from \"../../components/DepositItemList\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport DropDown from \"../../components/DropDown\";\r\n// import \"./style.css\";\r\nconst AdminDashboardDeposits = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      deposit_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      deposit_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Deposit ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\"></div>\r\n      <div className=\"div__two\">\r\n        <h3>Deposits</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit ID\",\r\n                value: \"deposit_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardDeposits;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Input\\input.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\cart.actions.js",["780"],"E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\templates.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\signup.reducers.js",["781"],"import { authConstants } from \"../actions/constants\";\r\nconst initialState = {\r\n  // userData: {\r\n  //   firstname: \"\",\r\n  //   lastname: \"\",\r\n  //   email: \"\",\r\n  //   role: \"\",\r\n  //   type: \"Student\",\r\n  //   affiliation: \"\",\r\n  //   password: \"\",\r\n  // },\r\n  // data: {},\r\n  registering: false,\r\n  registered: false,\r\n  error: {\r\n    found: false,\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.SIGNUP_REQUEST:\r\n      state = {\r\n        ...state,\r\n        // userData: action.payload.data,\r\n        registering: true,\r\n        registered: false,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: true,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_FAILURE:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        error: {\r\n          found: true,\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n\r\n    case authConstants.SIGNUP_STORE_RESET:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\itemInfo.reducer.js",["782"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  details: {},\r\n  fetching: false,\r\n  fetched: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_ITEM_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        details: action.payload.data,\r\n        fetched: true,\r\n        fetching: false,\r\n      };\r\n      console.log(\"Successfully updated the state\");\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetched: false,\r\n        fetching: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      console.log(\"State updated for error recieved\");\r\n      break;\r\n    default:\r\n      state = initialState;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js",["783"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepTwelveValidator from \"./StepTwelveValidator\";\r\nimport useStepTwelveForm from \"./useStepTwelveForm\";\r\n\r\nfunction Step12(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Medium: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepTwelveForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepTwelveValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Medium</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Medium Number\"\r\n          type=\"text\"\r\n          name=\"MediumNumber\"\r\n          placeholder=\"Enter Medium Number here\"\r\n          value={value.MediumNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium Name\"\r\n          type=\"text\"\r\n          name=\"MediumName\"\r\n          placeholder=\"Enter Medium Name here\"\r\n          value={value.MediumName}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumName && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumName}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium Composition\"\r\n          type=\"text\"\r\n          name=\"MediumComposition\"\r\n          placeholder=\"Enter Medium Composition here\"\r\n          value={value.MediumComposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumComposition && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumComposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium PH\"\r\n          type=\"text\"\r\n          name=\"MediumPH\"\r\n          placeholder=\"Enter Medium PH here\"\r\n          value={value.MediumPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumPH && <p style={{ color: \"red\" }}>{errors.MediumPH}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step12;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js",["784"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js",["785","786"],"import React, { useState } from \"react\";\r\nimport ItemListCard from \"../ItemListCard\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import Image from \"./image.jpg\";\r\nimport \"./style.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ItemList = (props) => {\r\n  //////////////////////\r\n  /////options/////////\r\n\r\n  const options = [\r\n    {\r\n      title: \"View\",\r\n      icon: <VisibilityIcon />,\r\n      link: \"#\",\r\n    },\r\n    {\r\n      title: \"Delete\",\r\n      icon: <DeleteIcon />,\r\n      link: \"#\",\r\n    },\r\n  ];\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  /////////////////////\r\n  ////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"item__list__header\">\r\n        {props.columns.map((column, key) => {\r\n          return (\r\n            <div key={key} style={{ flexBasis: column.width }}>\r\n              {column.title}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"item__list__body\">\r\n        {props.rows.map((row, key) => {\r\n          return (\r\n            <div className=\"item__list__item\" key={key}>\r\n              <div\r\n                className=\"item__list__item__personal\"\r\n                style={{ flexBasis: props.columns[0].width }}\r\n              >\r\n                <div className=\"item__list__item__picture__box\">\r\n                  <Avatar\r\n                    src={row.profilePicture}\r\n                    style={{ width: \"75px\", height: \"75px\" }}\r\n                  />\r\n                  {/* <img src={Image} className=\"item__list__item__picture\" /> */}\r\n                  {/* {row.profilePicture.toLowerCase() === \"null\" ? (\r\n                      <AccountCircleIcon />\r\n                    ) : (\r\n                      \"p\"\r\n                    )} */}\r\n                </div>\r\n                <div className=\"item__list__item__details\">\r\n                  <div className=\"item__list__item__name\">{`${row.firstname} ${row.lastname}`}</div>\r\n                  <div className=\"item__list__item__email\">{row.email}</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[1].width }}>\r\n                {row.role}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[2].width }}>\r\n                {row.orders}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[3].width }}>\r\n                {row.deposits}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[4].width }}>\r\n                <IconButton\r\n                  aria-label=\"more\"\r\n                  aria-controls=\"long-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {options.map((option, key) => (\r\n                    <MenuItem\r\n                      key={key}\r\n                      //   selected={option === \"Pyxis\"}\r\n                      onClick={handleClose}\r\n                    >\r\n                      <Link to={option.link} className=\"item__option\">\r\n                        {option.icon}\r\n                        {option.title}\r\n                      </Link>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js",["787"],"import { useEffect, useState } from \"react\";\r\nconst useStepElevenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepElevenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepElevenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepElevenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js",["788"],"import { useEffect, useState } from \"react\";\r\nconst useStepThreeForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThreeValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThreeValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThreeForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Status\\index.js",["789","790"],"import { Badge } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './style.css'\r\nconst Status=(props)=>{\r\n    const completed ='rgb(5, 168, 5)';\r\n    const pending = 'rgb(201, 158, 79)';\r\n    const cancelled ='red';\r\n\r\n    const getColor=()=>{\r\n        if(props.status.toLowerCase() =='completed'){\r\n            return completed;\r\n        }\r\n        if(props.status.toLowerCase() ==='pending'){\r\n            return pending;\r\n        }\r\n        if(props.status.toLowerCase() ==='cancelled'){\r\n            return cancelled;\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n           \r\n            <span className=\"status-color\" style={{backgroundColor:`${\r\n               getColor()\r\n            }`}}></span>\r\n            <span style={{color:`${getColor()}`}}>{props.status}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Status;","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js",["791"],"import { useState, useEffect } from \"react\";\r\n\r\nconst useAddUserForm = (handleSubmission, AddUserValidator) => {\r\n  const [value, setValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    // affiliation: \"\",\r\n    // description: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"\",\r\n    permissions: {\r\n      add_M_Permission: false,\r\n      update_M_Permission: false,\r\n      delete_M_Permission: false,\r\n      view_M_Permission: false,\r\n      view_U_Permission: false,\r\n      update_U_Permission: false,\r\n      delete_U_Permission: false,\r\n      add_U_Permission: false,\r\n      view_D_Permission: false,\r\n      view_P_Permission: false,\r\n      view_O_Permission: false,\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(AddUserValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(Object.keys(errors));\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const updatePermissionValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      permissions: {\r\n        ...value.permissions,\r\n        [e.target.name]: e.target.checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, updatePermissionValue, value, errors, updateValue };\r\n};\r\n\r\nexport default useAddUserForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\User\\index.js",["792","793","794"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js",["795","796"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\catalogue.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\PageHeader\\index.js",["797","798","799","800","801","802","803","804","805"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport \"./style.css\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst PageHeader = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [sideBarshow, setSideBarShow] = useState(false);\r\n  const [searchBarShow, setSearchBarShow] = useState(false);\r\n  const [userSignedIn, setUserSignedIn] = useState(false);\r\n  const authenticate = useSelector((state) => state.auth.authenticate);\r\n  const error = useSelector((state) => state.auth.error);\r\n\r\n  const handleLogout = () => {\r\n    setUserSignedIn(false);\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(authenticate);\r\n    if (authenticate) {\r\n      setUserSignedIn(true);\r\n    }\r\n  }, [authenticate]);\r\n  return (\r\n    <>\r\n      {sideBarshow ? (\r\n        <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n          <div className=\"sidebar-upper-div\">\r\n            <div className=\"sidebar-upper-div-options\">\r\n              <HomeIcon fontSize=\"large\" />\r\n              {userSignedIn ? (\r\n                <Link onClick={(e) => handleLogout()}>Sign Out</Link>\r\n              ) : (\r\n                <Link to=\"/signin\">Sign In</Link>\r\n              )}\r\n            </div>\r\n            {/* <CloseIcon onClick={(e) => setSideBarShow(false)} /> */}\r\n          </div>\r\n          <div className=\"sidebar-links\">\r\n            <ul className=\"sidebar-links-list\">\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Order</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"sidebar-footer\">\r\n            <ul className=\"sidebar-footer-list\">\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"upper-ticker\">\r\n        <Container className=\"upper-ticker-content\">\r\n          <div className=\"upper-ticker-contacts\">\r\n            <div className=\"upper-ticker-contact-number\">\r\n              <PhoneIcon fontSize=\"small\" />\r\n              <span> +923356291805</span>\r\n            </div>\r\n            <div className=\"upper-ticker-contact-email\">\r\n              <EmailOutlined />\r\n              <span> zainnoor6035020@gmail.com</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"upper-ticker-timings\">\r\n            <QueryBuilderIcon />\r\n            <span> Working Hours - Mon - Fri: 9:30 - 18:30</span>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <div className=\"stickable-navbar\">\r\n        <Container className=\"stickable-navbar-content\">\r\n          <div className=\"stickable-navbar-logo\">NCCP</div>\r\n          <div className=\"stickable-navbar-links\">\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Home\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Resources\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Services\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Contact\r\n            </a>\r\n            <div className=\"stickable-navbar-operations\">\r\n              <div className=\"stickable-navbar-operation-sign-in\">\r\n                {userSignedIn ? (\r\n                  <Link onClick={(e) => handleLogout()}>Sign Out</Link>\r\n                ) : (\r\n                  <Link to=\"/signin\">Sign In</Link>\r\n                )}\r\n              </div>\r\n              <div className=\"stickable-navbar-operation-cart\">\r\n                <ShoppingCartOutlinedIcon fontSize=\"small\" />\r\n              </div>\r\n              <div\r\n                className=\"stickable-navbar-operation-search\"\r\n                onClick={(e) => setSearchBarShow(!searchBarShow)}\r\n              >\r\n                {searchBarShow ? <CloseOutlinedIcon /> : <SearchOutlinedIcon />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"stickable-navbar-hamburger-menu\"\r\n            onClick={(e) => setSideBarShow(!sideBarshow)}\r\n          >\r\n            {sideBarshow ? (\r\n              <CloseOutlinedIcon fontSize=\"large\" />\r\n            ) : (\r\n              <MenuRoundedIcon fontSize=\"large\" />\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\server_urls.js\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js",["806","807","808"],"import React, { useEffect, useState } from \"react\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nconst useFormResetPassword = (handleSubmission, ResetPasswordValidator) => {\r\n  const [resetPassword, setResetPassword] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [resetPasswordErrors, setResetPasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleResetSubmit = (e) => {\r\n    e.preventDefault();\r\n    setResetPasswordErrors(ResetPasswordValidator(resetPassword));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(resetPasswordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [resetPasswordErrors]);\r\n\r\n  const updateResetPassword = (e) => {\r\n    setResetPassword({\r\n      ...resetPassword,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormResetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\OrderItemList\\index.js",["809","810","811"],"import React, { useState } from \"react\";\r\nimport ItemListCard from \"../ItemListCard\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import \"./style.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nconst OrderItemList = (props) => {\r\n  const options = [\r\n    {\r\n      title: \"View\",\r\n      icon: <VisibilityIcon />,\r\n      link: \"#\",\r\n    },\r\n    {\r\n      title: \"Delete\",\r\n      icon: <DeleteIcon />,\r\n      link: \"#\",\r\n    },\r\n  ];\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"item__list__header\">\r\n        {props.columns.map((column, key) => {\r\n          return (\r\n            <div key={key} style={{ flexBasis: column.width }}>\r\n              {column.title}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"item__list__body\">\r\n        {props.rows.map((row, key) => {\r\n          return (\r\n            <div className=\"item__list__item\" key={key}>\r\n              <div\r\n                className=\"item__list__item__personal\"\r\n                style={{\r\n                  flexBasis: props.columns[0].width,\r\n                  paddingLeft: \"0px\",\r\n                }}\r\n              >\r\n                <div className=\"item__list__item__details\">\r\n                  <div className=\"item__list__item__name\">{`${row.order_id}`}</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[1].width }}>\r\n                {row.created}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[2].width }}>\r\n                {row.customer}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[3].width }}>\r\n                {row.total}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[4].width }}>\r\n                {row.status}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[5].width }}>\r\n                <IconButton\r\n                  aria-label=\"more\"\r\n                  aria-controls=\"long-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {options.map((option, key) => (\r\n                    <MenuItem key={key} onClick={handleClose}>\r\n                      <Link to={option.link} className=\"item__option\">\r\n                        {option.icon}\r\n                        {option.title}\r\n                      </Link>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItemList;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\ResponseModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js",["812"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFiveValidator from \"./StepFiveValidator\";\r\nimport useStepFiveForm from \"./useStepFiveForm\";\r\n\r\nfunction Step5(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Publication: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFiveForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFiveValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Publication</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Literature Categories\"\r\n          type=\"text\"\r\n          name=\"LiteratureCategories\"\r\n          placeholder=\"Enter Literature Categories here\"\r\n          value={value.LiteratureCategories}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.LiteratureCategories && (\r\n          <p style={{ color: \"red\" }}>{errors.LiteratureCategories}</p>\r\n        )}\r\n        <Input\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"Title\"\r\n          placeholder=\"Enter Title here\"\r\n          value={value.Title}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Title && <p style={{ color: \"red\" }}>{errors.Title}</p>}\r\n        <Input\r\n          label=\"Author\"\r\n          type=\"text\"\r\n          name=\"Author\"\r\n          placeholder=\"Enter Author here\"\r\n          value={value.Author}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Author && <p style={{ color: \"red\" }}>{errors.Author}</p>}\r\n        <Input\r\n          label=\"Journal\"\r\n          type=\"text\"\r\n          name=\"Journal\"\r\n          placeholder=\"Enter Journal here\"\r\n          value={value.Journal}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Journal && <p style={{ color: \"red\" }}>{errors.Journal}</p>}\r\n        <Input\r\n          label=\"Volume\"\r\n          type=\"text\"\r\n          name=\"Volume\"\r\n          placeholder=\"Enter Volume here\"\r\n          value={value.Volume}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Volume && <p style={{ color: \"red\" }}>{errors.Volume}</p>}\r\n        <Input\r\n          label=\"Number\"\r\n          type=\"text\"\r\n          name=\"Number\"\r\n          placeholder=\"Enter Number here\"\r\n          value={value.Number}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Number && <p style={{ color: \"red\" }}>{errors.Number}</p>}\r\n        <Input\r\n          label=\"Starting Page\"\r\n          type=\"text\"\r\n          name=\"StartingPage\"\r\n          placeholder=\"Enter Starting Page here\"\r\n          value={value.StartingPage}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.StartingPage && (\r\n          <p style={{ color: \"red\" }}>{errors.StartingPage}</p>\r\n        )}\r\n        <Input\r\n          label=\"Page Range\"\r\n          type=\"text\"\r\n          name=\"PageRange\"\r\n          placeholder=\"Enter Page Range here\"\r\n          value={value.PageRange}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PageRange && <p style={{ color: \"red\" }}>{errors.PageRange}</p>}\r\n        <Input\r\n          label=\"Year\"\r\n          type=\"text\"\r\n          name=\"Year\"\r\n          placeholder=\"Enter Year here\"\r\n          value={value.Year}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Year && <p style={{ color: \"red\" }}>{errors.Year}</p>}\r\n        <Input\r\n          label=\"DOI Number\"\r\n          type=\"text\"\r\n          name=\"DOINumber\"\r\n          placeholder=\"Enter DOI Number here\"\r\n          value={value.DOINumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DOINumber && <p style={{ color: \"red\" }}>{errors.DOINumber}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step5;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\App.js",["813","814","815","816","817","818","819","820","821","822"],"import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./containers/HomePage/index\";\nimport Signup from \"./containers/Signup/index\";\nimport Signin from \"./containers/SignIn/index\";\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Catalogue from \"../src/containers/Catalogue/index\";\nimport Dashboard from \"./containers/Dashboard/index\";\nimport { isUserLoggedIn } from \"./actions\";\nimport ItemDetails from \"./containers/Details\";\nimport Orders from \"./containers/Orders\";\nimport Deposits from \"./containers/Deposits\";\nimport Microorganism from \"./containers/Microorganism\";\nimport Users from \"./containers/Users\";\nimport User from \"./containers/User\";\nimport DashboardCatalogue from \"./containers/DashboardCatalogue\";\nimport DashboardCatalogueDetail from \"./containers/DashboardCatalogueDetail\";\nimport AddMicroorganism from \"./containers/AddMicroorganism\";\nimport AddUserForm from \"./components/AddUserForm\";\nimport Cart from \"./containers/Cart\";\nimport ForgetPassword from \"./containers/ForgetPassword\";\nimport ResetPassword from \"./containers/ResetPassword\";\nimport EmailVerified from \"./containers/EmailVerified\";\nimport AdminDashboardDetails from \"./containers/AdminDashboardDetails\";\nimport DashboardDeposits from \"./containers/AdminDashboardDeposits\";\nimport DashboardOrders from \"./containers/AdminDashboardOrders\";\nimport DashboardUsers from \"./containers/AdminDashboardUsers\";\nimport DashboardPayments from \"./containers/AdminDashboardPayments\";\nimport DashboardReports from \"./containers/AdminDashboardReports\";\nimport DashboardAddUser from \"./containers/AdminDashboardAddUser\";\nimport AdminDashboardSettings from \"./containers/AdminDashboardSettings\";\nimport AdminDashboardOrders from \"./containers/AdminDashboardOrders\";\nimport AdminDashboardUsers from \"./containers/AdminDashboardUsers\";\nimport AdminDashboardPayments from \"./containers/AdminDashboardPayments\";\nimport AdminDashboardReports from \"./containers/AdminDashboardReports\";\nimport AdminDashboardDeposits from \"./containers/AdminDashboardDeposits\";\nimport AdminDashboardAddUser from \"./containers/AdminDashboardAddUser\";\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth]);\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* <PrivateRoute path=\"/\" exact component={HomePage} /> */}\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/catalogue\" component={Catalogue} />\n        <Route path=\"/dashboard\" exact component={Dashboard} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/forgetPassword\" component={ForgetPassword} />\n        <Route path=\"/authentication/activate\" component={EmailVerified} />\n        <Route path=\"/resetPassword\" component={ResetPassword} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/itemDetails\" component={ItemDetails} />\n        <PrivateRoute\n          path=\"/adminDashboard\"\n          exact\n          component={AdminDashboardDetails}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/settings\"\n          component={AdminDashboardSettings}\n        />\n        {/* <PrivateRoute path=\"/dashboard/orders\" component={Orders} /> */}\n        <PrivateRoute\n          path=\"/adminDashboard/deposits\"\n          component={AdminDashboardDeposits}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/orders\"\n          component={AdminDashboardOrders}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/users\"\n          component={AdminDashboardUsers}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/addUser\"\n          component={AdminDashboardAddUser}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/payments\"\n          component={AdminDashboardPayments}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/reports\"\n          component={AdminDashboardReports}\n        />\n        {/* <PrivateRoute path=\"dashboard/reports\" component={DashboardReports}/> */}\n\n        <Route path=\"/dashboard/microorgansims\" component={Microorganism} />\n        {/* <PrivateRoute path=\"/dashboard/users\" component={Users} /> */}\n        <Route path=\"/dashboard/catalogue\" component={DashboardCatalogue} />\n        <Route path=\"/dashboard/user\" component={User} />\n        <PrivateRoute path=\"/dashboard/addUser\" component={AddUserForm} />\n        <PrivateRoute\n          path=\"/dashboard/details\"\n          component={DashboardCatalogueDetail}\n        />\n        <PrivateRoute\n          path=\"/dashboard/addMicroorganism\"\n          component={AddMicroorganism}\n        />\n        <Route path=\"/cart\" component={Cart} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardOrders\\index.js",["823","824","825","826","827","828","829"],"import React, { useState } from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport OrderItemList from \"../../components/OrderItemList\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport \"./style.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { confirmPayment } from \"../../actions/payment.actions\";\r\n\r\nconst AdminDashboardOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([\r\n    {\r\n      order_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      order_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  // Payment Component\r\n\r\n  const [paymentDetails, setPaymentDetails] = useState({\r\n    order_id: \"60643cdf5d049b0a48495594\",\r\n    items: [\r\n      {\r\n        _id: \"60643cdf5d049b0a48495595\",\r\n        microorganism_id: \"5fd2fb5b44712417441281e9\",\r\n        quantity: 3,\r\n        sub_total: 600,\r\n      },\r\n    ],\r\n    total: 600,\r\n  });\r\n\r\n  const payment = () => {\r\n    return \"acb\";\r\n  };\r\n\r\n  const makePayment = (token) => {\r\n    dispatch(\r\n      confirmPayment({\r\n        order_id: paymentDetails.order_id,\r\n        token,\r\n        products: paymentDetails.items,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\">\r\n        {/* <SearchBar query={query} setQuery={setQuery} /> */}\r\n        {/* <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"OrderID\",\r\n                value: \"order_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n      <StripeCheckout\r\n        stripeKey=\"pk_test_51IhcBtCueTz3N4RSq2lZieK9Wh8cD7XR2KlScdCDyfyuCcnjbj6RzGbaoxUtIOHxDAruTsgTTuFWKz1lcSj7YlO60066rgWObx\"\r\n        token={makePayment}\r\n        amount={paymentDetails.total * 100}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Pay with Credit/Debit card\r\n        </Button>\r\n      </StripeCheckout>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardOrders;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\EmailVerified\\index.js",["830","831","832","833"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nimport { responsiveFontSizes } from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nconst EmailVerified = (props) => {\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"initial message\");\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .post(\"/verifyEmail\", { token })\r\n      .then((response) => {\r\n        setEmailVerified(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setEmailVerified(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    setModalOpen(true);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className=\"signup-response-modal\"\r\n      open={modalOpen}\r\n      onClose={(e) => {\r\n        setModalOpen(false);\r\n        // props.history.push(\"/signin\");\r\n      }}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <div className=\"email-verify-modal-content-div\">\r\n          {emailVerified ? (\r\n            <CheckCircleIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          ) : (\r\n            <ErrorIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          )}\r\n          <h2 id=\"transition-modal-title\">\r\n            {emailVerified ? \"Success\" : \"Error\"}\r\n          </h2>\r\n          <p id=\"transition-modal-description\">{message}</p>\r\n          <Link to=\"/signin\">\r\n            Go to {emailVerified ? \"Sign In\" : \"Sign Up\"}\r\n          </Link>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailVerified;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js",["834"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourValidator from \"./StepFourValidator\";\r\nimport useStepFourForm from \"./useStepFourForm\";\r\n\r\nfunction Step4(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      EnviromentAndHistory: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Enviroment And History</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"SubStrate\"\r\n          type=\"text\"\r\n          name=\"SubStrate\"\r\n          placeholder=\"Enter SubStrate here\"\r\n          value={value.SubStrate}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SubStrate && <p style={{ color: \"red\" }}>{errors.SubStrate}</p>}\r\n        <Input\r\n          label=\"Habitat\"\r\n          type=\"text\"\r\n          name=\"Habitat\"\r\n          placeholder=\"Enter Habitat here\"\r\n          value={value.Habitat}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Habitat && <p style={{ color: \"red\" }}>{errors.Habitat}</p>}\r\n        <Input\r\n          label=\"Latitude\"\r\n          type=\"text\"\r\n          name=\"Latitude\"\r\n          placeholder=\"Enter Latitude here\"\r\n          value={value.Latitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Latitude && <p style={{ color: \"red\" }}>{errors.Latitude}</p>}\r\n        <Input\r\n          label=\"Longitude\"\r\n          type=\"text\"\r\n          name=\"Longitude\"\r\n          placeholder=\"Enter Longitude here\"\r\n          value={value.Longitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Longitude && <p style={{ color: \"red\" }}>{errors.Longitude}</p>}\r\n        <Input\r\n          label=\"Altitude\"\r\n          type=\"text\"\r\n          name=\"Altitude\"\r\n          placeholder=\"Enter Altitude here\"\r\n          value={value.Altitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Altitude && <p style={{ color: \"red\" }}>{errors.Altitude}</p>}\r\n        <Input\r\n          label=\"Depth\"\r\n          type=\"text\"\r\n          name=\"Depth\"\r\n          placeholder=\"Enter Depth here\"\r\n          value={value.Depth}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Depth && <p style={{ color: \"red\" }}>{errors.Depth}</p>}\r\n        <Input\r\n          label=\"Humidity\"\r\n          type=\"text\"\r\n          name=\"Humidity\"\r\n          placeholder=\"Enter Humidity here\"\r\n          value={value.Humidity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Humidity && <p style={{ color: \"red\" }}>{errors.Humidity}</p>}\r\n        <Input\r\n          label=\"PH for Enviroment\"\r\n          type=\"text\"\r\n          name=\"PHForEnviroment\"\r\n          placeholder=\"Enter PH for Enviroment here\"\r\n          value={value.PHForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PHForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.PHForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature for Enviroment\"\r\n          type=\"text\"\r\n          name=\"TemperatureForEnviroment\"\r\n          placeholder=\"Enter Temperature for Enviroment here\"\r\n          value={value.TemperatureForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"CollectionMethod\"\r\n          type=\"text\"\r\n          name=\"CollectionMethod\"\r\n          placeholder=\"Enter CollectionMethod here\"\r\n          value={value.CollectionMethod}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectionMethod && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectionMethod}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Collection\"\r\n          type=\"date\"\r\n          name=\"DateOfCollection\"\r\n          placeholder=\"Enter Date of collection here\"\r\n          value={value.DateOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Collection\"\r\n          type=\"text\"\r\n          name=\"CountryOfCollection\"\r\n          placeholder=\"Enter Country of Collection here\"\r\n          value={value.CountryOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"State\"\r\n          type=\"text\"\r\n          name=\"State\"\r\n          placeholder=\"Enter State here\"\r\n          value={value.State}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.State && <p style={{ color: \"red\" }}>{errors.State}</p>}\r\n        <Input\r\n          label=\"Region of Collection\"\r\n          type=\"text\"\r\n          name=\"RegionOfCollection\"\r\n          placeholder=\"Enter Region of Collection here\"\r\n          value={value.RegionOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RegionOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.RegionOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Collected By\"\r\n          type=\"text\"\r\n          name=\"CollectedBy\"\r\n          placeholder=\"Collected By\"\r\n          value={value.CollectedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated By\"\r\n          type=\"text\"\r\n          name=\"IsolatedBy\"\r\n          placeholder=\"Enter Isolated By here\"\r\n          value={value.IsolatedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Method of Isolation\"\r\n          type=\"text\"\r\n          name=\"MethodOfIsolation\"\r\n          placeholder=\"Method of Isolation\"\r\n          value={value.MethodOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MethodOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.MethodOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Identified By\"\r\n          type=\"text\"\r\n          name=\"IdentifiedBy\"\r\n          placeholder=\"IdentifiedBy\"\r\n          value={value.IdentifiedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IdentifiedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IdentifiedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date Of Identification\"\r\n          type=\"date\"\r\n          name=\"DateOfIdentification\"\r\n          placeholder=\"Date Of Identification\"\r\n          value={value.DateOfIdentification}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIdentification && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIdentification}</p>\r\n        )}\r\n        <Input\r\n          label=\"Deposited By\"\r\n          type=\"text\"\r\n          name=\"DepositedBy\"\r\n          placeholder=\"Deposited By\"\r\n          value={value.DepositedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DepositedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.DepositedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Deposition\"\r\n          type=\"date\"\r\n          name=\"DateOfDeposition\"\r\n          placeholder=\"Date of Deposition\"\r\n          value={value.DateOfDeposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfDeposition && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfDeposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Name At Accept\"\r\n          type=\"text\"\r\n          name=\"NameAtAccept\"\r\n          placeholder=\"Name At Accept\"\r\n          value={value.NameAtAccept}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NameAtAccept && (\r\n          <p style={{ color: \"red\" }}>{errors.NameAtAccept}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step4;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js",["835"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepThreeValidator from \"./StepThreeValidator\";\r\nimport useStepThreeForm from \"./useStepThreeForm\";\r\n\r\nfunction Step3(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      StrainAdministration: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepThreeForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepThreeValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Strain Administration</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Date of Accession\"\r\n          type=\"date\"\r\n          name=\"DateOfAccession\"\r\n          placeholder=\"Enter Date of Accession Here\"\r\n          value={value.DateOfAccession}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfAccession && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfAccession}</p>\r\n        )}\r\n        <Input\r\n          label=\"HerbariumNo\"\r\n          type=\"text\"\r\n          name=\"HerbariumNo\"\r\n          placeholder=\"Enter HerbariumNo here\"\r\n          value={value.HerbariumNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HerbariumNo && (\r\n          <p style={{ color: \"red\" }}>{errors.HerbariumNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Internal Identity Check\"\r\n          type=\"text\"\r\n          name=\"InternalIdentityCheck\"\r\n          placeholder=\"Enter Internal Identity Check here\"\r\n          value={value.InternalIdentityCheck}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.InternalIdentityCheck && (\r\n          <p style={{ color: \"red\" }}>{errors.InternalIdentityCheck}</p>\r\n        )}\r\n        <Input\r\n          label=\"Mode Of Preservation\"\r\n          type=\"text\"\r\n          name=\"ModeOfPreservation\"\r\n          placeholder=\"Enter Mode Of Preservation here\"\r\n          value={value.ModeOfPreservation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ModeOfPreservation && (\r\n          <p style={{ color: \"red\" }}>{errors.ModeOfPreservation}</p>\r\n        )}\r\n\r\n        <Form.Label>Bio Hazard Level</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={value.BioHazardLevel}\r\n          name=\"BioHazardLevel\"\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n        </Form.Control>\r\n        {errors.BioHazardLevel && (\r\n          <p style={{ color: \"red\" }}>{errors.BioHazardLevel}</p>\r\n        )}\r\n        <Input\r\n          label=\"Remarks on Restrictions\"\r\n          type=\"text\"\r\n          name=\"RestrictionRemarks\"\r\n          placeholder=\"Enter Restriction Remarks here\"\r\n          value={value.RestrictionRemarks}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RestrictionRemarks && (\r\n          <p style={{ color: \"red\" }}>{errors.RestrictionRemarks}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Export\"\r\n          type=\"text\"\r\n          name=\"CountryOfExport\"\r\n          placeholder=\"Enter Country of Export here\"\r\n          value={value.CountryOfExport}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfExport && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfExport}</p>\r\n        )}\r\n        <Input\r\n          label=\"MTA\"\r\n          type=\"text\"\r\n          name=\"MTA\"\r\n          placeholder=\"Enter MTA here\"\r\n          value={value.MTA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MTA && <p style={{ color: \"red\" }}>{errors.MTA}</p>}\r\n        <Input\r\n          label=\"Distribution Restriction\"\r\n          type=\"text\"\r\n          name=\"DistributionRestriction\"\r\n          placeholder=\"Enter Distribution Restriction here\"\r\n          value={value.DistributionRestriction}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DestributionRestriction && (\r\n          <p style={{ color: \"red\" }}>{errors.DestributionRestriction}</p>\r\n        )}\r\n        <Input\r\n          label=\"Animal Quarantine No\"\r\n          type=\"text\"\r\n          name=\"AnimalQuarantineNo\"\r\n          placeholder=\"Enter Animal Quarantine No here\"\r\n          value={value.AnimalQuarantineNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AnimalQuarantineNo && (\r\n          <p style={{ color: \"red\" }}>{errors.AnimalQuarantineNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Plant Quarantine No\"\r\n          type=\"text\"\r\n          name=\"PlantQuarantineNo\"\r\n          placeholder=\"Enter Plant Quarantine No here\"\r\n          value={value.PlantQuarantineNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PlantQuarantineNo && (\r\n          <p style={{ color: \"red\" }}>{errors.PlantQuarantineNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Form of Supply\"\r\n          type=\"text\"\r\n          name=\"FormOfSupply\"\r\n          placeholder=\"Enter Form of Supply here\"\r\n          value={value.FormOfSupply}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.FormOfSupply && (\r\n          <p style={{ color: \"red\" }}>{errors.FormOfSupply}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step3;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["836"],"import { useEffect, useState } from \"react\";\r\nconst useStepSevenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepSevenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepSevenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepSevenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js",["837","838"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  options: [],\r\n  data: {},\r\n  fetching: false,\r\n  fetched: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.DASHBOARD_OPTIONS_UPDATE:\r\n      state = {\r\n        ...state,\r\n        options: [\r\n          ...(!state.options.includes(action.payload.option)\r\n            ? [...state.options, action.payload.option]\r\n            : [...state.options]),\r\n        ],\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_FAILURE:\r\n      state = initialState;\r\n      break;\r\n\r\n    case authConstants.UPDATE_DASHBOARD_OPTIONS:\r\n      state = {\r\n        ...state,\r\n        options: action.payload.options,\r\n        fetched: true,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\useFormUserSettings.js",["839","840"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst useFormUserSettings = (handleSubmission, UserSettingsValidator) => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  console.log(user);\r\n  const [UserSettingsValue, setUserSettingsValue] = useState({\r\n    firstname: user.firstname || \"\",\r\n    lastname: user.lastname || \"\",\r\n    email: user.email || \"\",\r\n    contactNumber: user.contactNumber === null ? \"\" : user.contactNumber,\r\n    profilePicture: user.profilePicture || undefined,\r\n  });\r\n\r\n  const [UserSettingsErrors, setUserSettingsErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleUserSettingsSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUserSettingsErrors(UserSettingsValidator(UserSettingsValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(UserSettingsErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [UserSettingsErrors]);\r\n\r\n  const updateUserSettingsValue = (e) => {\r\n    // let value = \"\";\r\n    // if (e.target.type === \"file\") {\r\n    //   value = e.target.files[0];\r\n    // } else {\r\n    //   value = e.target.value;\r\n    // }\r\n    setUserSettingsValue({\r\n      ...UserSettingsValue,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  return {\r\n    handleUserSettingsSubmit,\r\n    UserSettingsValue,\r\n    updateUserSettingsValue,\r\n    UserSettingsErrors,\r\n  };\r\n};\r\n\r\nexport default useFormUserSettings;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\userSettingsValidator.js",["841"],"const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\nconst userSettingsValidator = (value) => {\r\n  let errors = {};\r\n\r\n  if (!isNaN(value.firstname.trim())) {\r\n    errors.firstname = \"Firstname can only contian characters\";\r\n  }\r\n  if (!value.firstname.trim()) {\r\n    errors.firstname = \"Firstname cannot be empty\";\r\n  }\r\n  if (!isNaN(value.lastname.trim())) {\r\n    errors.lastname = \"Lastname can only contian characters\";\r\n  }\r\n  if (!value.lastname.trim()) {\r\n    errors.lastname = \"Lastname cannot be empty\";\r\n  }\r\n  if (!value.email.trim()) {\r\n    errors.email = \"Email cannot be empty\";\r\n  } else if (!emailValidator.test(value.email.trim())) {\r\n    errors.email = \"must be of form: name@gmail.com\";\r\n  }\r\n  if (!value.contactNumber.trim()) {\r\n    errors.contactNumber = \"Contact number cannot be empty\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default userSettingsValidator;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js",["842","843"],"import axios from \"../helpers/axios.js\";\r\nimport urls from \"../server_urls.js\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nexport const getUsers = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.USERS_FETCH_REQUEST });\r\n    try {\r\n      let user_Request_Response = await axios.post(\"/users\", {});\r\n      if (user_Request_Response.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_SUCCESS,\r\n          payload: { users: user_Request_Response.data },\r\n        });\r\n        dispatch({\r\n          type: authConstants.DASHBOARD_OPTIONS_UPDATE,\r\n          payload: { option: \"USERS\" },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response && e.response.status === 405) {\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n      if (e.response && e.response.status === 400) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_FAILURE,\r\n          payload: {\r\n            status_code: e.response.status,\r\n            message: e.response.data.message,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\nexport const getUserData = (id) => {\r\n  return async (dispatch) => {\r\n    // if (token) {\r\n    console.log(\"fetching user data\");\r\n    dispatch({ type: authConstants.USER_DATA_REQUEST });\r\n    const res = await axios.post(\r\n      \"/userData\",\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    dispatch({\r\n      type: authConstants.USER_DATA_SUCCESS,\r\n      payload: { user: res.data },\r\n    });\r\n    // }\r\n  };\r\n};\r\n\r\nexport const updateUserProfilePicture = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(\"/updateUserInfo\", data, {\r\n        \"content-type\": \"multipart/form-data\",\r\n      });\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USER_DATA_UPDATE,\r\n          payload: {\r\n            user: res.data._doc,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserInfo = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.UPDATING_USER_REQUEST,\r\n      payload: { data: data },\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/updateUser\",\r\n        { data }\r\n        // {\r\n        //   headers: { authorization: token },\r\n        // }\r\n      );\r\n\r\n      if (res.status == 200) {\r\n        dispatch({\r\n          type: authConstants.UPDATING_USER_SUCCESS,\r\n          payload: {\r\n            status_code: res.status,\r\n            message: res.data.message,\r\n          },\r\n        });\r\n        dispatch({\r\n          type: authConstants.USER_DATA_UPDATE,\r\n          payload: { data: res.data._doc },\r\n        });\r\n        // dispatch(getUsers(token));\r\n      }\r\n    } catch (error) {\r\n      console.log(error.data);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUser = (data, token) => {\r\n  return async (dispatch) => {\r\n    console.log(\"user data sent to method was: \");\r\n    console.log(data);\r\n    dispatch({ type: authConstants.USER_DELETE_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/deleteUser\",\r\n        { id: data }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"user deleted successfully\");\r\n        dispatch({ type: authConstants.USER_DELETE_SUCCESS });\r\n        dispatch(getUsers(token));\r\n      }\r\n    } catch (error) {\r\n      console.log(error.data);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addUser = (userData, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: authConstants.USER_ADD_REQUEST,\r\n        payload: { data: userData },\r\n      });\r\n      const res = await axios.post(\"/addUser\", userData, {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      });\r\n      // console.log(res.status);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USER_ADD_SUCCESS,\r\n          payload: { message: res.data.message },\r\n        });\r\n        // dispatch(getUsers(token));\r\n      }\r\n      if (res.status === 405) {\r\n        alert(\"Token has expired \");\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n    } catch ({ response }) {\r\n      console.log(\"err\");\r\n      console.log(response);\r\n      dispatch({\r\n        type: authConstants.USER_ADD_FAILURE,\r\n        payload: {\r\n          status: response.data.status,\r\n          message: response.data.message,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js",["844"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\payment.reducer.js",["845","846"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\payment.actions.js",["847"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js",["848"],{"ruleId":"849","replacedBy":"850"},{"ruleId":"851","replacedBy":"852"},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"849","replacedBy":"857"},{"ruleId":"851","replacedBy":"858"},{"ruleId":"853","severity":1,"message":"859","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":26},{"ruleId":"853","severity":1,"message":"854","line":1,"column":28,"nodeType":"855","messageId":"856","endLine":1,"endColumn":36},{"ruleId":"853","severity":1,"message":"860","line":3,"column":3,"nodeType":"855","messageId":"856","endLine":3,"endColumn":9},{"ruleId":"853","severity":1,"message":"861","line":4,"column":3,"nodeType":"855","messageId":"856","endLine":4,"endColumn":14},{"ruleId":"853","severity":1,"message":"862","line":5,"column":3,"nodeType":"855","messageId":"856","endLine":5,"endColumn":6},{"ruleId":"853","severity":1,"message":"863","line":9,"column":3,"nodeType":"855","messageId":"856","endLine":9,"endColumn":10},{"ruleId":"853","severity":1,"message":"864","line":11,"column":3,"nodeType":"855","messageId":"856","endLine":11,"endColumn":7},{"ruleId":"853","severity":1,"message":"865","line":12,"column":3,"nodeType":"855","messageId":"856","endLine":12,"endColumn":9},{"ruleId":"853","severity":1,"message":"866","line":13,"column":3,"nodeType":"855","messageId":"856","endLine":13,"endColumn":6},{"ruleId":"853","severity":1,"message":"867","line":14,"column":3,"nodeType":"855","messageId":"856","endLine":14,"endColumn":6},{"ruleId":"853","severity":1,"message":"868","line":16,"column":23,"nodeType":"855","messageId":"856","endLine":16,"endColumn":34},{"ruleId":"853","severity":1,"message":"869","line":17,"column":8,"nodeType":"855","messageId":"856","endLine":17,"endColumn":14},{"ruleId":"853","severity":1,"message":"870","line":20,"column":8,"nodeType":"855","messageId":"856","endLine":20,"endColumn":16},{"ruleId":"853","severity":1,"message":"871","line":22,"column":8,"nodeType":"855","messageId":"856","endLine":22,"endColumn":17},{"ruleId":"853","severity":1,"message":"872","line":23,"column":8,"nodeType":"855","messageId":"856","endLine":23,"endColumn":12},{"ruleId":"853","severity":1,"message":"873","line":24,"column":8,"nodeType":"855","messageId":"856","endLine":24,"endColumn":24},{"ruleId":"853","severity":1,"message":"874","line":26,"column":8,"nodeType":"855","messageId":"856","endLine":26,"endColumn":22},{"ruleId":"853","severity":1,"message":"875","line":28,"column":8,"nodeType":"855","messageId":"856","endLine":28,"endColumn":20},{"ruleId":"853","severity":1,"message":"876","line":30,"column":8,"nodeType":"855","messageId":"856","endLine":30,"endColumn":20},{"ruleId":"853","severity":1,"message":"877","line":34,"column":8,"nodeType":"855","messageId":"856","endLine":34,"endColumn":24},{"ruleId":"853","severity":1,"message":"878","line":36,"column":8,"nodeType":"855","messageId":"856","endLine":36,"endColumn":16},{"ruleId":"853","severity":1,"message":"879","line":37,"column":8,"nodeType":"855","messageId":"856","endLine":37,"endColumn":20},{"ruleId":"853","severity":1,"message":"880","line":38,"column":8,"nodeType":"855","messageId":"856","endLine":38,"endColumn":25},{"ruleId":"853","severity":1,"message":"881","line":39,"column":8,"nodeType":"855","messageId":"856","endLine":39,"endColumn":25},{"ruleId":"853","severity":1,"message":"882","line":40,"column":8,"nodeType":"855","messageId":"856","endLine":40,"endColumn":23},{"ruleId":"853","severity":1,"message":"883","line":41,"column":8,"nodeType":"855","messageId":"856","endLine":41,"endColumn":19},{"ruleId":"853","severity":1,"message":"884","line":42,"column":8,"nodeType":"855","messageId":"856","endLine":42,"endColumn":32},{"ruleId":"853","severity":1,"message":"885","line":43,"column":8,"nodeType":"855","messageId":"856","endLine":43,"endColumn":26},{"ruleId":"853","severity":1,"message":"886","line":44,"column":8,"nodeType":"855","messageId":"856","endLine":44,"endColumn":25},{"ruleId":"853","severity":1,"message":"887","line":52,"column":8,"nodeType":"855","messageId":"856","endLine":52,"endColumn":21},{"ruleId":"853","severity":1,"message":"888","line":53,"column":8,"nodeType":"855","messageId":"856","endLine":53,"endColumn":20},{"ruleId":"853","severity":1,"message":"889","line":59,"column":9,"nodeType":"855","messageId":"856","endLine":59,"endColumn":17},{"ruleId":"853","severity":1,"message":"890","line":61,"column":20,"nodeType":"855","messageId":"856","endLine":61,"endColumn":31},{"ruleId":"853","severity":1,"message":"891","line":67,"column":9,"nodeType":"855","messageId":"856","endLine":67,"endColumn":25},{"ruleId":"892","severity":1,"message":"893","line":128,"column":13,"nodeType":"894","endLine":128,"endColumn":57},{"ruleId":"895","severity":1,"message":"896","line":356,"column":15,"nodeType":"894","endLine":356,"endColumn":18},{"ruleId":"895","severity":1,"message":"896","line":366,"column":17,"nodeType":"894","endLine":366,"endColumn":20},{"ruleId":"849","replacedBy":"897"},{"ruleId":"851","replacedBy":"898"},{"ruleId":"899","severity":1,"message":"900","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":8,"suggestions":"902"},{"ruleId":"849","replacedBy":"903"},{"ruleId":"851","replacedBy":"904"},{"ruleId":"853","severity":1,"message":"905","line":2,"column":10,"nodeType":"855","messageId":"856","endLine":2,"endColumn":19},{"ruleId":"906","severity":1,"message":"907","line":237,"column":9,"nodeType":"908","messageId":"909","endLine":237,"endColumn":15},{"ruleId":"853","severity":1,"message":"867","line":2,"column":10,"nodeType":"855","messageId":"856","endLine":2,"endColumn":13},{"ruleId":"853","severity":1,"message":"866","line":2,"column":26,"nodeType":"855","messageId":"856","endLine":2,"endColumn":29},{"ruleId":"853","severity":1,"message":"910","line":2,"column":31,"nodeType":"855","messageId":"856","endLine":2,"endColumn":36},{"ruleId":"853","severity":1,"message":"911","line":4,"column":8,"nodeType":"855","messageId":"856","endLine":4,"endColumn":34},{"ruleId":"853","severity":1,"message":"912","line":5,"column":8,"nodeType":"855","messageId":"856","endLine":5,"endColumn":36},{"ruleId":"853","severity":1,"message":"913","line":6,"column":8,"nodeType":"855","messageId":"856","endLine":6,"endColumn":18},{"ruleId":"853","severity":1,"message":"914","line":7,"column":28,"nodeType":"855","messageId":"856","endLine":7,"endColumn":34},{"ruleId":"849","replacedBy":"915"},{"ruleId":"851","replacedBy":"916"},{"ruleId":"853","severity":1,"message":"859","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":26},{"ruleId":"853","severity":1,"message":"865","line":6,"column":3,"nodeType":"855","messageId":"856","endLine":6,"endColumn":9},{"ruleId":"853","severity":1,"message":"917","line":13,"column":3,"nodeType":"855","messageId":"856","endLine":13,"endColumn":8},{"ruleId":"853","severity":1,"message":"918","line":18,"column":3,"nodeType":"855","messageId":"856","endLine":18,"endColumn":9},{"ruleId":"853","severity":1,"message":"919","line":1,"column":36,"nodeType":"855","messageId":"856","endLine":1,"endColumn":47},{"ruleId":"853","severity":1,"message":"920","line":9,"column":8,"nodeType":"855","messageId":"856","endLine":9,"endColumn":20},{"ruleId":"899","severity":1,"message":"921","line":24,"column":6,"nodeType":"901","endLine":24,"endColumn":8,"suggestions":"922"},{"ruleId":"923","severity":1,"message":"924","line":27,"column":1,"nodeType":"925","endLine":28,"endColumn":81},{"ruleId":"853","severity":1,"message":"926","line":4,"column":8,"nodeType":"855","messageId":"856","endLine":4,"endColumn":32},{"ruleId":"853","severity":1,"message":"927","line":6,"column":8,"nodeType":"855","messageId":"856","endLine":6,"endColumn":20},{"ruleId":"853","severity":1,"message":"928","line":10,"column":18,"nodeType":"855","messageId":"856","endLine":10,"endColumn":25},{"ruleId":"853","severity":1,"message":"929","line":50,"column":9,"nodeType":"855","messageId":"856","endLine":50,"endColumn":21},{"ruleId":"923","severity":1,"message":"924","line":12,"column":1,"nodeType":"925","endLine":41,"endColumn":3},{"ruleId":"930","severity":1,"message":"931","line":13,"column":3,"nodeType":"932","messageId":"933","endLine":39,"endColumn":4},{"ruleId":"923","severity":1,"message":"924","line":7,"column":1,"nodeType":"925","endLine":19,"endColumn":3},{"ruleId":"923","severity":1,"message":"924","line":14,"column":1,"nodeType":"925","endLine":119,"endColumn":3},{"ruleId":"923","severity":1,"message":"924","line":31,"column":1,"nodeType":"925","endLine":144,"endColumn":3},{"ruleId":"930","severity":1,"message":"931","line":32,"column":3,"nodeType":"932","messageId":"933","endLine":142,"endColumn":4},{"ruleId":"934","severity":1,"message":"935","line":58,"column":5,"nodeType":"936","messageId":"937","endLine":69,"endColumn":6},{"ruleId":"849","replacedBy":"938"},{"ruleId":"851","replacedBy":"939"},{"ruleId":"853","severity":1,"message":"870","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":16},{"ruleId":"853","severity":1,"message":"940","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":18},{"ruleId":"853","severity":1,"message":"941","line":7,"column":8,"nodeType":"855","messageId":"856","endLine":7,"endColumn":22},{"ruleId":"853","severity":1,"message":"942","line":8,"column":8,"nodeType":"855","messageId":"856","endLine":8,"endColumn":21},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"849","replacedBy":"943"},{"ruleId":"851","replacedBy":"944"},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":2,"column":17,"nodeType":"855","messageId":"856","endLine":2,"endColumn":25},{"ruleId":"899","severity":1,"message":"945","line":18,"column":6,"nodeType":"901","endLine":18,"endColumn":14,"suggestions":"946"},{"ruleId":"899","severity":1,"message":"945","line":18,"column":6,"nodeType":"901","endLine":18,"endColumn":14,"suggestions":"947"},{"ruleId":"899","severity":1,"message":"945","line":18,"column":6,"nodeType":"901","endLine":18,"endColumn":14,"suggestions":"948"},{"ruleId":"899","severity":1,"message":"945","line":18,"column":6,"nodeType":"901","endLine":18,"endColumn":14,"suggestions":"949"},{"ruleId":"853","severity":1,"message":"950","line":2,"column":10,"nodeType":"855","messageId":"856","endLine":2,"endColumn":21},{"ruleId":"853","severity":1,"message":"868","line":2,"column":23,"nodeType":"855","messageId":"856","endLine":2,"endColumn":34},{"ruleId":"853","severity":1,"message":"951","line":3,"column":10,"nodeType":"855","messageId":"856","endLine":3,"endColumn":23},{"ruleId":"853","severity":1,"message":"952","line":5,"column":3,"nodeType":"855","messageId":"856","endLine":5,"endColumn":12},{"ruleId":"853","severity":1,"message":"862","line":6,"column":3,"nodeType":"855","messageId":"856","endLine":6,"endColumn":6},{"ruleId":"853","severity":1,"message":"866","line":7,"column":3,"nodeType":"855","messageId":"856","endLine":7,"endColumn":6},{"ruleId":"853","severity":1,"message":"865","line":9,"column":3,"nodeType":"855","messageId":"856","endLine":9,"endColumn":9},{"ruleId":"853","severity":1,"message":"953","line":12,"column":16,"nodeType":"855","messageId":"856","endLine":12,"endColumn":24},{"ruleId":"853","severity":1,"message":"954","line":14,"column":3,"nodeType":"855","messageId":"856","endLine":14,"endColumn":21},{"ruleId":"853","severity":1,"message":"955","line":15,"column":3,"nodeType":"855","messageId":"856","endLine":15,"endColumn":19},{"ruleId":"853","severity":1,"message":"917","line":21,"column":8,"nodeType":"855","messageId":"856","endLine":21,"endColumn":13},{"ruleId":"853","severity":1,"message":"956","line":22,"column":8,"nodeType":"855","messageId":"856","endLine":22,"endColumn":24},{"ruleId":"853","severity":1,"message":"873","line":23,"column":8,"nodeType":"855","messageId":"856","endLine":23,"endColumn":24},{"ruleId":"853","severity":1,"message":"957","line":24,"column":28,"nodeType":"855","messageId":"856","endLine":24,"endColumn":33},{"ruleId":"853","severity":1,"message":"958","line":26,"column":28,"nodeType":"855","messageId":"856","endLine":26,"endColumn":40},{"ruleId":"853","severity":1,"message":"959","line":27,"column":8,"nodeType":"855","messageId":"856","endLine":27,"endColumn":16},{"ruleId":"853","severity":1,"message":"919","line":30,"column":3,"nodeType":"855","messageId":"856","endLine":30,"endColumn":14},{"ruleId":"853","severity":1,"message":"960","line":31,"column":3,"nodeType":"855","messageId":"856","endLine":31,"endColumn":19},{"ruleId":"853","severity":1,"message":"961","line":32,"column":3,"nodeType":"855","messageId":"856","endLine":32,"endColumn":17},{"ruleId":"853","severity":1,"message":"962","line":33,"column":3,"nodeType":"855","messageId":"856","endLine":33,"endColumn":13},{"ruleId":"853","severity":1,"message":"963","line":34,"column":3,"nodeType":"855","messageId":"856","endLine":34,"endColumn":16},{"ruleId":"853","severity":1,"message":"964","line":35,"column":3,"nodeType":"855","messageId":"856","endLine":35,"endColumn":12},{"ruleId":"853","severity":1,"message":"965","line":40,"column":11,"nodeType":"855","messageId":"856","endLine":40,"endColumn":23},{"ruleId":"899","severity":1,"message":"921","line":62,"column":6,"nodeType":"901","endLine":62,"endColumn":8,"suggestions":"966"},{"ruleId":"853","severity":1,"message":"869","line":3,"column":8,"nodeType":"855","messageId":"856","endLine":3,"endColumn":14},{"ruleId":"853","severity":1,"message":"967","line":4,"column":10,"nodeType":"855","messageId":"856","endLine":4,"endColumn":14},{"ruleId":"853","severity":1,"message":"905","line":4,"column":24,"nodeType":"855","messageId":"856","endLine":4,"endColumn":33},{"ruleId":"853","severity":1,"message":"866","line":4,"column":35,"nodeType":"855","messageId":"856","endLine":4,"endColumn":38},{"ruleId":"853","severity":1,"message":"867","line":4,"column":40,"nodeType":"855","messageId":"856","endLine":4,"endColumn":43},{"ruleId":"853","severity":1,"message":"917","line":5,"column":8,"nodeType":"855","messageId":"856","endLine":5,"endColumn":13},{"ruleId":"853","severity":1,"message":"968","line":9,"column":8,"nodeType":"855","messageId":"856","endLine":9,"endColumn":18},{"ruleId":"853","severity":1,"message":"969","line":38,"column":10,"nodeType":"855","messageId":"856","endLine":38,"endColumn":15},{"ruleId":"853","severity":1,"message":"970","line":38,"column":17,"nodeType":"855","messageId":"856","endLine":38,"endColumn":25},{"ruleId":"853","severity":1,"message":"971","line":39,"column":10,"nodeType":"855","messageId":"856","endLine":39,"endColumn":18},{"ruleId":"853","severity":1,"message":"972","line":39,"column":20,"nodeType":"855","messageId":"856","endLine":39,"endColumn":31},{"ruleId":"853","severity":1,"message":"973","line":41,"column":10,"nodeType":"855","messageId":"856","endLine":41,"endColumn":20},{"ruleId":"853","severity":1,"message":"974","line":41,"column":22,"nodeType":"855","messageId":"856","endLine":41,"endColumn":35},{"ruleId":"853","severity":1,"message":"975","line":63,"column":9,"nodeType":"855","messageId":"856","endLine":63,"endColumn":15},{"ruleId":"853","severity":1,"message":"976","line":10,"column":8,"nodeType":"855","messageId":"856","endLine":10,"endColumn":29},{"ruleId":"853","severity":1,"message":"977","line":13,"column":10,"nodeType":"855","messageId":"856","endLine":13,"endColumn":31},{"ruleId":"853","severity":1,"message":"978","line":14,"column":8,"nodeType":"855","messageId":"856","endLine":14,"endColumn":20},{"ruleId":"899","severity":1,"message":"979","line":37,"column":6,"nodeType":"901","endLine":37,"endColumn":8,"suggestions":"980"},{"ruleId":"853","severity":1,"message":"981","line":108,"column":9,"nodeType":"855","messageId":"856","endLine":108,"endColumn":28},{"ruleId":"853","severity":1,"message":"859","line":2,"column":17,"nodeType":"855","messageId":"856","endLine":2,"endColumn":26},{"ruleId":"853","severity":1,"message":"982","line":4,"column":10,"nodeType":"855","messageId":"856","endLine":4,"endColumn":24},{"ruleId":"853","severity":1,"message":"889","line":9,"column":9,"nodeType":"855","messageId":"856","endLine":9,"endColumn":17},{"ruleId":"853","severity":1,"message":"964","line":8,"column":3,"nodeType":"855","messageId":"856","endLine":8,"endColumn":12},{"ruleId":"853","severity":1,"message":"983","line":11,"column":8,"nodeType":"855","messageId":"856","endLine":11,"endColumn":23},{"ruleId":"853","severity":1,"message":"984","line":12,"column":8,"nodeType":"855","messageId":"856","endLine":12,"endColumn":17},{"ruleId":"853","severity":1,"message":"985","line":14,"column":10,"nodeType":"855","messageId":"856","endLine":14,"endColumn":19},{"ruleId":"853","severity":1,"message":"986","line":161,"column":10,"nodeType":"855","messageId":"856","endLine":161,"endColumn":23},{"ruleId":"853","severity":1,"message":"987","line":161,"column":25,"nodeType":"855","messageId":"856","endLine":161,"endColumn":41},{"ruleId":"853","severity":1,"message":"988","line":10,"column":22,"nodeType":"855","messageId":"856","endLine":10,"endColumn":35},{"ruleId":"853","severity":1,"message":"989","line":15,"column":32,"nodeType":"855","messageId":"856","endLine":15,"endColumn":55},{"ruleId":"853","severity":1,"message":"990","line":100,"column":26,"nodeType":"855","messageId":"856","endLine":100,"endColumn":43},{"ruleId":"853","severity":1,"message":"991","line":131,"column":38,"nodeType":"855","messageId":"856","endLine":131,"endColumn":67},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"899","severity":1,"message":"945","line":27,"column":6,"nodeType":"901","endLine":27,"endColumn":20,"suggestions":"993"},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"853","severity":1,"message":"994","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":23},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":20,"suggestions":"995"},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"899","severity":1,"message":"945","line":52,"column":6,"nodeType":"901","endLine":52,"endColumn":21,"suggestions":"996"},{"ruleId":"923","severity":1,"message":"924","line":49,"column":1,"nodeType":"925","endLine":163,"endColumn":3},{"ruleId":"930","severity":1,"message":"931","line":50,"column":3,"nodeType":"932","messageId":"933","endLine":161,"endColumn":4},{"ruleId":"923","severity":1,"message":"924","line":19,"column":1,"nodeType":"925","endLine":58,"endColumn":3},{"ruleId":"930","severity":1,"message":"931","line":20,"column":3,"nodeType":"932","messageId":"933","endLine":56,"endColumn":4},{"ruleId":"934","severity":1,"message":"935","line":48,"column":5,"nodeType":"936","messageId":"937","endLine":55,"endColumn":13},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"853","severity":1,"message":"997","line":13,"column":10,"nodeType":"855","messageId":"856","endLine":13,"endColumn":16},{"ruleId":"853","severity":1,"message":"998","line":13,"column":18,"nodeType":"855","messageId":"856","endLine":13,"endColumn":27},{"ruleId":"853","severity":1,"message":"999","line":16,"column":24,"nodeType":"855","messageId":"856","endLine":16,"endColumn":33},{"ruleId":"853","severity":1,"message":"1000","line":31,"column":10,"nodeType":"855","messageId":"856","endLine":31,"endColumn":17},{"ruleId":"853","severity":1,"message":"1001","line":31,"column":19,"nodeType":"855","messageId":"856","endLine":31,"endColumn":29},{"ruleId":"899","severity":1,"message":"1002","line":61,"column":6,"nodeType":"901","endLine":61,"endColumn":25,"suggestions":"1003"},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"899","severity":1,"message":"945","line":18,"column":6,"nodeType":"901","endLine":18,"endColumn":14,"suggestions":"1004"},{"ruleId":"899","severity":1,"message":"945","line":18,"column":6,"nodeType":"901","endLine":18,"endColumn":14,"suggestions":"1005"},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":14,"suggestions":"1006"},{"ruleId":"853","severity":1,"message":"1007","line":1,"column":7,"nodeType":"855","messageId":"856","endLine":1,"endColumn":21},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":14,"suggestions":"1008"},{"ruleId":"853","severity":1,"message":"1009","line":5,"column":8,"nodeType":"855","messageId":"856","endLine":5,"endColumn":16},{"ruleId":"899","severity":1,"message":"979","line":32,"column":6,"nodeType":"901","endLine":32,"endColumn":8,"suggestions":"1010"},{"ruleId":"853","severity":1,"message":"1011","line":9,"column":11,"nodeType":"855","messageId":"856","endLine":9,"endColumn":16},{"ruleId":"899","severity":1,"message":"1012","line":23,"column":13,"nodeType":"1013","endLine":30,"endColumn":4},{"ruleId":"899","severity":1,"message":"1014","line":30,"column":6,"nodeType":"901","endLine":30,"endColumn":8,"suggestions":"1015"},{"ruleId":"853","severity":1,"message":"865","line":3,"column":10,"nodeType":"855","messageId":"856","endLine":3,"endColumn":16},{"ruleId":"853","severity":1,"message":"919","line":3,"column":36,"nodeType":"855","messageId":"856","endLine":3,"endColumn":47},{"ruleId":"853","severity":1,"message":"1016","line":8,"column":16,"nodeType":"855","messageId":"856","endLine":8,"endColumn":23},{"ruleId":"853","severity":1,"message":"1017","line":24,"column":17,"nodeType":"855","messageId":"856","endLine":24,"endColumn":25},{"ruleId":"853","severity":1,"message":"1018","line":50,"column":9,"nodeType":"855","messageId":"856","endLine":50,"endColumn":20},{"ruleId":"853","severity":1,"message":"1019","line":59,"column":9,"nodeType":"855","messageId":"856","endLine":59,"endColumn":21},{"ruleId":"853","severity":1,"message":"1020","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":13},{"ruleId":"923","severity":1,"message":"924","line":22,"column":1,"nodeType":"925","endLine":62,"endColumn":3},{"ruleId":"923","severity":1,"message":"924","line":13,"column":1,"nodeType":"925","endLine":46,"endColumn":3},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"920","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":20},{"ruleId":"853","severity":1,"message":"1021","line":3,"column":8,"nodeType":"855","messageId":"856","endLine":3,"endColumn":25},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":14,"suggestions":"1022"},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":14,"suggestions":"1023"},{"ruleId":"853","severity":1,"message":"1024","line":1,"column":10,"nodeType":"855","messageId":"856","endLine":1,"endColumn":15},{"ruleId":"1025","severity":1,"message":"1026","line":10,"column":39,"nodeType":"1027","messageId":"1028","endLine":10,"endColumn":41},{"ruleId":"899","severity":1,"message":"945","line":42,"column":6,"nodeType":"901","endLine":42,"endColumn":14,"suggestions":"1029"},{"ruleId":"853","severity":1,"message":"1030","line":17,"column":10,"nodeType":"855","messageId":"856","endLine":17,"endColumn":20},{"ruleId":"853","severity":1,"message":"1031","line":17,"column":22,"nodeType":"855","messageId":"856","endLine":17,"endColumn":35},{"ruleId":"899","severity":1,"message":"1032","line":28,"column":6,"nodeType":"901","endLine":28,"endColumn":8,"suggestions":"1033"},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"899","severity":1,"message":"945","line":28,"column":6,"nodeType":"901","endLine":28,"endColumn":14,"suggestions":"1034"},{"ruleId":"853","severity":1,"message":"1035","line":23,"column":9,"nodeType":"855","messageId":"856","endLine":23,"endColumn":14},{"ruleId":"895","severity":1,"message":"896","line":54,"column":17,"nodeType":"894","endLine":54,"endColumn":61},{"ruleId":"895","severity":1,"message":"896","line":57,"column":17,"nodeType":"894","endLine":57,"endColumn":61},{"ruleId":"895","severity":1,"message":"896","line":60,"column":17,"nodeType":"894","endLine":60,"endColumn":61},{"ruleId":"895","severity":1,"message":"896","line":63,"column":17,"nodeType":"894","endLine":63,"endColumn":61},{"ruleId":"895","severity":1,"message":"1036","line":104,"column":13,"nodeType":"894","endLine":104,"endColumn":59},{"ruleId":"895","severity":1,"message":"1036","line":107,"column":13,"nodeType":"894","endLine":107,"endColumn":59},{"ruleId":"895","severity":1,"message":"1036","line":110,"column":13,"nodeType":"894","endLine":110,"endColumn":59},{"ruleId":"895","severity":1,"message":"1036","line":113,"column":13,"nodeType":"894","endLine":113,"endColumn":59},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"853","severity":1,"message":"1037","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":30},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":27,"suggestions":"1038"},{"ruleId":"853","severity":1,"message":"920","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":20},{"ruleId":"853","severity":1,"message":"1021","line":3,"column":8,"nodeType":"855","messageId":"856","endLine":3,"endColumn":25},{"ruleId":"853","severity":1,"message":"1039","line":11,"column":10,"nodeType":"855","messageId":"856","endLine":11,"endColumn":16},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"1040","line":13,"column":8,"nodeType":"855","messageId":"856","endLine":13,"endColumn":14},{"ruleId":"853","severity":1,"message":"1041","line":14,"column":8,"nodeType":"855","messageId":"856","endLine":14,"endColumn":16},{"ruleId":"853","severity":1,"message":"1042","line":16,"column":8,"nodeType":"855","messageId":"856","endLine":16,"endColumn":13},{"ruleId":"853","severity":1,"message":"1043","line":27,"column":8,"nodeType":"855","messageId":"856","endLine":27,"endColumn":25},{"ruleId":"853","severity":1,"message":"1044","line":28,"column":8,"nodeType":"855","messageId":"856","endLine":28,"endColumn":23},{"ruleId":"853","severity":1,"message":"1045","line":29,"column":8,"nodeType":"855","messageId":"856","endLine":29,"endColumn":22},{"ruleId":"853","severity":1,"message":"1046","line":30,"column":8,"nodeType":"855","messageId":"856","endLine":30,"endColumn":25},{"ruleId":"853","severity":1,"message":"1047","line":31,"column":8,"nodeType":"855","messageId":"856","endLine":31,"endColumn":24},{"ruleId":"853","severity":1,"message":"1048","line":32,"column":8,"nodeType":"855","messageId":"856","endLine":32,"endColumn":24},{"ruleId":"899","severity":1,"message":"921","line":47,"column":6,"nodeType":"901","endLine":47,"endColumn":12,"suggestions":"1049"},{"ruleId":"853","severity":1,"message":"919","line":3,"column":36,"nodeType":"855","messageId":"856","endLine":3,"endColumn":47},{"ruleId":"853","severity":1,"message":"1016","line":13,"column":16,"nodeType":"855","messageId":"856","endLine":13,"endColumn":23},{"ruleId":"853","severity":1,"message":"1017","line":29,"column":17,"nodeType":"855","messageId":"856","endLine":29,"endColumn":25},{"ruleId":"853","severity":1,"message":"1018","line":55,"column":9,"nodeType":"855","messageId":"856","endLine":55,"endColumn":20},{"ruleId":"853","severity":1,"message":"1019","line":64,"column":9,"nodeType":"855","messageId":"856","endLine":64,"endColumn":21},{"ruleId":"853","severity":1,"message":"1050","line":101,"column":26,"nodeType":"855","messageId":"856","endLine":101,"endColumn":43},{"ruleId":"853","severity":1,"message":"1051","line":114,"column":9,"nodeType":"855","messageId":"856","endLine":114,"endColumn":16},{"ruleId":"853","severity":1,"message":"1052","line":9,"column":10,"nodeType":"855","messageId":"856","endLine":9,"endColumn":29},{"ruleId":"853","severity":1,"message":"953","line":10,"column":16,"nodeType":"855","messageId":"856","endLine":10,"endColumn":24},{"ruleId":"899","severity":1,"message":"1012","line":19,"column":13,"nodeType":"1013","endLine":31,"endColumn":4},{"ruleId":"899","severity":1,"message":"1053","line":31,"column":6,"nodeType":"901","endLine":31,"endColumn":8,"suggestions":"1054"},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":14,"suggestions":"1055"},{"ruleId":"923","severity":1,"message":"924","line":10,"column":1,"nodeType":"925","endLine":48,"endColumn":3},{"ruleId":"930","severity":1,"message":"931","line":11,"column":3,"nodeType":"932","messageId":"933","endLine":46,"endColumn":4},{"ruleId":"853","severity":1,"message":"992","line":1,"column":8,"nodeType":"855","messageId":"856","endLine":1,"endColumn":13},{"ruleId":"899","severity":1,"message":"945","line":27,"column":6,"nodeType":"901","endLine":27,"endColumn":26,"suggestions":"1056"},{"ruleId":"853","severity":1,"message":"1057","line":2,"column":7,"nodeType":"855","messageId":"856","endLine":2,"endColumn":24},{"ruleId":"853","severity":1,"message":"1058","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":12},{"ruleId":"1025","severity":1,"message":"1026","line":90,"column":22,"nodeType":"1027","messageId":"1028","endLine":90,"endColumn":24},{"ruleId":"853","severity":1,"message":"854","line":1,"column":17,"nodeType":"855","messageId":"856","endLine":1,"endColumn":25},{"ruleId":"923","severity":1,"message":"924","line":18,"column":1,"nodeType":"925","endLine":49,"endColumn":3},{"ruleId":"930","severity":1,"message":"931","line":19,"column":3,"nodeType":"932","messageId":"933","endLine":47,"endColumn":4},{"ruleId":"853","severity":1,"message":"1058","line":2,"column":8,"nodeType":"855","messageId":"856","endLine":2,"endColumn":12},{"ruleId":"899","severity":1,"message":"945","line":22,"column":6,"nodeType":"901","endLine":22,"endColumn":14,"suggestions":"1059"},"no-native-reassign",["1060"],"no-negated-in-lhs",["1061"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["1060"],["1061"],"'useEffect' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useSelector' is defined but never used.","'Layout' is defined but never used.","'HomeIcon' is defined but never used.","'CloseIcon' is defined but never used.","'Logo' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'Miccroorganism' is defined but never used.","'AboutUsImage' is defined but never used.","'ObjectSlider' is defined but never used.","'QueryBuilderIcon' is defined but never used.","'Timeline' is defined but never used.","'TimelineItem' is defined but never used.","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'TimelineContent' is defined but never used.","'TimelineDot' is defined but never used.","'ShoppingCartOutlinedIcon' is defined but never used.","'SearchOutlinedIcon' is defined but never used.","'CloseOutlinedIcon' is defined but never used.","'AwesomeSlider' is defined but never used.","'withAutoplay' is defined but never used.","'dispatch' is assigned a value but never used.","'setViewport' is assigned a value but never used.","'loggedInNavLinks' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1060"],["1061"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.state'. Either include them or remove the dependency array.","ArrayExpression",["1062"],["1060"],["1061"],"'Container' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Table' is defined but never used.","'KeyboardArrowUpRoundedIcon' is defined but never used.","'KeyboardArrowDownRoundedIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Delete' is defined but never used.",["1060"],["1061"],"'Input' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'ItemListCard' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1063"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'AccountCircleRoundedIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Tooltip' is defined but never used.","'changeActive' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["1060"],["1061"],"'PeopleIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.",["1060"],["1061"],"React Hook useEffect has missing dependencies: 'handleSubmission' and 'isSubmitting'. Either include them or remove the dependency array. If 'handleSubmission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1064"],["1065"],["1066"],["1067"],"'useDispatch' is defined but never used.","'authConstants' is defined but never used.","'Jumbotron' is defined but never used.","'Redirect' is defined but never used.","'fetchCatalogueData' is defined but never used.","'fetchItemDetails' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Arrow' is defined but never used.","'ShoppingCart' is defined but never used.","'HomePage' is defined but never used.","'FormControlLabel' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'TextField' is defined but never used.","'authenticate' is assigned a value but never used.",["1068"],"'Form' is defined but never used.","'PageHeader' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'signUpForm' is assigned a value but never used.","'setSignUpForm' is assigned a value but never used.","'goBack' is assigned a value but never used.","'AddMicroorganismModal' is defined but never used.","'microorganismTemplate' is defined but never used.","'useCatalogue' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["1069"],"'microroganismAddRef' is assigned a value but never used.","'forgetPassword' is defined but never used.","'CheckCircleIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'translate' is defined but never used.","'currentSlider' is assigned a value but never used.","'setCurrentSlider' is assigned a value but never used.","'setRangeDates' is assigned a value but never used.","'setActiveUsersChartData' is assigned a value but never used.","'setsalesChartData' is assigned a value but never used.","'setpopularCategoriesChartData' is assigned a value but never used.","'React' is defined but never used.",["1070"],"'SignInValidator' is defined but never used.",["1071"],["1072"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataList', 'filteredList', and 'searchFilter'. Either include them or remove the dependency array. You can also do a functional update 'setFilteredList(f => ...)' if you only need 'filteredList' in the 'setFilteredList' call.",["1073"],["1074"],["1075"],["1076"],"'getCurrentDate' is assigned a value but never used.",["1077"],"'MailIcon' is defined but never used.",["1078"],"'token' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1079"],"'setData' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'axios' is defined but never used.","'AccountCircleIcon' is defined but never used.",["1080"],["1081"],"'Badge' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["1082"],"'updateUser' is assigned a value but never used.","'setUpdateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'userID'. Either include them or remove the dependency array.",["1083"],["1084"],"'error' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ResetPasswordValidator' is defined but never used.",["1085"],"'Avatar' is defined but never used.","'Orders' is defined but never used.","'Deposits' is defined but never used.","'Users' is defined but never used.","'DashboardDeposits' is defined but never used.","'DashboardOrders' is defined but never used.","'DashboardUsers' is defined but never used.","'DashboardPayments' is defined but never used.","'DashboardReports' is defined but never used.","'DashboardAddUser' is defined but never used.",["1086"],"'setPaymentDetails' is assigned a value but never used.","'payment' is assigned a value but never used.","'responsiveFontSizes' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["1087"],["1088"],["1089"],"'passwordValidator' is assigned a value but never used.","'urls' is defined but never used.",["1090"],"no-global-assign","no-unsafe-negation",{"desc":"1091","fix":"1092"},{"desc":"1093","fix":"1094"},{"desc":"1095","fix":"1096"},{"desc":"1095","fix":"1097"},{"desc":"1095","fix":"1098"},{"desc":"1095","fix":"1099"},{"desc":"1093","fix":"1100"},{"desc":"1101","fix":"1102"},{"desc":"1103","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1109","fix":"1110"},{"desc":"1095","fix":"1111"},{"desc":"1095","fix":"1112"},{"desc":"1095","fix":"1113"},{"desc":"1095","fix":"1114"},{"desc":"1101","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1095","fix":"1118"},{"desc":"1095","fix":"1119"},{"desc":"1095","fix":"1120"},{"desc":"1121","fix":"1122"},{"desc":"1095","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1095","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1095","fix":"1133"},"Update the dependencies array to be: [dispatch, props.location.state]",{"range":"1134","text":"1135"},"Update the dependencies array to be: [dispatch]",{"range":"1136","text":"1137"},"Update the dependencies array to be: [errors, handleSubmission, isSubmitting]",{"range":"1138","text":"1139"},{"range":"1140","text":"1139"},{"range":"1141","text":"1139"},{"range":"1142","text":"1139"},{"range":"1143","text":"1137"},"Update the dependencies array to be: [dispatch, token]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signUpErrors]",{"range":"1146","text":"1147"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signInErrors]",{"range":"1148","text":"1149"},"Update the dependencies array to be: [addUserErrors, handleSubmission, isSubmitting]",{"range":"1150","text":"1151"},"Update the dependencies array to be: [applySearchFilter, dataList, filteredList, searchFilter]",{"range":"1152","text":"1153"},{"range":"1154","text":"1139"},{"range":"1155","text":"1139"},{"range":"1156","text":"1139"},{"range":"1157","text":"1139"},{"range":"1158","text":"1145"},"Update the dependencies array to be: [id]",{"range":"1159","text":"1160"},{"range":"1161","text":"1139"},{"range":"1162","text":"1139"},{"range":"1163","text":"1139"},"Update the dependencies array to be: [dispatch, token, userID]",{"range":"1164","text":"1165"},{"range":"1166","text":"1139"},"Update the dependencies array to be: [handleSubmission, isSubmitting, resetPasswordErrors]",{"range":"1167","text":"1168"},"Update the dependencies array to be: [auth, dispatch]",{"range":"1169","text":"1170"},"Update the dependencies array to be: [token]",{"range":"1171","text":"1172"},{"range":"1173","text":"1139"},"Update the dependencies array to be: [UserSettingsErrors, handleSubmission, isSubmitting]",{"range":"1174","text":"1175"},{"range":"1176","text":"1139"},[777,779],"[dispatch, props.location.state]",[974,976],"[dispatch]",[543,551],"[errors, handleSubmission, isSubmitting]",[543,551],[540,548],[540,548],[1858,1860],[1376,1378],"[dispatch, token]",[739,753],"[handleSubmission, isSubmitting, signUpErrors]",[657,671],"[handleSubmission, isSubmitting, signInErrors]",[1701,1716],"[addUserErrors, handleSubmission, isSubmitting]",[1735,1754],"[applySearchFilter, dataList, filteredList, searchFilter]",[543,551],[540,548],[567,575],[561,569],[1304,1306],[931,933],"[id]",[561,569],[558,566],[1144,1152],[1104,1106],"[dispatch, token, userID]",[704,712],[736,757],"[handleSubmission, isSubmitting, resetPasswordErrors]",[2440,2446],"[auth, dispatch]",[1157,1159],"[token]",[558,566],[995,1015],"[UserSettingsErrors, handleSubmission, isSubmitting]",[567,575]]
=======
[{"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\store\\index.js":"1","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\auth.reducers.js":"2","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\catalogue.reducers.js":"3","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\signup.reducers.js":"4","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\user.reducer.js":"5","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\auth.actions.js":"6","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\catalogue.actions.js":"7","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\helpers\\axios.js":"8","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DepositRequestForm.js":"9","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserDepositsDashboard.js":"10","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\index.js":"11","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddUserForm\\index.js":"12","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboardOrders\\index.js":"13","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DashboardCatalogueDetail\\index.js":"14","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\EmailVerified\\index.js":"15","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\HomePage\\index.js":"16","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Signup\\index.js":"17","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Details\\Details.js":"18","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\AddUser\\AddUser.js":"19","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Layout\\index.js":"20","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Signup\\SignUpValidator.js":"21","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\OrderDetailsInformationList.js":"22","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignInValidator.js":"23","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\UI\\Input\\input.js":"24","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\UserSidebar\\UserSidebar.js":"25","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\SearchBar\\index.js":"26","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step12\\index.js":"27","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"28","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"29","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step11\\index.js":"30","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step9\\index.js":"31","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\DepositItemList\\index.js":"32","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Modals\\DeleteUserModal\\index.js":"33","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\AddUser\\addUserValidator.js":"34","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js":"35","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js":"36","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"37","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"38","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js":"39","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js":"40","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Status\\index.js":"41","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Modals\\index.js":"42","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js":"43","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js":"44","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"45","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\TagInput\\index.js":"46","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\cart.actions.js":"47","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DepositHomepage.js":"48","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserDashboard.js":"49","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserOrders\\UserOrdersDashboard.js":"50","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboardUsers\\index.js":"51","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Dashboard\\index.js":"52","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Details\\index.js":"53","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Microorganism\\index.js":"54","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\User\\index.js":"55","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Deposits\\Deposits.js":"56","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Payments\\Payments.js":"57","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignUpUseForm.js":"58","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\SideBar\\sidebardata.js":"59","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step10\\index.js":"60","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step4\\index.js":"61","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Layout\\SidebarData.js":"62","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"63","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js":"64","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"65","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js":"66","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js":"67","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\HOC\\PrivateRoute.js":"68","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Reports\\Reports.js":"69","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\index.js":"70","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\App.js":"71","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\index.js":"72","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\dashboard.reducers.js":"73","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\cart.reducer.js":"74","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\sidebar.reducer.js":"75","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\itemInfo.reducer.js":"76","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\updatingUser.reducer.js":"77","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\constants.js":"78","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\index.js":"79","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\signup.actions.js":"80","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\MainRouter\\MainRouter.js":"81","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\server_urls.js\\index.js":"82","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserOrderDetails.js":"83","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserPaymentDashboard.js":"84","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AddMicroorganism\\index.js":"85","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\index.js":"86","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\UserOrders\\UserOrders.js":"87","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\DepositHomepageDetails.js":"88","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Signup\\SignUpUseForm.js":"89","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignUpValidator.js":"90","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ResetPassword\\useFormResetPassword.js":"91","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\ItemList\\index.js":"92","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step1\\index.js":"93","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step5\\index.js":"94","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\UserSidebar\\UserSidebarData.js":"95","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"96","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js":"97","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js":"98","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js":"99","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js":"100","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js":"101","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reportWebVitals.js":"102","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserSettings\\UserSettings.js":"103","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ForgetPassword\\index.js":"104","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignInUseForm.js":"105","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\OrderItemList\\index.js":"106","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step3\\index.js":"107","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step8\\index.js":"108","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"109","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js":"110","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js":"111","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\index.js":"112","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Cart\\index.js":"113","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Settings\\Settings.js":"114","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ResetPassword\\ResetPasswordValidator.js":"115","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js":"116","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\AddUser\\useFormAddUser.js":"117","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\OrderPayment.js":"118","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\user.actions.js":"119","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Catalogue\\index.js":"120","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ResetPassword\\index.js":"121","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\SideBar\\index.js":"122","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\DropDown\\index.js":"123","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step13\\index.js":"124","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"125","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Header\\index.js":"126","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js":"127","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DashboardCatalogue\\index.js":"128","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"129","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"130","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step2\\index.js":"131","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js":"132","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\MicroorganismMenu\\MicroorganismMenu.js":"133","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"134","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\PageHeader\\index.js":"135"},{"size":1317,"mtime":1619371161275,"results":"136","hashOfConfig":"137"},{"size":1244,"mtime":1619548944405,"results":"138","hashOfConfig":"137"},{"size":3278,"mtime":1619548944405,"results":"139","hashOfConfig":"137"},{"size":1326,"mtime":1619548944413,"results":"140","hashOfConfig":"137"},{"size":3552,"mtime":1619548944421,"results":"141","hashOfConfig":"137"},{"size":1982,"mtime":1619548943399,"results":"142","hashOfConfig":"137"},{"size":5198,"mtime":1619548943415,"results":"143","hashOfConfig":"137"},{"size":1261,"mtime":1619548944389,"results":"144","hashOfConfig":"137"},{"size":3530,"mtime":1619548944117,"results":"145","hashOfConfig":"137"},{"size":4484,"mtime":1619371161225,"results":"146","hashOfConfig":"137"},{"size":432,"mtime":1619548944061,"results":"147","hashOfConfig":"137"},{"size":173,"mtime":1619548943741,"results":"148","hashOfConfig":"137"},{"size":4783,"mtime":1619548944061,"results":"149","hashOfConfig":"137"},{"size":2847,"mtime":1619548944109,"results":"150","hashOfConfig":"137"},{"size":2480,"mtime":1619548944149,"results":"151","hashOfConfig":"137"},{"size":18915,"mtime":1619548944221,"results":"152","hashOfConfig":"137"},{"size":7767,"mtime":1619548944293,"results":"153","hashOfConfig":"137"},{"size":26921,"mtime":1619548944029,"results":"154","hashOfConfig":"137"},{"size":12967,"mtime":1619548943989,"results":"155","hashOfConfig":"137"},{"size":2350,"mtime":1619548943821,"results":"156","hashOfConfig":"137"},{"size":1538,"mtime":1619548944293,"results":"157","hashOfConfig":"137"},{"size":1711,"mtime":1619548943893,"results":"158","hashOfConfig":"137"},{"size":754,"mtime":1619548944261,"results":"159","hashOfConfig":"137"},{"size":415,"mtime":1619548943965,"results":"160","hashOfConfig":"137"},{"size":6069,"mtime":1619548943965,"results":"161","hashOfConfig":"137"},{"size":1034,"mtime":1619548943941,"results":"162","hashOfConfig":"137"},{"size":2260,"mtime":1619548943629,"results":"163","hashOfConfig":"137"},{"size":4270,"mtime":1619548943645,"results":"164","hashOfConfig":"137"},{"size":3117,"mtime":1619548943725,"results":"165","hashOfConfig":"137"},{"size":2624,"mtime":1619548943629,"results":"166","hashOfConfig":"137"},{"size":6371,"mtime":1619548943733,"results":"167","hashOfConfig":"137"},{"size":3419,"mtime":1619548943757,"results":"168","hashOfConfig":"137"},{"size":786,"mtime":1619548943869,"results":"169","hashOfConfig":"137"},{"size":1745,"mtime":1619548944005,"results":"170","hashOfConfig":"137"},{"size":341,"mtime":1619548943733,"results":"171","hashOfConfig":"137"},{"size":1429,"mtime":1619548943551,"results":"172","hashOfConfig":"137"},{"size":343,"mtime":1619371161006,"results":"173","hashOfConfig":"137"},{"size":345,"mtime":1619548943621,"results":"174","hashOfConfig":"137"},{"size":339,"mtime":1619548943717,"results":"175","hashOfConfig":"137"},{"size":354,"mtime":1619548943709,"results":"176","hashOfConfig":"137"},{"size":794,"mtime":1619548943949,"results":"177","hashOfConfig":"137"},{"size":653,"mtime":1619548943869,"results":"178","hashOfConfig":"137"},{"size":327,"mtime":1619371160982,"results":"179","hashOfConfig":"137"},{"size":799,"mtime":1619548943503,"results":"180","hashOfConfig":"137"},{"size":823,"mtime":1619548943637,"results":"181","hashOfConfig":"137"},{"size":1426,"mtime":1619548943957,"results":"182","hashOfConfig":"137"},{"size":868,"mtime":1619548943407,"results":"183","hashOfConfig":"137"},{"size":280,"mtime":1619548944109,"results":"184","hashOfConfig":"137"},{"size":297,"mtime":1619548944309,"results":"185","hashOfConfig":"137"},{"size":4864,"mtime":1619548944365,"results":"186","hashOfConfig":"137"},{"size":4909,"mtime":1619371161144,"results":"187","hashOfConfig":"137"},{"size":269,"mtime":1619548944093,"results":"188","hashOfConfig":"137"},{"size":2474,"mtime":1619371161174,"results":"189","hashOfConfig":"137"},{"size":201,"mtime":1619548944245,"results":"190","hashOfConfig":"137"},{"size":5499,"mtime":1619371161225,"results":"191","hashOfConfig":"137"},{"size":4425,"mtime":1619548944013,"results":"192","hashOfConfig":"137"},{"size":279,"mtime":1619548944029,"results":"193","hashOfConfig":"137"},{"size":1542,"mtime":1619548944261,"results":"194","hashOfConfig":"137"},{"size":1432,"mtime":1619645168397,"results":"195","hashOfConfig":"137"},{"size":12340,"mtime":1619548943581,"results":"196","hashOfConfig":"137"},{"size":8574,"mtime":1619548943693,"results":"197","hashOfConfig":"137"},{"size":581,"mtime":1619548943821,"results":"198","hashOfConfig":"137"},{"size":819,"mtime":1619548943725,"results":"199","hashOfConfig":"137"},{"size":819,"mtime":1619548943733,"results":"200","hashOfConfig":"137"},{"size":803,"mtime":1619548943693,"results":"201","hashOfConfig":"137"},{"size":794,"mtime":1619548943669,"results":"202","hashOfConfig":"137"},{"size":1929,"mtime":1619548943455,"results":"203","hashOfConfig":"137"},{"size":693,"mtime":1619548980382,"results":"204","hashOfConfig":"137"},{"size":1645,"mtime":1619548980404,"results":"205","hashOfConfig":"137"},{"size":892,"mtime":1619548944397,"results":"206","hashOfConfig":"137"},{"size":557,"mtime":1619548944005,"results":"207","hashOfConfig":"137"},{"size":1396,"mtime":1619548944413,"results":"208","hashOfConfig":"137"},{"size":1149,"mtime":1619548944413,"results":"209","hashOfConfig":"137"},{"size":2867,"mtime":1619548944405,"results":"210","hashOfConfig":"137"},{"size":386,"mtime":1619548944413,"results":"211","hashOfConfig":"137"},{"size":1074,"mtime":1619548944413,"results":"212","hashOfConfig":"137"},{"size":1014,"mtime":1619548944413,"results":"213","hashOfConfig":"137"},{"size":3090,"mtime":1619548943423,"results":"214","hashOfConfig":"137"},{"size":202,"mtime":1619548943423,"results":"215","hashOfConfig":"137"},{"size":3796,"mtime":1619548943423,"results":"216","hashOfConfig":"137"},{"size":6698,"mtime":1619636713973,"results":"217","hashOfConfig":"137"},{"size":397,"mtime":1619548944429,"results":"218","hashOfConfig":"137"},{"size":1189,"mtime":1619548944389,"results":"219","hashOfConfig":"137"},{"size":342,"mtime":1619548944365,"results":"220","hashOfConfig":"137"},{"size":19120,"mtime":1619548943989,"results":"221","hashOfConfig":"137"},{"size":26136,"mtime":1619548944269,"results":"222","hashOfConfig":"137"},{"size":2050,"mtime":1619548944053,"results":"223","hashOfConfig":"137"},{"size":2512,"mtime":1619548943757,"results":"224","hashOfConfig":"137"},{"size":1370,"mtime":1619548944285,"results":"225","hashOfConfig":"137"},{"size":1698,"mtime":1619548944261,"results":"226","hashOfConfig":"137"},{"size":1217,"mtime":1619548944253,"results":"227","hashOfConfig":"137"},{"size":4151,"mtime":1619548943813,"results":"228","hashOfConfig":"137"},{"size":6557,"mtime":1619548943455,"results":"229","hashOfConfig":"137"},{"size":4024,"mtime":1619548943717,"results":"230","hashOfConfig":"137"},{"size":1303,"mtime":1619548943965,"results":"231","hashOfConfig":"137"},{"size":799,"mtime":1619548943581,"results":"232","hashOfConfig":"137"},{"size":799,"mtime":1619371161006,"results":"233","hashOfConfig":"137"},{"size":819,"mtime":1619548943677,"results":"234","hashOfConfig":"137"},{"size":831,"mtime":1619548943653,"results":"235","hashOfConfig":"137"},{"size":369,"mtime":1619548943645,"results":"236","hashOfConfig":"137"},{"size":365,"mtime":1619548943629,"results":"237","hashOfConfig":"137"},{"size":375,"mtime":1619548944429,"results":"238","hashOfConfig":"137"},{"size":1069,"mtime":1619548944373,"results":"239","hashOfConfig":"137"},{"size":2727,"mtime":1619548944173,"results":"240","hashOfConfig":"137"},{"size":1075,"mtime":1619371161215,"results":"241","hashOfConfig":"137"},{"size":3495,"mtime":1619371161094,"results":"242","hashOfConfig":"137"},{"size":5538,"mtime":1619548943677,"results":"243","hashOfConfig":"137"},{"size":5818,"mtime":1619548943733,"results":"244","hashOfConfig":"137"},{"size":343,"mtime":1619548943725,"results":"245","hashOfConfig":"137"},{"size":230,"mtime":1619548943637,"results":"246","hashOfConfig":"137"},{"size":823,"mtime":1619548943629,"results":"247","hashOfConfig":"137"},{"size":42,"mtime":1619548943973,"results":"248","hashOfConfig":"137"},{"size":3260,"mtime":1619548944069,"results":"249","hashOfConfig":"137"},{"size":1030,"mtime":1619548944045,"results":"250","hashOfConfig":"137"},{"size":712,"mtime":1619548944253,"results":"251","hashOfConfig":"137"},{"size":799,"mtime":1619548943669,"results":"252","hashOfConfig":"137"},{"size":4726,"mtime":1619548944005,"results":"253","hashOfConfig":"137"},{"size":5329,"mtime":1619548943901,"results":"254","hashOfConfig":"137"},{"size":4426,"mtime":1619548943423,"results":"255","hashOfConfig":"137"},{"size":11961,"mtime":1619548944085,"results":"256","hashOfConfig":"137"},{"size":6424,"mtime":1619548944253,"results":"257","hashOfConfig":"137"},{"size":6053,"mtime":1619548943949,"results":"258","hashOfConfig":"137"},{"size":1202,"mtime":1619548943765,"results":"259","hashOfConfig":"137"},{"size":3580,"mtime":1619548943637,"results":"260","hashOfConfig":"137"},{"size":803,"mtime":1619548943741,"results":"261","hashOfConfig":"137"},{"size":2761,"mtime":1619548943805,"results":"262","hashOfConfig":"137"},{"size":649,"mtime":1619548943693,"results":"263","hashOfConfig":"137"},{"size":5534,"mtime":1619548944093,"results":"264","hashOfConfig":"137"},{"size":1674,"mtime":1619548943439,"results":"265","hashOfConfig":"137"},{"size":1584,"mtime":1619548943725,"results":"266","hashOfConfig":"137"},{"size":1183,"mtime":1619548943669,"results":"267","hashOfConfig":"137"},{"size":803,"mtime":1619548943717,"results":"268","hashOfConfig":"137"},{"size":12201,"mtime":1619647530185,"results":"269","hashOfConfig":"137"},{"size":831,"mtime":1619548943637,"results":"270","hashOfConfig":"137"},{"size":6108,"mtime":1619548943941,"results":"271","hashOfConfig":"137"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"jv3uq6",{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"278"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"278"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"278"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"303"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"303"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"303"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"278"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"303"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"303"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"278"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"303"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"274"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"377"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"335"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"303"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"335"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"335"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"303"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"278"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"278"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"278"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"278"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"278"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"278"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"278"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"303"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"335"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"303"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"303"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"335"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"303"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"377"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"303"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"294"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"303"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"278"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"294"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"278"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"303"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"303"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"278"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"303"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"303"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\store\\index.js",[],["595","596"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\auth.reducers.js",["597","598","599"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  token         : null,\r\n  user          : {\r\n    id       : '',\r\n    firstname: '',\r\n    lastname : '',\r\n    email    : '',\r\n  },\r\n  authenticate  : false,\r\n  authenticating: false,\r\n  error         : {\r\n    found      : false,\r\n    status_code: 0,\r\n    message    : 0,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user          : action.payload.user,\r\n        token         : action.payload.token,\r\n        authenticate  : true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    case authConstants.LOGOUT:\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      // alert(\"everything reset\");\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n",["600","601"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\catalogue.reducers.js",["602","603","604"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  catalogueData   : [],\r\n  fetching        : false,\r\n  fetched         : false,\r\n  addMicroorganism: {\r\n    adding: false,\r\n    added : false,\r\n    data  : {},\r\n    error : {\r\n      code   : 0,\r\n      message: '',\r\n    },\r\n  },\r\n  delete          : {\r\n    deleting: false,\r\n    deleted : false,\r\n    data    : {},\r\n    error   : {\r\n      code   : 0,\r\n      message: '',\r\n    },\r\n  },\r\n  error           : {\r\n    code   : 0,\r\n    message: '',\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_INFO_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n        fetched : false,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        catalogueData: action.payload.data,\r\n        fetching     : false,\r\n        fetched      : true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched : false,\r\n        error   : {\r\n          code   : action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case authConstants.ADD_MICROORGANISM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          adding: true,\r\n          added : false,\r\n          data  : action.payload.data,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added : true,\r\n          adding: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added : false,\r\n          adding: false,\r\n          error : {\r\n            code   : action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.RESET_ADD_MICROORGANISM_STATE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...initialState.addMicroorganism,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          data    : action.payload.data,\r\n          deleting: true,\r\n          deleted : false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleting: false,\r\n          deleted : true,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleted : false,\r\n          deleting: false,\r\n          error   : {\r\n            code   : action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\signup.reducers.js",["605"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  // userData: {\r\n  //   firstname: \"\",\r\n  //   lastname: \"\",\r\n  //   email: \"\",\r\n  //   role: \"\",\r\n  //   type: \"Student\",\r\n  //   affiliation: \"\",\r\n  //   password: \"\",\r\n  // },\r\n  // data: {},\r\n  registering: false,\r\n  registered : false,\r\n  error      : {\r\n    found  : false,\r\n    code   : 0,\r\n    message: '',\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.SIGNUP_REQUEST:\r\n      state = {\r\n        ...state,\r\n        // userData: action.payload.data,\r\n        registering: true,\r\n        registered : false,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered : true,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_FAILURE:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered : false,\r\n        error      : {\r\n          found  : true,\r\n          code   : action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n\r\n    case authConstants.SIGNUP_STORE_RESET:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\user.reducer.js",["606","607"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  users      : {\r\n    userList: [],\r\n    fetching: false,\r\n    fetched : false,\r\n    error   : {\r\n      found      : false,\r\n      status_code: 0,\r\n      message    : '',\r\n    },\r\n  },\r\n  add_user   : {\r\n    data  : {},\r\n    adding: false,\r\n    added : false,\r\n    error : {\r\n      found      : false,\r\n      status_code: 0,\r\n      message    : '',\r\n    },\r\n  },\r\n  delete_user: {},\r\n  user_data  : {},\r\n  // users: [],\r\n  // user: {\r\n  //   data: {},\r\n\r\n  //   deleting: false,\r\n  //   deleted: false,\r\n  // },\r\n  // add_user: {\r\n  //   data: {},\r\n  //   error: false,\r\n  //   message: \"\",\r\n  //   adding: false,\r\n  //   added: false,\r\n  // },\r\n  // fetching: false,\r\n  // fetched: false,\r\n  // error: {\r\n  //   found:false,\r\n  //   status_code: 0,\r\n  //   message: \"\",\r\n  // },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.USERS_FETCH_REQUEST:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetched : true,\r\n          fetching: false,\r\n          userList: action.payload.users,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_FAILURE:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: false,\r\n          error   : {\r\n            found      : true,\r\n            status_code: action.payload.status_code,\r\n            message    : action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetched : true,\r\n        fetching: false,\r\n        user    : action.payload.user,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: false,\r\n          deleted : true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...initialState.add_user,\r\n          data  : action.payload.data,\r\n          adding: true,\r\n          added : false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added : true,\r\n          error : {\r\n            ...state.add_user.error,\r\n            found: false,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          added : false,\r\n          adding: false,\r\n          error : {\r\n            ...state.add_user.error,\r\n            found      : true,\r\n            message    : action.payload.message,\r\n            status_code: action.payload.status,\r\n          },\r\n        },\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\auth.actions.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\catalogue.actions.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\helpers\\axios.js",[],["608","609"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DepositRequestForm.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserDepositsDashboard.js",["610","611","612","613"],"import { CircularProgress } from '@material-ui/core';\r\nimport DepositItemList      from 'components/DepositItemList';\r\nimport DropDown             from 'components/DropDown';\r\nimport UserSideBar          from 'components/UserSidebar/UserSidebar';\r\nimport React, { useState }  from 'react';\r\n\r\nconst UserDepositsDashboard = () => {\r\n  const [data, setData] = useState([\r\n                                     {\r\n                                       deposit_id: '120191',\r\n                                       created   : 'Aug 1,2019',\r\n                                       customer  : 'Harriet Santigo',\r\n                                       total     : '$604.50',\r\n                                       status    : 'Request',\r\n                                     },\r\n                                     {\r\n                                       deposit_id: '121090',\r\n                                       created   : 'Jul 21,2019',\r\n                                       customer  : 'Sara Graham',\r\n                                       total     : '$524.25',\r\n                                       status    : 'Processing',\r\n                                     },\r\n                                   ]);\r\n  const [query, setQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n              filter === '' || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n    data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{'abc'}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Deposit ID',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Created',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      width: '30%',\r\n    },\r\n    {\r\n      title: 'Total',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '10%',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <UserSideBar active=\"User Deposits\">\r\n      <div className=\"div__one\"></div>\r\n      <div className=\"div__two\">\r\n        <h3>Deposits</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Deposit ID',\r\n                value: 'deposit_id',\r\n              },\r\n              {\r\n                title: 'Customer Name',\r\n                value: 'customer_name',\r\n              },\r\n              {\r\n                title: 'Total',\r\n                value: 'total',\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Request',\r\n                value: 'request',\r\n              },\r\n              {\r\n                title: 'Processing',\r\n                value: 'processing',\r\n              },\r\n              {\r\n                title: 'Sent',\r\n                value: 'sent',\r\n              },\r\n              {\r\n                title: 'Approved',\r\n                value: 'approved',\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n\r\n    </UserSideBar>\r\n  );\r\n};\r\n\r\nexport default UserDepositsDashboard;\r\n",["614","615"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\index.js",[],["616","617"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddUserForm\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboardOrders\\index.js",["618","619","620","621"],"import { CircularProgress } from '@material-ui/core';\r\nimport React, { useState }  from 'react';\r\nimport DropDown             from '../../components/DropDown';\r\nimport OrderItemList        from '../../components/OrderItemList';\r\nimport SideBar              from '../../components/SideBar';\r\nimport './style.css';\r\n\r\nconst AdminDashboardOrders = () => {\r\n  const [data, setData] = useState([\r\n                                     {\r\n                                       order_id: '120191',\r\n                                       created : 'Aug 1,2019',\r\n                                       customer: 'Harriet Santigo',\r\n                                       total   : '$604.50',\r\n                                       status  : 'Request',\r\n                                     },\r\n                                     {\r\n                                       order_id: '121090',\r\n                                       created : 'Jul 21,2019',\r\n                                       customer: 'Sara Graham',\r\n                                       total   : '$524.25',\r\n                                       status  : 'Processing',\r\n                                     },\r\n                                   ]);\r\n  const [query, setQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n              filter === '' || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n    data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{'abc'}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Order ID',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Created',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      width: '30%',\r\n    },\r\n    {\r\n      title: 'Total',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '10%',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\">\r\n        {/* <SearchBar query={query} setQuery={setQuery} /> */}\r\n        {/* <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'OrderID',\r\n                value: 'order_id',\r\n              },\r\n              {\r\n                title: 'Customer Name',\r\n                value: 'customer_name',\r\n              },\r\n              {\r\n                title: 'Total',\r\n                value: 'total',\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Request',\r\n                value: 'request',\r\n              },\r\n              {\r\n                title: 'Processing',\r\n                value: 'processing',\r\n              },\r\n              {\r\n                title: 'Sent',\r\n                value: 'sent',\r\n              },\r\n              {\r\n                title: 'Approved',\r\n                value: 'approved',\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardOrders;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DashboardCatalogueDetail\\index.js",["622","623","624"],"import React, { useEffect, useState }              from 'react';\r\nimport { Accordion, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { useSelector }                             from 'react-redux';\r\nimport Layout                                      from '../../components/Layout';\r\nimport axios                                       from '../../helpers/axios';\r\n\r\nconst DashboardCatalogueDetail = (props) => {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = props.location.state;\r\n  const [data, setData] = useState({});\r\n\r\n  const [option, setOption] = useState(false);\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === 'save') {\r\n      // dispatch(updateUserInfo(userData, token));\r\n      // setSavingData(!savingData);\r\n    }\r\n    setOption(!option);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.post(\r\n      '/findmicroorganism',\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    setData(res.data);\r\n  }, []);\r\n  return (\r\n    <Layout sidebar>\r\n      <Button\r\n        onClick={(e) =>\r\n          handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n        }\r\n      >\r\n        {option ? 'Save' : 'Edit'}\r\n      </Button>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {Object.keys(data).map((heading, key) => {\r\n          return (\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey={`${key}`}>\r\n                {heading}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${key}`}>\r\n                <Card.Body>\r\n                  {Object.keys(data[heading]).map((label, i) => {\r\n                    return (\r\n                      <Row className=\"p-2\" key={i}>\r\n                        <Col>{label}</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ backgroundColor: 'green' }}\r\n                            value={data[heading][label]}\r\n                            onChange={(e) => {\r\n                              setData({\r\n                                        ...data,\r\n                                        [heading]: {\r\n                                          ...data[heading],\r\n                                          [label]: e.target.value,\r\n                                        },\r\n                                      });\r\n                            }}\r\n                            disabled={!option}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogueDetail;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\EmailVerified\\index.js",["625","626"],"import Backdrop                       from '@material-ui/core/Backdrop';\r\nimport Fade                           from '@material-ui/core/Fade';\r\nimport Modal                          from '@material-ui/core/Modal';\r\nimport CheckCircleIcon                from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon                      from '@material-ui/icons/Error';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link }                       from 'react-router-dom';\r\nimport axios                          from '../../helpers/axios';\r\nimport './style.css';\r\n\r\nconst EmailVerified = (props) => {\r\n  const token = window.location.href.split('/')[\r\n  window.location.href.split('/').length - 1\r\n    ];\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [message, setMessage] = useState('initial message');\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .post('/verifyEmail', { token })\r\n      .then((response) => {\r\n        setEmailVerified(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setEmailVerified(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    setModalOpen(true);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className=\"signup-response-modal\"\r\n      open={modalOpen}\r\n      onClose={(e) => {\r\n        setModalOpen(false);\r\n        // props.history.push(\"/signin\");\r\n      }}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <div className=\"email-verify-modal-content-div\">\r\n          {emailVerified ? (\r\n            <CheckCircleIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: '5.5rem' }}\r\n            />\r\n          ) : (\r\n            <ErrorIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: '5.5rem' }}\r\n            />\r\n          )}\r\n          <h2 id=\"transition-modal-title\">\r\n            {emailVerified ? 'Success' : 'Error'}\r\n          </h2>\r\n          <p id=\"transition-modal-description\">{message}</p>\r\n          <Link to=\"/signin\">\r\n            Go to {emailVerified ? 'Sign In' : 'Sign Up'}\r\n          </Link>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailVerified;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\HomePage\\index.js",["627","628","629","630","631","632"],"import { EmailOutlined }                                  from '@material-ui/icons';\r\n// import \"../HomePage/index.css\";\r\n//import SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport LocationOnIcon                                     from '@material-ui/icons/LocationOn';\r\nimport LocationOnOutlinedIcon                             from '@material-ui/icons/LocationOnOutlined';\r\nimport MenuRoundedIcon                                    from '@material-ui/icons/MenuRounded';\r\nimport PhoneIcon                                          from '@material-ui/icons/Phone';\r\nimport PublicIcon                                         from '@material-ui/icons/Public';\r\nimport PublishIcon                                        from '@material-ui/icons/Publish';\r\nimport StarIcon                                           from '@material-ui/icons/Star';\r\nimport StarsIcon                                          from '@material-ui/icons/Stars';\r\nimport React                                              from 'react';\r\nimport 'react-awesome-slider/dist/styles.css';\r\nimport { Carousel, Container, Dropdown, DropdownButton, } from 'react-bootstrap';\r\nimport ReactMapGL, { Marker }                             from 'react-map-gl';\r\nimport { useDispatch }                                    from 'react-redux';\r\nimport { Link }                                           from 'react-router-dom';\r\nimport PageHeader                                         from '../../components/PageHeader';\r\nimport Bacteria2                                          from './Images/bacteria-2.jpg';\r\nimport Bacteria                                           from './Images/bacteria.jpg';\r\n\r\nimport './style.css';\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [viewport, setViewport] = React.useState({\r\n                                                   latitude : 33.678403942756674,\r\n                                                   longitude: 73.13901040682869,\r\n                                                   zoom     : 15,\r\n                                                 });\r\n\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Item>Item 1</Dropdown.Item>\r\n          <Dropdown.Item>Item 2</Dropdown.Item>\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // const products = [\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  // ];\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n      <div id=\"hero-div\" className=\"hero-div\">\r\n        <Container>\r\n          {/* {searchBarShow ? (\r\n            <div className=\"search-box\">\r\n              <input placeholder=\"Enter Keyword\" />\r\n            </div>\r\n          ) : null} */}\r\n        </Container>\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000} className=\"carousel-item\">\r\n            <img\r\n              src={Bacteria2}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h1>Welcome</h1>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img\r\n              src={Bacteria}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h1>Welcome to</h1>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n\r\n      <div id=\"about-us\" className=\"about-us-div\">\r\n        <Container className=\"about-us-content\">\r\n          <div className=\"about-us-image\">\r\n            <img src={Bacteria2} alt=\"about-us-image\" />\r\n          </div>\r\n          <div className=\"about-us-details\">\r\n            <div className=\"about-us-title\">\r\n              <h5>ABOUT US</h5>\r\n              <h2>\r\n                We are the leading institute for microorganism reasearch in\r\n                Pakistan\r\n              </h2>\r\n            </div>\r\n            <div className=\"about-us-description\">\r\n              NCCP plays an important role in offering services not only to\r\n              preserve microorganisms using techniques that maintain viability,\r\n              purity, and important characteristics of microorganisms, but also\r\n              to supply high quality microorganisms for use in teaching,\r\n              research and industrial applications.\r\n            </div>\r\n            {/* <div className=\"about-us-featured-list\">\r\n              <Timeline>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Eat</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Code</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Sleep</TimelineContent>\r\n                </TimelineItem>\r\n              </Timeline>\r\n            </div> */}\r\n            <div className=\"about-us-featured-list\">\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">01</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Plant growth promoting microbess</h5>\r\n                  <p>\r\n                    Isolation, identification and molecular characterization of\r\n                    plant growth promoting microbes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">02</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Heavy metal tolerant bacteria</h5>\r\n                  <p>\r\n                    solation, identification and characterization of heavy metal\r\n                    tolerant bacteria for bioremediation of contaminated soil.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">03</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Halotolerant rhizobacteria </h5>\r\n                  <p>\r\n                    Identification and characterization of halotolerant\r\n                    rhizobacteria containing ACC-deaminase, for growth promotion\r\n                    of Phaseolus vulgaris L. under salt stress\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"achievements\" className=\"achievements-div\">\r\n        <Container className=\"achievement-content\">\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublishIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3 onClick={(e) => alert('odsfjo')}> 40+</h3>\r\n              <h4>Publications</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Accomplishment</h3>\r\n              <h4>Women in agriculture forum</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarsIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Achievement</h3>\r\n              <h4>Association of Farmers association</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublicIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>81+</h3>\r\n              <h4>International linkages</h4>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"services\" className=\"services\">\r\n        <h5>OUR SERVICES</h5>\r\n        <h2>Explore Our Main Services</h2>\r\n        <div className=\"services-tag\">\r\n          <Container className=\"services-content\">\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: '40px', fill: 'white' }} />\r\n                <h5>Order</h5>\r\n                <p>Order some things from us</p>\r\n              </div>\r\n            </Link>\r\n\r\n            <Link to=\"/depositHomePage\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: '40px', fill: 'white' }} />\r\n\r\n                <h5>Deposit</h5>\r\n                <p>Deposit some things from us</p>\r\n              </div>\r\n\r\n            </Link>\r\n            <Link to=\"/catalogue\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: '40px', fill: 'white' }} />\r\n                <h5>Resources</h5>\r\n                <p>Seek some things from us</p>\r\n              </div>\r\n            </Link>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"location\" className=\"location\">\r\n        <div className=\"location-heading\">\r\n          <h5>Where are we</h5>\r\n          <h2>Our Current Location</h2>\r\n        </div>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          width=\"100%\"\r\n          height=\"450px\"\r\n          mapboxApiAccessToken={`pk.eyJ1IjoiemFpbm5vb3IwMzUwMjAiLCJhIjoiY2tsZ2ZubG80MndtdDJvbnAwYnVya2tjZiJ9.r49QIKppAmNWiDhexQhQTw`}\r\n          mapStyle=\"mapbox://styles/zainnoor035020/cklgg7lq54jp617meh87g9vqi\"\r\n        >\r\n          <Marker longitude={viewport.longitude} latitude={viewport.latitude}>\r\n            <LocationOnIcon fontSize=\"large\" color=\"blue\" />\r\n          </Marker>\r\n          <div className=\"map-detials\">\r\n            <Container className=\"map-content\">\r\n              <h3>\r\n                Park Rd, National Agricultural Research Center, Islamabad,\r\n                Islamabad Capital Territory, Pakistan\r\n              </h3>\r\n            </Container>\r\n          </div>\r\n        </ReactMapGL>\r\n        {/* <Container className=\"location-content\">\r\n          <div className=\"location-map\">\r\n           \r\n          </div>\r\n          {/* <div className=\"location-details\">Details</div> */}\r\n        {/* </Container> */}\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <Container className=\"footer-content\">\r\n          <div className=\"first-footer\">\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <LocationOnOutlinedIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Address</h5>\r\n                <p>National Agricultural Research Center, Islamabad</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <PhoneIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Contact Number</h5>\r\n                <p>+92335 6291805</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <EmailOutlined />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Email</h5>\r\n                <p>zainnoor6035020@gmail.com</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"second-footer\">\r\n            <div className=\"second-footer-detail-box\">\r\n              <div>Logo</div>\r\n              <p>\r\n                NCCP plays an important role in offering services not only to\r\n                preserve microorganisms using techniques that maintain\r\n                viability, purity, and important characteristics of\r\n                microorganisms, but also to supply high quality microorganisms\r\n                for use in teaching, research and industrial applications.\r\n              </p>\r\n              <a>Read More!</a>\r\n            </div>\r\n            <div className=\"second-footer-useful-links-box\">\r\n              <h3>Useful Links</h3>\r\n              <div className=\"useful-links-div\">\r\n                <a href=\"#hero-div\">Home</a>\r\n                <a href=\"#about-us\">About Us</a>\r\n                <a href=\"#achievements\">Achievement</a>\r\n                <a href=\"#services\">Services</a>\r\n                <a href=\"#location\">Current Location</a>\r\n                <a>Cart</a>\r\n                {/* <a>- Home</a> */}\r\n                {/* <a>- Home</a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"third-footer\">\r\n            <div>Copyright</div>\r\n            <div>social links</div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n        <div className=\"sidebar-upper-div\">\r\n          <div className=\"sidebar-upper-div-options\">\r\n            <HomeIcon fontSize=\"large\" />\r\n            <span>Sign In</span>\r\n          </div>\r\n          <CloseIcon onClick={(e) => setSideBarShow(false)} />\r\n        </div>\r\n        <div className=\"sidebar-links\">\r\n          <ul className=\"sidebar-links-list\">\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Order</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebar-footer\">\r\n          <ul className=\"sidebar-footer-list\">\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"header-logo\">\r\n          <h1>NCCP</h1>\r\n        </div>\r\n        <div className=\"header-content\">\r\n          <div className=\"menu-content\">\r\n            <Link>Sign In</Link>\r\n          </div>\r\n          <div className=\"hamburger-menu-box\">\r\n            <MenuRoundedIcon\r\n              className=\"hamburger-menu\"\r\n              fontSize=\"large\"\r\n              onClick={(e) => setSideBarShow(!sideBarshow)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-bar\">\r\n        <Link>About NCCP</Link>\r\n        <Link>Deposit</Link>\r\n        <Link>Order</Link>\r\n        <Link>Contact Us</Link>\r\n      </div>\r\n\r\n      <div className=\"hero-div\">\r\n        <div>\r\n          <h1>Welcome to NCCP</h1>\r\n          <p>\r\n            We are the leading institute of microbial research and preservation\r\n            in Pakistan...\r\n          </p>\r\n        </div>\r\n        <Link>Learn More</Link>\r\n      </div>\r\n\r\n      <div className=\"product-category-div\">\r\n        <h1>Resources</h1>\r\n        <ObjectSlider />\r\n      </div>\r\n      <div className=\"about-us-div\">\r\n        <img src={AboutUsImage} />\r\n      </div> */}\r\n\r\n      {/* <div className=\"carousel-div\">\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>Welcome to NCCP</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>We are a leading institute in Microorganism reasearch</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div> */}\r\n\r\n      {/* <div className=\"navigation-bar\">\r\n        <Container className=\"navigation-bar-content\">\r\n          <Logo />\r\n          <div className=\"navigation-links\">\r\n            <SearchOutlinedIcon />\r\n            <MenuRoundedIcon />\r\n          </div>\r\n        </Container>\r\n      </div> */}\r\n\r\n      {/* <Layout>\r\n        <div id=\"homepage-upper-nav-bar\">\r\n          <NavDropdown\r\n            title=\"NCCP\"\r\n            id=\"collasible-nav-dropdown\"\r\n            show={show}\r\n            onMouseEnter={(e) => setShow(true)}\r\n            onMouseLeave={(e) => setShow(false)}\r\n          >\r\n            <NavLink>NCCP</NavLink>\r\n\r\n            <NavLink>Deposit</NavLink>\r\n            <NavLink>Orders</NavLink>\r\n            <NavLink>Catalogue</NavLink>\r\n            <NavDropdown\r\n              title=\"NCCP\"\r\n              id=\"collasible-nav-dropdown\"\r\n              show={show}\r\n              onMouseEnter={(e) => setShow(true)}\r\n              onMouseLeave={(e) => setShow(false)}\r\n              subme\r\n            >\r\n              <NavLink>NCCP</NavLink>\r\n\r\n              <NavLink>Deposit</NavLink>\r\n              <NavLink>Orders</NavLink>\r\n              <NavLink>Catalogue</NavLink>\r\n            </NavDropdown>\r\n          </NavDropdown>\r\n          <NavLink>NCCP</NavLink>\r\n\r\n          <NavLink>Deposit</NavLink>\r\n          <NavLink>Orders</NavLink>\r\n          <NavLink>Catalogue</NavLink>\r\n        </div>\r\n        <div>other content</div>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Signup\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Details\\Details.js",["633","634","635","636"],"import { Avatar, Button, TextField } from '@material-ui/core';\r\nimport TodayIcon                     from '@material-ui/icons/Today';\r\nimport SideBar                       from 'components/SideBar';\r\nimport Status                        from 'components/Status';\r\nimport React, { useState }           from 'react';\r\nimport ReactApexChart                from 'react-apexcharts';\r\nimport { Link }                      from 'react-router-dom';\r\nimport './Details.css';\r\n\r\nconst Details = () => {\r\n  const [rangeDates, setRangeDates] = useState({\r\n                                                 start: new Date().toISOString().substr(0, 10),\r\n                                                 end  : new Date().toISOString().substr(0, 10),\r\n                                               });\r\n\r\n  const [activeUsersChartData, setActiveUsersChartData] = useState({\r\n                                                                     series : [{\r\n                                                                       name: 'Visitors',\r\n                                                                       data: [23, 31, 40, 101, 40, 36, 32, 23, 14]\r\n                                                                     }],\r\n                                                                     options: {\r\n\r\n                                                                       chart      : {\r\n\r\n                                                                         type: 'bar',\r\n\r\n                                                                       },\r\n                                                                       plotOptions: {\r\n                                                                         bar: {\r\n                                                                           borderRadius: 10,\r\n                                                                           dataLabels  : {\r\n                                                                             position: 'top', // top, center, bottom\r\n                                                                           },\r\n                                                                         }\r\n                                                                       },\r\n                                                                       dataLabels : {\r\n                                                                         enabled  : true,\r\n                                                                         formatter: function (val) {\r\n                                                                           return val;\r\n                                                                         },\r\n                                                                         offsetY  : -20,\r\n                                                                         style    : {\r\n                                                                           fontSize: '12px',\r\n                                                                           colors  : ['#304758']\r\n                                                                         }\r\n                                                                       },\r\n\r\n                                                                       xaxis: {\r\n                                                                         categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',],\r\n                                                                         position  : 'top',\r\n                                                                         axisBorder: {\r\n                                                                           show: false\r\n                                                                         },\r\n                                                                         axisTicks : {\r\n                                                                           show: false\r\n                                                                         },\r\n                                                                         crosshairs: {\r\n                                                                           fill: {\r\n                                                                             type    : 'gradient',\r\n                                                                             gradient: {\r\n                                                                               colorFrom  : '#D8E3F0',\r\n                                                                               colorTo    : '#BED1E6',\r\n                                                                               stops      : [0, 100],\r\n                                                                               opacityFrom: 0.4,\r\n                                                                               opacityTo  : 0.5,\r\n                                                                             }\r\n                                                                           }\r\n                                                                         },\r\n                                                                         tooltip   : {\r\n                                                                           enabled: true,\r\n                                                                         }\r\n                                                                       },\r\n                                                                       yaxis: {\r\n                                                                         axisBorder: {\r\n                                                                           show: false\r\n                                                                         },\r\n                                                                         axisTicks : {\r\n                                                                           show: false,\r\n                                                                         },\r\n                                                                         labels    : {\r\n                                                                           show     : false,\r\n                                                                           formatter: function (val) {\r\n                                                                             return val;\r\n                                                                           }\r\n                                                                         }\r\n\r\n                                                                       },\r\n                                                                       // title: {\r\n                                                                       //   text: 'Monthly Inflation in Argentina, 2002',\r\n                                                                       //   floating: true,\r\n                                                                       //   offsetY: 330,\r\n                                                                       //   align: 'center',\r\n                                                                       //   style: {\r\n                                                                       //     color: '#444'\r\n                                                                       //   }\r\n                                                                       // }\r\n                                                                     },\r\n                                                                   });\r\n\r\n  const [salesChartData, setsalesChartData] = useState({\r\n                                                         series : [{\r\n                                                           name: 'series1',\r\n                                                           data: [31, 40, 28, 51, 42, 109, 100]\r\n                                                         }, {\r\n                                                           name: 'series2',\r\n                                                           data: [11, 32, 45, 32, 34, 52, 41]\r\n                                                         }],\r\n                                                         options: {\r\n                                                           chart     : {\r\n                                                             height: 350,\r\n                                                             type  : 'area'\r\n                                                           },\r\n                                                           dataLabels: {\r\n                                                             enabled: false\r\n                                                           },\r\n                                                           stroke    : {\r\n                                                             curve: 'smooth'\r\n                                                           },\r\n                                                           xaxis     : {\r\n                                                             type      : 'datetime',\r\n                                                             categories: ['2018-09-19T00:00:00.000Z', '2018-09-19T01:30:00.000Z', '2018-09-19T02:30:00.000Z', '2018-09-19T03:30:00.000Z', '2018-09-19T04:30:00.000Z', '2018-09-19T05:30:00.000Z', '2018-09-19T06:30:00.000Z']\r\n                                                           },\r\n                                                           tooltip   : {\r\n                                                             x: {\r\n                                                               format: 'dd/MM/yy HH:mm'\r\n                                                             },\r\n                                                           },\r\n                                                         },\r\n                                                       });\r\n\r\n  const [popularCategoriesChartData, setpopularCategoriesChartData] = useState({\r\n                                                                                 series: [44, 55, 41, 17],\r\n\r\n                                                                                 options   : {\r\n                                                                                   labels     : ['Apple', 'Mango', 'Orange', 'Watermelon'],\r\n                                                                                   chart      : {\r\n                                                                                     background: '#fff',\r\n                                                                                     animations: {\r\n                                                                                       speed: 1300,\r\n                                                                                     }\r\n                                                                                   },\r\n                                                                                   dataLabels : {\r\n                                                                                     enabled: false,\r\n                                                                                     // formatter: function (val) {\r\n                                                                                     //   return val + \"%\"\r\n                                                                                     // },\r\n                                                                                   },\r\n                                                                                   legend     : {\r\n                                                                                     position       : 'bottom',\r\n                                                                                     horizontalAlign: 'center',\r\n                                                                                     fontSize       : '14px',\r\n                                                                                     markers        : {\r\n                                                                                       width : 20,\r\n                                                                                       height: 20,\r\n                                                                                       radius: 5,\r\n                                                                                     }\r\n                                                                                   },\r\n                                                                                   plotOptions: {\r\n                                                                                     pie: {\r\n                                                                                       donut: {\r\n                                                                                         size  : '75%',\r\n                                                                                         labels: {\r\n                                                                                           show : true,\r\n                                                                                           total: {\r\n                                                                                             show      : true,\r\n                                                                                             showAlways: true,\r\n                                                                                             label     : 'Samples Sold',\r\n                                                                                             fontSize  : '14px',\r\n                                                                                             color     : 'grey',\r\n                                                                                             formatter : function (w) {\r\n                                                                                               return '129,345';\r\n                                                                                             },\r\n                                                                                           }\r\n                                                                                         }\r\n                                                                                       },\r\n\r\n                                                                                     }\r\n                                                                                   }\r\n                                                                                 },\r\n                                                                                 dataLabels: {\r\n                                                                                   enabled: false,\r\n                                                                                 }\r\n                                                                               });\r\n  return (\r\n    <SideBar active=\"Dashboard\">\r\n      <div className=\"admin-dashboard\">\r\n        <h3 className=\"component-heading\">Main Dashboard</h3>\r\n        <div className=\"dashboard-dates\">\r\n          <TextField\r\n            id=\"start-date\"\r\n            className=\"starting-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"From\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"end-date\"\r\n            className=\"ending-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"To\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"card-div\">\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>25</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>49</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>78</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"top-selling-div card\">\r\n          <h4 className=\"card-title\">Top Selling</h4>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"sales-report card\">Sales Report\r\n          <ReactApexChart options={salesChartData.options} series={salesChartData.series} type=\"area\" /></div>\r\n        <div className=\"active-users card\">\r\n          <h4 className=\"card-title\">Visitors</h4>\r\n          <ReactApexChart options={activeUsersChartData.options} height=\"100%\" series={activeUsersChartData.series}\r\n                          type=\"bar\" />\r\n        </div>\r\n        <div className=\"recent-reviews card\">\r\n          <h4 className=\"card-title\">Recent Reviews</h4>\r\n          <hr />\r\n          <div>\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <Button variant=\"contained\">\r\n              <Link\r\n                to=\"/dashboard/addUser\"\r\n                style={{ color: 'black', textDecoration: 'none' }}\r\n              >\r\n                See All\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"popular-categories card\">\r\n          <h4 className=\"card-title\">Popular Categories</h4>\r\n          <ReactApexChart className=\"popular-categories-chart\" height=\"90%\" options={popularCategoriesChartData.options}\r\n                          series={popularCategoriesChartData.series} type=\"donut\" /></div>\r\n        {/* <div className=\"deposit-periods card\">Deposits in Periods</div> */}\r\n        <div className=\"recent-orders card\">\r\n          <h4 className=\"card-title\">Recent Orders</h4>\r\n          <hr />\r\n          <div className=\"recent-order-headers\">\r\n            <span className=\"date-header\">Date</span>\r\n            <span className=\"customer-header\">Customer</span>\r\n            <span className=\"status-header\">Status</span>\r\n            <span className=\"total-header\">Total</span>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n                <Status status=\"Completed\" />\r\n                {/* Completed */}\r\n              </span>\r\n              <span className=\"total-data\">\r\n\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Pending\" />\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\" />\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\" />\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n          <Button variant=\"contained\" className=\"see-all-button\" style={{ marginRight: '4rem' }}>\r\n            <Link\r\n              to=\"/dashboard/addUser\"\r\n              style={{ color: 'black', textDecoration: 'none' }}\r\n            >\r\n              See All\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n        <div className=\"city-order-statistics card\">City Order Statistics</div>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\AddUser\\AddUser.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Layout\\index.js",["637","638"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Signup\\SignUpValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\OrderDetailsInformationList.js",["639"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignInValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\UI\\Input\\input.js",[],["640","641"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\UserSidebar\\UserSidebar.js",["642"],"import { Avatar }                     from '@material-ui/core';\r\nimport CloseRoundedIcon               from '@material-ui/icons/CloseRounded';\r\nimport ExitToAppIcon                  from '@material-ui/icons/ExitToApp';\r\nimport LayersIcon                     from '@material-ui/icons/Layers';\r\nimport MenuRoundedIcon                from '@material-ui/icons/MenuRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector }   from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\nimport { authConstants }              from '../../actions/constants';\r\n// import Image from \"./image.jpg\";\r\nimport './style.css';\r\nimport { UserSidebarData }            from './UserSidebarData';\r\n\r\nconst UserSideBar = (props) => {\r\n  const sidebarCollapse = useSelector((state) => state.sidebar.collapsed);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(sidebarCollapse);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const showNavbar = (toggleId, navId, bodyId, headerId, dashboardId) => {\r\n  //   dispatch({ type: authConstants.COLLAPSE_SIDEBAR });\r\n  //   // console.log(\"showing sidebar\");\r\n\r\n  //   const toggle = document.getElementById(toggleId),\r\n  //     nav = document.getElementById(navId),\r\n  //     bodypd = document.getElementById(bodyId),\r\n  //     headerpd = document.getElementById(headerId),\r\n  //     dashboardpd = document.getElementById(dashboardId);\r\n  //   if (toggle && nav && bodypd && headerpd) {\r\n  //     // nav.classList.toggle(\"show\");\r\n  //     // bodypd.classList.toggle(\"body-pd\");\r\n  //     headerpd.classList.toggle(\"body-pd\");\r\n  //     dashboardpd.classList.toggle(\"body-pd\");\r\n  //   }\r\n  // };\r\n\r\n  // if (sidebarCollapse === false) {\r\n  //   console.log(sidebarCollapse);\r\n  //   showNavbar(\r\n  //     \"header__toggle\",\r\n  //     \"nav-bar\",\r\n  //     \"body-pd\",\r\n  //     \"header\",\r\n  //     \"dashboard__content\"\r\n  //   );\r\n  // }\r\n\r\n  const changeActive = (e) => {\r\n    const link_color = document.querySelectorAll('.nav__link');\r\n    if (link_color) {\r\n      link_color.forEach((l) => l.classList.remove('active'));\r\n      e.currentTarget.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={sidebarCollapsed ? null : 'body-pd'} id=\"body-pd\">\r\n      <header\r\n        className={`header ${sidebarCollapsed ? null : 'body-pd'}`}\r\n        id=\"header\"\r\n      >\r\n        <div\r\n          className=\"header__toggle\"\r\n          id=\"header__toggle\"\r\n          onClick={(e) => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <MenuRoundedIcon /> : <CloseRoundedIcon />}\r\n        </div>\r\n\r\n        <div className=\"header__img\">\r\n          <Avatar src={user.profilePicture} />\r\n          {/* <img src={user.profilePicture} /> */}\r\n        </div>\r\n      </header>\r\n      <div\r\n        className={`l-navbar ${sidebarCollapsed ? null : 'show'}`}\r\n        id=\"nav-bar\"\r\n      >\r\n        <nav className=\"nav\">\r\n          <div>\r\n            <div id=\"brand\">\r\n              <div className=\"brand_logo\">\r\n                <LayersIcon />\r\n              </div>\r\n              <div className=\"brand_name\">NCCP</div>\r\n            </div>\r\n            <div>\r\n              {UserSidebarData.map((link, key) => {\r\n                return (\r\n                  <Link\r\n                    to={link.link}\r\n                    className={`nav__link ${\r\n                      props.active.toLowerCase() === link.title.toLowerCase()\r\n                        ? 'active'\r\n                        : null\r\n                    }`}\r\n                    key={key}\r\n                  >\r\n                    {link.icon}\r\n                    <div className=\"nav_link_title\">{link.title}</div>\r\n                  </Link>\r\n                );\r\n              })}\r\n              {/* <Link\r\n                to=\"/AdminDashboard\"\r\n                className=\"nav__link active\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <DashboardIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Dashboard</div>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/dashboard/users\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <PeopleRoundedIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Users</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/orders\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <ListAltIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Orders</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/deposits\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AccountBalanceIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Deposits</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/reports\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AssessmentIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Reports</div>\r\n              </Link> */}\r\n            </div>\r\n          </div>\r\n          <Link\r\n            onClick={(e) => dispatch({ type: authConstants.LOGOUT })}\r\n            className=\"nav__link\"\r\n            to=\"\"\r\n          >\r\n            <ExitToAppIcon className=\"nav_link_logo\" />\r\n            <div className=\"nav_link_title\">Logout</div>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className={`dashboard__content ${sidebarCollapsed ? null : 'body-pd'}`}\r\n        id=\"dashboard__content\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSideBar;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\SearchBar\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step12\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step11\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step9\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\DepositItemList\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Modals\\DeleteUserModal\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\AddUser\\addUserValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],["643","644"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Status\\index.js",["645"],"import React from 'react';\r\nimport './style.css';\r\n\r\nconst Status = (props) => {\r\n  const completed = 'rgb(5, 168, 5)';\r\n  const pending = 'rgb(201, 158, 79)';\r\n  const cancelled = 'red';\r\n\r\n  const getColor = () => {\r\n    if (props.status.toLowerCase() == 'completed') {\r\n      return completed;\r\n    }\r\n    if (props.status.toLowerCase() === 'pending') {\r\n      return pending;\r\n    }\r\n    if (props.status.toLowerCase() === 'cancelled') {\r\n      return cancelled;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n           \r\n            <span className=\"status-color\" style={{\r\n              backgroundColor: `${\r\n                getColor()\r\n              }`\r\n            }}></span>\r\n      <span style={{ color: `${getColor()}` }}>{props.status}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Modals\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js",[],["646","647"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js",["648"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["649"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\TagInput\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\cart.actions.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DepositHomepage.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserDashboard.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserOrders\\UserOrdersDashboard.js",["650","651","652","653"],"// import SideBar from \"../../components/SideBar\";\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport UserSideBar          from 'components/UserSidebar/UserSidebar';\r\nimport React, { useState }  from 'react';\r\nimport DropDown             from '../../../components/DropDown';\r\nimport OrderItemList        from '../../../components/OrderItemList';\r\nimport './style.css';\r\n\r\nconst UserOrdersDashboard = () => {\r\n  const [data, setData] = useState([\r\n                                     {\r\n                                       order_id: '120191',\r\n                                       created : 'Aug 1,2019',\r\n                                       customer: 'Harriet Santigo',\r\n                                       total   : '$604.50',\r\n                                       status  : 'Request',\r\n                                     },\r\n                                     {\r\n                                       order_id: '121090',\r\n                                       created : 'Jul 21,2019',\r\n                                       customer: 'Sara Graham',\r\n                                       total   : '$524.25',\r\n                                       status  : 'Processing',\r\n                                     },\r\n                                   ]);\r\n  const [query, setQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n              filter === '' || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n    data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{'abc'}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Order ID',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Created',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      width: '30%',\r\n    },\r\n    {\r\n      title: 'Total',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '10%',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <UserSideBar active=\"User Orders\">\r\n      <div className=\"div__one\">\r\n        {/* <SearchBar query={query} setQuery={setQuery} /> */}\r\n        {/* <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'OrderID',\r\n                value: 'order_id',\r\n              },\r\n              {\r\n                title: 'Customer Name',\r\n                value: 'customer_name',\r\n              },\r\n              {\r\n                title: 'Total',\r\n                value: 'total',\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Request',\r\n                value: 'request',\r\n              },\r\n              {\r\n                title: 'Processing',\r\n                value: 'processing',\r\n              },\r\n              {\r\n                title: 'Sent',\r\n                value: 'sent',\r\n              },\r\n              {\r\n                title: 'Approved',\r\n                value: 'approved',\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n\r\n    </UserSideBar>\r\n  );\r\n};\r\n\r\nexport default UserOrdersDashboard;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboardUsers\\index.js",["654"],"import { Button, CircularProgress }   from '@material-ui/core';\r\n// import { Dropdown } from \"bootstrap\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector }   from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\nimport { getUsers }                   from '../../actions/user.actions';\r\nimport DropDown                       from '../../components/DropDown';\r\nimport ItemList                       from '../../components/ItemList';\r\nimport SearchBar                      from '../../components/SearchBar';\r\nimport SideBar                        from '../../components/SideBar';\r\n\r\nimport './style.css';\r\n\r\nconst AdminDashboardUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users);\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      users.userList.map((row) => {\r\n        return {\r\n          ...row,\r\n          orders  : Math.floor(Math.random() * 10),\r\n          deposits: Math.floor(Math.random() * 10),\r\n        };\r\n      })\r\n    );\r\n    // setData(users.userList);\r\n  }, [users]);\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n              filter === '' || row.role.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.firstname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.lastname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n    data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{users.error.message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (users.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (users.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{ErrorMessage()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      width: '40%',\r\n    },\r\n    {\r\n      title: 'Role',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Orders',\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: 'Deposits',\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '10%',\r\n    },\r\n  ];\r\n  return (\r\n    <SideBar active=\"Users\">\r\n      <div className=\"div__one\">\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: 'white', textDecoration: 'none' }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Users</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Name',\r\n                value: 'name',\r\n              },\r\n              {\r\n                title: 'Orders',\r\n                value: 'orders',\r\n              },\r\n              {\r\n                title: 'Deposits',\r\n                value: 'deposits',\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Role\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Admin',\r\n                value: 'admin',\r\n              },\r\n              {\r\n                title: 'Internal',\r\n                value: 'internal',\r\n              },\r\n              {\r\n                title: 'External',\r\n                value: 'External',\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <ItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardUsers;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Dashboard\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Details\\index.js",["655"],"import React, { useEffect, useState }            from 'react';\r\nimport { Accordion, Card, Container, Jumbotron } from 'react-bootstrap';\r\nimport { useDispatch, useSelector }              from 'react-redux';\r\nimport { fetchItemDetails }                      from '../../actions/catalogue.actions';\r\nimport Layout                                    from '../../components/Layout';\r\n\r\nconst ItemDetails = (props) => {\r\n  const [itemDetail, setItemDetail] = useState({});\r\n  const detail = useSelector((state) => state.details);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setItemDetail(detail.details);\r\n  }, [detail]);\r\n\r\n  useEffect(() => {\r\n    const { id } = props.location.state;\r\n    // console.log(id);\r\n    if (id) {\r\n      console.log('Dispatching fetch Item request');\r\n      dispatch(fetchItemDetails(id, 'external'));\r\n    }\r\n  }, []);\r\n\r\n  const itemData = () => {\r\n    return (\r\n      <div>\r\n        {Object.keys(itemDetail).map((value, index) => {\r\n          return (\r\n            <Accordion key={index}>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\r\n                  {value}\r\n                </Accordion.Toggle>\r\n\r\n                {Object.keys(itemDetail[value]).map((v, i) => {\r\n                  return (\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                      <Card.Body\r\n                        style={{\r\n                          display       : 'flex',\r\n                          justifyContent: 'space-between',\r\n                        }}\r\n                      >\r\n                        <span>{v}</span>\r\n                        <span>\r\n                          {itemDetail[value][v] === ''\r\n                            ? 'Nill'\r\n                            : itemDetail[value][v]}\r\n                        </span>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  );\r\n                })}\r\n              </Card>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Jumbotron>\r\n        <h1>\r\n          {itemDetail.CoreDataSets\r\n            ? `${itemDetail.CoreDataSets.Genus} ${itemDetail.CoreDataSets.SpeciesEpithet}`\r\n            : ''}\r\n        </h1>\r\n      </Jumbotron>\r\n      <Container>\r\n        {detail.error.code > 200 ? detail.error.message : itemData()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ItemDetails;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Microorganism\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\User\\index.js",["656","657","658"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Deposits\\Deposits.js",["659","660","661","662"],"import { CircularProgress } from '@material-ui/core';\r\nimport DepositItemList      from 'components/DepositItemList';\r\nimport DropDown             from 'components/DropDown';\r\nimport SideBar              from 'components/SideBar';\r\nimport React, { useState }  from 'react';\r\n\r\nconst Deposits = () => {\r\n  const [data, setData] = useState([\r\n                                     {\r\n                                       deposit_id: '120191',\r\n                                       created   : 'Aug 1,2019',\r\n                                       customer  : 'Harriet Santigo',\r\n                                       total     : '$604.50',\r\n                                       status    : 'Request',\r\n                                     },\r\n                                     {\r\n                                       deposit_id: '121090',\r\n                                       created   : 'Jul 21,2019',\r\n                                       customer  : 'Sara Graham',\r\n                                       total     : '$524.25',\r\n                                       status    : 'Processing',\r\n                                     },\r\n                                   ]);\r\n  const [query, setQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n              filter === '' || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n    data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{'abc'}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Deposit ID',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Created',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      width: '30%',\r\n    },\r\n    {\r\n      title: 'Total',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '',\r\n      width: '10%',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\"></div>\r\n      <div className=\"div__two\">\r\n        <h3>Deposits</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Deposit ID',\r\n                value: 'deposit_id',\r\n              },\r\n              {\r\n                title: 'Customer Name',\r\n                value: 'customer_name',\r\n              },\r\n              {\r\n                title: 'Total',\r\n                value: 'total',\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: 'Request',\r\n                value: 'request',\r\n              },\r\n              {\r\n                title: 'Processing',\r\n                value: 'processing',\r\n              },\r\n              {\r\n                title: 'Sent',\r\n                value: 'sent',\r\n              },\r\n              {\r\n                title: 'Approved',\r\n                value: 'approved',\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default Deposits;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Payments\\Payments.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignUpUseForm.js",["663","664"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useFormSignUp = (handleSubmission, SignUpValidator) => {\r\n  const [signUpValue, setSignUpValue] = useState({\r\n                                                   firstname       : '',\r\n                                                   lastname        : '',\r\n                                                   email           : '',\r\n                                                   type            : 'Student',\r\n                                                   affiliation     : '',\r\n                                                   description     : '',\r\n                                                   password        : '',\r\n                                                   confirm_password: '',\r\n                                                 });\r\n\r\n  const [signUpErrors, setSignUpErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignUpSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignUpErrors(SignUpValidator(signUpValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signUpErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signUpErrors]);\r\n\r\n  const updateSignUpValue = (e) => {\r\n    setSignUpValue({\r\n                     ...signUpValue,\r\n                     [e.target.name]: e.target.value,\r\n                   });\r\n  };\r\n\r\n  return { handleSignUpSubmit, signUpValue, updateSignUpValue, signUpErrors };\r\n};\r\n\r\nexport default useFormSignUp;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\SideBar\\sidebardata.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step10\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step4\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Layout\\SidebarData.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["665"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js",["666"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepEightForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepEightValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepEightValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepEightForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["667"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepFourForm = (initialValue, handleSubmission, StepFourValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFourValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFourForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js",["668"],"const getCurrentDate = (seperator = '-') => {\r\n  let newDate = new Date();\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth() + 1;\r\n  let year = newDate.getFullYear();\r\n\r\n  return `${year}${seperator}${month}${seperator}${date}`;\r\n};\r\n\r\nconst StepOneValidator = (value) => {\r\n  let errors = {};\r\n  if (!value.Genus.trim()) {\r\n    errors.Genus = 'Genus cannot be empty';\r\n  }\r\n  if (!value.AccessionNumber.trim()) {\r\n    errors.AccessionNumber = 'Accession Number cannot be empty';\r\n  }\r\n  if (!value.SpeciesEpithet.trim()) {\r\n    errors.SpeciesEpithet = 'Species Epithet cannot be empty';\r\n  }\r\n  if (!value.Author.trim()) {\r\n    errors.Author = 'Author cannot be empty';\r\n  }\r\n  if (!value.OrganismType.trim()) {\r\n    errors.OrganismType = 'One of the Organism Type must be selected';\r\n  }\r\n  if (!value.HistoryOfDeposit.trim()) {\r\n    errors.HistoryOfDeposit = 'History of Deposit cannot be empty';\r\n  }\r\n  if (!value.DateOfIsolation.trim()) {\r\n    errors.DateOfIsolation = 'Date of Isolation cannot be empty';\r\n  }\r\n  if (!value.IsolatedFrom.trim()) {\r\n    errors.IsolatedFrom = 'Isolated From cannot be empty';\r\n  }\r\n  if (!value.GeographicOrigin.trim()) {\r\n    errors.GeographicOrigin = 'Geographic Origin cannot be empty';\r\n  }\r\n  if (!value.Status.trim()) {\r\n    errors.Status = 'One of the Status must be selected';\r\n  }\r\n\r\n  if (!value.Medium.trim()) {\r\n    errors.Medium = 'Medium cannot be empty';\r\n  }\r\n  if (!value.OptimumGrowthTemperature.trim()) {\r\n    errors.OptimumGrowthTemperature =\r\n      'Optimum Growth Temperature cannot be empty';\r\n  }\r\n  if (!value.MaximumGrowthTemperature.trim()) {\r\n    errors.MaximumGrowthTemperature =\r\n      'Maximum Growth Temperature cannot be empty';\r\n  }\r\n  if (!value.MinimumGrowthTemperature.trim()) {\r\n    errors.MinimumGrowthTemperature =\r\n      'Minimum Growth Temperature cannot be empty';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default StepOneValidator;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\HOC\\PrivateRoute.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Reports\\Reports.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\App.js",["669"],"import { isUserLoggedIn }           from 'actions';\r\nimport 'App.css';\r\nimport { MainRouter }               from 'components';\r\nimport React, { useEffect }         from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLoggedIn());\r\n    }\r\n  }, [auth]);\r\n  return (\r\n    <div className=\"App\">\r\n      <MainRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\index.js",["670"],"import { combineReducers } from 'redux';\r\nimport { authConstants }   from '../actions/constants';\r\nimport authReducer         from './auth.reducers';\r\nimport cartReducer         from './cart.reducer';\r\nimport catalogueReducers   from './catalogue.reducers';\r\nimport dashboardReducers   from './dashboard.reducers';\r\nimport itemInfoReducer     from './itemInfo.reducer';\r\nimport sidebarReducer      from './sidebar.reducer';\r\nimport signupReducers      from './signup.reducers';\r\nimport updatingUserReducer from './updatingUser.reducer';\r\nimport userReducer         from './user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n                                      auth      : authReducer,\r\n                                      sign      : signupReducers,\r\n                                      catalogue : catalogueReducers,\r\n                                      details   : itemInfoReducer,\r\n                                      dashboard : dashboardReducers,\r\n                                      user      : userReducer,\r\n                                      userUpdate: updatingUserReducer,\r\n                                      cart      : cartReducer,\r\n                                      sidebar   : sidebarReducer,\r\n                                    });\r\n\r\nexport default (state, action) =>\r\n  rootReducer(action.type === authConstants.LOGOUT ? undefined : state, action);\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\dashboard.reducers.js",["671","672"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  options : [],\r\n  data    : {},\r\n  fetching: false,\r\n  fetched : false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.DASHBOARD_OPTIONS_UPDATE:\r\n      state = {\r\n        ...state,\r\n        options: [\r\n          ...(!state.options.includes(action.payload.option)\r\n            ? [...state.options, action.payload.option]\r\n            : [...state.options]),\r\n        ],\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        data    : action.payload.data,\r\n        fetching: false,\r\n        fetched : true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_FAILURE:\r\n      state = initialState;\r\n      break;\r\n\r\n    case authConstants.UPDATE_DASHBOARD_OPTIONS:\r\n      state = {\r\n        ...state,\r\n        options: action.payload.options,\r\n        fetched: true,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\cart.reducer.js",["673"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  cartData  : [],\r\n  size      : 0,\r\n  submitting: false,\r\n  submitted : false,\r\n  error     : {\r\n    code   : 0,\r\n    message: '',\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CART_ITEM_ADD:\r\n      let item_exists = state.cartData.find(\r\n        (el) => el.id === action.payload.id\r\n      );\r\n      if (item_exists) {\r\n        state = {\r\n          ...state,\r\n          cartData: state.cartData.map((item) => {\r\n            if (item.id === action.payload.id) {\r\n              return {\r\n                ...item,\r\n                qty: item.qty + 1,\r\n              };\r\n            }\r\n            return item;\r\n          }),\r\n        };\r\n      }\r\n      else {\r\n        state = {\r\n          ...state,\r\n          cartData: [\r\n            ...state.cartData,\r\n            {\r\n              ...action.payload,\r\n              qty: 1,\r\n            },\r\n          ],\r\n          size    : state.size + 1,\r\n        };\r\n      }\r\n      break;\r\n    case authConstants.CART_ITEM_REMOVE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.filter((item) => {\r\n          return item.id !== action.payload.id;\r\n        }),\r\n        size    : state.size - 1,\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_INCREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          console.log(action.payload.id);\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty + 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_DECREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          if (item.id === action.payload.id && item.qty > 1) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty - 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n\r\n    case authConstants.CART_SUBMIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        submitting: true,\r\n        submitted : false,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        submitted : true,\r\n        submitting: false,\r\n        size      : 0,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        submitting: false,\r\n        submitted : true,\r\n        error     : {\r\n          code   : action.payload.code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CART_RESET:\r\n      state = initialState;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\sidebar.reducer.js",["674"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  collapsed: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.COLLAPSE_SIDEBAR:\r\n      state = {\r\n        ...state,\r\n        collapsed: !state.collapsed,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\itemInfo.reducer.js",["675"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  details : {},\r\n  fetching: false,\r\n  fetched : false,\r\n  error   : {\r\n    code   : 0,\r\n    message: '',\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_ITEM_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        details : action.payload.data,\r\n        fetched : true,\r\n        fetching: false,\r\n      };\r\n      console.log('Successfully updated the state');\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetched : false,\r\n        fetching: false,\r\n        error   : {\r\n          code   : action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      console.log('State updated for error recieved');\r\n      break;\r\n    default:\r\n      state = initialState;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reducers\\updatingUser.reducer.js",["676","677"],"import { authConstants } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  data       : {},\r\n  updating   : false,\r\n  updated    : false,\r\n  updateError: false,\r\n  code       : 0,\r\n  message    : '',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.UPDATING_USER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        data    : action.payload.data,\r\n        updating: true,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated : true,\r\n        code    : action.payload.status_code,\r\n        message : action.payload.message,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        updating   : false,\r\n        updated    : false,\r\n        updateError: true,\r\n        code       : action.payload.status_code,\r\n        message    : action.payload.message,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\constants.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\signup.actions.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\MainRouter\\MainRouter.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\server_urls.js\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserOrderDetails.js",["678","679","680"],"import OrderDetailsInformationList from 'components/OrderDetailsInformationList';\r\nimport React, { useState }         from 'react';\r\nimport SideBar                     from '../components/SideBar';\r\n\r\nconst UserOrderDetails = (props) => {\r\n  const [data, setData] = useState(\r\n    {\r\n      order_id: '120191',\r\n      created : '01-08-2019',\r\n      user_id : '1234',\r\n      status  : 'Reject',\r\n\r\n    },\r\n  );\r\n\r\n  const [datastatus, setDatastatus] = useState(\r\n    {\r\n      status     : 'Your order is Rejected',\r\n      description: 'The form is incomplete, some information is missing'\r\n\r\n    },\r\n  );\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <OrderDetailsInformationList data={data} />\r\n\r\n      {/* <DepositPayment datastatus={datastatus}/> */}\r\n\r\n      {/* <OrderRejectDesciption datastatus={datastatus} />  */}\r\n      {/* <DocumentSubmission datastatus={datastatus} /> */}\r\n\r\n      {/* <OrderPayment datastatus={datastatus}/>   */}\r\n\r\n      {/* <OrderProcessing datastatus={datastatus} /> */}\r\n      {/* <OrderDispatched datastatus={datastatus}/> */}\r\n      {/* <OrderDelivered  datastatus={datastatus}/> */}\r\n    </SideBar>\r\n\r\n  );\r\n};\r\n\r\nexport default UserOrderDetails;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserPaymentDashboard.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AddMicroorganism\\index.js",["681"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\index.js",["682","683","684","685","686","687","688"],"import {\r\n  FormControl, FormControlLabel, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput, Radio,\r\n  RadioGroup, TextField,\r\n}                                                         from '@material-ui/core';\r\nimport Backdrop                                           from '@material-ui/core/Backdrop';\r\nimport Fade                                               from '@material-ui/core/Fade';\r\nimport Modal                                              from '@material-ui/core/Modal';\r\nimport CheckCircleIcon                                    from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon                                          from '@material-ui/icons/Error';\r\nimport Visibility                                         from '@material-ui/icons/Visibility';\r\nimport VisibilityOff                                      from '@material-ui/icons/VisibilityOff';\r\nimport React, { useEffect, useRef, useState }             from 'react';\r\nimport { Button, FormLabel }                              from 'react-bootstrap';\r\nimport ReCAPTCHA                                          from 'react-google-recaptcha';\r\nimport { useDispatch, useSelector }                       from 'react-redux';\r\nimport { Link, Redirect }                                 from 'react-router-dom';\r\nimport { authConstants, login, resetSignUpStore, signup } from '../../actions';\r\nimport useSignInForm                                      from './SignInUseForm';\r\nimport SignInValidator                                    from './SignInValidator';\r\nimport useFormSignUp                                      from './SignUpUseForm';\r\nimport SignUpValidator                                    from './SignUpValidator';\r\nimport './style.css';\r\n\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [signInForm, setSignInForm] = useState(true);\r\n  const [signUpForm, setSignUpForm] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const signUpStore = useSelector((state) => state.sign);\r\n  const signInStore = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal show code\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n\r\n  const [userType, setUserType] = useState('');\r\n\r\n  const selectUserType = (e) => {\r\n    setUserType(e.target.name);\r\n    const signUpSlides = document.getElementById(\r\n      'sign-in-form-slides-inner-div'\r\n    );\r\n    signUpSlides.style.transform = 'translate(-50%)';\r\n  };\r\n\r\n  const goBack = () => {\r\n    const signUpSlides = document.getElementById(\r\n      'sign-in-form-slides-inner-div'\r\n    );\r\n    signUpSlides.style.transform = 'translate(0%)';\r\n  };\r\n\r\n  // method to reset the sign up  store on modal close\r\n\r\n  const reset = () => {\r\n    dispatch(resetSignUpStore());\r\n  };\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    if (signUpStore.error.found || signUpStore.registered) {\r\n      setModalOpen(true);\r\n    }\r\n  }, [signUpStore]);\r\n\r\n  useEffect(() => {\r\n    if (signInStore.error.found) {\r\n      setSignInModal(true);\r\n    }\r\n  }, [signInStore]);\r\n\r\n  const userLogin = () => {\r\n    // e.preventDefault();\r\n    const { email, password } = signInValue;\r\n    const user = {\r\n      email,\r\n      password,\r\n      token: recaptchaRef.current.getValue(),\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  // Material Ui React Material\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handleSignUpSubmission = () => {\r\n    dispatch(signup(signUpValue));\r\n  };\r\n\r\n  const {\r\n          signInValue,\r\n          handleSignInSubmit,\r\n          updateSignInValue,\r\n          signInErrors,\r\n        } = useSignInForm(userLogin, SignInValidator);\r\n\r\n  const {\r\n          handleSignUpSubmit,\r\n          signUpValue,\r\n          updateSignUpValue,\r\n          signUpErrors,\r\n        } = useFormSignUp(handleSignUpSubmission, SignUpValidator);\r\n\r\n  // Captcha functions\r\n\r\n  const recaptchaRef = useRef();\r\n\r\n  if (auth.authenticate) {\r\n    if (userType === 'employee') {\r\n      return <Redirect to={'/adminDashboard'} />;\r\n    }\r\n    else {\r\n      return <Redirect to={'/'} />;\r\n    }\r\n  }\r\n\r\n  // const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n  // const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n  // const container = document.querySelector(\".container\");\r\n\r\n  // console.log(container);\r\n\r\n  const signInButtonPress = () => {\r\n    setSignInForm(true);\r\n  };\r\n\r\n  const signUpButtonPress = () => {\r\n    setSignInForm(false);\r\n  };\r\n\r\n  // sign_up_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.add(\"sign-up-mode\");\r\n  // });\r\n\r\n  // sign_in_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.remove(\"sign-up-mode\");\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          reset();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signUpStore.registered ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: '5.5rem' }}\r\n              />\r\n            ) : null}\r\n            {signUpStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: '5.5rem' }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signUpStore.registered ? 'Success' : 'Error'}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signUpStore.registered\r\n                ? 'The signup request was successful. Check your email for verification'\r\n                : signUpStore.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={signInModal}\r\n        onClose={(e) => {\r\n          setSignInModal(false);\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={signInModal}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signInStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: '5.5rem' }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signInStore.error.found ? 'Error' : null}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signInStore.error.found ? signInStore.error.message : null}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <div class={`container-div ${signInForm ? '' : 'sign-up-mode'}`}>\r\n        <div class=\"forms-container\">\r\n          <div class=\"signin-signup\">\r\n            <form action=\"#\" className=\"sign-in-form\">\r\n              <div className=\"sign-in-form-slides-outer-div\">\r\n                <div\r\n                  className=\"sign-in-form-slides-inner-div\"\r\n                  id=\"sign-in-form-slides-inner-div\"\r\n                >\r\n                  <div className=\"sign-in-type\">\r\n                    <h3>What type of user are you?</h3>\r\n                    <Button name=\"user\" onClick={(e) => selectUserType(e)}>\r\n                      General User\r\n                    </Button>\r\n                    <Button name=\"employee\" onClick={(e) => selectUserType(e)}>\r\n                      Employee\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"title\">Sign In</h2>\r\n                    <TextField\r\n                      error={signInErrors.email ? true : undefined}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"e.g. name@gmail.com\"\r\n                      value={signInValue.email}\r\n                      onChange={(e) => updateSignInValue(e)}\r\n                      helperText={signInErrors.email ? signInErrors.email : ''}\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      style={{ width: '70%', margin: '1rem 0 0.5rem 0' }}\r\n                    />\r\n                    <FormControl\r\n                      // className={clsx(classes.margin, classes.textField)}\r\n                      variant=\"outlined\"\r\n                      style={{ width: '70%', margin: '1rem 0 0.5rem 0' }}\r\n                      error={signInErrors.password ? true : undefined}\r\n                      // helperText={signInErrors.password ? signInErrors.password : \"\"}\r\n                    >\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Min 6 letters & a capital letter\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        value={signInValue.password}\r\n                        onChange={(e) => updateSignInValue(e)}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => setShowPassword(!showPassword)}\r\n                              onMouseDown={(e) => e.preventDefault()}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <Visibility />\r\n                              ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                      />\r\n                      <FormHelperText id=\"my-helper-text\">\r\n                        {signInErrors.password ? signInErrors.password : ''}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <Link to=\"/forgetPassword\" className=\"forget-password-link\">\r\n                      Forgot your password?\r\n                    </Link>\r\n                    <ReCAPTCHA\r\n                      ref={recaptchaRef}\r\n                      sitekey={authConstants.ReCAPTCHA_KEY}\r\n                    />\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"sign-in-btn\"\r\n                      onClick={(e) => handleSignInSubmit(e)}\r\n                    >\r\n                      sign in\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form class=\"sign-up-form\">\r\n              <h2 className=\"title\">Sign Up</h2>\r\n              <div className=\"sign-up-form-content\">\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  name=\"firstname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.firstname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.firstname}\r\n                  helperText={signUpErrors.firstname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.lastname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.lastname}\r\n                  helperText={signUpErrors.lastname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.email}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.email}\r\n                  helperText={signUpErrors.email}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Affiliation\"\r\n                  name=\"affiliation\"\r\n                  placeholder=\"Institute affiliated to\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.affiliation}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.affiliation}\r\n                  helperText={signUpErrors.affiliation}\r\n                  required\r\n                />\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={signUpErrors.type}\r\n                  className=\"user-type-radio-group\"\r\n                >\r\n                  <FormLabel component=\"legend\">\r\n                    What type of user are you?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-label=\"user-type\"\r\n                    name=\"type\"\r\n                    value={signUpValue.type}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"ResearchInstitute\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Research Institute\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Industry\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Industry\"\r\n                    />\r\n                  </RadioGroup>\r\n                  <FormHelperText>\r\n                    {signUpErrors.type ? signUpErrors.type : ''}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                {/* \r\n                <TextField\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.description}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.description}\r\n                  helperText={signUpErrors.description}\r\n                  multiline\r\n                  rows={4}\r\n                /> */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  className=\"input password-input\"\r\n                  error={signUpErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    value={signUpValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.password ? signUpErrors.password : ''}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  error={signUpErrors.confirm_password ? true : undefined}\r\n                  className=\"input\"\r\n                  required\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? 'text' : 'password'}\r\n                    value={signUpValue.confirme_password}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.confirm_password\r\n                      ? signUpErrors.confirm_password\r\n                      : ''}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Link className=\"forget-password-link\">\r\n                  Already a user Sign In\r\n                </Link>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"sign-up-btn\"\r\n                  onClick={(e) => handleSignUpSubmit(e)}\r\n                >\r\n                  sign up\r\n                </Button>\r\n                {/* <TextField\r\n                  error={signUpErrors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                /> */}\r\n              </div>\r\n            </form>\r\n            {/* <form action=\"#\" class=\"sign-in-form\">\r\n              <h2 class=\"title\">Sign in</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" value=\"Login\" class=\"btn solid\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign in with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n            {/* <form action=\"#\" class=\"sign-up-form\">\r\n              <h2 class=\"title\">Sign up</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-envelope\"></i>\r\n                <input type=\"email\" placeholder=\"Email\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" class=\"btn\" value=\"Sign up\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign up with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n          </div>\r\n        </div>\r\n        <div class=\"panels-container\">\r\n          <div class=\"panel left-panel\">\r\n            <div class=\"content\">\r\n              <h3>New here ?</h3>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Debitis, ex ratione. Aliquid!\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-up-btn\"\r\n                onClick={signUpButtonPress}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/log.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n          <div class=\"panel right-panel\">\r\n            <div class=\"content\">\r\n              <h3>One of us ?</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                laboriosam ad deleniti.\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-in-btn\"\r\n                onClick={signInButtonPress}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/register.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userLogin}>\r\n                <Input\r\n                  id=\"email_username\"\r\n                  label=\"Email/Username\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email/Username\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"basicPassword\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\UserOrders\\UserOrders.js",["689"],"import { Button }          from '@material-ui/core';\r\nimport pdfLogo             from 'assets/pdf.png';\r\nimport classNames          from 'classnames';\r\nimport SideBar             from 'components/SideBar';\r\nimport React, { useState } from 'react';\r\n\r\nconst UserOrders = (props) => {\r\n\r\n  const [documentsAvailable] = useState([\r\n                                          'https://res.cloudinary.com/khizerrehan92/image/upload/v1618677668/hamza_farhad_stocks_r56azy.pdf',\r\n                                          'https://res.cloudinary.com/khizerrehan92/raw/upload/v1618677683/Summer_School_Registration_Form_ko4m7q.docx',\r\n                                          'https://res.cloudinary.com/khizerrehan92/image/upload/v1618677668/hamza_farhad_stocks_r56azy.pdf',\r\n                                          'https://res.cloudinary.com/khizerrehan92/raw/upload/v1618677683/Summer_School_Registration_Form_ko4m7q.docx'\r\n                                        ]);\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"p-4\">\r\n        <h3>Order Details</h3>\r\n      </div>\r\n\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n\r\n          {\r\n            documentsAvailable && documentsAvailable.map((document) => {\r\n              return (\r\n                <div className=\"col-lg\">\r\n                  <div className=\"card\">\r\n                    <p>File</p>\r\n                    {document}\r\n                    <a href={document} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                      <img src={pdfLogo} className={classNames('icon-small')} />\r\n                      <Button>\r\n                        <i className=\"fas fa-download\" />\r\n                        Download File\r\n                      </Button>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>Upload Files</h1>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default UserOrders;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\DepositHomepageDetails.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Signup\\SignUpUseForm.js",["690","691"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignUpValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ResetPassword\\useFormResetPassword.js",["692","693"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useFormResetPassword = (handleSubmission, ResetPasswordValidator) => {\r\n  const [resetPassword, setResetPassword] = useState({\r\n                                                       password        : '',\r\n                                                       confirm_password: '',\r\n                                                     });\r\n\r\n  const [resetPasswordErrors, setResetPasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleResetSubmit = (e) => {\r\n    e.preventDefault();\r\n    setResetPasswordErrors(ResetPasswordValidator(resetPassword));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(resetPasswordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [resetPasswordErrors]);\r\n\r\n  const updateResetPassword = (e) => {\r\n    setResetPassword({\r\n                       ...resetPassword,\r\n                       [e.target.name]: e.target.value,\r\n                     });\r\n  };\r\n\r\n  return {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormResetPassword;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\ItemList\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step1\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step5\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\UserSidebar\\UserSidebarData.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["694"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepTenForm = (initialValue, handleSubmission, StepTenValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTenForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js",["695"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js",["696"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepThreeForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThreeValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThreeValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThreeForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js",["697"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\UserDashboard\\UserSettings\\UserSettings.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ForgetPassword\\index.js",["698"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\SignIn\\SignInUseForm.js",["699","700"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useSignInForm = (handleSubmission, SignInValidator) => {\r\n  const [signInValue, setSignInValue] = useState({\r\n                                                   email   : '',\r\n                                                   password: '',\r\n                                                 });\r\n\r\n  const [signInErrors, setSignInErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignInErrors(SignInValidator(signInValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signInErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signInErrors]);\r\n\r\n  const updateSignInValue = (e) => {\r\n    setSignInValue({\r\n                     ...signInValue,\r\n                     [e.target.name]: e.target.value,\r\n                   });\r\n  };\r\n\r\n  return { signInValue, handleSignInSubmit, updateSignInValue, signInErrors };\r\n};\r\n\r\nexport default useSignInForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\OrderItemList\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step3\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step8\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js",["701"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepElevenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepElevenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepElevenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepElevenForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Cart\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\Settings\\Settings.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ResetPassword\\ResetPasswordValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js",["702"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepTwoForm = (initialValue, handleSubmission, StepTwoValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwoValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwoForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\AdminDashboard\\AddUser\\useFormAddUser.js",["703","704"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst useFormAddUser = (handleSubmission, SignInValidator) => {\r\n  const [addUserValue, setAddUserValue] = useState({\r\n                                                     firstname       : '',\r\n                                                     lastname        : '',\r\n                                                     email           : '',\r\n                                                     password        : '',\r\n                                                     confirm_password: '',\r\n                                                     role            : 'internal',\r\n                                                     profile_picture : 'null',\r\n                                                     permissions     : {\r\n                                                       view_microorganism_permission  : false,\r\n                                                       add_microorganism_permission   : false,\r\n                                                       delete_microorganism_permission: false,\r\n                                                       update_microorganism_permission: false,\r\n                                                       view_order_permission          : false,\r\n                                                       add_order_permission           : false,\r\n                                                       delete_order_permission        : false,\r\n                                                       update_order_permission        : false,\r\n                                                       view_deposit_permission        : false,\r\n                                                       add_deposit_permission         : false,\r\n                                                       delete_deposit_permission      : false,\r\n                                                       update_deposit_permission      : false,\r\n                                                       view_user_permission           : false,\r\n                                                       add_user_permission            : false,\r\n                                                       delete_user_permission         : false,\r\n                                                       update_user_permission         : false,\r\n                                                       view_report_permission         : false,\r\n                                                       add_report_permission          : false,\r\n                                                       delete_report_permission       : false,\r\n                                                       update_report_permission       : false,\r\n                                                       view_log_permission            : false,\r\n                                                       add_log_permission             : false,\r\n                                                       delete_log_permission          : false,\r\n                                                       update_log_permission          : false,\r\n                                                     },\r\n                                                   });\r\n\r\n  const [addUserErrors, setaddUserErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleAddUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    setaddUserErrors(SignInValidator(addUserValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(addUserErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [addUserErrors]);\r\n\r\n  const updateAddUser = (e) => {\r\n    if (e.target.type === 'text' || e.target.type === 'password') {\r\n      setAddUserValue({\r\n                        ...addUserValue,\r\n                        [e.target.name]: e.target.value,\r\n                      });\r\n    }\r\n    else if (e.target.type === 'file') {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onloadend = () => {\r\n        setAddUserValue({\r\n                          ...addUserValue,\r\n                          [e.target.name]: reader.result,\r\n                        });\r\n      };\r\n    }\r\n    else if (e.target.type === 'checkbox') {\r\n      //   alert(e.target.name);\r\n      setAddUserValue({\r\n                        ...addUserValue,\r\n                        permissions: {\r\n                          ...addUserValue.permissions,\r\n                          [e.target.name]: e.target.checked,\r\n                        },\r\n                      });\r\n    }\r\n  };\r\n\r\n  return { addUserValue, handleAddUserSubmit, updateAddUser, addUserErrors };\r\n};\r\n\r\nexport default useFormAddUser;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\OrderPayment.js",["705"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\actions\\user.actions.js",["706"],"import axios             from '../helpers/axios.js';\r\nimport { authConstants } from './constants';\r\n\r\nconst getUsers = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.USERS_FETCH_REQUEST });\r\n    try {\r\n      let user_Request_Response = await axios.post('/users', {});\r\n      if (user_Request_Response.status === 200) {\r\n        dispatch({\r\n                   type   : authConstants.USERS_FETCH_SUCCESS,\r\n                   payload: { users: user_Request_Response.data },\r\n                 });\r\n        dispatch({\r\n                   type   : authConstants.DASHBOARD_OPTIONS_UPDATE,\r\n                   payload: { option: 'USERS' },\r\n                 });\r\n      }\r\n    }\r\n    catch (e) {\r\n      if (e.response && e.response.status === 405) {\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n      if (e.response && e.response.status === 400) {\r\n        dispatch({\r\n                   type   : authConstants.USERS_FETCH_FAILURE,\r\n                   payload: {\r\n                     status_code: e.response.status,\r\n                     message    : e.response.data.message,\r\n                   },\r\n                 });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst getUserData = (id, token) => {\r\n  return async (dispatch) => {\r\n    if (token) {\r\n      console.log('fetching user data');\r\n      dispatch({ type: authConstants.USER_DATA_REQUEST });\r\n      const res = await axios.post(\r\n        '/userData',\r\n        { id }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      dispatch({\r\n                 type   : authConstants.USER_DATA_SUCCESS,\r\n                 payload: { user: res.data },\r\n               });\r\n    }\r\n  };\r\n};\r\n\r\nconst updateUserInfo = (data, token) => {\r\n  return async (dispatch) => {\r\n    if (token) {\r\n      dispatch({\r\n                 type   : authConstants.UPDATING_USER_REQUEST,\r\n                 payload: { data: data },\r\n               });\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          '/updateUser',\r\n          { data }\r\n          // {\r\n          //   headers: { authorization: token },\r\n          // }\r\n        );\r\n\r\n        if (res.status == 200) {\r\n          dispatch({\r\n                     type   : authConstants.UPDATING_USER_SUCCESS,\r\n                     payload: {\r\n                       status_code: res.status,\r\n                       message    : res.data.message,\r\n                     },\r\n                   });\r\n          dispatch(getUsers(token));\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.log(error.data);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst deleteUser = (data, token) => {\r\n  return async (dispatch) => {\r\n    console.log('user data sent to method was: ');\r\n    console.log(data);\r\n    dispatch({ type: authConstants.USER_DELETE_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        '/deleteUser',\r\n        { id: data }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log('user deleted successfully');\r\n        dispatch({ type: authConstants.USER_DELETE_SUCCESS });\r\n        dispatch(getUsers(token));\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error.data);\r\n    }\r\n  };\r\n};\r\n\r\nconst addUser = (userData, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n                 type   : authConstants.USER_ADD_REQUEST,\r\n                 payload: { data: userData },\r\n               });\r\n      const res = await axios.post('/addUser', userData, {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      });\r\n      // console.log(res.status);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n                   type   : authConstants.USER_ADD_SUCCESS,\r\n                   payload: { message: res.data.message },\r\n                 });\r\n        // dispatch(getUsers(token));\r\n      }\r\n      if (res.status === 405) {\r\n        alert('Token has expired ');\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n    }\r\n    catch ({ response }) {\r\n      console.log('err');\r\n      console.log(response);\r\n      dispatch({\r\n                 type   : authConstants.USER_ADD_FAILURE,\r\n                 payload: {\r\n                   status : response.data.status,\r\n                   message: response.data.message,\r\n                 },\r\n               });\r\n    }\r\n  };\r\n};\r\n\r\nexport {\r\n  getUsers,\r\n  getUserData,\r\n  updateUserInfo,\r\n  deleteUser,\r\n  addUser\r\n};\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\Catalogue\\index.js",["707","708"],"import { SearchOutlined }             from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Form, Spinner, }  from 'react-bootstrap';\r\nimport { useDispatch, useSelector }   from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\n\r\nimport { addItemToCart, getCatalogueData, } from '../../actions';\r\nimport Layout                               from '../../components/Layout/index';\r\nimport PageHeader                           from '../../components/PageHeader';\r\nimport { ReactComponent as Bacteria }       from './Icons/bacterium-solid.svg';\r\nimport './style.css';\r\n\r\nconst Catalogue = (props) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const filters = [\r\n    'bacteria',\r\n    'fungi',\r\n    'archaea',\r\n    'antibody',\r\n    'microalgae',\r\n    'phage',\r\n    'virus',\r\n    'yeast',\r\n  ];\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [addedToCart, setAddedToCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row['OrganismType'].toLowerCase())\r\n        : true;\r\n      // console.log(\r\n      //   columns &&\r\n      //     columns.some((column) => {\r\n      //       return (\r\n      //         applyFilter &&\r\n      //         row[column]\r\n      //           .toString()\r\n      //           .toLowerCase()\r\n      //           .indexOf(query.toLowerCase()) > -1\r\n      //       );\r\n      //     })\r\n      // );\r\n      return (\r\n        columns &&\r\n        columns.some((column) => {\r\n          return (\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n          );\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const addToCart = (row) => {\r\n    const { id } = row;\r\n    setAddedToCart([...addedToCart, id]);\r\n    const { OrganismType, Genus, SpeciesEpithet } = row;\r\n    dispatch(addItemToCart({ id: id, OrganismType, Genus, SpeciesEpithet }));\r\n  };\r\n\r\n  if (fetching) {\r\n    <Layout>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Layout>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n\r\n      <div className=\"page-heading\">\r\n        <Container className=\"page-heading-content\">\r\n          <h1>Catalogue</h1>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"catalogue-div\">\r\n        <Container className=\"catalogue-content\">\r\n          <div className=\"search-bar-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              id=\"search-bar-input\"\r\n            />\r\n            <SearchOutlined className=\"search-bar-icon\" fontSize=\"32px\" />\r\n          </div>\r\n          <div className=\"search-filters-box\">\r\n            <h3>Filters</h3>\r\n            <hr />\r\n            {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  className=\"filter-check\"\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                                       checked\r\n                                         ? prev.filter((sf) => sf !== filter)\r\n                                         : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"catalogue-data-content-box\">\r\n            <div>\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"catalogue-data-item\">\r\n                    <div>\r\n                      <Bacteria className=\"image\" />\r\n                      <h4 className=\"catalogue-data-item-organism-type\">\r\n                        {row.OrganismType}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"item-detail\">\r\n                      <Link\r\n                        className=\"catalogue-data-item-name\"\r\n                        to={{\r\n                          pathname: '/itemDetails',\r\n                          state   : { id: row.id },\r\n                        }}\r\n                      >\r\n                        <h4 className=\"item-name\">{`${row.Genus} ${row.SpeciesEpithet}`}</h4>\r\n                        {/* <h3 className=\"arrow-box\">\r\n                          <Arrow className=\"arrow\" />\r\n                        </h3> */}\r\n                      </Link>\r\n                      <span\r\n                        className=\"catalogue-data-item-accession-number\">{`Accession Number    ${row.AccessionNumber}`}</span>\r\n                      <span className=\"catalogue-data-item-strain-type\">{`Strain Type      ${row.Status}`}</span>\r\n                      <span\r\n                        className=\"catalogue-data-item-bio-hazard-level\">{`Bio Hazard Level     ${row.BioHazardLevel}`}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        className={\r\n                          addedToCart.includes(row.id)\r\n                            ? 'add-to-cart-button-disabled'\r\n                            : 'add-to-cart-button'\r\n                        }\r\n                        onClick={(e) => addToCart(row)}\r\n                      >\r\n                        {addedToCart.includes(row.id)\r\n                          ? 'Added To Cart'\r\n                          : 'Add To Cart'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row.OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row.Genus} ${row.SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row.AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <Layout>\r\n        <Jumbotron>\r\n          <div id=\"upper-content\">\r\n            <h1>Catalogue</h1>\r\n          </div>\r\n          <div id=\"catalogue\">\r\n            <div id=\"filter-box\">\r\n              <div id=\"filters\">\r\n                <h5>Filters</h5>\r\n                <hr />\r\n                {filters &&\r\n                  filters.map((filter) => {\r\n                    return (\r\n                      <Form.Check\r\n                        label={filter}\r\n                        name={filter}\r\n                        className\r\n                        checked={searchFilters.includes(filter)}\r\n                        onChange={(e) => {\r\n                          const checked = searchFilters.includes(filter);\r\n                          setSearchFilters((prev) =>\r\n                            checked\r\n                              ? prev.filter((sf) => sf !== filter)\r\n                              : [...prev, filter]\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div id=\"items\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row[\"CoreDataSets\"].OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row[\"CoreDataSets\"].Genus} ${row[\"CoreDataSets\"].SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row[\"CoreDataSets\"].AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\ResetPassword\\index.js",["709","710"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\SideBar\\index.js",["711"],"import { Avatar }                     from '@material-ui/core';\r\nimport CloseRoundedIcon               from '@material-ui/icons/CloseRounded';\r\nimport ExitToAppIcon                  from '@material-ui/icons/ExitToApp';\r\nimport LayersIcon                     from '@material-ui/icons/Layers';\r\nimport MenuRoundedIcon                from '@material-ui/icons/MenuRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector }   from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\nimport { authConstants }              from '../../actions/constants';\r\nimport { sidebarData }                from './sidebardata';\r\n// import Image from \"./image.jpg\";\r\nimport './style.css';\r\n\r\nconst SideBar = (props) => {\r\n  const sidebarCollapse = useSelector((state) => state.sidebar.collapsed);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(sidebarCollapse);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const showNavbar = (toggleId, navId, bodyId, headerId, dashboardId) => {\r\n  //   dispatch({ type: authConstants.COLLAPSE_SIDEBAR });\r\n  //   // console.log(\"showing sidebar\");\r\n\r\n  //   const toggle = document.getElementById(toggleId),\r\n  //     nav = document.getElementById(navId),\r\n  //     bodypd = document.getElementById(bodyId),\r\n  //     headerpd = document.getElementById(headerId),\r\n  //     dashboardpd = document.getElementById(dashboardId);\r\n  //   if (toggle && nav && bodypd && headerpd) {\r\n  //     // nav.classList.toggle(\"show\");\r\n  //     // bodypd.classList.toggle(\"body-pd\");\r\n  //     headerpd.classList.toggle(\"body-pd\");\r\n  //     dashboardpd.classList.toggle(\"body-pd\");\r\n  //   }\r\n  // };\r\n\r\n  // if (sidebarCollapse === false) {\r\n  //   console.log(sidebarCollapse);\r\n  //   showNavbar(\r\n  //     \"header__toggle\",\r\n  //     \"nav-bar\",\r\n  //     \"body-pd\",\r\n  //     \"header\",\r\n  //     \"dashboard__content\"\r\n  //   );\r\n  // }\r\n\r\n  const changeActive = (e) => {\r\n    const link_color = document.querySelectorAll('.nav__link');\r\n    if (link_color) {\r\n      link_color.forEach((l) => l.classList.remove('active'));\r\n      e.currentTarget.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={sidebarCollapsed ? null : 'body-pd'} id=\"body-pd\">\r\n      <header\r\n        className={`header ${sidebarCollapsed ? null : 'body-pd'}`}\r\n        id=\"header\"\r\n      >\r\n        <div\r\n          className=\"header__toggle\"\r\n          id=\"header__toggle\"\r\n          onClick={(e) => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <MenuRoundedIcon /> : <CloseRoundedIcon />}\r\n        </div>\r\n\r\n        <div className=\"header__img\">\r\n          <Avatar src={user.profilePicture} />\r\n          {/* <img src={user.profilePicture} /> */}\r\n        </div>\r\n      </header>\r\n      <div\r\n        className={`l-navbar ${sidebarCollapsed ? null : 'show'}`}\r\n        id=\"nav-bar\"\r\n      >\r\n        <nav className=\"nav\">\r\n          <div>\r\n            <div id=\"brand\">\r\n              <div className=\"brand_logo\">\r\n                <LayersIcon />\r\n              </div>\r\n              <div className=\"brand_name\">NCCP</div>\r\n            </div>\r\n            <div>\r\n              {sidebarData.map((link, key) => {\r\n                return (\r\n                  <Link\r\n                    to={link.link}\r\n                    className={`nav__link ${\r\n                      props.active.toLowerCase() === link.title.toLowerCase()\r\n                        ? 'active'\r\n                        : null\r\n                    }`}\r\n                    key={key}\r\n                  >\r\n                    {link.icon}\r\n                    <div className=\"nav_link_title\">{link.title}</div>\r\n                  </Link>\r\n                );\r\n              })}\r\n              {/* <Link\r\n                to=\"/AdminDashboard\"\r\n                className=\"nav__link active\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <DashboardIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Dashboard</div>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/dashboard/users\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <PeopleRoundedIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Users</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/orders\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <ListAltIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Orders</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/deposits\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AccountBalanceIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Deposits</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/reports\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AssessmentIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Reports</div>\r\n              </Link> */}\r\n            </div>\r\n          </div>\r\n          <Link\r\n            onClick={(e) => dispatch({ type: authConstants.LOGOUT })}\r\n            className=\"nav__link\"\r\n            to=\"\"\r\n          >\r\n            <ExitToAppIcon className=\"nav_link_logo\" />\r\n            <div className=\"nav_link_title\">Logout</div>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className={`dashboard__content ${sidebarCollapsed ? null : 'body-pd'}`}\r\n        id=\"dashboard__content\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\DropDown\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step13\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["712"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepNineForm = (initialValue, handleSubmission, StepNineValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepNineValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepNineForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\Header\\index.js",["713"],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\DashboardCatalogue\\index.js",["714","715"],"import React, { useEffect, useRef, useState }           from 'react';\r\nimport { Button, Container, Form, Row, Spinner, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector }                     from 'react-redux';\r\nimport { Link, Redirect }                               from 'react-router-dom';\r\nimport { deleteMicroorganism, getCatalogueData, }       from '../../actions/catalogue.actions';\r\nimport Layout                                           from '../../components/Layout';\r\nimport DeleteUserModal                                  from '../../components/Modals/DeleteUserModal';\r\nimport Input                                            from '../../components/UI/Input/input';\r\n\r\nconst DashboardCatalogue = (props) => {\r\n  const { authenticate, token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const filters = [\r\n    'bacteria',\r\n    'fungi',\r\n    'archaea',\r\n    'antibody',\r\n    'microalgae',\r\n    'phage',\r\n    'virus',\r\n    'yeast',\r\n  ];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  //delete hook\r\n  const [deleteRecordId, setDeleteRecordId] = useState('');\r\n\r\n  const columns = data[0] && Object.keys(data[0].CoreDataSets);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(\r\n          row['CoreDataSets']['OrganismType'].toLowerCase()\r\n        )\r\n        : true;\r\n\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row['CoreDataSets'][column]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_M_Permission\r\n              ? '/dashboard/details'\r\n              : '#',\r\n            state   : { id: permissions.view_M_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_M_Permission ? 'primary' : 'secondary'}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_M_Permission ? 'danger' : 'secondary'}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const deleteRecordRef = useRef();\r\n  const microroganismAddRef = useRef();\r\n\r\n  if (!authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row\r\n          style={{\r\n            display       : 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          {filters &&\r\n          filters.map((filter) => {\r\n            return (\r\n              <Form.Check\r\n                label={filter}\r\n                name={filter}\r\n                checked={searchFilters.includes(filter)}\r\n                onChange={(e) => {\r\n                  const checked = searchFilters.includes(filter);\r\n                  setSearchFilters((prev) =>\r\n                                     checked\r\n                                       ? prev.filter((sf) => sf !== filter)\r\n                                       : [...prev, filter]\r\n                  );\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n          <Link to=\"/dashboard/addMicroorganism\">\r\n            <Button>Add</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n        <tr>\r\n          {columns &&\r\n          columns.map((heading) => {\r\n            return <th>{heading}</th>;\r\n          })}\r\n          <th className=\"text-center\">Options</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {search(data).map((row) => {\r\n          return (\r\n            <tr>\r\n              {columns.map((heading) => {\r\n                return <td>{row['CoreDataSets'][heading]}</td>;\r\n              })}\r\n              <td style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                {recordOptions(row._id)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogue;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step2\\index.js",[],"C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js",["716"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepFiveForm = (initialValue, handleSubmission, StepFiveValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFiveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFiveForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\containers\\MicroorganismMenu\\MicroorganismMenu.js",["717","718"],"import { SearchOutlined }             from '@material-ui/icons';\r\nimport SideBar from 'components/SideBar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Form, Spinner, }  from 'react-bootstrap';\r\nimport { useDispatch, useSelector }   from 'react-redux';\r\nimport { Link }                       from 'react-router-dom';\r\n\r\nimport { addItemToCart, getCatalogueData, } from '../../actions';\r\nimport Layout                               from '../../components/Layout/index';\r\nimport PageHeader                           from '../../components/PageHeader';\r\nimport { ReactComponent as Bacteria }       from './Icons/bacterium-solid.svg';\r\nimport './style.css';\r\n\r\nconst MicroorganismMenu = (props) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const filters = [\r\n    'bacteria',\r\n    'fungi',\r\n    'archaea',\r\n    'antibody',\r\n    'microalgae',\r\n    'phage',\r\n    'virus',\r\n    'yeast',\r\n  ];\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [addedToCart, setAddedToCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row['OrganismType'].toLowerCase())\r\n        : true;\r\n      // console.log(\r\n      //   columns &&\r\n      //     columns.some((column) => {\r\n      //       return (\r\n      //         applyFilter &&\r\n      //         row[column]\r\n      //           .toString()\r\n      //           .toLowerCase()\r\n      //           .indexOf(query.toLowerCase()) > -1\r\n      //       );\r\n      //     })\r\n      // );\r\n      return (\r\n        columns &&\r\n        columns.some((column) => {\r\n          return (\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1\r\n          );\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const addToCart = (row) => {\r\n    const { id } = row;\r\n    setAddedToCart([...addedToCart, id]);\r\n    const { OrganismType, Genus, SpeciesEpithet } = row;\r\n    dispatch(addItemToCart({ id: id, OrganismType, Genus, SpeciesEpithet }));\r\n  };\r\n\r\n  if (fetching) {\r\n    <Layout>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Layout>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n\r\n      <div className=\"page-heading\">\r\n        <Container className=\"page-heading-content\">\r\n          <h1>Catalogue</h1>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"catalogue-div\">\r\n        <Container className=\"catalogue-content\">\r\n          <div className=\"search-bar-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              id=\"search-bar-input\"\r\n            />\r\n            <SearchOutlined className=\"search-bar-icon\" fontSize=\"32px\" />\r\n          </div>\r\n          <div className=\"search-filters-box\">\r\n            <h3>Filters</h3>\r\n            <hr />\r\n            {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  className=\"filter-check\"\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                                       checked\r\n                                         ? prev.filter((sf) => sf !== filter)\r\n                                         : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"catalogue-data-content-box\">\r\n            <div>\r\n              {search(data).map((row) => {\r\n                return (\r\n\r\n                  <SideBar active=\"Microorganism Menu\">\r\n                    \r\n                 \r\n                  <div className=\"catalogue-data-item\">\r\n                    <div>\r\n                      <Bacteria className=\"image\" />\r\n                      <h4 className=\"catalogue-data-item-organism-type\">\r\n                        {row.OrganismType}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"item-detail\">\r\n                      <Link\r\n                        className=\"catalogue-data-item-name\"\r\n                        to={{\r\n                          pathname: '/itemDetails',\r\n                          state   : { id: row.id },\r\n                        }}\r\n                      >\r\n                        <h4 className=\"item-name\">{`${row.Genus} ${row.SpeciesEpithet}`}</h4>\r\n                        {/* <h3 className=\"arrow-box\">\r\n                          <Arrow className=\"arrow\" />\r\n                        </h3> */}\r\n                      </Link>\r\n                      <span\r\n                        className=\"catalogue-data-item-accession-number\">{`Accession Number    ${row.AccessionNumber}`}</span>\r\n                      <span className=\"catalogue-data-item-strain-type\">{`Strain Type      ${row.Status}`}</span>\r\n                      <span\r\n                        className=\"catalogue-data-item-bio-hazard-level\">{`Bio Hazard Level     ${row.BioHazardLevel}`}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        className={\r\n                          addedToCart.includes(row.id)\r\n                            ? 'add-to-cart-button-disabled'\r\n                            : 'add-to-cart-button'\r\n                        }\r\n                        onClick={(e) => addToCart(row)}\r\n                      >\r\n                        {addedToCart.includes(row.id)\r\n                          ? 'Added To Cart'\r\n                          : 'Add To Cart'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                   </SideBar>\r\n                );\r\n                \r\n              })\r\n              \r\n              }\r\n              {/* {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row.OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row.Genus} ${row.SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row.AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <Layout>\r\n        <Jumbotron>\r\n          <div id=\"upper-content\">\r\n            <h1>Catalogue</h1>\r\n          </div>\r\n          <div id=\"catalogue\">\r\n            <div id=\"filter-box\">\r\n              <div id=\"filters\">\r\n                <h5>Filters</h5>\r\n                <hr />\r\n                {filters &&\r\n                  filters.map((filter) => {\r\n                    return (\r\n                      <Form.Check\r\n                        label={filter}\r\n                        name={filter}\r\n                        className\r\n                        checked={searchFilters.includes(filter)}\r\n                        onChange={(e) => {\r\n                          const checked = searchFilters.includes(filter);\r\n                          setSearchFilters((prev) =>\r\n                            checked\r\n                              ? prev.filter((sf) => sf !== filter)\r\n                              : [...prev, filter]\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div id=\"items\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row[\"CoreDataSets\"].OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row[\"CoreDataSets\"].Genus} ${row[\"CoreDataSets\"].SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row[\"CoreDataSets\"].AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MicroorganismMenu;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["719"],"import { useEffect, useState } from 'react';\r\n\r\nconst useStepThirteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThirteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThirteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n               ...value,\r\n               [e.target.name]: e.target.value,\r\n             });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThirteenForm;\r\n","C:\\Users\\DELL\\Desktop\\FYP WEB\\fyp-frontend\\src\\components\\PageHeader\\index.js",["720","721","722","723","724","725","726","727","728"],{"ruleId":"729","replacedBy":"730"},{"ruleId":"731","replacedBy":"732"},{"ruleId":"733","severity":1,"message":"734","line":20,"column":1,"nodeType":"735","endLine":53,"endColumn":3},{"ruleId":"736","severity":1,"message":"737","line":21,"column":3,"nodeType":"738","messageId":"739","endLine":51,"endColumn":4},{"ruleId":"740","severity":1,"message":"741","line":43,"column":5,"nodeType":"742","messageId":"743","endLine":50,"endColumn":13},{"ruleId":"729","replacedBy":"744"},{"ruleId":"731","replacedBy":"745"},{"ruleId":"733","severity":1,"message":"734","line":31,"column":1,"nodeType":"735","endLine":144,"endColumn":3},{"ruleId":"736","severity":1,"message":"737","line":32,"column":3,"nodeType":"738","messageId":"739","endLine":142,"endColumn":4},{"ruleId":"740","severity":1,"message":"741","line":58,"column":5,"nodeType":"742","messageId":"743","endLine":69,"endColumn":6},{"ruleId":"733","severity":1,"message":"734","line":23,"column":1,"nodeType":"735","endLine":63,"endColumn":3},{"ruleId":"733","severity":1,"message":"734","line":49,"column":1,"nodeType":"735","endLine":163,"endColumn":3},{"ruleId":"736","severity":1,"message":"737","line":50,"column":3,"nodeType":"738","messageId":"739","endLine":161,"endColumn":4},{"ruleId":"729","replacedBy":"746"},{"ruleId":"731","replacedBy":"747"},{"ruleId":"748","severity":1,"message":"749","line":8,"column":16,"nodeType":"750","messageId":"751","endLine":8,"endColumn":23},{"ruleId":"748","severity":1,"message":"752","line":24,"column":17,"nodeType":"750","messageId":"751","endLine":24,"endColumn":25},{"ruleId":"748","severity":1,"message":"753","line":50,"column":9,"nodeType":"750","messageId":"751","endLine":50,"endColumn":20},{"ruleId":"748","severity":1,"message":"754","line":59,"column":9,"nodeType":"750","messageId":"751","endLine":59,"endColumn":21},{"ruleId":"729","replacedBy":"755"},{"ruleId":"731","replacedBy":"756"},{"ruleId":"729","replacedBy":"757"},{"ruleId":"731","replacedBy":"758"},{"ruleId":"748","severity":1,"message":"749","line":9,"column":16,"nodeType":"750","messageId":"751","endLine":9,"endColumn":23},{"ruleId":"748","severity":1,"message":"752","line":25,"column":17,"nodeType":"750","messageId":"751","endLine":25,"endColumn":25},{"ruleId":"748","severity":1,"message":"753","line":51,"column":9,"nodeType":"750","messageId":"751","endLine":51,"endColumn":20},{"ruleId":"748","severity":1,"message":"754","line":60,"column":9,"nodeType":"750","messageId":"751","endLine":60,"endColumn":21},{"ruleId":"748","severity":1,"message":"759","line":8,"column":11,"nodeType":"750","messageId":"751","endLine":8,"endColumn":16},{"ruleId":"760","severity":1,"message":"761","line":22,"column":13,"nodeType":"762","endLine":29,"endColumn":4},{"ruleId":"760","severity":1,"message":"763","line":29,"column":6,"nodeType":"764","endLine":29,"endColumn":8,"suggestions":"765"},{"ruleId":"760","severity":1,"message":"761","line":19,"column":13,"nodeType":"762","endLine":31,"endColumn":4},{"ruleId":"760","severity":1,"message":"766","line":31,"column":6,"nodeType":"764","endLine":31,"endColumn":8,"suggestions":"767"},{"ruleId":"748","severity":1,"message":"768","line":25,"column":9,"nodeType":"750","messageId":"751","endLine":25,"endColumn":17},{"ruleId":"748","severity":1,"message":"769","line":27,"column":20,"nodeType":"750","messageId":"751","endLine":27,"endColumn":31},{"ruleId":"748","severity":1,"message":"770","line":33,"column":9,"nodeType":"750","messageId":"751","endLine":33,"endColumn":25},{"ruleId":"771","severity":1,"message":"772","line":94,"column":13,"nodeType":"773","endLine":94,"endColumn":57},{"ruleId":"774","severity":1,"message":"775","line":325,"column":15,"nodeType":"773","endLine":325,"endColumn":18},{"ruleId":"774","severity":1,"message":"775","line":335,"column":17,"nodeType":"773","endLine":335,"endColumn":20},{"ruleId":"748","severity":1,"message":"776","line":11,"column":22,"nodeType":"750","messageId":"751","endLine":11,"endColumn":35},{"ruleId":"748","severity":1,"message":"777","line":16,"column":32,"nodeType":"750","messageId":"751","endLine":16,"endColumn":55},{"ruleId":"748","severity":1,"message":"778","line":100,"column":26,"nodeType":"750","messageId":"751","endLine":100,"endColumn":43},{"ruleId":"748","severity":1,"message":"779","line":131,"column":38,"nodeType":"750","messageId":"751","endLine":131,"endColumn":67},{"ruleId":"748","severity":1,"message":"780","line":10,"column":10,"nodeType":"750","messageId":"751","endLine":10,"endColumn":17},{"ruleId":"748","severity":1,"message":"781","line":12,"column":9,"nodeType":"750","messageId":"751","endLine":12,"endColumn":23},{"ruleId":"782","severity":1,"message":"783","line":54,"column":5,"nodeType":"784","messageId":"785","endLine":54,"endColumn":17},{"ruleId":"729","replacedBy":"786"},{"ruleId":"731","replacedBy":"787"},{"ruleId":"748","severity":1,"message":"788","line":48,"column":9,"nodeType":"750","messageId":"751","endLine":48,"endColumn":21},{"ruleId":"729","replacedBy":"789"},{"ruleId":"731","replacedBy":"790"},{"ruleId":"791","severity":1,"message":"792","line":10,"column":36,"nodeType":"793","messageId":"785","endLine":10,"endColumn":38},{"ruleId":"729","replacedBy":"794"},{"ruleId":"731","replacedBy":"795"},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"797"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"798"},{"ruleId":"748","severity":1,"message":"749","line":10,"column":16,"nodeType":"750","messageId":"751","endLine":10,"endColumn":23},{"ruleId":"748","severity":1,"message":"752","line":26,"column":17,"nodeType":"750","messageId":"751","endLine":26,"endColumn":25},{"ruleId":"748","severity":1,"message":"753","line":52,"column":9,"nodeType":"750","messageId":"751","endLine":52,"endColumn":20},{"ruleId":"748","severity":1,"message":"754","line":61,"column":9,"nodeType":"750","messageId":"751","endLine":61,"endColumn":21},{"ruleId":"760","severity":1,"message":"799","line":24,"column":6,"nodeType":"764","endLine":24,"endColumn":8,"suggestions":"800"},{"ruleId":"760","severity":1,"message":"801","line":22,"column":6,"nodeType":"764","endLine":22,"endColumn":8,"suggestions":"802"},{"ruleId":"748","severity":1,"message":"803","line":17,"column":10,"nodeType":"750","messageId":"751","endLine":17,"endColumn":20},{"ruleId":"748","severity":1,"message":"804","line":17,"column":22,"nodeType":"750","messageId":"751","endLine":17,"endColumn":35},{"ruleId":"760","severity":1,"message":"805","line":28,"column":6,"nodeType":"764","endLine":28,"endColumn":8,"suggestions":"806"},{"ruleId":"748","severity":1,"message":"749","line":8,"column":16,"nodeType":"750","messageId":"751","endLine":8,"endColumn":23},{"ruleId":"748","severity":1,"message":"752","line":24,"column":17,"nodeType":"750","messageId":"751","endLine":24,"endColumn":25},{"ruleId":"748","severity":1,"message":"753","line":50,"column":9,"nodeType":"750","messageId":"751","endLine":50,"endColumn":20},{"ruleId":"748","severity":1,"message":"754","line":59,"column":9,"nodeType":"750","messageId":"751","endLine":59,"endColumn":21},{"ruleId":"748","severity":1,"message":"807","line":1,"column":8,"nodeType":"750","messageId":"751","endLine":1,"endColumn":13},{"ruleId":"760","severity":1,"message":"796","line":28,"column":6,"nodeType":"764","endLine":28,"endColumn":20,"suggestions":"808"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"809"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"810"},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"811"},{"ruleId":"748","severity":1,"message":"812","line":1,"column":7,"nodeType":"750","messageId":"751","endLine":1,"endColumn":21},{"ruleId":"760","severity":1,"message":"799","line":14,"column":6,"nodeType":"764","endLine":14,"endColumn":12,"suggestions":"813"},{"ruleId":"733","severity":1,"message":"734","line":25,"column":1,"nodeType":"735","endLine":26,"endColumn":81},{"ruleId":"733","severity":1,"message":"734","line":10,"column":1,"nodeType":"735","endLine":48,"endColumn":3},{"ruleId":"736","severity":1,"message":"737","line":11,"column":3,"nodeType":"738","messageId":"739","endLine":46,"endColumn":4},{"ruleId":"733","severity":1,"message":"734","line":14,"column":1,"nodeType":"735","endLine":120,"endColumn":3},{"ruleId":"733","severity":1,"message":"734","line":7,"column":1,"nodeType":"735","endLine":19,"endColumn":3},{"ruleId":"733","severity":1,"message":"734","line":13,"column":1,"nodeType":"735","endLine":46,"endColumn":3},{"ruleId":"733","severity":1,"message":"734","line":12,"column":1,"nodeType":"735","endLine":41,"endColumn":3},{"ruleId":"736","severity":1,"message":"737","line":13,"column":3,"nodeType":"738","messageId":"739","endLine":39,"endColumn":4},{"ruleId":"748","severity":1,"message":"749","line":6,"column":16,"nodeType":"750","messageId":"751","endLine":6,"endColumn":23},{"ruleId":"748","severity":1,"message":"814","line":16,"column":10,"nodeType":"750","messageId":"751","endLine":16,"endColumn":20},{"ruleId":"748","severity":1,"message":"815","line":16,"column":22,"nodeType":"750","messageId":"751","endLine":16,"endColumn":35},{"ruleId":"816","severity":1,"message":"817","line":233,"column":9,"nodeType":"818","messageId":"819","endLine":233,"endColumn":15},{"ruleId":"748","severity":1,"message":"820","line":25,"column":10,"nodeType":"750","messageId":"751","endLine":25,"endColumn":15},{"ruleId":"748","severity":1,"message":"821","line":25,"column":17,"nodeType":"750","messageId":"751","endLine":25,"endColumn":25},{"ruleId":"748","severity":1,"message":"822","line":26,"column":10,"nodeType":"750","messageId":"751","endLine":26,"endColumn":18},{"ruleId":"748","severity":1,"message":"823","line":26,"column":20,"nodeType":"750","messageId":"751","endLine":26,"endColumn":31},{"ruleId":"748","severity":1,"message":"824","line":28,"column":10,"nodeType":"750","messageId":"751","endLine":28,"endColumn":20},{"ruleId":"748","severity":1,"message":"825","line":28,"column":22,"nodeType":"750","messageId":"751","endLine":28,"endColumn":35},{"ruleId":"748","severity":1,"message":"826","line":50,"column":9,"nodeType":"750","messageId":"751","endLine":50,"endColumn":15},{"ruleId":"827","severity":1,"message":"828","line":33,"column":23,"nodeType":"773","endLine":33,"endColumn":81},{"ruleId":"748","severity":1,"message":"807","line":1,"column":8,"nodeType":"750","messageId":"751","endLine":1,"endColumn":13},{"ruleId":"760","severity":1,"message":"796","line":29,"column":6,"nodeType":"764","endLine":29,"endColumn":14,"suggestions":"829"},{"ruleId":"748","severity":1,"message":"807","line":1,"column":8,"nodeType":"750","messageId":"751","endLine":1,"endColumn":13},{"ruleId":"760","severity":1,"message":"796","line":22,"column":6,"nodeType":"764","endLine":22,"endColumn":27,"suggestions":"830"},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"831"},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"832"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"833"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"834"},{"ruleId":"748","severity":1,"message":"768","line":9,"column":9,"nodeType":"750","messageId":"751","endLine":9,"endColumn":17},{"ruleId":"748","severity":1,"message":"807","line":1,"column":8,"nodeType":"750","messageId":"751","endLine":1,"endColumn":13},{"ruleId":"760","severity":1,"message":"796","line":22,"column":6,"nodeType":"764","endLine":22,"endColumn":20,"suggestions":"835"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"836"},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"837"},{"ruleId":"748","severity":1,"message":"807","line":1,"column":8,"nodeType":"750","messageId":"751","endLine":1,"endColumn":13},{"ruleId":"760","severity":1,"message":"796","line":53,"column":6,"nodeType":"764","endLine":53,"endColumn":21,"suggestions":"838"},{"ruleId":"733","severity":1,"message":"839","line":89,"column":1,"nodeType":"735","endLine":163,"endColumn":2},{"ruleId":"791","severity":1,"message":"792","line":72,"column":24,"nodeType":"793","messageId":"785","endLine":72,"endColumn":26},{"ruleId":"748","severity":1,"message":"840","line":14,"column":11,"nodeType":"750","messageId":"751","endLine":14,"endColumn":23},{"ruleId":"760","severity":1,"message":"799","line":36,"column":6,"nodeType":"764","endLine":36,"endColumn":8,"suggestions":"841"},{"ruleId":"748","severity":1,"message":"842","line":156,"column":10,"nodeType":"750","messageId":"751","endLine":156,"endColumn":23},{"ruleId":"748","severity":1,"message":"843","line":156,"column":25,"nodeType":"750","messageId":"751","endLine":156,"endColumn":41},{"ruleId":"748","severity":1,"message":"788","line":48,"column":9,"nodeType":"750","messageId":"751","endLine":48,"endColumn":21},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"844"},{"ruleId":"748","severity":1,"message":"845","line":13,"column":10,"nodeType":"750","messageId":"751","endLine":13,"endColumn":19},{"ruleId":"760","severity":1,"message":"846","line":32,"column":6,"nodeType":"764","endLine":32,"endColumn":8,"suggestions":"847"},{"ruleId":"748","severity":1,"message":"848","line":103,"column":9,"nodeType":"750","messageId":"751","endLine":103,"endColumn":28},{"ruleId":"760","severity":1,"message":"796","line":19,"column":6,"nodeType":"764","endLine":19,"endColumn":14,"suggestions":"849"},{"ruleId":"748","severity":1,"message":"840","line":15,"column":11,"nodeType":"750","messageId":"751","endLine":15,"endColumn":23},{"ruleId":"760","severity":1,"message":"799","line":37,"column":6,"nodeType":"764","endLine":37,"endColumn":8,"suggestions":"850"},{"ruleId":"760","severity":1,"message":"796","line":23,"column":6,"nodeType":"764","endLine":23,"endColumn":14,"suggestions":"851"},{"ruleId":"748","severity":1,"message":"852","line":23,"column":9,"nodeType":"750","messageId":"751","endLine":23,"endColumn":14},{"ruleId":"774","severity":1,"message":"775","line":54,"column":17,"nodeType":"773","endLine":54,"endColumn":61},{"ruleId":"774","severity":1,"message":"775","line":57,"column":17,"nodeType":"773","endLine":57,"endColumn":61},{"ruleId":"774","severity":1,"message":"775","line":60,"column":17,"nodeType":"773","endLine":60,"endColumn":61},{"ruleId":"774","severity":1,"message":"775","line":63,"column":17,"nodeType":"773","endLine":63,"endColumn":61},{"ruleId":"774","severity":1,"message":"853","line":104,"column":13,"nodeType":"773","endLine":104,"endColumn":59},{"ruleId":"774","severity":1,"message":"853","line":107,"column":13,"nodeType":"773","endLine":107,"endColumn":59},{"ruleId":"774","severity":1,"message":"853","line":110,"column":13,"nodeType":"773","endLine":110,"endColumn":59},{"ruleId":"774","severity":1,"message":"853","line":113,"column":13,"nodeType":"773","endLine":113,"endColumn":59},"no-native-reassign",["854"],"no-negated-in-lhs",["855"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["854"],["855"],["854"],["855"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'setQuery' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.",["854"],["855"],["854"],["855"],"'token' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["856"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["857"],"'dispatch' is assigned a value but never used.","'setViewport' is assigned a value but never used.","'loggedInNavLinks' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setRangeDates' is assigned a value but never used.","'setActiveUsersChartData' is assigned a value but never used.","'setsalesChartData' is assigned a value but never used.","'setpopularCategoriesChartData' is assigned a value but never used.","'options' is assigned a value but never used.","'sideBarOptions' is assigned a value but never used.","no-dupe-keys","Duplicate key 'borderradius'.","ObjectExpression","unexpected",["854"],["855"],"'changeActive' is assigned a value but never used.",["854"],["855"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["854"],["855"],"React Hook useEffect has missing dependencies: 'handleSubmission' and 'isSubmitting'. Either include them or remove the dependency array. If 'handleSubmission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["858"],["859"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["860"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.state'. Either include them or remove the dependency array.",["861"],"'updateUser' is assigned a value but never used.","'setUpdateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'userID'. Either include them or remove the dependency array.",["862"],"'React' is defined but never used.",["863"],["864"],["865"],["866"],"'getCurrentDate' is assigned a value but never used.",["867"],"'datastatus' is assigned a value but never used.","'setDatastatus' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'signUpForm' is assigned a value but never used.","'setSignUpForm' is assigned a value but never used.","'goBack' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["868"],["869"],["870"],["871"],["872"],["873"],["874"],["875"],["876"],["877"],"Unexpected default export of anonymous function","'authenticate' is assigned a value but never used.",["878"],"'currentSlider' is assigned a value but never used.","'setCurrentSlider' is assigned a value but never used.",["879"],"'cartCount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["880"],"'microroganismAddRef' is assigned a value but never used.",["881"],["882"],["883"],"'error' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"888","fix":"890"},{"desc":"891","fix":"892"},{"desc":"893","fix":"894"},{"desc":"895","fix":"896"},{"desc":"897","fix":"898"},{"desc":"888","fix":"899"},{"desc":"888","fix":"900"},{"desc":"888","fix":"901"},{"desc":"902","fix":"903"},{"desc":"888","fix":"904"},{"desc":"905","fix":"906"},{"desc":"888","fix":"907"},{"desc":"888","fix":"908"},{"desc":"888","fix":"909"},{"desc":"888","fix":"910"},{"desc":"911","fix":"912"},{"desc":"888","fix":"913"},{"desc":"888","fix":"914"},{"desc":"915","fix":"916"},{"desc":"891","fix":"917"},{"desc":"888","fix":"918"},{"desc":"919","fix":"920"},{"desc":"888","fix":"921"},{"desc":"891","fix":"922"},{"desc":"888","fix":"923"},"Update the dependencies array to be: [id]",{"range":"924","text":"925"},"Update the dependencies array to be: [token]",{"range":"926","text":"927"},"Update the dependencies array to be: [errors, handleSubmission, isSubmitting]",{"range":"928","text":"929"},{"range":"930","text":"929"},"Update the dependencies array to be: [dispatch]",{"range":"931","text":"932"},"Update the dependencies array to be: [dispatch, props.location.state]",{"range":"933","text":"934"},"Update the dependencies array to be: [dispatch, token, userID]",{"range":"935","text":"936"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signUpErrors]",{"range":"937","text":"938"},{"range":"939","text":"929"},{"range":"940","text":"929"},{"range":"941","text":"929"},"Update the dependencies array to be: [auth, dispatch]",{"range":"942","text":"943"},{"range":"944","text":"929"},"Update the dependencies array to be: [handleSubmission, isSubmitting, resetPasswordErrors]",{"range":"945","text":"946"},{"range":"947","text":"929"},{"range":"948","text":"929"},{"range":"949","text":"929"},{"range":"950","text":"929"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signInErrors]",{"range":"951","text":"952"},{"range":"953","text":"929"},{"range":"954","text":"929"},"Update the dependencies array to be: [addUserErrors, handleSubmission, isSubmitting]",{"range":"955","text":"956"},{"range":"957","text":"932"},{"range":"958","text":"929"},"Update the dependencies array to be: [dispatch, token]",{"range":"959","text":"960"},{"range":"961","text":"929"},{"range":"962","text":"932"},{"range":"963","text":"929"},[1012,1014],"[id]",[1247,1249],"[token]",[542,550],"[errors, handleSubmission, isSubmitting]",[563,571],[1036,1038],"[dispatch]",[857,859],"[dispatch, props.location.state]",[1280,1282],"[dispatch, token, userID]",[1220,1234],"[handleSubmission, isSubmitting, signUpErrors]",[560,568],[560,568],[545,553],[442,448],"[auth, dispatch]",[1120,1128],[835,856],"[handleSubmission, isSubmitting, resetPasswordErrors]",[542,550],[542,550],[560,568],[569,577],[753,767],"[handleSubmission, isSubmitting, signInErrors]",[563,571],[542,550],[3611,3626],"[addUserErrors, handleSubmission, isSubmitting]",[1272,1274],[545,553],[1361,1363],"[dispatch, token]",[545,553],[1323,1325],[569,577]]
>>>>>>> 7881b8baddd28c9b2e471bf8ebb3c03b9ca82c7a
