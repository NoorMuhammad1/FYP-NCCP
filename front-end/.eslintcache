[{"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\index.js":"1","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\store\\index.js":"2","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\HomePage\\index.js":"3","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Signup\\index.js":"4","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\index.js":"5","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Details\\index.js":"6","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Users\\index.js":"7","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js":"8","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\EmailVerified\\index.js":"9","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js":"10","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardPayments\\index.js":"11","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js":"12","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Layout\\index.js":"13","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\signup.actions.js":"14","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\user.actions.js":"15","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Logo\\index.js":"16","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\helpers\\axios.js":"17","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Header\\index.js":"18","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\sidebar.reducer.js":"19","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\DropDown\\index.js":"20","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ObjectSlider\\Item.js":"21","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\updatingUser.reducer.js":"22","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\itemInfo.reducer.js":"23","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\auth.reducers.js":"24","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js":"25","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\auth.actions.js":"26","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInUseForm.js":"27","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\OrderItemList\\index.js":"28","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js":"29","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js":"30","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js":"31","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"32","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js":"33","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddUserModal\\index.js":"34","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js":"35","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js":"36","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"37","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js":"38","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"39","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js":"40","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js":"41","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js":"42","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js":"43","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\TagInput\\index.js":"44","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reportWebVitals.js":"45","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Deposits\\index.js":"46","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\User\\index.js":"47","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ForgetPassword\\index.js":"48","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\index.js":"49","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardReports\\index.js":"50","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\catalogue.actions.js":"51","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js":"52","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\PageHeader\\index.js":"53","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\cart.reducer.js":"54","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ItemListCard\\index.js":"55","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\SideBar\\sidebardata.js":"56","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\catalogue.reducers.js":"57","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js":"58","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js":"59","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpValidator.js":"60","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpValidator.js":"61","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js":"62","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js":"63","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js":"64","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddMicroorganismModal\\index.js":"65","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"66","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js":"67","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js":"68","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js":"69","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"70","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js":"71","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\index.js":"72","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Dashboard\\index.js":"73","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogue\\index.js":"74","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardDetails\\index.js":"75","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardSettings\\index.js":"76","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\cart.actions.js":"77","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ObjectSlider\\index.js":"78","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\SideBar\\index.js":"79","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\SearchBar\\index.js":"80","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\dashboard.reducers.js":"81","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\helpers\\templates.js":"82","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js":"83","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\DepositItemList\\index.js":"84","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\ResponseModal\\index.js":"85","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"86","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"87","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js":"88","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"89","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js":"90","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js":"91","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"92","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardUsers\\index.js":"93","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\App.js":"94","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardOrders\\index.js":"95","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\UI\\Input\\input.js":"96","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\server_urls.js\\index.js":"97","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js":"98","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"99","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js":"100","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js":"101","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"102","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Catalogue\\index.js":"103","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\index.js":"104","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Orders\\index.js":"105","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AddMicroorganism\\index.js":"106","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js":"107","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\user.reducer.js":"108","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\signup.reducers.js":"109","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"110","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js":"111","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js":"112","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js":"113","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js":"114","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\HOC\\PrivateRoute.js":"115","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Cart\\index.js":"116","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddUserForm\\index.js":"117","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpUseForm.js":"118","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInValidator.js":"119","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\index.js":"120","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Layout\\SidebarData.js":"121","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"122","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js":"123","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\constants.js":"124","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ItemList\\index.js":"125"},{"size":754,"mtime":1615887301941,"results":"126","hashOfConfig":"127"},{"size":1229,"mtime":1615887301948,"results":"128","hashOfConfig":"127"},{"size":19426,"mtime":1615985675917,"results":"129","hashOfConfig":"127"},{"size":7571,"mtime":1615887301938,"results":"130","hashOfConfig":"127"},{"size":25776,"mtime":1615887301937,"results":"131","hashOfConfig":"127"},{"size":2387,"mtime":1615887301922,"results":"132","hashOfConfig":"127"},{"size":5823,"mtime":1615887301940,"results":"133","hashOfConfig":"127"},{"size":2718,"mtime":1615887301921,"results":"134","hashOfConfig":"127"},{"size":2390,"mtime":1615887301923,"results":"135","hashOfConfig":"127"},{"size":3960,"mtime":1615887301909,"results":"136","hashOfConfig":"127"},{"size":311,"mtime":1615887301911,"results":"137","hashOfConfig":"127"},{"size":12758,"mtime":1615887301907,"results":"138","hashOfConfig":"127"},{"size":2348,"mtime":1615887301887,"results":"139","hashOfConfig":"127"},{"size":3663,"mtime":1615887301855,"results":"140","hashOfConfig":"127"},{"size":4014,"mtime":1615887301855,"results":"141","hashOfConfig":"127"},{"size":209,"mtime":1615887301888,"results":"142","hashOfConfig":"127"},{"size":1196,"mtime":1615887301940,"results":"143","hashOfConfig":"127"},{"size":2539,"mtime":1615887301883,"results":"144","hashOfConfig":"127"},{"size":386,"mtime":1615887301945,"results":"145","hashOfConfig":"127"},{"size":1188,"mtime":1615887301879,"results":"146","hashOfConfig":"127"},{"size":363,"mtime":1615887301895,"results":"147","hashOfConfig":"127"},{"size":961,"mtime":1615887301946,"results":"148","hashOfConfig":"127"},{"size":1057,"mtime":1615887301944,"results":"149","hashOfConfig":"127"},{"size":1169,"mtime":1615887301942,"results":"150","hashOfConfig":"127"},{"size":705,"mtime":1615887301932,"results":"151","hashOfConfig":"127"},{"size":1779,"mtime":1615887301852,"results":"152","hashOfConfig":"127"},{"size":934,"mtime":1615887301934,"results":"153","hashOfConfig":"127"},{"size":3495,"mtime":1615887301896,"results":"154","hashOfConfig":"127"},{"size":3950,"mtime":1615887301870,"results":"155","hashOfConfig":"127"},{"size":8500,"mtime":1615887301869,"results":"156","hashOfConfig":"127"},{"size":2190,"mtime":1615887301862,"results":"157","hashOfConfig":"127"},{"size":1630,"mtime":1615887301856,"results":"158","hashOfConfig":"127"},{"size":745,"mtime":1615887301891,"results":"159","hashOfConfig":"127"},{"size":6085,"mtime":1615887301890,"results":"160","hashOfConfig":"127"},{"size":774,"mtime":1615887301870,"results":"161","hashOfConfig":"127"},{"size":324,"mtime":1615887301866,"results":"162","hashOfConfig":"127"},{"size":774,"mtime":1615887301869,"results":"163","hashOfConfig":"127"},{"size":230,"mtime":1615887301863,"results":"164","hashOfConfig":"127"},{"size":794,"mtime":1615887301862,"results":"165","hashOfConfig":"127"},{"size":1429,"mtime":1615887301858,"results":"166","hashOfConfig":"127"},{"size":770,"mtime":1615887301858,"results":"167","hashOfConfig":"127"},{"size":790,"mtime":1615887301868,"results":"168","hashOfConfig":"127"},{"size":1596,"mtime":1615887301891,"results":"169","hashOfConfig":"127"},{"size":1413,"mtime":1615887301904,"results":"170","hashOfConfig":"127"},{"size":375,"mtime":1615887301946,"results":"171","hashOfConfig":"127"},{"size":275,"mtime":1615887301922,"results":"172","hashOfConfig":"127"},{"size":5307,"mtime":1615887301939,"results":"173","hashOfConfig":"127"},{"size":2761,"mtime":1615887301924,"results":"174","hashOfConfig":"127"},{"size":6059,"mtime":1615887301932,"results":"175","hashOfConfig":"127"},{"size":253,"mtime":1615887301912,"results":"176","hashOfConfig":"127"},{"size":4628,"mtime":1615887301853,"results":"177","hashOfConfig":"127"},{"size":1735,"mtime":1615887301907,"results":"178","hashOfConfig":"127"},{"size":5917,"mtime":1615887301901,"results":"179","hashOfConfig":"127"},{"size":2818,"mtime":1615887301942,"results":"180","hashOfConfig":"127"},{"size":152,"mtime":1615887301885,"results":"181","hashOfConfig":"127"},{"size":1432,"mtime":1615984935416,"results":"182","hashOfConfig":"127"},{"size":3175,"mtime":1615887301943,"results":"183","hashOfConfig":"127"},{"size":1067,"mtime":1615887301933,"results":"184","hashOfConfig":"127"},{"size":1834,"mtime":1615887301921,"results":"185","hashOfConfig":"127"},{"size":1688,"mtime":1615887301935,"results":"186","hashOfConfig":"127"},{"size":1528,"mtime":1615887301938,"results":"187","hashOfConfig":"127"},{"size":6297,"mtime":1615887301875,"results":"188","hashOfConfig":"127"},{"size":5466,"mtime":1615887301867,"results":"189","hashOfConfig":"127"},{"size":12264,"mtime":1615887301859,"results":"190","hashOfConfig":"127"},{"size":754,"mtime":1615887301889,"results":"191","hashOfConfig":"127"},{"size":343,"mtime":1615887301872,"results":"192","hashOfConfig":"127"},{"size":770,"mtime":1615887301872,"results":"193","hashOfConfig":"127"},{"size":790,"mtime":1615887301874,"results":"194","hashOfConfig":"127"},{"size":802,"mtime":1615887301865,"results":"195","hashOfConfig":"127"},{"size":345,"mtime":1615887301860,"results":"196","hashOfConfig":"127"},{"size":1652,"mtime":1615887301890,"results":"197","hashOfConfig":"127"},{"size":641,"mtime":1615887301893,"results":"198","hashOfConfig":"127"},{"size":281,"mtime":1615887301919,"results":"199","hashOfConfig":"127"},{"size":5570,"mtime":1615887301920,"results":"200","hashOfConfig":"127"},{"size":13210,"mtime":1615971454866,"results":"201","hashOfConfig":"127"},{"size":1055,"mtime":1615887301913,"results":"202","hashOfConfig":"127"},{"size":838,"mtime":1615887301853,"results":"203","hashOfConfig":"127"},{"size":1623,"mtime":1615889142362,"results":"204","hashOfConfig":"127"},{"size":6062,"mtime":1615887301903,"results":"205","hashOfConfig":"127"},{"size":921,"mtime":1615887301902,"results":"206","hashOfConfig":"127"},{"size":1138,"mtime":1615887301944,"results":"207","hashOfConfig":"127"},{"size":161,"mtime":1615887301941,"results":"208","hashOfConfig":"127"},{"size":1016,"mtime":1615887301935,"results":"209","hashOfConfig":"127"},{"size":3344,"mtime":1615887301878,"results":"210","hashOfConfig":"127"},{"size":741,"mtime":1615887301892,"results":"211","hashOfConfig":"127"},{"size":1512,"mtime":1615887301873,"results":"212","hashOfConfig":"127"},{"size":4204,"mtime":1615887301865,"results":"213","hashOfConfig":"127"},{"size":6484,"mtime":1615887301857,"results":"214","hashOfConfig":"127"},{"size":790,"mtime":1615887301873,"results":"215","hashOfConfig":"127"},{"size":791,"mtime":1615887301867,"results":"216","hashOfConfig":"127"},{"size":365,"mtime":1615887301861,"results":"217","hashOfConfig":"127"},{"size":802,"mtime":1615887301864,"results":"218","hashOfConfig":"127"},{"size":4843,"mtime":1615888626742,"results":"219","hashOfConfig":"127"},{"size":5052,"mtime":1615887301851,"results":"220","hashOfConfig":"127"},{"size":4262,"mtime":1615887301910,"results":"221","hashOfConfig":"127"},{"size":410,"mtime":1615887301905,"results":"222","hashOfConfig":"127"},{"size":383,"mtime":1615887301947,"results":"223","hashOfConfig":"127"},{"size":1107,"mtime":1615887301866,"results":"224","hashOfConfig":"127"},{"size":343,"mtime":1615887301873,"results":"225","hashOfConfig":"127"},{"size":354,"mtime":1615887301870,"results":"226","hashOfConfig":"127"},{"size":794,"mtime":1615887301861,"results":"227","hashOfConfig":"127"},{"size":770,"mtime":1615887301859,"results":"228","hashOfConfig":"127"},{"size":12481,"mtime":1615887301918,"results":"229","hashOfConfig":"127"},{"size":33,"mtime":1615887301854,"results":"230","hashOfConfig":"127"},{"size":258,"mtime":1615887301931,"results":"231","hashOfConfig":"127"},{"size":9169,"mtime":1615887301906,"results":"232","hashOfConfig":"127"},{"size":2614,"mtime":1615887301908,"results":"233","hashOfConfig":"127"},{"size":3476,"mtime":1615887301946,"results":"234","hashOfConfig":"127"},{"size":1298,"mtime":1615887301945,"results":"235","hashOfConfig":"127"},{"size":3041,"mtime":1615887301871,"results":"236","hashOfConfig":"127"},{"size":2554,"mtime":1615887301860,"results":"237","hashOfConfig":"127"},{"size":339,"mtime":1615887301871,"results":"238","hashOfConfig":"127"},{"size":369,"mtime":1615887301864,"results":"239","hashOfConfig":"127"},{"size":770,"mtime":1615887301866,"results":"240","hashOfConfig":"127"},{"size":619,"mtime":1615887301880,"results":"241","hashOfConfig":"127"},{"size":3391,"mtime":1615887301916,"results":"242","hashOfConfig":"127"},{"size":172,"mtime":1615887301876,"results":"243","hashOfConfig":"127"},{"size":927,"mtime":1615887301938,"results":"244","hashOfConfig":"127"},{"size":748,"mtime":1615887301934,"results":"245","hashOfConfig":"127"},{"size":960,"mtime":1615887301944,"results":"246","hashOfConfig":"127"},{"size":539,"mtime":1615887301887,"results":"247","hashOfConfig":"127"},{"size":774,"mtime":1615887301876,"results":"248","hashOfConfig":"127"},{"size":649,"mtime":1615887301868,"results":"249","hashOfConfig":"127"},{"size":2581,"mtime":1615887301854,"results":"250","hashOfConfig":"127"},{"size":4181,"mtime":1615887301884,"results":"251","hashOfConfig":"127"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},"e1lozw",{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"254"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"265"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"254"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"265"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"265"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"265"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"254"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"290"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"290"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"301"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"254"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"265"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"290"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"254"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"265"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"254"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"301"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"265"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"352"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"265"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"307"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"290"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"290"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"265"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"265"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"265"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"301"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"301"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"265"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"290"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"265"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"254"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"301"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"265"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"301"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"265"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"301"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"265"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"254"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"265"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"265"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"265"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"254"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"265"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"265"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"254"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"265"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"265"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"265"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"254"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"265"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"265"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"265"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\index.js",[],["563","564"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\store\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\HomePage\\index.js",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Signup\\index.js",["602"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useForm from \"./SignUpUseForm\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport { signup } from \"../../actions/signup.actions\";\r\nconst Signup = (props) => {\r\n  const signupStore = useSelector((state) => state.sign);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmission = () => {\r\n    console.log(\"handling submission\");\r\n    const userData = {\r\n      ...value,\r\n      role: \"external\",\r\n    };\r\n    dispatch(signup(userData));\r\n  };\r\n\r\n  const { value, handleSubmit, updateValue, errors } = useForm(\r\n    handleSubmission,\r\n    SignUpValidator\r\n  );\r\n\r\n  if (signupStore.registered) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              {signupStore.error.code > 300 && (\r\n                <h2>{signupStore.error.message}</h2>\r\n              )}\r\n              <Form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"first_name\"\r\n                      label=\"Fristname\"\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      value={value.firstname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Firstname\"\r\n                    />\r\n                    {errors.firstname && <p>{errors.firstname}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"last_name\"\r\n                      label=\"Lastname\"\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      value={value.lastname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Lastname\"\r\n                    />\r\n                    {errors.lastname && <p>{errors.lastname}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"username\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      value={value.username}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"username\"\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={value.email}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Email\"\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <Form.Label>What type of user are you:</Form.Label>\r\n                    <div key={`default-radio`} className=\"mb-3\">\r\n                      <Form.Check\r\n                        label=\"Student\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-1`}\r\n                        name=\"user-type\"\r\n                        value=\"Student\"\r\n                        checked={value.type === \"Student\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Research Institute Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-2`}\r\n                        name=\"user-type\"\r\n                        value=\"ResearchInstituteRepresentative\"\r\n                        checked={\r\n                          value.type === \"ResearchInstituteRepresentative\"\r\n                        }\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Industry Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-3`}\r\n                        name=\"user-type\"\r\n                        value=\"IndustryRepresentative\"\r\n                        checked={value.type === \"IndustryRepresentative\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Input\r\n                      id=\"associated-institute-name\"\r\n                      label=\"Associated Institute Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Institute name\"\r\n                      name=\"affiliation\"\r\n                      value={value.affiliation}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.affiliation && <p>{errors.affiliation}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Group controlId=\"description-text-area\">\r\n                      <Form.Label>Description (of what you do)</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={value.description}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      {errors.description && <p>{errors.description}</p>}\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      value={value.password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                  </Col>\r\n                  {errors.password && <p>{errors.password}</p>}\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      name=\"confirm_password\"\r\n                      value={value.confirm_password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <p>{errors.confirm_password}</p>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={(e) => handleSubmit(e)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\index.js",["603","604","605","606","607","608","609","610","611","612","613","614","615","616"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col, FormLabel } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { login } from \"../../actions\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport \"./style.css\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport useSignInForm from \"./SignInUseForm\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport useFormSignUp from \"./SignUpUseForm\";\r\nimport { authConstants } from \"../../actions/constants\";\r\nimport { resetSignUpStore, signup } from \"../../actions/signup.actions\";\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signInForm, setSignInForm] = useState(true);\r\n  const [signUpForm, setSignUpForm] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const signUpStore = useSelector((state) => state.sign);\r\n  const signInStore = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal show code\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const selectUserType = (e) => {\r\n    setUserType(e.target.name);\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  const goBack = () => {\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(0%)\";\r\n  };\r\n\r\n  // method to reset the sign up  store on modal close\r\n\r\n  const reset = () => {\r\n    dispatch(resetSignUpStore());\r\n  };\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    if (signUpStore.error.found || signUpStore.registered) {\r\n      setModalOpen(true);\r\n    }\r\n  }, [signUpStore]);\r\n\r\n  useEffect(() => {\r\n    if (signInStore.error.found) {\r\n      setSignInModal(true);\r\n    }\r\n  }, [signInStore]);\r\n\r\n  const userLogin = () => {\r\n    // e.preventDefault();\r\n    const { email, password } = signInValue;\r\n    const user = {\r\n      email,\r\n      password,\r\n      token: recaptchaRef.current.getValue(),\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  // Material Ui React Material\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handleSignUpSubmission = () => {\r\n    dispatch(signup(signUpValue));\r\n  };\r\n\r\n  const {\r\n    signInValue,\r\n    handleSignInSubmit,\r\n    updateSignInValue,\r\n    signInErrors,\r\n  } = useSignInForm(userLogin, SignInValidator);\r\n\r\n  const {\r\n    handleSignUpSubmit,\r\n    signUpValue,\r\n    updateSignUpValue,\r\n    signUpErrors,\r\n  } = useFormSignUp(handleSignUpSubmission, SignUpValidator);\r\n\r\n  // Captcha functions\r\n\r\n  const recaptchaRef = useRef();\r\n\r\n  if (auth.authenticate) {\r\n    if (userType === \"employee\") {\r\n      return <Redirect to={\"/adminDashboard\"} />;\r\n    } else {\r\n      return <Redirect to={\"/\"} />;\r\n    }\r\n  }\r\n\r\n  // const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n  // const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n  // const container = document.querySelector(\".container\");\r\n\r\n  // console.log(container);\r\n\r\n  const signInButtonPress = () => {\r\n    setSignInForm(true);\r\n  };\r\n\r\n  const signUpButtonPress = () => {\r\n    setSignInForm(false);\r\n  };\r\n\r\n  // sign_up_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.add(\"sign-up-mode\");\r\n  // });\r\n\r\n  // sign_in_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.remove(\"sign-up-mode\");\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          reset();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signUpStore.registered ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {signUpStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signUpStore.registered ? \"Success\" : \"Error\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signUpStore.registered\r\n                ? \"The signup request was successful. Check your email for verification\"\r\n                : signUpStore.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={signInModal}\r\n        onClose={(e) => {\r\n          setSignInModal(false);\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={signInModal}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signInStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signInStore.error.found ? \"Error\" : null}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signInStore.error.found ? signInStore.error.message : null}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <div class={`container-div ${signInForm ? \"\" : \"sign-up-mode\"}`}>\r\n        <div class=\"forms-container\">\r\n          <div class=\"signin-signup\">\r\n            <form action=\"#\" className=\"sign-in-form\">\r\n              <div className=\"sign-in-form-slides-outer-div\">\r\n                <div\r\n                  className=\"sign-in-form-slides-inner-div\"\r\n                  id=\"sign-in-form-slides-inner-div\"\r\n                >\r\n                  <div className=\"sign-in-type\">\r\n                    <h3>What type of user are you?</h3>\r\n                    <Button name=\"user\" onClick={(e) => selectUserType(e)}>\r\n                      General User\r\n                    </Button>\r\n                    <Button name=\"employee\" onClick={(e) => selectUserType(e)}>\r\n                      Employee\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"title\">Sign In</h2>\r\n                    <TextField\r\n                      error={signInErrors.email ? true : undefined}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"e.g. name@gmail.com\"\r\n                      value={signInValue.email}\r\n                      onChange={(e) => updateSignInValue(e)}\r\n                      helperText={signInErrors.email ? signInErrors.email : \"\"}\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                    />\r\n                    <FormControl\r\n                      // className={clsx(classes.margin, classes.textField)}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                      error={signInErrors.password ? true : undefined}\r\n                      // helperText={signInErrors.password ? signInErrors.password : \"\"}\r\n                    >\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Min 6 letters & a capital letter\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={signInValue.password}\r\n                        onChange={(e) => updateSignInValue(e)}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => setShowPassword(!showPassword)}\r\n                              onMouseDown={(e) => e.preventDefault()}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <Visibility />\r\n                              ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                      />\r\n                      <FormHelperText id=\"my-helper-text\">\r\n                        {signInErrors.password ? signInErrors.password : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <Link to=\"/forgetPassword\" className=\"forget-password-link\">\r\n                      Forgot your password?\r\n                    </Link>\r\n                    <ReCAPTCHA\r\n                      ref={recaptchaRef}\r\n                      sitekey={authConstants.ReCAPTCHA_KEY}\r\n                    />\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"sign-in-btn\"\r\n                      onClick={(e) => handleSignInSubmit(e)}\r\n                    >\r\n                      sign in\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form class=\"sign-up-form\">\r\n              <h2 className=\"title\">Sign Up</h2>\r\n              <div className=\"sign-up-form-content\">\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  name=\"firstname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.firstname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.firstname}\r\n                  helperText={signUpErrors.firstname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.lastname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.lastname}\r\n                  helperText={signUpErrors.lastname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.email}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.email}\r\n                  helperText={signUpErrors.email}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Affiliation\"\r\n                  name=\"affiliation\"\r\n                  placeholder=\"Institute affiliated to\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.affiliation}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.affiliation}\r\n                  helperText={signUpErrors.affiliation}\r\n                  required\r\n                />\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={signUpErrors.type}\r\n                  className=\"user-type-radio-group\"\r\n                >\r\n                  <FormLabel component=\"legend\">\r\n                    What type of user are you?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-label=\"user-type\"\r\n                    name=\"type\"\r\n                    value={signUpValue.type}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"ResearchInstitute\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Research Institute\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Industry\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Industry\"\r\n                    />\r\n                  </RadioGroup>\r\n                  <FormHelperText>\r\n                    {signUpErrors.type ? signUpErrors.type : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                {/* \r\n                <TextField\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.description}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.description}\r\n                  helperText={signUpErrors.description}\r\n                  multiline\r\n                  rows={4}\r\n                /> */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  className=\"input password-input\"\r\n                  error={signUpErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.password ? signUpErrors.password : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  error={signUpErrors.confirm_password ? true : undefined}\r\n                  className=\"input\"\r\n                  required\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.confirme_password}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.confirm_password\r\n                      ? signUpErrors.confirm_password\r\n                      : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Link className=\"forget-password-link\">\r\n                  Already a user Sign In\r\n                </Link>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"sign-up-btn\"\r\n                  onClick={(e) => handleSignUpSubmit(e)}\r\n                >\r\n                  sign up\r\n                </Button>\r\n                {/* <TextField\r\n                  error={signUpErrors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                /> */}\r\n              </div>\r\n            </form>\r\n            {/* <form action=\"#\" class=\"sign-in-form\">\r\n              <h2 class=\"title\">Sign in</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" value=\"Login\" class=\"btn solid\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign in with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n            {/* <form action=\"#\" class=\"sign-up-form\">\r\n              <h2 class=\"title\">Sign up</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-envelope\"></i>\r\n                <input type=\"email\" placeholder=\"Email\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" class=\"btn\" value=\"Sign up\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign up with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n          </div>\r\n        </div>\r\n        <div class=\"panels-container\">\r\n          <div class=\"panel left-panel\">\r\n            <div class=\"content\">\r\n              <h3>New here ?</h3>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Debitis, ex ratione. Aliquid!\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-up-btn\"\r\n                onClick={signUpButtonPress}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/log.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n          <div class=\"panel right-panel\">\r\n            <div class=\"content\">\r\n              <h3>One of us ?</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                laboriosam ad deleniti.\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-in-btn\"\r\n                onClick={signInButtonPress}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/register.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userLogin}>\r\n                <Input\r\n                  id=\"email_username\"\r\n                  label=\"Email/Username\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email/Username\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"basicPassword\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n",["617","618"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Details\\index.js",["619"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Users\\index.js",["620"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Container, Form, Row, Spinner, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddUserModal from \"../../components/Modals/AddUserModal\";\r\nimport ResponseModal from \"../../components/Modals/ResponseModal\";\r\nimport DeleteUserModal from \"../../components/Modals/DeleteUserModal\";\r\nimport { deleteMicroorganism } from \"../../actions/catalogue.actions\";\r\nimport Input from \"../../components/UI/Input/input\";\r\n\r\nconst Users = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { fetching, users, add_user } = useSelector((state) => state.user);\r\n\r\n  /////delete record id\r\n  const [deleteRecordId, setDeleteRecordId] = useState(\"\");\r\n  const deleteRecordRef = useRef();\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    console.log(\"user deleted\");\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(token));\r\n  }, []);\r\n\r\n  ///////////////////////////////////////////////////////\r\n  //query and search\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\"admin\", \"internal\", \"external\"];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  useEffect(() => {\r\n    setData(users);\r\n  }, [users]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  //request response\r\n  const serverResponseRef = useRef();\r\n  const handleResponse = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  /////add user\r\n  const addUserRef = useRef();\r\n  const handleAddModalShow = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  const handleAddUser = (userData) => {\r\n    console.log(\"handling add user\");\r\n    // dispatch(addUser(userData, token));\r\n  };\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"role\"].toLowerCase())\r\n        : true;\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_U_Permission ? \"/dashboard/user\" : \"#\",\r\n            state: { userID: permissions.view_U_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_U_Permission ? \"primary\" : \"secondary\"}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_U_Permission ? \"danger\" : \"secondary\"}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <AddUserModal ref={addUserRef} confirm={handleAddUser} />\r\n      <ResponseModal\r\n        ref={serverResponseRef}\r\n        message={add_user.message}\r\n        confirm={handleResponse}\r\n      />\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                      checked\r\n                        ? prev.filter((sf) => sf !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          <Button variant=\"primary\" onClick={() => handleAddModalShow()}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n      <Table stripped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            {columns &&\r\n              columns.map((heading) => {\r\n                return heading === \"_id\" ? null : <th>{heading}</th>;\r\n              })}\r\n            <th className=\"text-center\">Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {search(data).map((row) => {\r\n            return (\r\n              <tr>\r\n                {columns.map((heading) => {\r\n                  return heading === \"_id\" ? null : <td>{row[heading]}</td>;\r\n                })}\r\n                <td style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                  {recordOptions(row._id)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js",["621","622","623"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nconst DashboardCatalogueDetail = (props) => {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = props.location.state;\r\n  const [data, setData] = useState({});\r\n\r\n  const [option, setOption] = useState(false);\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === \"save\") {\r\n      // dispatch(updateUserInfo(userData, token));\r\n      // setSavingData(!savingData);\r\n    }\r\n    setOption(!option);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.post(\r\n      \"/findmicroorganism\",\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    setData(res.data);\r\n  }, []);\r\n  return (\r\n    <Layout sidebar>\r\n      <Button\r\n        onClick={(e) =>\r\n          handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n        }\r\n      >\r\n        {option ? \"Save\" : \"Edit\"}\r\n      </Button>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {Object.keys(data).map((heading, key) => {\r\n          return (\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey={`${key}`}>\r\n                {heading}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${key}`}>\r\n                <Card.Body>\r\n                  {Object.keys(data[heading]).map((label, i) => {\r\n                    return (\r\n                      <Row className=\"p-2\" key={i}>\r\n                        <Col>{label}</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ backgroundColor: \"green\" }}\r\n                            value={data[heading][label]}\r\n                            onChange={(e) => {\r\n                              setData({\r\n                                ...data,\r\n                                [heading]: {\r\n                                  ...data[heading],\r\n                                  [label]: e.target.value,\r\n                                },\r\n                              });\r\n                            }}\r\n                            disabled={!option}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogueDetail;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\EmailVerified\\index.js",["624","625","626","627"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nimport { responsiveFontSizes } from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nconst EmailVerified = (props) => {\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"initial message\");\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .post(\"/verifyEmail\", { token })\r\n      .then((response) => {\r\n        setEmailVerified(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setEmailVerified(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    setModalOpen(true);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className=\"signup-response-modal\"\r\n      open={modalOpen}\r\n      onClose={(e) => {\r\n        setModalOpen(false);\r\n        // props.history.push(\"/signin\");\r\n      }}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <div className=\"email-verify-modal-content-div\">\r\n          {emailVerified ? (\r\n            <CheckCircleIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          ) : (\r\n            <ErrorIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          )}\r\n          <h2 id=\"transition-modal-title\">\r\n            {emailVerified ? \"Success\" : \"Error\"}\r\n          </h2>\r\n          <p id=\"transition-modal-description\">{message}</p>\r\n          <Link to=\"/signin\">\r\n            Go to {emailVerified ? \"Sign In\" : \"Sign Up\"}\r\n          </Link>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailVerified;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js",["628","629","630","631","632","633"],"import React, { useState } from \"react\";\r\nimport DepositItemList from \"../../components/DepositItemList\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport DropDown from \"../../components/DropDown\";\r\n// import \"./style.css\";\r\nconst AdminDashboardDeposits = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      deposit_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      deposit_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Deposit ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\"></div>\r\n      <div className=\"div__two\">\r\n        <h3>Deposits</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit ID\",\r\n                value: \"deposit_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardDeposits;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardPayments\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js",["634","635","636","637"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  Fade,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Modal,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport useFormAddUser from \"./useFormAddUser\";\r\nimport AddUserValidator from \"./addUserValidator\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser } from \"../../actions/user.actions\";\r\nconst AdminDashboardAddUser = (props) => {\r\n  const dispatch = useDispatch();\r\n  const add_user = useSelector((state) => state.user.add_user);\r\n  const handleAddUser = () => {\r\n    // var form = new FormData();\r\n    // Object.keys(addUserValue).map((item) => {\r\n    //   form.append(item, addUserValue[item]);\r\n    // });\r\n    dispatch(addUser(addUserValue));\r\n    console.log(\"sdfjsd\");\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    const slider_div = document.getElementById(\"add__user__details__slides\");\r\n    slider_div.style.transform = \"translateX(-50%)\";\r\n  };\r\n  const prevSlide = () => {\r\n    const slider_div = document.getElementById(\"add__user__details__slides\");\r\n    slider_div.style.transform = \"translateX(0%)\";\r\n  };\r\n  const {\r\n    addUserValue,\r\n    handleAddUserSubmit,\r\n    updateAddUser,\r\n    addUserErrors,\r\n  } = useFormAddUser(nextSlide, AddUserValidator);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // const ErrorModal = () => {\r\n  //   return(\r\n  // );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"add-user-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          props.history.goBack();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {add_user.added ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {add_user.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {add_user.added\r\n                ? \"Success\"\r\n                : add_user.error\r\n                ? \"Error\"\r\n                : \"Waiting for response\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {add_user.added\r\n                ? \"User creation successfull\"\r\n                : add_user.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <SideBar active=\"Users\">\r\n        <div className=\"add__user__div\">\r\n          <h3>Add User</h3>\r\n          <div className=\"add__user__details__outer__div\">\r\n            <div\r\n              id=\"add__user__details__slides\"\r\n              className=\"add__user__details__slides\"\r\n            >\r\n              <div className=\"add__user__details__slide add__user__details__div\">\r\n                <h4>Details</h4>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  className=\"input\"\r\n                  label=\"Firstname\"\r\n                  value={addUserValue.firstname}\r\n                  onChange={(e) => updateAddUser(e)}\r\n                  error={addUserErrors.firstname ? true : false}\r\n                  helperText={addUserErrors.firstname}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  className=\"input\"\r\n                  label=\"Lastname\"\r\n                  value={addUserValue.lastname}\r\n                  onChange={(e) => updateAddUser(e)}\r\n                  error={addUserErrors.lastname ? true : false}\r\n                  helperText={addUserErrors.lastname}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={addUserValue.email}\r\n                  onChange={(e) => updateAddUser(e)}\r\n                  error={addUserErrors.email ? true : false}\r\n                  helperText={addUserErrors.email}\r\n                />\r\n\r\n                <FormControl variant=\"outlined\" className=\"input\">\r\n                  <Avatar src={addUserValue.profile_picture} />\r\n                  <InputLabel htmlFor=\"outlined-profile-picture\">\r\n                    Profile Picture\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    type=\"file\"\r\n                    id=\"outlined-profile-picture\"\r\n                    name=\"profile_picture\"\r\n                    onChange={(e) => updateAddUser(e)}\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className=\"input password-input\"\r\n                  error={addUserErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={addUserValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateAddUser(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {addUserErrors.password ? addUserErrors.password : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  required\r\n                  error={addUserErrors.confirm_password ? true : false}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={addUserValue.confirm_password}\r\n                    onChange={(e) => updateAddUser(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {addUserErrors.confirm_password}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                {/* <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  value={addUserValue.role}\r\n                  label=\"Role\"\r\n                  inputProps={{\r\n                    name: \"role\",\r\n                    id: \"outlined-age-native-simple\",\r\n                  }}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"internal\">Internal</option>\r\n                </Select>\r\n              </FormControl> */}\r\n                <div className=\"button__div\">\r\n                  <button className=\"btn add__user__cancel__form__button\">\r\n                    <Link\r\n                      to=\"/dashboard/users\"\r\n                      style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    >\r\n                      Cancel\r\n                    </Link>\r\n                  </button>\r\n                  <button\r\n                    className=\"btn add__user__next__form__button\"\r\n                    onClick={(e) => handleAddUserSubmit(e)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"add__user__details__slide add__user__permissions__div\">\r\n                <h4>Permissions</h4>\r\n                <div className=\"add__user__permissions\">\r\n                  {Object.keys(addUserValue.permissions).map(\r\n                    (permission, key) => {\r\n                      return (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={addUserValue.permissions[permission]}\r\n                              onChange={(e) => updateAddUser(e)}\r\n                              name={permission}\r\n                              color=\"primary\"\r\n                              className=\"add__user__permission__checkbox\"\r\n                            />\r\n                          }\r\n                          // style={{ backgroundColor: \"red\", fontSize: \"12px\" }}\r\n                          label={permission.replaceAll(\"_\", \" \").toUpperCase()}\r\n                          key={key}\r\n                        />\r\n                      );\r\n                    }\r\n                  )}\r\n                  <div className=\"permission__button__div\">\r\n                    <button\r\n                      className=\"btn add__user__cancel__form__button\"\r\n                      onClick={(e) => prevSlide()}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                    <button\r\n                      className=\"btn add__user__next__form__button\"\r\n                      onClick={(e) => handleAddUser()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    // checked={state.checkedB}\r\n                    // onChange={handleChange}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Primary\"\r\n              /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SideBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardAddUser;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Layout\\index.js",["638","639","640","641","642","643","644"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header/index\";\r\nimport { Container, Jumbotron, Row, Col, Nav } from \"react-bootstrap\";\r\nimport { Link, NavLink, Redirect, useLocation } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SideBar from \"../SideBar\";\r\nimport { SideBarData } from \"./SidebarData\";\r\nconst Layout = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n  const opt = useSelector((state) => state.dashboard.options);\r\n  const sideBarOptions = [\"CATALOGUE\", \"USERS\"];\r\n\r\n  useEffect(() => {\r\n    setOptions(opt);\r\n  }, [opt]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {props.sidebar ? (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"sideBar\" md={2}>\r\n              <Nav>\r\n                <ul>\r\n                  {SideBarData.map((item, key) => {\r\n                    return (\r\n                      <li key={key} className=\"list-item\">\r\n                        <Link to={item.link} className=\"link\">\r\n                          <div className=\"icon\">{item.icon}</div>\r\n                          <div className=\"title\">{item.title}</div>\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                {/* <ul>\r\n                    {options.map((option, index) => {\r\n                      return (\r\n                        <Nav.Item key={index}>\r\n                          <li>\r\n                            <Link\r\n                              to={\r\n                                option.toLowerCase() === \"dashboard\"\r\n                                  ? `/dashboard`\r\n                                  : `/dashboard/${option.toLowerCase()}`\r\n                              }\r\n                            >\r\n                              {option.toUpperCase()}\r\n                            </Link>\r\n                          </li>\r\n                        </Nav.Item>\r\n                      );\r\n                    })}\r\n                  </ul> */}\r\n              </Nav>\r\n            </Col>\r\n            <Col className=\"contentBox\" md={10}>\r\n              {props.children}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\signup.actions.js",[],["645","646"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\user.actions.js",["647","648"],"import axios from \"../helpers/axios.js\";\r\nimport urls from \"../server_urls.js\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nexport const getUsers = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.USERS_FETCH_REQUEST });\r\n    try {\r\n      let user_Request_Response = await axios.post(\"/users\", {});\r\n      if (user_Request_Response.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_SUCCESS,\r\n          payload: { users: user_Request_Response.data },\r\n        });\r\n        dispatch({\r\n          type: authConstants.DASHBOARD_OPTIONS_UPDATE,\r\n          payload: { option: \"USERS\" },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response && e.response.status === 405) {\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n      if (e.response && e.response.status === 400) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_FAILURE,\r\n          payload: {\r\n            status_code: e.response.status,\r\n            message: e.response.data.message,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\nexport const getUserData = (id, token) => {\r\n  return async (dispatch) => {\r\n    if (token) {\r\n      console.log(\"fetching user data\");\r\n      dispatch({ type: authConstants.USER_DATA_REQUEST });\r\n      const res = await axios.post(\r\n        \"/userData\",\r\n        { id }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      dispatch({\r\n        type: authConstants.USER_DATA_SUCCESS,\r\n        payload: { user: res.data },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserInfo = (data, token) => {\r\n  return async (dispatch) => {\r\n    if (token) {\r\n      dispatch({\r\n        type: authConstants.UPDATING_USER_REQUEST,\r\n        payload: { data: data },\r\n      });\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          \"/updateUser\",\r\n          { data }\r\n          // {\r\n          //   headers: { authorization: token },\r\n          // }\r\n        );\r\n\r\n        if (res.status == 200) {\r\n          dispatch({\r\n            type: authConstants.UPDATING_USER_SUCCESS,\r\n            payload: {\r\n              status_code: res.status,\r\n              message: res.data.message,\r\n            },\r\n          });\r\n          dispatch(getUsers(token));\r\n        }\r\n      } catch (error) {\r\n        console.log(error.data);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUser = (data, token) => {\r\n  return async (dispatch) => {\r\n    console.log(\"user data sent to method was: \");\r\n    console.log(data);\r\n    dispatch({ type: authConstants.USER_DELETE_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/deleteUser\",\r\n        { id: data }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"user deleted successfully\");\r\n        dispatch({ type: authConstants.USER_DELETE_SUCCESS });\r\n        dispatch(getUsers(token));\r\n      }\r\n    } catch (error) {\r\n      console.log(error.data);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addUser = (userData, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: authConstants.USER_ADD_REQUEST,\r\n        payload: { data: userData },\r\n      });\r\n      const res = await axios.post(\"/addUser\", userData, {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      });\r\n      // console.log(res.status);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USER_ADD_SUCCESS,\r\n          payload: { message: res.data.message },\r\n        });\r\n        // dispatch(getUsers(token));\r\n      }\r\n      if (res.status === 405) {\r\n        alert(\"Token has expired \");\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n    } catch ({ response }) {\r\n      console.log(\"err\");\r\n      console.log(response);\r\n      dispatch({\r\n        type: authConstants.USER_ADD_FAILURE,\r\n        payload: {\r\n          status: response.data.status,\r\n          message: response.data.message,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Logo\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\helpers\\axios.js",["649","650","651"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Header\\index.js",["652","653"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  NavLink,\r\n} from \"react-bootstrap\";\r\nimport { RiDashboardLine } from \"react-icons/ri\";\r\nimport { CgLogOut } from \"react-icons/cg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport \"./style.css\";\r\nconst Header = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const cart_size = useSelector((state) => state.cart.size);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart_size);\r\n  }, [cart_size]);\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Header>\r\n            <b>Noor Muhammad</b>\r\n          </Dropdown.Header>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item>\r\n            <RiDashboardLine style={{ marginRight: \"10px\" }} />\r\n            <Link to=\"/dashboard\">Dashboard</Link>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              logUserOut();\r\n            }}\r\n          >\r\n            <CgLogOut style={{ marginRight: \"10px\" }} />\r\n            Logout\r\n          </Dropdown.Item>\r\n          <ShoppingCartIcon />\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const loggedOutNavLinks = () => {\r\n    return (\r\n      <>\r\n        <Nav.Link href=\"/signin\">Signin</Nav.Link>\r\n        <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n        <Nav.Link href=\"/cart\" id=\"shopping-cart-box\">\r\n          <div>\r\n            <ShoppingCartIcon id=\"shopping-cart-icon\" />\r\n          </div>\r\n          {cart_size > 0 ? (\r\n            <div id=\"shopping-cart-number\">{`${cart_size}`}</div>\r\n          ) : null}\r\n        </Nav.Link>\r\n\r\n        <Nav.Link href=\"/catalogue\">Catalogue</Nav.Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const logUserOut = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar\r\n        variant=\"dark\"\r\n        style={{ backgroundColor: \"#212529\", zIndex: 1 }}\r\n        expand=\"lg\"\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/\">NCCP Information System</Navbar.Brand>\r\n          <Nav>\r\n            {useSelector((state) => state.auth.token)\r\n              ? loggedInNavLinks()\r\n              : loggedOutNavLinks()}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n",["654","655"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\sidebar.reducer.js",["656"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  collapsed: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.COLLAPSE_SIDEBAR:\r\n      state = {\r\n        ...state,\r\n        collapsed: !state.collapsed,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\DropDown\\index.js",[],["657","658"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ObjectSlider\\Item.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\updatingUser.reducer.js",["659","660"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  data: {},\r\n  updating: false,\r\n  updated: false,\r\n  updateError: false,\r\n  code: 0,\r\n  message: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.UPDATING_USER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        updating: true,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated: true,\r\n        code: action.payload.status_code,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated: false,\r\n        updateError: true,\r\n        code: action.payload.status_code,\r\n        message: action.payload.message,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\itemInfo.reducer.js",["661"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  details: {},\r\n  fetching: false,\r\n  fetched: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_ITEM_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        details: action.payload.data,\r\n        fetched: true,\r\n        fetching: false,\r\n      };\r\n      console.log(\"Successfully updated the state\");\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetched: false,\r\n        fetching: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      console.log(\"State updated for error recieved\");\r\n      break;\r\n    default:\r\n      state = initialState;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\auth.reducers.js",["662","663","664"],"import { authConstants } from \"../actions/constants\";\r\nconst initialState = {\r\n  token: null,\r\n  user: {\r\n    id: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n  },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  error: {\r\n    found: false,\r\n    status_code: 0,\r\n    message: 0,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n    case authConstants.LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      // alert(\"everything reset\");\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\auth.actions.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInUseForm.js",["665","666","667"],"import React, { useEffect, useState } from \"react\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nconst useSignInForm = (handleSubmission, SignInValidator) => {\r\n  const [signInValue, setSignInValue] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signInErrors, setSignInErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignInErrors(SignInValidator(signInValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signInErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signInErrors]);\r\n\r\n  const updateSignInValue = (e) => {\r\n    setSignInValue({\r\n      ...signInValue,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { signInValue, handleSignInSubmit, updateSignInValue, signInErrors };\r\n};\r\n\r\nexport default useSignInForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\OrderItemList\\index.js",["668","669","670"],"import React, { useState } from \"react\";\r\nimport ItemListCard from \"../ItemListCard\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import \"./style.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nconst OrderItemList = (props) => {\r\n  const options = [\r\n    {\r\n      title: \"View\",\r\n      icon: <VisibilityIcon />,\r\n      link: \"#\",\r\n    },\r\n    {\r\n      title: \"Delete\",\r\n      icon: <DeleteIcon />,\r\n      link: \"#\",\r\n    },\r\n  ];\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"item__list__header\">\r\n        {props.columns.map((column, key) => {\r\n          return (\r\n            <div key={key} style={{ flexBasis: column.width }}>\r\n              {column.title}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"item__list__body\">\r\n        {props.rows.map((row, key) => {\r\n          return (\r\n            <div className=\"item__list__item\" key={key}>\r\n              <div\r\n                className=\"item__list__item__personal\"\r\n                style={{\r\n                  flexBasis: props.columns[0].width,\r\n                  paddingLeft: \"0px\",\r\n                }}\r\n              >\r\n                <div className=\"item__list__item__details\">\r\n                  <div className=\"item__list__item__name\">{`${row.order_id}`}</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[1].width }}>\r\n                {row.created}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[2].width }}>\r\n                {row.customer}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[3].width }}>\r\n                {row.total}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[4].width }}>\r\n                {row.status}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[5].width }}>\r\n                <IconButton\r\n                  aria-label=\"more\"\r\n                  aria-controls=\"long-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {options.map((option, key) => (\r\n                    <MenuItem key={key} onClick={handleClose}>\r\n                      <Link to={option.link} className=\"item__option\">\r\n                        {option.icon}\r\n                        {option.title}\r\n                      </Link>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItemList;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js",["671"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFiveValidator from \"./StepFiveValidator\";\r\nimport useStepFiveForm from \"./useStepFiveForm\";\r\n\r\nfunction Step5(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Publication: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFiveForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFiveValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Publication</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Literature Categories\"\r\n          type=\"text\"\r\n          name=\"LiteratureCategories\"\r\n          placeholder=\"Enter Literature Categories here\"\r\n          value={value.LiteratureCategories}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.LiteratureCategories && (\r\n          <p style={{ color: \"red\" }}>{errors.LiteratureCategories}</p>\r\n        )}\r\n        <Input\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"Title\"\r\n          placeholder=\"Enter Title here\"\r\n          value={value.Title}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Title && <p style={{ color: \"red\" }}>{errors.Title}</p>}\r\n        <Input\r\n          label=\"Author\"\r\n          type=\"text\"\r\n          name=\"Author\"\r\n          placeholder=\"Enter Author here\"\r\n          value={value.Author}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Author && <p style={{ color: \"red\" }}>{errors.Author}</p>}\r\n        <Input\r\n          label=\"Journal\"\r\n          type=\"text\"\r\n          name=\"Journal\"\r\n          placeholder=\"Enter Journal here\"\r\n          value={value.Journal}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Journal && <p style={{ color: \"red\" }}>{errors.Journal}</p>}\r\n        <Input\r\n          label=\"Volume\"\r\n          type=\"text\"\r\n          name=\"Volume\"\r\n          placeholder=\"Enter Volume here\"\r\n          value={value.Volume}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Volume && <p style={{ color: \"red\" }}>{errors.Volume}</p>}\r\n        <Input\r\n          label=\"Number\"\r\n          type=\"text\"\r\n          name=\"Number\"\r\n          placeholder=\"Enter Number here\"\r\n          value={value.Number}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Number && <p style={{ color: \"red\" }}>{errors.Number}</p>}\r\n        <Input\r\n          label=\"Starting Page\"\r\n          type=\"text\"\r\n          name=\"StartingPage\"\r\n          placeholder=\"Enter Starting Page here\"\r\n          value={value.StartingPage}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.StartingPage && (\r\n          <p style={{ color: \"red\" }}>{errors.StartingPage}</p>\r\n        )}\r\n        <Input\r\n          label=\"Page Range\"\r\n          type=\"text\"\r\n          name=\"PageRange\"\r\n          placeholder=\"Enter Page Range here\"\r\n          value={value.PageRange}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PageRange && <p style={{ color: \"red\" }}>{errors.PageRange}</p>}\r\n        <Input\r\n          label=\"Year\"\r\n          type=\"text\"\r\n          name=\"Year\"\r\n          placeholder=\"Enter Year here\"\r\n          value={value.Year}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Year && <p style={{ color: \"red\" }}>{errors.Year}</p>}\r\n        <Input\r\n          label=\"DOI Number\"\r\n          type=\"text\"\r\n          name=\"DOINumber\"\r\n          placeholder=\"Enter DOI Number here\"\r\n          value={value.DOINumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DOINumber && <p style={{ color: \"red\" }}>{errors.DOINumber}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step5;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js",["672"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourValidator from \"./StepFourValidator\";\r\nimport useStepFourForm from \"./useStepFourForm\";\r\n\r\nfunction Step4(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      EnviromentAndHistory: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Enviroment And History</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"SubStrate\"\r\n          type=\"text\"\r\n          name=\"SubStrate\"\r\n          placeholder=\"Enter SubStrate here\"\r\n          value={value.SubStrate}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SubStrate && <p style={{ color: \"red\" }}>{errors.SubStrate}</p>}\r\n        <Input\r\n          label=\"Habitat\"\r\n          type=\"text\"\r\n          name=\"Habitat\"\r\n          placeholder=\"Enter Habitat here\"\r\n          value={value.Habitat}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Habitat && <p style={{ color: \"red\" }}>{errors.Habitat}</p>}\r\n        <Input\r\n          label=\"Latitude\"\r\n          type=\"text\"\r\n          name=\"Latitude\"\r\n          placeholder=\"Enter Latitude here\"\r\n          value={value.Latitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Latitude && <p style={{ color: \"red\" }}>{errors.Latitude}</p>}\r\n        <Input\r\n          label=\"Longitude\"\r\n          type=\"text\"\r\n          name=\"Longitude\"\r\n          placeholder=\"Enter Longitude here\"\r\n          value={value.Longitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Longitude && <p style={{ color: \"red\" }}>{errors.Longitude}</p>}\r\n        <Input\r\n          label=\"Altitude\"\r\n          type=\"text\"\r\n          name=\"Altitude\"\r\n          placeholder=\"Enter Altitude here\"\r\n          value={value.Altitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Altitude && <p style={{ color: \"red\" }}>{errors.Altitude}</p>}\r\n        <Input\r\n          label=\"Depth\"\r\n          type=\"text\"\r\n          name=\"Depth\"\r\n          placeholder=\"Enter Depth here\"\r\n          value={value.Depth}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Depth && <p style={{ color: \"red\" }}>{errors.Depth}</p>}\r\n        <Input\r\n          label=\"Humidity\"\r\n          type=\"text\"\r\n          name=\"Humidity\"\r\n          placeholder=\"Enter Humidity here\"\r\n          value={value.Humidity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Humidity && <p style={{ color: \"red\" }}>{errors.Humidity}</p>}\r\n        <Input\r\n          label=\"PH for Enviroment\"\r\n          type=\"text\"\r\n          name=\"PHForEnviroment\"\r\n          placeholder=\"Enter PH for Enviroment here\"\r\n          value={value.PHForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PHForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.PHForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature for Enviroment\"\r\n          type=\"text\"\r\n          name=\"TemperatureForEnviroment\"\r\n          placeholder=\"Enter Temperature for Enviroment here\"\r\n          value={value.TemperatureForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"CollectionMethod\"\r\n          type=\"text\"\r\n          name=\"CollectionMethod\"\r\n          placeholder=\"Enter CollectionMethod here\"\r\n          value={value.CollectionMethod}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectionMethod && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectionMethod}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Collection\"\r\n          type=\"date\"\r\n          name=\"DateOfCollection\"\r\n          placeholder=\"Enter Date of collection here\"\r\n          value={value.DateOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Collection\"\r\n          type=\"text\"\r\n          name=\"CountryOfCollection\"\r\n          placeholder=\"Enter Country of Collection here\"\r\n          value={value.CountryOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"State\"\r\n          type=\"text\"\r\n          name=\"State\"\r\n          placeholder=\"Enter State here\"\r\n          value={value.State}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.State && <p style={{ color: \"red\" }}>{errors.State}</p>}\r\n        <Input\r\n          label=\"Region of Collection\"\r\n          type=\"text\"\r\n          name=\"RegionOfCollection\"\r\n          placeholder=\"Enter Region of Collection here\"\r\n          value={value.RegionOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RegionOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.RegionOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Collected By\"\r\n          type=\"text\"\r\n          name=\"CollectedBy\"\r\n          placeholder=\"Collected By\"\r\n          value={value.CollectedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated By\"\r\n          type=\"text\"\r\n          name=\"IsolatedBy\"\r\n          placeholder=\"Enter Isolated By here\"\r\n          value={value.IsolatedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Method of Isolation\"\r\n          type=\"text\"\r\n          name=\"MethodOfIsolation\"\r\n          placeholder=\"Method of Isolation\"\r\n          value={value.MethodOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MethodOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.MethodOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Identified By\"\r\n          type=\"text\"\r\n          name=\"IdentifiedBy\"\r\n          placeholder=\"IdentifiedBy\"\r\n          value={value.IdentifiedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IdentifiedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IdentifiedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date Of Identification\"\r\n          type=\"date\"\r\n          name=\"DateOfIdentification\"\r\n          placeholder=\"Date Of Identification\"\r\n          value={value.DateOfIdentification}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIdentification && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIdentification}</p>\r\n        )}\r\n        <Input\r\n          label=\"Deposited By\"\r\n          type=\"text\"\r\n          name=\"DepositedBy\"\r\n          placeholder=\"Deposited By\"\r\n          value={value.DepositedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DepositedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.DepositedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Deposition\"\r\n          type=\"date\"\r\n          name=\"DateOfDeposition\"\r\n          placeholder=\"Date of Deposition\"\r\n          value={value.DateOfDeposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfDeposition && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfDeposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Name At Accept\"\r\n          type=\"text\"\r\n          name=\"NameAtAccept\"\r\n          placeholder=\"Name At Accept\"\r\n          value={value.NameAtAccept}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NameAtAccept && (\r\n          <p style={{ color: \"red\" }}>{errors.NameAtAccept}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step4;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js",["673"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepTwelveValidator from \"./StepTwelveValidator\";\r\nimport useStepTwelveForm from \"./useStepTwelveForm\";\r\n\r\nfunction Step12(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Medium: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepTwelveForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepTwelveValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Medium</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Medium Number\"\r\n          type=\"text\"\r\n          name=\"MediumNumber\"\r\n          placeholder=\"Enter Medium Number here\"\r\n          value={value.MediumNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium Name\"\r\n          type=\"text\"\r\n          name=\"MediumName\"\r\n          placeholder=\"Enter Medium Name here\"\r\n          value={value.MediumName}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumName && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumName}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium Composition\"\r\n          type=\"text\"\r\n          name=\"MediumComposition\"\r\n          placeholder=\"Enter Medium Composition here\"\r\n          value={value.MediumComposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumComposition && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumComposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium PH\"\r\n          type=\"text\"\r\n          name=\"MediumPH\"\r\n          placeholder=\"Enter Medium PH here\"\r\n          value={value.MediumPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumPH && <p style={{ color: \"red\" }}>{errors.MediumPH}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step12;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddUserModal\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js",["674"],"import { useEffect, useState } from \"react\";\r\nconst useStepFiveForm = (initialValue, handleSubmission, StepFiveValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFiveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFiveForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["675"],"import { useEffect, useState } from \"react\";\r\nconst useStepFourForm = (initialValue, handleSubmission, StepFourValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFourValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFourForm;\r\n",["676","677"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["678"],"import { useEffect, useState } from \"react\";\r\nconst useStepTwelveForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepTwelveValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwelveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwelveForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js",["679"],"import { useEffect, useState } from \"react\";\r\nconst useStepOneForm = (initialValue, handleSubmission, StepOneValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepOneValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepOneForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js",["680"],"import { useEffect, useState } from \"react\";\r\nconst useStepThreeForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThreeValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThreeValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThreeForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js",["681"],"import { useState, useEffect } from \"react\";\r\n\r\nconst useAddUserForm = (handleSubmission, AddUserValidator) => {\r\n  const [value, setValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    // affiliation: \"\",\r\n    // description: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"\",\r\n    permissions: {\r\n      add_M_Permission: false,\r\n      update_M_Permission: false,\r\n      delete_M_Permission: false,\r\n      view_M_Permission: false,\r\n      view_U_Permission: false,\r\n      update_U_Permission: false,\r\n      delete_U_Permission: false,\r\n      add_U_Permission: false,\r\n      view_D_Permission: false,\r\n      view_P_Permission: false,\r\n      view_O_Permission: false,\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(AddUserValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(Object.keys(errors));\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const updatePermissionValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      permissions: {\r\n        ...value.permissions,\r\n        [e.target.name]: e.target.checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, updatePermissionValue, value, errors, updateValue };\r\n};\r\n\r\nexport default useAddUserForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\TagInput\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Deposits\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\User\\index.js",["682","683","684"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Image, Row, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUserData, updateUserInfo } from \"../../actions/user.actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input/input\";\r\n\r\nconst User = (props) => {\r\n  const authenticate = useSelector((state) => state.auth.authenticate);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dispatch = useDispatch();\r\n  const { userID } = props.location.state;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [updateUser, setUpdateUser] = useState(\r\n    useSelector((state) => state.userUpdate)\r\n  );\r\n  const update = useSelector((state) => state.userUpdate);\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const [updateForm, setUpdateForm] = useState(false);\r\n  const [savingData, setSavingData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserData(userID, token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUserData(user.user);\r\n  }, [user]);\r\n\r\n  const updateValue = (e) => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === \"save\") {\r\n      dispatch(updateUserInfo(userData, token));\r\n      setSavingData(!savingData);\r\n    }\r\n    setUpdateForm(!updateForm);\r\n  };\r\n\r\n  if (!authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      {update.updating ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <p>{JSON.stringify(update.message)}</p>\r\n          <Button\r\n            onClick={(e) =>\r\n              handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n            }\r\n          >\r\n            {updateForm ? \"Save\" : \"Edit\"}\r\n          </Button>\r\n          <Container>\r\n            <Row>\r\n              <Input\r\n                id=\"first_name\"\r\n                label=\"Fristname\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                disabled={!updateForm}\r\n                value={userData.firstname}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Firstname\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"last_name\"\r\n                label=\"Lastname\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                value={userData.lastname}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Lastname\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"contact-number\"\r\n                label=\"Contact Number\"\r\n                type=\"text\"\r\n                name=\"contactNumber\"\r\n                value={userData.contactNumber}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Contact Number\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Form.Label>Profile Picture</Form.Label>\r\n              <Image src=\"https://picsum.photos/171/180\" roundedCircle />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"affiliation\"\r\n                label=\"Affiliation\"\r\n                type=\"text\"\r\n                name=\"affiliation\"\r\n                value={userData.affiliation ? userData.affiliation : \"NULL\"}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Affiliation\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                type=\"textarea\"\r\n                as=\"textarea\"\r\n                rows={3}\r\n                name=\"description\"\r\n                value={userData.description}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Description\"\r\n              />\r\n            </Row>\r\n            {userData.permissions\r\n              ? Object.keys(userData.permissions).map((permission) => (\r\n                  <Form.Check\r\n                    label={permission}\r\n                    name={permission}\r\n                    checked={userData.permissions[permission]}\r\n                    disabled={!updateForm}\r\n                    onChange={(e) =>\r\n                      (userData.permissions[permission] = e.target.checked)\r\n                    }\r\n                  ></Form.Check>\r\n                ))\r\n              : undefined}\r\n          </Container>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ForgetPassword\\index.js",["685","686","687"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgetPassword } from \"../../actions\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nconst ForgetPassword = () => {\r\n  const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  const dispatch = useDispatch();\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [slideChange, setSlideChange] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/forget-password\", { email: emailValue })\r\n      .then((response) => {\r\n        setSlideChange(true);\r\n        setEmailSent(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setSlideChange(true);\r\n        setEmailSent(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    // const slides = document.querySelector(\".slides\");\r\n    // slides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (slideChange) {\r\n  //     dispatch(\r\n  //       forgetPassword({\r\n  //         email: emailValue,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }, [slideChange]);\r\n  return (\r\n    <div className=\"outer-div\">\r\n      {/* <div className=\"upper-nav\">Logo</div> */}\r\n      {slideChange ? (\r\n        <div className=\"check-email-div\">\r\n          <h3>{emailSent ? \"Check your Email\" : \"Failed\"}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forget-password-div\">\r\n          <div className=\"forget-password-title\">\r\n            <h3>Forgot password</h3>\r\n            <p>Instructions will be sent to your email</p>\r\n          </div>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"example@name.com\"\r\n            variant=\"outlined\"\r\n            className=\"forgot-password-email-input\"\r\n            value={emailValue}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            error={!emailValidator.test(emailValue.trim()) && emailValue !== \"\"}\r\n            helperText=\"must be of form: name@gmail.com\"\r\n            required\r\n          />\r\n          <button\r\n            onClick={(e) => {\r\n              if (emailValidator.test(emailValue.trim())) {\r\n                handleSubmission();\r\n              }\r\n            }}\r\n            className=\"send-instructions-btn\"\r\n          >\r\n            Send Instructions\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\index.js",["688","689","690","691","692","693"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardReports\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\catalogue.actions.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\PageHeader\\index.js",["694","695","696","697","698","699","700","701","702"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\cart.reducer.js",["703"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  cartData: [],\r\n  size: 0,\r\n  submitting: false,\r\n  submitted: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CART_ITEM_ADD:\r\n      let item_exists = state.cartData.find(\r\n        (el) => el.id === action.payload.id\r\n      );\r\n      if (item_exists) {\r\n        state = {\r\n          ...state,\r\n          cartData: state.cartData.map((item) => {\r\n            if (item.id === action.payload.id) {\r\n              return {\r\n                ...item,\r\n                qty: item.qty + 1,\r\n              };\r\n            }\r\n            return item;\r\n          }),\r\n        };\r\n      } else {\r\n        state = {\r\n          ...state,\r\n          cartData: [\r\n            ...state.cartData,\r\n            {\r\n              ...action.payload,\r\n              qty: 1,\r\n            },\r\n          ],\r\n          size: state.size + 1,\r\n        };\r\n      }\r\n      break;\r\n    case authConstants.CART_ITEM_REMOVE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.filter((item) => {\r\n          return item.id !== action.payload.id;\r\n        }),\r\n        size: state.size - 1,\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_INCREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          console.log(action.payload.id);\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty + 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_DECREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          if (item.id === action.payload.id && item.qty > 1) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty - 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n\r\n    case authConstants.CART_SUBMIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        submitting: true,\r\n        submitted: false,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        submitted: true,\r\n        submitting: false,\r\n        size: 0,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        submitting: false,\r\n        submitted: true,\r\n        error: {\r\n          code: action.payload.code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CART_RESET:\r\n      state = initialState;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ItemListCard\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\SideBar\\sidebardata.js",["704","705","706","707"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\catalogue.reducers.js",["708","709","710"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  catalogueData: [],\r\n  fetching: false,\r\n  fetched: false,\r\n  addMicroorganism: {\r\n    adding: false,\r\n    added: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete: {\r\n    deleting: false,\r\n    deleted: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_INFO_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n        fetched: false,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        catalogueData: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case authConstants.ADD_MICROORGANISM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          adding: true,\r\n          added: false,\r\n          data: action.payload.data,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: true,\r\n          adding: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.RESET_ADD_MICROORGANISM_STATE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...initialState.addMicroorganism,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          data: action.payload.data,\r\n          deleting: true,\r\n          deleted: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js",["711","712","713"],"import React, { useEffect, useState } from \"react\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nconst useFormResetPassword = (handleSubmission, ResetPasswordValidator) => {\r\n  const [resetPassword, setResetPassword] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [resetPasswordErrors, setResetPasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleResetSubmit = (e) => {\r\n    e.preventDefault();\r\n    setResetPasswordErrors(ResetPasswordValidator(resetPassword));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(resetPasswordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [resetPasswordErrors]);\r\n\r\n  const updateResetPassword = (e) => {\r\n    setResetPassword({\r\n      ...resetPassword,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormResetPassword;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js",["714","715","716","717","718","719","720"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useCatalogue = () => {\r\n  //catalogue state\r\n  const catalogue = useSelector((state) => state.catalogue);\r\n\r\n  //data for\r\n  const [dataList, setDataList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  //search string hook\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //search filters hook\r\n  const [searchFilter, setFilter] = useState({\r\n    bacteria: false,\r\n    fungi: false,\r\n    archaea: false,\r\n    antibody: false,\r\n    microalgae: false,\r\n    phage: false,\r\n    virus: false,\r\n    yeast: false,\r\n  });\r\n\r\n  //hook to identify if either to apply a filter or not\r\n  const [applySearchFilter, setApplySearchFilter] = useState(false);\r\n\r\n  //hook to identify if either to display th\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  //useEffect for updating the dataList and filtered datalist on updating data in the catalogue\r\n  useEffect(() => {\r\n    setDataList(catalogue.catalogueData);\r\n    setFilteredList(catalogue.catalogueData);\r\n  }, [catalogue.catalogueData]);\r\n\r\n  //useEffect for determining if to apply the search filter or not in case of change in the searchFilter\r\n  //values\r\n  useEffect(() => {\r\n    let x = false;\r\n    Object.keys(searchFilter).map((filter) => {\r\n      x = x ^ searchFilter[filter];\r\n      return true;\r\n    });\r\n    setApplySearchFilter(x);\r\n  }, [searchFilter]);\r\n\r\n  //useEffect to\r\n  useEffect(() => {\r\n    if (applySearchFilter) {\r\n      setFilteredList(\r\n        filteredList.filter((item) => {\r\n          return searchFilter[item.OrganismType.toLowerCase()];\r\n        })\r\n      );\r\n    } else {\r\n      setFilteredList(dataList);\r\n    }\r\n  }, [applySearchFilter]);\r\n\r\n  return { dataList, filteredList };\r\n};\r\n\r\nexport default useCatalogue;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js",["721"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js",["722"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepThreeValidator from \"./StepThreeValidator\";\r\nimport useStepThreeForm from \"./useStepThreeForm\";\r\n\r\nfunction Step3(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      StrainAdministration: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepThreeForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepThreeValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Strain Administration</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Date of Accession\"\r\n          type=\"date\"\r\n          name=\"DateOfAccession\"\r\n          placeholder=\"Enter Date of Accession Here\"\r\n          value={value.DateOfAccession}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfAccession && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfAccession}</p>\r\n        )}\r\n        <Input\r\n          label=\"HerbariumNo\"\r\n          type=\"text\"\r\n          name=\"HerbariumNo\"\r\n          placeholder=\"Enter HerbariumNo here\"\r\n          value={value.HerbariumNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HerbariumNo && (\r\n          <p style={{ color: \"red\" }}>{errors.HerbariumNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Internal Identity Check\"\r\n          type=\"text\"\r\n          name=\"InternalIdentityCheck\"\r\n          placeholder=\"Enter Internal Identity Check here\"\r\n          value={value.InternalIdentityCheck}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.InternalIdentityCheck && (\r\n          <p style={{ color: \"red\" }}>{errors.InternalIdentityCheck}</p>\r\n        )}\r\n        <Input\r\n          label=\"Mode Of Preservation\"\r\n          type=\"text\"\r\n          name=\"ModeOfPreservation\"\r\n          placeholder=\"Enter Mode Of Preservation here\"\r\n          value={value.ModeOfPreservation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ModeOfPreservation && (\r\n          <p style={{ color: \"red\" }}>{errors.ModeOfPreservation}</p>\r\n        )}\r\n\r\n        <Form.Label>Bio Hazard Level</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={value.BioHazardLevel}\r\n          name=\"BioHazardLevel\"\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n        </Form.Control>\r\n        {errors.BioHazardLevel && (\r\n          <p style={{ color: \"red\" }}>{errors.BioHazardLevel}</p>\r\n        )}\r\n        <Input\r\n          label=\"Remarks on Restrictions\"\r\n          type=\"text\"\r\n          name=\"RestrictionRemarks\"\r\n          placeholder=\"Enter Restriction Remarks here\"\r\n          value={value.RestrictionRemarks}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RestrictionRemarks && (\r\n          <p style={{ color: \"red\" }}>{errors.RestrictionRemarks}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Export\"\r\n          type=\"text\"\r\n          name=\"CountryOfExport\"\r\n          placeholder=\"Enter Country of Export here\"\r\n          value={value.CountryOfExport}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfExport && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfExport}</p>\r\n        )}\r\n        <Input\r\n          label=\"MTA\"\r\n          type=\"text\"\r\n          name=\"MTA\"\r\n          placeholder=\"Enter MTA here\"\r\n          value={value.MTA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MTA && <p style={{ color: \"red\" }}>{errors.MTA}</p>}\r\n        <Input\r\n          label=\"Distribution Restriction\"\r\n          type=\"text\"\r\n          name=\"DistributionRestriction\"\r\n          placeholder=\"Enter Distribution Restriction here\"\r\n          value={value.DistributionRestriction}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DestributionRestriction && (\r\n          <p style={{ color: \"red\" }}>{errors.DestributionRestriction}</p>\r\n        )}\r\n        <Input\r\n          label=\"Animal Quarantine No\"\r\n          type=\"text\"\r\n          name=\"AnimalQuarantineNo\"\r\n          placeholder=\"Enter Animal Quarantine No here\"\r\n          value={value.AnimalQuarantineNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AnimalQuarantineNo && (\r\n          <p style={{ color: \"red\" }}>{errors.AnimalQuarantineNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Plant Quarantine No\"\r\n          type=\"text\"\r\n          name=\"PlantQuarantineNo\"\r\n          placeholder=\"Enter Plant Quarantine No here\"\r\n          value={value.PlantQuarantineNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PlantQuarantineNo && (\r\n          <p style={{ color: \"red\" }}>{errors.PlantQuarantineNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Form of Supply\"\r\n          type=\"text\"\r\n          name=\"FormOfSupply\"\r\n          placeholder=\"Enter Form of Supply here\"\r\n          value={value.FormOfSupply}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.FormOfSupply && (\r\n          <p style={{ color: \"red\" }}>{errors.FormOfSupply}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step3;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js",["723"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepTenValidator from \"./StepTenValidator\";\r\nimport useStepTenForm from \"./useStepTenForm\";\r\n\r\nfunction Step10(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      GrowthConditions: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepTenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepTenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Growth Conditions</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Conditions For Growth And Maintenence On Solid Media\"\r\n          type=\"text\"\r\n          name=\"ConditionsForGrowthAndMaintenenceOnSolidMedia\"\r\n          placeholder=\"Enter Conditions For Growth And Maintenence On Solid Media here\"\r\n          value={value.ConditionsForGrowthAndMaintenenceOnSolidMedia}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForGrowthAndMaintenenceOnSolidMedia && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.ConditionsForGrowthAndMaintenenceOnSolidMedia}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Conditions For Growth In Liquid Media\"\r\n          type=\"text\"\r\n          name=\"ConditionsForGrowthInLiquidMedia\"\r\n          placeholder=\"Enter Conditions For Growth In Liquid Media here\"\r\n          value={value.ConditionsForGrowthInLiquidMedia}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForGrowthInLiquidMedia && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.ConditionsForGrowthInLiquidMedia}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Conditions For Fruiting Or Sporulation\"\r\n          type=\"text\"\r\n          name=\"ConditionsForFruitingOrSporulation\"\r\n          placeholder=\"Enter Conditions For Fruiting Or Sporulation here\"\r\n          value={value.ConditionsForFruitingOrSporulation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForFruitingOrSporulation && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.ConditionsForFruitingOrSporulation}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Conditions For Germination\"\r\n          type=\"text\"\r\n          name=\"ConditionsForGermination\"\r\n          placeholder=\"Enter Conditions For Germination here\"\r\n          value={value.ConditionsForGermination}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForGermination && (\r\n          <p style={{ color: \"red\" }}>{errors.ConditionsForGermination}</p>\r\n        )}\r\n        <Input\r\n          label=\"Carbon Sources Tested\"\r\n          type=\"text\"\r\n          name=\"CarbonSourcesTested\"\r\n          placeholder=\"Enter Carbon Sources Tested here\"\r\n          value={value.CarbonSourcesTested}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CarbonSourcesTested && (\r\n          <p style={{ color: \"red\" }}>{errors.CarbonSourcesTested}</p>\r\n        )}\r\n        <Input\r\n          label=\"Nitrogen Sources Tested\"\r\n          type=\"text\"\r\n          name=\"NitrogenSourcesTested\"\r\n          placeholder=\"Enter Nitrogen Sources Tested here\"\r\n          value={value.NitrogenSourcesTested}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NitrogenSourcesTested && (\r\n          <p style={{ color: \"red\" }}>{errors.NitrogenSourcesTested}</p>\r\n        )}\r\n        <Input\r\n          label=\"Single Compound Tested\"\r\n          type=\"text\"\r\n          name=\"SingleCompoundTested\"\r\n          placeholder=\"Enter Single Compound Tested here\"\r\n          value={value.SingleCompoundTested}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SingleCompoundTested && (\r\n          <p style={{ color: \"red\" }}>{errors.SingleCompoundTested}</p>\r\n        )}\r\n        <Input\r\n          label=\"Nutritional Requirements\"\r\n          type=\"text\"\r\n          name=\"NutritionalRequirements\"\r\n          placeholder=\"Enter Nutritional Requirements here\"\r\n          value={value.NutritionalRequirements}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NutritionalRequirements && (\r\n          <p style={{ color: \"red\" }}>{errors.NutritionalRequirements}</p>\r\n        )}\r\n        <Input\r\n          label=\"Defeciencies\"\r\n          type=\"text\"\r\n          name=\"Defeciencies\"\r\n          placeholder=\"Enter Defeciencies here\"\r\n          value={value.Defeciencies}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Defeciencies && (\r\n          <p style={{ color: \"red\" }}>{errors.Defeciencies}</p>\r\n        )}\r\n        <Input\r\n          label=\"Tolerances And Sensitivities\"\r\n          type=\"text\"\r\n          name=\"TolerancesAndSensitivities\"\r\n          placeholder=\"Enter Tolerances And Sensitivities here\"\r\n          value={value.TolerancesAndSensitivities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TolerancesAndSensitivities && (\r\n          <p style={{ color: \"red\" }}>{errors.TolerancesAndSensitivities}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature Relationships\"\r\n          type=\"text\"\r\n          name=\"TemperatureRelationships\"\r\n          placeholder=\"Enter Temperature Relationships here\"\r\n          value={value.TemperatureRelationships}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureRelationships && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureRelationships}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Growth PH\"\r\n          type=\"text\"\r\n          name=\"MaximumGrowthPH\"\r\n          placeholder=\"Enter Maximum Growth PH here\"\r\n          value={value.MaximumGrowthPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumGrowthPH && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumGrowthPH}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Growth PH\"\r\n          type=\"text\"\r\n          name=\"MinimumGrowthPH\"\r\n          placeholder=\"Enter Minimum Growth PH here\"\r\n          value={value.MinimumGrowthPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumGrowthPH && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumGrowthPH}</p>\r\n        )}\r\n        <Input\r\n          label=\"Optimal Growth PH\"\r\n          type=\"text\"\r\n          name=\"OptimalGrowthPH\"\r\n          placeholder=\"Enter Optimal Growth PH here\"\r\n          value={value.OptimalGrowthPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimalGrowthPH && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimalGrowthPH}</p>\r\n        )}\r\n        <Input\r\n          label=\"Light Conditions\"\r\n          type=\"text\"\r\n          name=\"LightConditions\"\r\n          placeholder=\"Enter Light Conditions here\"\r\n          value={value.LightConditions}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.LightConditions && (\r\n          <p style={{ color: \"red\" }}>{errors.LightConditions}</p>\r\n        )}\r\n        <Input\r\n          label=\"Oxygen Relationship\"\r\n          type=\"text\"\r\n          name=\"OxygenRelationship\"\r\n          placeholder=\"Enter Oxygen Relationship here\"\r\n          value={value.OxygenRelationship}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OxygenRelationship && (\r\n          <p style={{ color: \"red\" }}>{errors.OxygenRelationship}</p>\r\n        )}\r\n        <Input\r\n          label=\"Heat Resistence\"\r\n          type=\"text\"\r\n          name=\"HeatResistence\"\r\n          placeholder=\"Enter Heat Resistence here\"\r\n          value={value.HeatResistence}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HeatResistence && (\r\n          <p style={{ color: \"red\" }}>{errors.HeatResistence}</p>\r\n        )}\r\n        <Input\r\n          label=\"Ethanol Conditions\"\r\n          type=\"text\"\r\n          name=\"EthanolConditions\"\r\n          placeholder=\"Enter Ethanol Conditions here\"\r\n          value={value.EthanolConditions}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.EthanolConditions && (\r\n          <p style={{ color: \"red\" }}>{errors.EthanolConditions}</p>\r\n        )}\r\n        <Input\r\n          label=\"Salinity Requirements\"\r\n          type=\"text\"\r\n          name=\"SalinityRequirements\"\r\n          placeholder=\"Enter Salinity Requirements here\"\r\n          value={value.SalinityRequirements}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SalinityRequirements && (\r\n          <p style={{ color: \"red\" }}>{errors.SalinityRequirements}</p>\r\n        )}\r\n        <Input\r\n          label=\"Optimal NaCl Concentration\"\r\n          type=\"text\"\r\n          name=\"OptimalNaClConcentration\"\r\n          placeholder=\"Enter Optimal NaCl Concentration here\"\r\n          value={value.OptimalNaClConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimalNaClConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimalNaClConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum NaCl Concentration\"\r\n          type=\"text\"\r\n          name=\"MinimumNaClConcentration\"\r\n          placeholder=\"Enter Minimum NaCl Concentration here\"\r\n          value={value.MinimumNaClConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumNaClConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumNaClConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum NaCl Cocentration\"\r\n          type=\"text\"\r\n          name=\"MaximumNaClCocentration\"\r\n          placeholder=\"Enter Maximum NaCl Cocentration here\"\r\n          value={value.MaximumNaClCocentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumNaClCocentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumNaClCocentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Optimum Sugar Concentration\"\r\n          type=\"text\"\r\n          name=\"OptimumSugarConcentration\"\r\n          placeholder=\"Enter Optimum Sugar Concentration here\"\r\n          value={value.OptimumSugarConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimumSugarConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimumSugarConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Sugar Concentration\"\r\n          type=\"text\"\r\n          name=\"MinimumSugarConcentration\"\r\n          placeholder=\"Enter Minimum Sugar Concentration here\"\r\n          value={value.MinimumSugarConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumSugarConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumSugarConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Sugar Concentration\"\r\n          type=\"text\"\r\n          name=\"MaximumSugarConcentration\"\r\n          placeholder=\"Enter Maximum Sugar Concentration here\"\r\n          value={value.MaximumSugarConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumSugarConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumSugarConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Osmophily And Xerophily\"\r\n          type=\"text\"\r\n          name=\"OsmophilyAndXerophily\"\r\n          placeholder=\"Enter Osmophily And Xerophily here\"\r\n          value={value.OsmophilyAndXerophily}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OsmophilyAndXerophily && (\r\n          <p style={{ color: \"red\" }}>{errors.OsmophilyAndXerophily}</p>\r\n        )}\r\n        <Input\r\n          label=\"Water Activity Conditions\"\r\n          type=\"text\"\r\n          name=\"WaterActivityConditions\"\r\n          placeholder=\"Enter Water Activity Conditions here\"\r\n          value={value.WaterActivityConditions}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.WaterActivityConditions && (\r\n          <p style={{ color: \"red\" }}>{errors.WaterActivityConditions}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step10;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddMicroorganismModal\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js",["724"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js",["725"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js",["726"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Dashboard\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\DashboardCatalogue\\index.js",["727","728","729","730","731"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Spinner, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  deleteMicroorganism,\r\n  getCatalogueData,\r\n} from \"../../actions/catalogue.actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport AddMicroorganismModal from \"../../components/Modals/AddMicroorganismModal\";\r\nimport DeleteUserModal from \"../../components/Modals/DeleteUserModal\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { microorganismTemplate } from \"../../helpers/templates\";\r\nimport useCatalogue from \"./useCatalogue\";\r\nconst DashboardCatalogue = (props) => {\r\n  const { authenticate, token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\r\n    \"bacteria\",\r\n    \"fungi\",\r\n    \"archaea\",\r\n    \"antibody\",\r\n    \"microalgae\",\r\n    \"phage\",\r\n    \"virus\",\r\n    \"yeast\",\r\n  ];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  //delete hook\r\n  const [deleteRecordId, setDeleteRecordId] = useState(\"\");\r\n\r\n  const columns = data[0] && Object.keys(data[0].CoreDataSets);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(\r\n            row[\"CoreDataSets\"][\"OrganismType\"].toLowerCase()\r\n          )\r\n        : true;\r\n\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row[\"CoreDataSets\"][column]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_M_Permission\r\n              ? \"/dashboard/details\"\r\n              : \"#\",\r\n            state: { id: permissions.view_M_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_M_Permission ? \"primary\" : \"secondary\"}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_M_Permission ? \"danger\" : \"secondary\"}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const deleteRecordRef = useRef();\r\n  const microroganismAddRef = useRef();\r\n\r\n  if (!authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                      checked\r\n                        ? prev.filter((sf) => sf !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          <Link to=\"/dashboard/addMicroorganism\">\r\n            <Button>Add</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            {columns &&\r\n              columns.map((heading) => {\r\n                return <th>{heading}</th>;\r\n              })}\r\n            <th className=\"text-center\">Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {search(data).map((row) => {\r\n            return (\r\n              <tr>\r\n                {columns.map((heading) => {\r\n                  return <td>{row[\"CoreDataSets\"][heading]}</td>;\r\n                })}\r\n                <td style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                  {recordOptions(row._id)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogue;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardDetails\\index.js",["732","733","734","735"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardSettings\\index.js",["736"],"import React from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { TextField } from \"@material-ui/core\";\r\nconst AdminDashboardSettings = () => {\r\n  return (\r\n    <SideBar active=\"settings\">\r\n      <h1>Settings</h1>\r\n      <Badge\r\n        color=\"primary\"\r\n        badgeContent={\r\n          <CreateIcon\r\n            style={{\r\n              width: \"12px\",\r\n              height: \"12px\",\r\n              borderRadius: \"2px solid royalblue\",\r\n              backgroundColor: \"royalblue\",\r\n            }}\r\n          />\r\n        }\r\n        showZero\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <Avatar />\r\n      </Badge>\r\n\r\n      <TextField variant=\"outlined\" label=\"Firstname\" />\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardSettings;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\cart.actions.js",["737"],"import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const addItemToCart = (data) => {\r\n  return (dispatch) => {\r\n    //dispatch({ type: authConstants.CART_RESET });\r\n    dispatch({ type: authConstants.CART_ITEM_ADD, payload: { ...data } });\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: authConstants.CART_ITEM_REMOVE, payload: { ...data } });\r\n  };\r\n};\r\n\r\nexport const increaseQuantity = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_INCREASE,\r\n      payload: { ...data },\r\n    });\r\n  };\r\n};\r\nexport const decreaseQuantity = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_DECREASE,\r\n      payload: { ...data },\r\n    });\r\n  };\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ObjectSlider\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\SideBar\\index.js",["738","739","740","741"],"import React, { useEffect, useState } from \"react\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n// import Image from \"./image.jpg\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Tooltip } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sidebarData } from \"./sidebardata\";\r\nimport { authConstants } from \"../../actions/constants\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst SideBar = (props) => {\r\n  const sidebarCollapse = useSelector((state) => state.sidebar.collapsed);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(sidebarCollapse);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const showNavbar = (toggleId, navId, bodyId, headerId, dashboardId) => {\r\n  //   dispatch({ type: authConstants.COLLAPSE_SIDEBAR });\r\n  //   // console.log(\"showing sidebar\");\r\n\r\n  //   const toggle = document.getElementById(toggleId),\r\n  //     nav = document.getElementById(navId),\r\n  //     bodypd = document.getElementById(bodyId),\r\n  //     headerpd = document.getElementById(headerId),\r\n  //     dashboardpd = document.getElementById(dashboardId);\r\n  //   if (toggle && nav && bodypd && headerpd) {\r\n  //     // nav.classList.toggle(\"show\");\r\n  //     // bodypd.classList.toggle(\"body-pd\");\r\n  //     headerpd.classList.toggle(\"body-pd\");\r\n  //     dashboardpd.classList.toggle(\"body-pd\");\r\n  //   }\r\n  // };\r\n\r\n  // if (sidebarCollapse === false) {\r\n  //   console.log(sidebarCollapse);\r\n  //   showNavbar(\r\n  //     \"header__toggle\",\r\n  //     \"nav-bar\",\r\n  //     \"body-pd\",\r\n  //     \"header\",\r\n  //     \"dashboard__content\"\r\n  //   );\r\n  // }\r\n\r\n  const changeActive = (e) => {\r\n    const link_color = document.querySelectorAll(\".nav__link\");\r\n    if (link_color) {\r\n      link_color.forEach((l) => l.classList.remove(\"active\"));\r\n      e.currentTarget.classList.add(\"active\");\r\n    }\r\n  };\r\n\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={sidebarCollapsed ? null : \"body-pd\"} id=\"body-pd\">\r\n      <header\r\n        className={`header ${sidebarCollapsed ? null : \"body-pd\"}`}\r\n        id=\"header\"\r\n      >\r\n        <div\r\n          className=\"header__toggle\"\r\n          id=\"header__toggle\"\r\n          onClick={(e) => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <MenuRoundedIcon /> : <CloseRoundedIcon />}\r\n        </div>\r\n\r\n        <div className=\"header__img\">\r\n          <Avatar src={user.profilePicture} />\r\n          {/* <img src={user.profilePicture} /> */}\r\n        </div>\r\n      </header>\r\n      <div\r\n        className={`l-navbar ${sidebarCollapsed ? null : \"show\"}`}\r\n        id=\"nav-bar\"\r\n      >\r\n        <nav className=\"nav\">\r\n          <div>\r\n            <div id=\"brand\">\r\n              <div className=\"brand_logo\">\r\n                <LayersIcon />\r\n              </div>\r\n              <div className=\"brand_name\">NCCP</div>\r\n            </div>\r\n            <div>\r\n              {sidebarData.map((link, key) => {\r\n                return (\r\n                  <Link\r\n                    to={link.link}\r\n                    className={`nav__link ${\r\n                      props.active.toLowerCase() === link.title.toLowerCase()\r\n                        ? \"active\"\r\n                        : null\r\n                    }`}\r\n                    key={key}\r\n                  >\r\n                    {link.icon}\r\n                    <div className=\"nav_link_title\">{link.title}</div>\r\n                  </Link>\r\n                );\r\n              })}\r\n              {/* <Link\r\n                to=\"/AdminDashboard\"\r\n                className=\"nav__link active\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <DashboardIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Dashboard</div>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/dashboard/users\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <PeopleRoundedIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Users</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/orders\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <ListAltIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Orders</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/deposits\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AccountBalanceIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Deposits</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/reports\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AssessmentIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Reports</div>\r\n              </Link> */}\r\n            </div>\r\n          </div>\r\n          <Link\r\n            onClick={(e) => dispatch({ type: authConstants.LOGOUT })}\r\n            className=\"nav__link\"\r\n            to=\"\"\r\n          >\r\n            <ExitToAppIcon className=\"nav_link_logo\" />\r\n            <div className=\"nav_link_title\">Logout</div>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className={`dashboard__content ${sidebarCollapsed ? null : \"body-pd\"}`}\r\n        id=\"dashboard__content\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\SearchBar\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\dashboard.reducers.js",["742","743"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  options: [],\r\n  data: {},\r\n  fetching: false,\r\n  fetched: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.DASHBOARD_OPTIONS_UPDATE:\r\n      state = {\r\n        ...state,\r\n        options: [\r\n          ...(!state.options.includes(action.payload.option)\r\n            ? [...state.options, action.payload.option]\r\n            : [...state.options]),\r\n        ],\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_FAILURE:\r\n      state = initialState;\r\n      break;\r\n\r\n    case authConstants.UPDATE_DASHBOARD_OPTIONS:\r\n      state = {\r\n        ...state,\r\n        options: action.payload.options,\r\n        fetched: true,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\helpers\\templates.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js",["744","745"],"import React, { useEffect, useState } from \"react\";\r\nconst useFormSignUp = (handleSubmission, SignUpValidator) => {\r\n  const [signUpValue, setSignUpValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    type: \"Student\",\r\n    affiliation: \"\",\r\n    description: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [signUpErrors, setSignUpErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignUpSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignUpErrors(SignUpValidator(signUpValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signUpErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signUpErrors]);\r\n\r\n  const updateSignUpValue = (e) => {\r\n    setSignUpValue({\r\n      ...signUpValue,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSignUpSubmit, signUpValue, updateSignUpValue, signUpErrors };\r\n};\r\n\r\nexport default useFormSignUp;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\DepositItemList\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Modals\\ResponseModal\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",["746"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSevenValidator from \"./StepSevenValidator\";\r\nimport useStepSevenForm from \"./useStepSevenForm\";\r\n\r\nfunction Step7(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Sexuality: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Sexuality</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Sexual Behaviour\"\r\n          type=\"text\"\r\n          name=\"SexualBehaviour\"\r\n          placeholder=\"Enter Sexual Behaviour here\"\r\n          value={value.SexualBehaviour}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualBehaviour && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualBehaviour}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sexual State\"\r\n          type=\"text\"\r\n          name=\"SexualState\"\r\n          placeholder=\"Enter Sexual State here\"\r\n          value={value.SexualState}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualState && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualState}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step7;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",["747"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourteenValidator from \"./StepFourteenValidator\";\r\nimport useStepFourteenForm from \"./useStepFourteenForm\";\r\n\r\nfunction Step14(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Catalogue: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourteenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourteenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Catalogue</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Catalogue Name\"\r\n          type=\"text\"\r\n          name=\"CatalogueName\"\r\n          placeholder=\"Enter Catalogue Name here\"\r\n          value={value.CatalogueName}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueName && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueName}</p>\r\n        )}\r\n        <Input\r\n          label=\"Catalogue URL\"\r\n          type=\"text\"\r\n          name=\"CatalogueURL\"\r\n          placeholder=\"Enter Catalogue URL here\"\r\n          value={value.CatalogueURL}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueURL && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueURL}</p>\r\n        )}\r\n        <Input\r\n          label=\"Catalogue Update Time\"\r\n          type=\"time\"\r\n          name=\"CatalogueUpdateTime\"\r\n          placeholder=\"Enter Catalogue Update Time here\"\r\n          value={value.CatalogueUpdateTime}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueUpdateTime && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueUpdateTime}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Person Of Catalogue\"\r\n          type=\"text\"\r\n          name=\"ContactPersonOfCatalogue\"\r\n          placeholder=\"Enter Contact Person Of Catalogue here\"\r\n          value={value.ContactPersonOfCatalogue}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactPersonOfCatalogue && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactPersonOfCatalogue}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Email\"\r\n          type=\"email\"\r\n          name=\"ContactEmail\"\r\n          placeholder=\"Enter Contact Email here\"\r\n          value={value.ContactEmail}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactEmail && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactEmail}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Address\"\r\n          type=\"text\"\r\n          name=\"ContactAddress\"\r\n          placeholder=\"Enter Contact Address here\"\r\n          value={value.ContactAddress}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactAddress && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactAddress}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Telephone\"\r\n          type=\"text\"\r\n          name=\"ContactTelephone\"\r\n          placeholder=\"Enter Contact Telephone here\"\r\n          value={value.ContactTelephone}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactTelephone && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactTelephone}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Fax\"\r\n          type=\"text\"\r\n          name=\"ContactFax\"\r\n          placeholder=\"Enter Contact Fax here\"\r\n          value={value.ContactFax}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactFax && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactFax}</p>\r\n        )}\r\n        <Input\r\n          label=\"Number of Strains\"\r\n          type=\"text\"\r\n          name=\"NumberOfStrains\"\r\n          placeholder=\"Enter Number of Strains here\"\r\n          value={value.NumberOfStrains}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NumberOfStrains && (\r\n          <p style={{ color: \"red\" }}>{errors.NumberOfStrains}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step14;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js",["748"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["749"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["750"],"import { useEffect, useState } from \"react\";\r\nconst useStepThirteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThirteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThirteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThirteenForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardUsers\\index.js",["751","752","753"],"import { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\n// import { Dropdown } from \"bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport ItemList from \"../../components/ItemList\";\r\nimport ItemListCard from \"../../components/ItemListCard\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\n\r\nimport \"./style.css\";\r\nconst AdminDashboardUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users);\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      users.userList.map((row) => {\r\n        return {\r\n          ...row,\r\n          orders: Math.floor(Math.random() * 10),\r\n          deposits: Math.floor(Math.random() * 10),\r\n        };\r\n      })\r\n    );\r\n    // setData(users.userList);\r\n  }, [users]);\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.role.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.firstname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.lastname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{users.error.message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (users.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (users.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{ErrorMessage()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Orders\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"Deposits\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n  return (\r\n    <SideBar active=\"Users\">\r\n      <div className=\"div__one\">\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Users</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Name\",\r\n                value: \"name\",\r\n              },\r\n              {\r\n                title: \"Orders\",\r\n                value: \"orders\",\r\n              },\r\n              {\r\n                title: \"Deposits\",\r\n                value: \"deposits\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Role\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Admin\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                title: \"Internal\",\r\n                value: \"internal\",\r\n              },\r\n              {\r\n                title: \"External\",\r\n                value: \"External\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <ItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardUsers;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\App.js",["754","755","756","757","758","759","760","761","762","763"],"import \"./App.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./containers/HomePage/index\";\r\nimport Signup from \"./containers/Signup/index\";\r\nimport Signin from \"./containers/SignIn/index\";\r\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Catalogue from \"../src/containers/Catalogue/index\";\r\nimport Dashboard from \"./containers/Dashboard/index\";\r\nimport { isUserLoggedIn } from \"./actions\";\r\nimport ItemDetails from \"./containers/Details\";\r\nimport Orders from \"./containers/Orders\";\r\nimport Deposits from \"./containers/Deposits\";\r\nimport Microorganism from \"./containers/Microorganism\";\r\nimport Users from \"./containers/Users\";\r\nimport User from \"./containers/User\";\r\nimport DashboardCatalogue from \"./containers/DashboardCatalogue\";\r\nimport DashboardCatalogueDetail from \"./containers/DashboardCatalogueDetail\";\r\nimport AddMicroorganism from \"./containers/AddMicroorganism\";\r\nimport AddUserForm from \"./components/AddUserForm\";\r\nimport Cart from \"./containers/Cart\";\r\nimport ForgetPassword from \"./containers/ForgetPassword\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport EmailVerified from \"./containers/EmailVerified\";\r\nimport AdminDashboardDetails from \"./containers/AdminDashboardDetails\";\r\nimport DashboardDeposits from \"./containers/AdminDashboardDeposits\";\r\nimport DashboardOrders from \"./containers/AdminDashboardOrders\";\r\nimport DashboardUsers from \"./containers/AdminDashboardUsers\";\r\nimport DashboardPayments from \"./containers/AdminDashboardPayments\";\r\nimport DashboardReports from \"./containers/AdminDashboardReports\";\r\nimport DashboardAddUser from \"./containers/AdminDashboardAddUser\";\r\nimport AdminDashboardSettings from \"./containers/AdminDashboardSettings\";\r\nimport AdminDashboardOrders from \"./containers/AdminDashboardOrders\";\r\nimport AdminDashboardUsers from \"./containers/AdminDashboardUsers\";\r\nimport AdminDashboardPayments from \"./containers/AdminDashboardPayments\";\r\nimport AdminDashboardReports from \"./containers/AdminDashboardReports\";\r\nimport AdminDashboardDeposits from \"./containers/AdminDashboardDeposits\";\r\nimport AdminDashboardAddUser from \"./containers/AdminDashboardAddUser\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLoggedIn());\r\n    }\r\n  }, [auth]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        {/* <PrivateRoute path=\"/\" exact component={HomePage} /> */}\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/catalogue\" component={Catalogue} />\r\n        <Route path=\"/dashboard\" exact component={Dashboard} />\r\n        <Route path=\"/signin\" component={Signin} />\r\n        <Route path=\"/forgetPassword\" component={ForgetPassword} />\r\n        <Route path=\"/authentication/activate\" component={EmailVerified} />\r\n        <Route path=\"/resetPassword\" component={ResetPassword} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/itemDetails\" component={ItemDetails} />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard\"\r\n          exact\r\n          component={AdminDashboardDetails}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/settings\"\r\n          component={AdminDashboardSettings}\r\n        />\r\n        {/* <PrivateRoute path=\"/dashboard/orders\" component={Orders} /> */}\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/deposits\"\r\n          component={AdminDashboardDeposits}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/orders\"\r\n          component={AdminDashboardOrders}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/users\"\r\n          component={AdminDashboardUsers}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/addUser\"\r\n          component={AdminDashboardAddUser}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/payments\"\r\n          component={AdminDashboardPayments}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/adminDashboard/reports\"\r\n          component={AdminDashboardReports}\r\n        />\r\n        {/* <PrivateRoute path=\"dashboard/reports\" component={DashboardReports}/> */}\r\n\r\n        <Route path=\"/dashboard/microorgansims\" component={Microorganism} />\r\n        {/* <PrivateRoute path=\"/dashboard/users\" component={Users} /> */}\r\n        <Route path=\"/dashboard/catalogue\" component={DashboardCatalogue} />\r\n        <Route path=\"/dashboard/user\" component={User} />\r\n        <PrivateRoute path=\"/dashboard/addUser\" component={AddUserForm} />\r\n        <PrivateRoute\r\n          path=\"/dashboard/details\"\r\n          component={DashboardCatalogueDetail}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/dashboard/addMicroorganism\"\r\n          component={AddMicroorganism}\r\n        />\r\n        <Route path=\"/cart\" component={Cart} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardOrders\\index.js",["764","765","766","767","768","769"],"import React, { useState } from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport OrderItemList from \"../../components/OrderItemList\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport \"./style.css\";\r\n\r\nconst AdminDashboardOrders = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      order_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      order_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\">\r\n        {/* <SearchBar query={query} setQuery={setQuery} /> */}\r\n        {/* <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"OrderID\",\r\n                value: \"order_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardOrders;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\UI\\Input\\input.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\server_urls.js\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js",["770"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepTwoValidator from \"./StepTwoValidator\";\r\nimport useStepTwoForm from \"./useStepTwoForm\";\r\n\r\nfunction Step2(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Name: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepTwoForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepTwoValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Name</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Taxonomy ID\"\r\n          type=\"text\"\r\n          name=\"TaxonomyID\"\r\n          placeholder=\"Enter Taxonomy ID here\"\r\n          value={value.TaxonomyID}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TaxonomyID && (\r\n          <p style={{ color: \"red\" }}>{errors.TaxonomyID}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step2;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js",["771"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["772"],"import { useEffect, useState } from \"react\";\r\nconst useStepTenForm = (initialValue, handleSubmission, StepTenValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTenForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Catalogue\\index.js",["773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Jumbotron,\r\n  Nav,\r\n  Row,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  fetchCatalogueData,\r\n  fetchItemDetails,\r\n  getCatalogueData,\r\n} from \"../../actions/catalogue.actions\";\r\nimport { addItemToCart } from \"../../actions/cart.actions\";\r\nimport \"./style.css\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { ReactComponent as Arrow } from \"./Icons/right-arrow.svg\";\r\nimport { ReactComponent as Bacteria } from \"./Icons/bacterium-solid.svg\";\r\nimport { ReactComponent as ShoppingCart } from \"./Icons/shopping-cart-solid.svg\";\r\nimport HomePage from \"../HomePage\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst Catalogue = (props) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\r\n    \"bacteria\",\r\n    \"fungi\",\r\n    \"archaea\",\r\n    \"antibody\",\r\n    \"microalgae\",\r\n    \"phage\",\r\n    \"virus\",\r\n    \"yeast\",\r\n  ];\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [addedToCart, setAddedToCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"OrganismType\"].toLowerCase())\r\n        : true;\r\n      // console.log(\r\n      //   columns &&\r\n      //     columns.some((column) => {\r\n      //       return (\r\n      //         applyFilter &&\r\n      //         row[column]\r\n      //           .toString()\r\n      //           .toLowerCase()\r\n      //           .indexOf(query.toLowerCase()) > -1\r\n      //       );\r\n      //     })\r\n      // );\r\n      return (\r\n        columns &&\r\n        columns.some((column) => {\r\n          return (\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n          );\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const addToCart = (row) => {\r\n    const { id } = row;\r\n    setAddedToCart([...addedToCart, id]);\r\n    const { OrganismType, Genus, SpeciesEpithet } = row;\r\n    dispatch(addItemToCart({ id: id, OrganismType, Genus, SpeciesEpithet }));\r\n  };\r\n\r\n  if (fetching) {\r\n    <Layout>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Layout>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n\r\n      <div className=\"page-heading\">\r\n        <Container className=\"page-heading-content\">\r\n          <h1>Catalogue</h1>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"catalogue-div\">\r\n        <Container className=\"catalogue-content\">\r\n          <div className=\"search-bar-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              id=\"search-bar-input\"\r\n            />\r\n            <SearchOutlined className=\"search-bar-icon\" fontSize=\"32px\" />\r\n          </div>\r\n          <div className=\"search-filters-box\">\r\n            <h3>Filters</h3>\r\n            <hr />\r\n            {filters &&\r\n              filters.map((filter) => {\r\n                return (\r\n                  <Form.Check\r\n                    label={filter}\r\n                    name={filter}\r\n                    className=\"filter-check\"\r\n                    checked={searchFilters.includes(filter)}\r\n                    onChange={(e) => {\r\n                      const checked = searchFilters.includes(filter);\r\n                      setSearchFilters((prev) =>\r\n                        checked\r\n                          ? prev.filter((sf) => sf !== filter)\r\n                          : [...prev, filter]\r\n                      );\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"catalogue-data-content-box\">\r\n            <div>\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"catalogue-data-item\">\r\n                    <div>\r\n                      <Bacteria className=\"image\" />\r\n                      <h4 className=\"catalogue-data-item-organism-type\">\r\n                        {row.OrganismType}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"item-detail\">\r\n                      <Link\r\n                        className=\"catalogue-data-item-name\"\r\n                        to={{\r\n                          pathname: \"/itemDetails\",\r\n                          state: { id: row.id },\r\n                        }}\r\n                      >\r\n                        <h4 className=\"item-name\">{`${row.Genus} ${row.SpeciesEpithet}`}</h4>\r\n                        {/* <h3 className=\"arrow-box\">\r\n                          <Arrow className=\"arrow\" />\r\n                        </h3> */}\r\n                      </Link>\r\n                      <span className=\"catalogue-data-item-accession-number\">{`Accession Number    ${row.AccessionNumber}`}</span>\r\n                      <span className=\"catalogue-data-item-strain-type\">{`Strain Type      ${row.Status}`}</span>\r\n                      <span className=\"catalogue-data-item-bio-hazard-level\">{`Bio Hazard Level     ${row.BioHazardLevel}`}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        className={\r\n                          addedToCart.includes(row.id)\r\n                            ? \"add-to-cart-button-disabled\"\r\n                            : \"add-to-cart-button\"\r\n                        }\r\n                        onClick={(e) => addToCart(row)}\r\n                      >\r\n                        {addedToCart.includes(row.id)\r\n                          ? \"Added To Cart\"\r\n                          : \"Add To Cart\"}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row.OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row.Genus} ${row.SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row.AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <Layout>\r\n        <Jumbotron>\r\n          <div id=\"upper-content\">\r\n            <h1>Catalogue</h1>\r\n          </div>\r\n          <div id=\"catalogue\">\r\n            <div id=\"filter-box\">\r\n              <div id=\"filters\">\r\n                <h5>Filters</h5>\r\n                <hr />\r\n                {filters &&\r\n                  filters.map((filter) => {\r\n                    return (\r\n                      <Form.Check\r\n                        label={filter}\r\n                        name={filter}\r\n                        className\r\n                        checked={searchFilters.includes(filter)}\r\n                        onChange={(e) => {\r\n                          const checked = searchFilters.includes(filter);\r\n                          setSearchFilters((prev) =>\r\n                            checked\r\n                              ? prev.filter((sf) => sf !== filter)\r\n                              : [...prev, filter]\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div id=\"items\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row[\"CoreDataSets\"].OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row[\"CoreDataSets\"].Genus} ${row[\"CoreDataSets\"].SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row[\"CoreDataSets\"].AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Orders\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AddMicroorganism\\index.js",["794","795"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  addMicroorganism,\r\n  resetAddMicroorganismState,\r\n} from \"../../actions/catalogue.actions\";\r\nimport Review from \"../../components/AddMicroorgansimForm/Review\";\r\nimport Step1 from \"../../components/AddMicroorgansimForm/Step1\";\r\nimport Step10 from \"../../components/AddMicroorgansimForm/Step10\";\r\nimport Step11 from \"../../components/AddMicroorgansimForm/Step11\";\r\nimport Step12 from \"../../components/AddMicroorgansimForm/Step12\";\r\nimport Step13 from \"../../components/AddMicroorgansimForm/Step13\";\r\nimport Step14 from \"../../components/AddMicroorgansimForm/Step14\";\r\nimport Step2 from \"../../components/AddMicroorgansimForm/Step2\";\r\nimport Step3 from \"../../components/AddMicroorgansimForm/Step3\";\r\nimport Step4 from \"../../components/AddMicroorgansimForm/Step4\";\r\nimport Step5 from \"../../components/AddMicroorgansimForm/Step5\";\r\nimport Step6 from \"../../components/AddMicroorgansimForm/Step6\";\r\nimport Step7 from \"../../components/AddMicroorgansimForm/Step7\";\r\nimport Step8 from \"../../components/AddMicroorgansimForm/Step8\";\r\nimport Step9 from \"../../components/AddMicroorgansimForm/Step9\";\r\nimport Layout from \"../../components/Layout\";\r\n\r\nfunction AddMicroorganism() {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const added = useSelector((state) => state.catalogue.addMicroorganism.added);\r\n  const [currentStep, setCurrentStep] = useState(14);\r\n  const [formData, setFormData] = useState({\r\n    CoreDataSets: {\r\n      Genus: \"\",\r\n      AccessionNumber: \"\",\r\n      OtherCollection: [],\r\n      SpeciesEpithet: \"\",\r\n      Author: \"\",\r\n      OrganismType: \"Bacteria\",\r\n      HistoryOfDeposit: \"\",\r\n      DateOfIsolation: \"\",\r\n      IsolatedFrom: \"\",\r\n      GeographicOrigin: \"\",\r\n      Status: \"Type\",\r\n      Medium: \"\",\r\n      Application: \"\",\r\n      Literature: \"\",\r\n      OptimumGrowthTemperature: \"\",\r\n      MaximumGrowthTemperature: \"\",\r\n      MinimumGrowthTemperature: \"\",\r\n    },\r\n    Name: {\r\n      TaxonomyID: \"\",\r\n    },\r\n    StrainAdministration: {\r\n      DateOfAccession: \"\",\r\n      HerbariumNo: \"\",\r\n      InternalIdentityCheck: \"\",\r\n      ModeOfPreservation: \"\",\r\n      BioHazardLevel: \"1\",\r\n      RestrictionRemarks: \"\",\r\n      CountryOfExport: \"\",\r\n      MTA: \"\",\r\n      DistributionRestriction: \"\",\r\n      AnimalQuarantineNo: \"\",\r\n      PlantQuarantineNo: \"\",\r\n      FormOfSupply: \"\",\r\n    },\r\n    EnviromentAndHistory: {\r\n      SubStrate: \"\",\r\n      Habitat: \"\",\r\n      Latitude: \"\",\r\n      Longitude: \"\",\r\n      Altitude: \"\",\r\n      Depth: \"\",\r\n      Humidity: \"\",\r\n      PHForEnviroment: \"\",\r\n      TemperatureForEnviroment: \"\",\r\n      CollectionMethod: \"\",\r\n      DateOfCollection: \"\",\r\n      CountryOfCollection: \"\",\r\n      State: \"\",\r\n      RegionOfCollection: \"\",\r\n      CollectedBy: \"\",\r\n      IsolatedBy: \"\",\r\n      MethodOfIsolation: \"\",\r\n      IdentifiedBy: \"\",\r\n      DateOfIdentification: \"\",\r\n      DepositedBy: \"\",\r\n      DateOfDeposition: \"\",\r\n      NameAtAccept: \"\",\r\n    },\r\n    Publication: {\r\n      LiteratureCategories: \"\",\r\n      Title: \"\",\r\n      Author: \"\",\r\n      Journal: \"\",\r\n      Volume: \"\",\r\n      Number: \"\",\r\n      StartingPage: \"\",\r\n      PageRange: \"\",\r\n      Year: \"\",\r\n      DOINumber: \"\",\r\n    },\r\n    BiologicalInteractions: {\r\n      Symbiosis: \"\",\r\n      Mycoparasitism: \"\",\r\n      Pathogenicity: \"\",\r\n      Allergenicity: \"\",\r\n      OtherOrganismToxicity: \"\",\r\n      AntagonisticActivities: \"\",\r\n    },\r\n    Sexuality: {\r\n      SexualBehaviour: \"\",\r\n      SexualState: \"\",\r\n    },\r\n    Properties: {\r\n      NumberOfNuclei: \"\",\r\n      RehyderationFluid: \"\",\r\n      FineStructureData: \"\",\r\n      WallConstituents: \"\",\r\n      CellContents: \"\",\r\n      CoenzymeQSystem: \"\",\r\n      StainingReactions: \"Positive\",\r\n      PigmentProduction: \"\",\r\n      CellShape: \"\",\r\n      CellSize: \"\",\r\n      Motile: \"Motile\",\r\n      SporeForming: \"\",\r\n      MotileBy: \"\",\r\n    },\r\n    GenotypeAndGenetics: {\r\n      Genotype: \"\",\r\n      Phenotype: \"\",\r\n      MatingType: \"\",\r\n      SexualReproduction: \"\",\r\n      GCContentOfDNA: \"\",\r\n      OtherStrainsHybridization: \"\",\r\n      HybridizationStrainNumber: \"\",\r\n      TypeOfDNAOrRNA: \"\",\r\n      Percentage: \"\",\r\n      TemperatureOfHybridization: \"\",\r\n      Mutants: \"\",\r\n      MutationMethods: \"\",\r\n      Hybrids: \"\",\r\n      Plasmid: \"\",\r\n      KillerPropertiesOfYeast: \"\",\r\n    },\r\n    GrowthConditions: {\r\n      ConditionsForGrowthAndMaintenenceOnSolidMedia: \"\",\r\n      ConditionsForGrowthInLiquidMedia: \"\",\r\n      ConditionsForFruitingOrSporulation: \"\",\r\n      ConditionsForGermination: \"\",\r\n      CarbonSourcesTested: \"\",\r\n      NitrogenSourcesTested: \"\",\r\n      SingleCompoundTested: \"\",\r\n      NutritionalRequirements: \"\",\r\n      Deficiencies: \"\",\r\n      TolerancesAndSensitivities: \"\",\r\n      TemperatureRelationships: \"\",\r\n      MaximumGrowthPH: \"\",\r\n      MinimumGrowthPH: \"\",\r\n      OptimalGrowthPH: \"\",\r\n      LighConditions: \"\",\r\n      OxygenRelationship: \"\",\r\n      HeatResistence: \"\",\r\n      EthanolConditions: \"\",\r\n      SalinityRequirements: \"\",\r\n      OptimalNaClConcentration: \"\",\r\n      MinimumNaClConcentration: \"\",\r\n      MaximumNaClConcentration: \"\",\r\n      OptimumSugarConcentration: \"\",\r\n      MinimumSugarConcentration: \"\",\r\n      MaximumSugarConcentration: \"\",\r\n      OsmophilyAndXerophily: \"\",\r\n      WaterActivityConditions: \"\",\r\n    },\r\n    ChemistryAndEnzymes: {\r\n      EnzymesProduced: \"\",\r\n      DecompositionAndDeterioratingCapacities: \"\",\r\n      MetabolitiesProduced: \"\",\r\n      Biotransformations: \"\",\r\n    },\r\n    Medium: {\r\n      MediumNumber: \"\",\r\n      MediumName: \"\",\r\n      MediumComposition: \"\",\r\n      MediumPH: \"\",\r\n    },\r\n    Sequence: {\r\n      AccessionNumber: \"\",\r\n      TargetGene: \"\",\r\n      Definition: \"\",\r\n      SequencingMethod: \"\",\r\n      Length: \"\",\r\n      SequenceType: \"\",\r\n      Source: \"\",\r\n      Sequence: \"\",\r\n    },\r\n    Catalogue: {\r\n      CatalogueName: \"\",\r\n      CatalogueURL: \"\",\r\n      CatalogueUpdateTime: \"\",\r\n      ContactPersonOfCatalogue: \"\",\r\n      ContactEmail: \"\",\r\n      ContactAddress: \"\",\r\n      ContactTelephone: \"\",\r\n      ContactFax: \"\",\r\n      NumberOfStrains: \"\",\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  const nextStep = (value) => {\r\n    setFormData({\r\n      ...formData,\r\n      ...value,\r\n    });\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n  const prevStep = () => setCurrentStep(currentStep - 1);\r\n\r\n  const setStep = (step) => setCurrentStep(step);\r\n  const submit = () => {\r\n    dispatch(addMicroorganism(formData, token));\r\n  };\r\n\r\n  if (added) {\r\n    dispatch(resetAddMicroorganismState());\r\n    return <Redirect to=\"/dashboard/catalogue\" />;\r\n  }\r\n\r\n  const getStep = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <Step1 data={formData.CoreDataSets} next={nextStep} />;\r\n        break;\r\n      case 1:\r\n        return <Step2 data={formData.Name} next={nextStep} prev={prevStep} />;\r\n      case 2:\r\n        return (\r\n          <Step3\r\n            data={formData.StrainAdministration}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Step4\r\n            data={formData.EnviromentAndHistory}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Step5 data={formData.Publication} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 5:\r\n        return (\r\n          <Step6\r\n            data={formData.BiologicalInteractions}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 6:\r\n        return (\r\n          <Step7 data={formData.Sexuality} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 7:\r\n        return (\r\n          <Step8 data={formData.Properties} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 8:\r\n        return (\r\n          <Step9\r\n            data={formData.GenotypeAndGenetics}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 9:\r\n        return (\r\n          <Step10\r\n            data={formData.GrowthConditions}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 10:\r\n        return (\r\n          <Step11\r\n            data={formData.ChemistryAndEnzymes}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 11:\r\n        return (\r\n          <Step12 data={formData.Medium} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 12:\r\n        return (\r\n          <Step13 data={formData.Sequence} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 13:\r\n        return (\r\n          <Step14 data={formData.Catalogue} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 14:\r\n        return <Review data={formData} set={setStep} submit={submit} />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return <Layout>{getStep()}</Layout>;\r\n}\r\n\r\nexport default AddMicroorganism;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js",["796","797"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\user.reducer.js",["798","799"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\signup.reducers.js",["800"],"import { authConstants } from \"../actions/constants\";\r\nconst initialState = {\r\n  // userData: {\r\n  //   firstname: \"\",\r\n  //   lastname: \"\",\r\n  //   email: \"\",\r\n  //   role: \"\",\r\n  //   type: \"Student\",\r\n  //   affiliation: \"\",\r\n  //   password: \"\",\r\n  // },\r\n  // data: {},\r\n  registering: false,\r\n  registered: false,\r\n  error: {\r\n    found: false,\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.SIGNUP_REQUEST:\r\n      state = {\r\n        ...state,\r\n        // userData: action.payload.data,\r\n        registering: true,\r\n        registered: false,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: true,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_FAILURE:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        error: {\r\n          found: true,\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n\r\n    case authConstants.SIGNUP_STORE_RESET:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",["801"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSixValidator from \"./StepSixValidator\";\r\nimport useStepSixForm from \"./useStepSixForm\";\r\n\r\nfunction Step6(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      BiologicalInteractions: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSixForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSixValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Biological Interactions</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Symbiosis\"\r\n          type=\"text\"\r\n          name=\"Symbiosis\"\r\n          placeholder=\"Enter Symbiosis here\"\r\n          value={value.Symbiosis}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Symbiosis && <p style={{ color: \"red\" }}>{errors.Symbiosis}</p>}\r\n        <Input\r\n          label=\"Mycoparasitism\"\r\n          type=\"text\"\r\n          name=\"Mycoparasitism\"\r\n          placeholder=\"Enter Mycoparasitism here\"\r\n          value={value.Mycoparasitism}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Mycoparasitism && (\r\n          <p style={{ color: \"red\" }}>{errors.Mycoparasitism}</p>\r\n        )}\r\n        <Input\r\n          label=\"Pathogenicity\"\r\n          type=\"text\"\r\n          name=\"Pathogenicity\"\r\n          placeholder=\"Enter Pathogenicity here\"\r\n          value={value.Pathogenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Pathogenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Pathogenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Allergenicity\"\r\n          type=\"text\"\r\n          name=\"Allergenicity\"\r\n          placeholder=\"Enter Allergenicity here\"\r\n          value={value.Allergenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Allergenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Allergenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Other Organism Toxicity\"\r\n          type=\"text\"\r\n          name=\"OtherOrganismToxicity\"\r\n          placeholder=\"Enter Other Organism Toxicity here\"\r\n          value={value.OtherOrganismToxicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherOrganismToxicity && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherOrganismToxicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Antagonistic Activities\"\r\n          type=\"text\"\r\n          name=\"AntagonisticActivities\"\r\n          placeholder=\"Enter Antagonistic Activities here\"\r\n          value={value.AntagonisticActivities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AntagonisticActivities && (\r\n          <p style={{ color: \"red\" }}>{errors.AntagonisticActivities}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step6;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js",["802"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepElevenValidator from \"./StepElevenValidator\";\r\nimport useStepElevenForm from \"./useStepElevenForm\";\r\n\r\nfunction Step11(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      ChemistryAndEnzymes: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepElevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepElevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Chemistry And Enzymes</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Enzymes Produced\"\r\n          type=\"text\"\r\n          name=\"EnzymesProduced\"\r\n          placeholder=\"Enter Enzymes Produced here\"\r\n          value={value.EnzymesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.EnzymesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.EnzymesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Decomposition And Deteriorating Capabilities\"\r\n          type=\"text\"\r\n          name=\"DecompositionAndDeterioratingCapabilities\"\r\n          placeholder=\"Enter Decomposition And Deteriorating Capabilities here\"\r\n          value={value.DecompositionAndDeterioratingCapabilities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DecompositionAndDeterioratingCapabilities && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.DecompositionAndDeterioratingCapabilities}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Metabolities Produced\"\r\n          type=\"text\"\r\n          name=\"MetabolitiesProduced\"\r\n          placeholder=\"Enter Metabolities Produced here\"\r\n          value={value.MetabolitiesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MetabolitiesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.MetabolitiesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Bio transformations\"\r\n          type=\"text\"\r\n          name=\"Biotransformations\"\r\n          placeholder=\"Enter Bio transformations here\"\r\n          value={value.Biotransformations}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Biotransformations && (\r\n          <p style={{ color: \"red\" }}>{errors.Biotransformations}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step11;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js",["803"],"import { useEffect, useState } from \"react\";\r\nconst useStepTwoForm = (initialValue, handleSubmission, StepTwoValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwoValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwoForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\HOC\\PrivateRoute.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Cart\\index.js",["804","805","806","807","808","809","810"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddUserForm\\index.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\Signup\\SignUpUseForm.js",["811","812"],"import React, { useEffect, useState } from \"react\";\r\nconst useForm = (handleSubmission, SignUpValidator) => {\r\n  const [value, setValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    type: \"Student\",\r\n    affiliation: \"\",\r\n    description: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(SignUpValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\containers\\SignIn\\SignInValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\reducers\\index.js",["813"],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\Layout\\SidebarData.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["814"],"import { useEffect, useState } from \"react\";\r\nconst useStepNineForm = (initialValue, handleSubmission, StepNineValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepNineValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepNineForm;\r\n","C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\actions\\constants.js",[],"C:\\Users\\Jafar\\Desktop\\NCCP Information System\\FYP-NCCP\\front-end\\src\\components\\ItemList\\index.js",["815","816"],{"ruleId":"817","replacedBy":"818"},{"ruleId":"819","replacedBy":"820"},{"ruleId":"821","severity":1,"message":"822","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":26},{"ruleId":"821","severity":1,"message":"825","line":1,"column":28,"nodeType":"823","messageId":"824","endLine":1,"endColumn":36},{"ruleId":"821","severity":1,"message":"826","line":3,"column":3,"nodeType":"823","messageId":"824","endLine":3,"endColumn":9},{"ruleId":"821","severity":1,"message":"827","line":4,"column":3,"nodeType":"823","messageId":"824","endLine":4,"endColumn":14},{"ruleId":"821","severity":1,"message":"828","line":5,"column":3,"nodeType":"823","messageId":"824","endLine":5,"endColumn":6},{"ruleId":"821","severity":1,"message":"829","line":9,"column":3,"nodeType":"823","messageId":"824","endLine":9,"endColumn":10},{"ruleId":"821","severity":1,"message":"830","line":11,"column":3,"nodeType":"823","messageId":"824","endLine":11,"endColumn":7},{"ruleId":"821","severity":1,"message":"831","line":12,"column":3,"nodeType":"823","messageId":"824","endLine":12,"endColumn":9},{"ruleId":"821","severity":1,"message":"832","line":13,"column":3,"nodeType":"823","messageId":"824","endLine":13,"endColumn":6},{"ruleId":"821","severity":1,"message":"833","line":14,"column":3,"nodeType":"823","messageId":"824","endLine":14,"endColumn":6},{"ruleId":"821","severity":1,"message":"834","line":16,"column":23,"nodeType":"823","messageId":"824","endLine":16,"endColumn":34},{"ruleId":"821","severity":1,"message":"835","line":17,"column":8,"nodeType":"823","messageId":"824","endLine":17,"endColumn":14},{"ruleId":"821","severity":1,"message":"836","line":20,"column":8,"nodeType":"823","messageId":"824","endLine":20,"endColumn":16},{"ruleId":"821","severity":1,"message":"837","line":22,"column":8,"nodeType":"823","messageId":"824","endLine":22,"endColumn":17},{"ruleId":"821","severity":1,"message":"838","line":23,"column":8,"nodeType":"823","messageId":"824","endLine":23,"endColumn":12},{"ruleId":"821","severity":1,"message":"839","line":24,"column":8,"nodeType":"823","messageId":"824","endLine":24,"endColumn":24},{"ruleId":"821","severity":1,"message":"840","line":26,"column":8,"nodeType":"823","messageId":"824","endLine":26,"endColumn":22},{"ruleId":"821","severity":1,"message":"841","line":28,"column":8,"nodeType":"823","messageId":"824","endLine":28,"endColumn":20},{"ruleId":"821","severity":1,"message":"842","line":30,"column":8,"nodeType":"823","messageId":"824","endLine":30,"endColumn":20},{"ruleId":"821","severity":1,"message":"843","line":34,"column":8,"nodeType":"823","messageId":"824","endLine":34,"endColumn":24},{"ruleId":"821","severity":1,"message":"844","line":36,"column":8,"nodeType":"823","messageId":"824","endLine":36,"endColumn":16},{"ruleId":"821","severity":1,"message":"845","line":37,"column":8,"nodeType":"823","messageId":"824","endLine":37,"endColumn":20},{"ruleId":"821","severity":1,"message":"846","line":38,"column":8,"nodeType":"823","messageId":"824","endLine":38,"endColumn":25},{"ruleId":"821","severity":1,"message":"847","line":39,"column":8,"nodeType":"823","messageId":"824","endLine":39,"endColumn":25},{"ruleId":"821","severity":1,"message":"848","line":40,"column":8,"nodeType":"823","messageId":"824","endLine":40,"endColumn":23},{"ruleId":"821","severity":1,"message":"849","line":41,"column":8,"nodeType":"823","messageId":"824","endLine":41,"endColumn":19},{"ruleId":"821","severity":1,"message":"850","line":42,"column":8,"nodeType":"823","messageId":"824","endLine":42,"endColumn":32},{"ruleId":"821","severity":1,"message":"851","line":43,"column":8,"nodeType":"823","messageId":"824","endLine":43,"endColumn":26},{"ruleId":"821","severity":1,"message":"852","line":44,"column":8,"nodeType":"823","messageId":"824","endLine":44,"endColumn":25},{"ruleId":"821","severity":1,"message":"853","line":52,"column":8,"nodeType":"823","messageId":"824","endLine":52,"endColumn":21},{"ruleId":"821","severity":1,"message":"854","line":53,"column":8,"nodeType":"823","messageId":"824","endLine":53,"endColumn":20},{"ruleId":"821","severity":1,"message":"855","line":59,"column":9,"nodeType":"823","messageId":"824","endLine":59,"endColumn":17},{"ruleId":"821","severity":1,"message":"856","line":61,"column":20,"nodeType":"823","messageId":"824","endLine":61,"endColumn":31},{"ruleId":"821","severity":1,"message":"857","line":67,"column":9,"nodeType":"823","messageId":"824","endLine":67,"endColumn":25},{"ruleId":"858","severity":1,"message":"859","line":128,"column":13,"nodeType":"860","endLine":128,"endColumn":57},{"ruleId":"861","severity":1,"message":"862","line":356,"column":15,"nodeType":"860","endLine":356,"endColumn":18},{"ruleId":"861","severity":1,"message":"862","line":366,"column":17,"nodeType":"860","endLine":366,"endColumn":20},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"835","line":3,"column":8,"nodeType":"823","messageId":"824","endLine":3,"endColumn":14},{"ruleId":"821","severity":1,"message":"863","line":4,"column":10,"nodeType":"823","messageId":"824","endLine":4,"endColumn":14},{"ruleId":"821","severity":1,"message":"864","line":4,"column":24,"nodeType":"823","messageId":"824","endLine":4,"endColumn":33},{"ruleId":"821","severity":1,"message":"832","line":4,"column":35,"nodeType":"823","messageId":"824","endLine":4,"endColumn":38},{"ruleId":"821","severity":1,"message":"833","line":4,"column":40,"nodeType":"823","messageId":"824","endLine":4,"endColumn":43},{"ruleId":"821","severity":1,"message":"865","line":5,"column":8,"nodeType":"823","messageId":"824","endLine":5,"endColumn":13},{"ruleId":"821","severity":1,"message":"866","line":9,"column":8,"nodeType":"823","messageId":"824","endLine":9,"endColumn":18},{"ruleId":"821","severity":1,"message":"867","line":38,"column":10,"nodeType":"823","messageId":"824","endLine":38,"endColumn":15},{"ruleId":"821","severity":1,"message":"868","line":38,"column":17,"nodeType":"823","messageId":"824","endLine":38,"endColumn":25},{"ruleId":"821","severity":1,"message":"869","line":39,"column":10,"nodeType":"823","messageId":"824","endLine":39,"endColumn":18},{"ruleId":"821","severity":1,"message":"870","line":39,"column":20,"nodeType":"823","messageId":"824","endLine":39,"endColumn":31},{"ruleId":"821","severity":1,"message":"871","line":41,"column":10,"nodeType":"823","messageId":"824","endLine":41,"endColumn":20},{"ruleId":"821","severity":1,"message":"872","line":41,"column":22,"nodeType":"823","messageId":"824","endLine":41,"endColumn":35},{"ruleId":"821","severity":1,"message":"873","line":63,"column":9,"nodeType":"823","messageId":"824","endLine":63,"endColumn":15},{"ruleId":"817","replacedBy":"874"},{"ruleId":"819","replacedBy":"875"},{"ruleId":"876","severity":1,"message":"877","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":8,"suggestions":"879"},{"ruleId":"876","severity":1,"message":"880","line":32,"column":6,"nodeType":"878","endLine":32,"endColumn":8,"suggestions":"881"},{"ruleId":"821","severity":1,"message":"882","line":9,"column":11,"nodeType":"823","messageId":"824","endLine":9,"endColumn":16},{"ruleId":"876","severity":1,"message":"883","line":23,"column":13,"nodeType":"884","endLine":30,"endColumn":4},{"ruleId":"876","severity":1,"message":"885","line":30,"column":6,"nodeType":"878","endLine":30,"endColumn":8,"suggestions":"886"},{"ruleId":"821","severity":1,"message":"887","line":9,"column":10,"nodeType":"823","messageId":"824","endLine":9,"endColumn":29},{"ruleId":"821","severity":1,"message":"888","line":10,"column":16,"nodeType":"823","messageId":"824","endLine":10,"endColumn":24},{"ruleId":"876","severity":1,"message":"883","line":19,"column":13,"nodeType":"884","endLine":31,"endColumn":4},{"ruleId":"876","severity":1,"message":"889","line":31,"column":6,"nodeType":"878","endLine":31,"endColumn":8,"suggestions":"890"},{"ruleId":"821","severity":1,"message":"831","line":3,"column":10,"nodeType":"823","messageId":"824","endLine":3,"endColumn":16},{"ruleId":"821","severity":1,"message":"891","line":3,"column":36,"nodeType":"823","messageId":"824","endLine":3,"endColumn":47},{"ruleId":"821","severity":1,"message":"892","line":8,"column":16,"nodeType":"823","messageId":"824","endLine":8,"endColumn":23},{"ruleId":"821","severity":1,"message":"893","line":24,"column":17,"nodeType":"823","messageId":"824","endLine":24,"endColumn":25},{"ruleId":"821","severity":1,"message":"894","line":50,"column":9,"nodeType":"823","messageId":"824","endLine":50,"endColumn":20},{"ruleId":"821","severity":1,"message":"895","line":59,"column":9,"nodeType":"823","messageId":"824","endLine":59,"endColumn":21},{"ruleId":"821","severity":1,"message":"822","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":26},{"ruleId":"821","severity":1,"message":"831","line":6,"column":3,"nodeType":"823","messageId":"824","endLine":6,"endColumn":9},{"ruleId":"821","severity":1,"message":"865","line":13,"column":3,"nodeType":"823","messageId":"824","endLine":13,"endColumn":8},{"ruleId":"821","severity":1,"message":"896","line":18,"column":3,"nodeType":"823","messageId":"824","endLine":18,"endColumn":9},{"ruleId":"821","severity":1,"message":"897","line":3,"column":21,"nodeType":"823","messageId":"824","endLine":3,"endColumn":30},{"ruleId":"821","severity":1,"message":"829","line":4,"column":16,"nodeType":"823","messageId":"824","endLine":4,"endColumn":23},{"ruleId":"821","severity":1,"message":"888","line":4,"column":25,"nodeType":"823","messageId":"824","endLine":4,"endColumn":33},{"ruleId":"821","severity":1,"message":"898","line":4,"column":35,"nodeType":"823","messageId":"824","endLine":4,"endColumn":46},{"ruleId":"821","severity":1,"message":"899","line":7,"column":8,"nodeType":"823","messageId":"824","endLine":7,"endColumn":15},{"ruleId":"821","severity":1,"message":"900","line":10,"column":10,"nodeType":"823","messageId":"824","endLine":10,"endColumn":17},{"ruleId":"821","severity":1,"message":"901","line":12,"column":9,"nodeType":"823","messageId":"824","endLine":12,"endColumn":23},{"ruleId":"817","replacedBy":"902"},{"ruleId":"819","replacedBy":"903"},{"ruleId":"821","severity":1,"message":"904","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":12},{"ruleId":"905","severity":1,"message":"906","line":71,"column":24,"nodeType":"907","messageId":"908","endLine":71,"endColumn":26},{"ruleId":"821","severity":1,"message":"909","line":2,"column":10,"nodeType":"823","messageId":"824","endLine":2,"endColumn":21},{"ruleId":"821","severity":1,"message":"834","line":2,"column":23,"nodeType":"823","messageId":"824","endLine":2,"endColumn":34},{"ruleId":"821","severity":1,"message":"910","line":3,"column":10,"nodeType":"823","messageId":"824","endLine":3,"endColumn":23},{"ruleId":"821","severity":1,"message":"829","line":8,"column":3,"nodeType":"823","messageId":"824","endLine":8,"endColumn":10},{"ruleId":"821","severity":1,"message":"911","line":19,"column":10,"nodeType":"823","messageId":"824","endLine":19,"endColumn":19},{"ruleId":"817","replacedBy":"912"},{"ruleId":"819","replacedBy":"913"},{"ruleId":"914","severity":1,"message":"915","line":7,"column":1,"nodeType":"916","endLine":19,"endColumn":3},{"ruleId":"817","replacedBy":"917"},{"ruleId":"819","replacedBy":"918"},{"ruleId":"914","severity":1,"message":"915","line":12,"column":1,"nodeType":"916","endLine":41,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":13,"column":3,"nodeType":"921","messageId":"922","endLine":39,"endColumn":4},{"ruleId":"914","severity":1,"message":"915","line":13,"column":1,"nodeType":"916","endLine":46,"endColumn":3},{"ruleId":"914","severity":1,"message":"915","line":19,"column":1,"nodeType":"916","endLine":52,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":20,"column":3,"nodeType":"921","messageId":"922","endLine":50,"endColumn":4},{"ruleId":"923","severity":1,"message":"924","line":42,"column":5,"nodeType":"925","messageId":"926","endLine":49,"endColumn":13},{"ruleId":"821","severity":1,"message":"927","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":13},{"ruleId":"821","severity":1,"message":"928","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":23},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":20,"suggestions":"930"},{"ruleId":"821","severity":1,"message":"931","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":20},{"ruleId":"821","severity":1,"message":"932","line":3,"column":8,"nodeType":"823","messageId":"824","endLine":3,"endColumn":25},{"ruleId":"821","severity":1,"message":"933","line":11,"column":10,"nodeType":"823","messageId":"824","endLine":11,"endColumn":16},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"934"},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"935"},{"ruleId":"817","replacedBy":"936"},{"ruleId":"819","replacedBy":"937"},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"938"},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"939"},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"940"},{"ruleId":"876","severity":1,"message":"929","line":42,"column":6,"nodeType":"878","endLine":42,"endColumn":14,"suggestions":"941"},{"ruleId":"821","severity":1,"message":"942","line":17,"column":10,"nodeType":"823","messageId":"824","endLine":17,"endColumn":20},{"ruleId":"821","severity":1,"message":"943","line":17,"column":22,"nodeType":"823","messageId":"824","endLine":17,"endColumn":35},{"ruleId":"876","severity":1,"message":"944","line":28,"column":6,"nodeType":"878","endLine":28,"endColumn":8,"suggestions":"945"},{"ruleId":"821","severity":1,"message":"822","line":2,"column":17,"nodeType":"823","messageId":"824","endLine":2,"endColumn":26},{"ruleId":"821","severity":1,"message":"946","line":4,"column":10,"nodeType":"823","messageId":"824","endLine":4,"endColumn":24},{"ruleId":"821","severity":1,"message":"855","line":9,"column":9,"nodeType":"823","messageId":"824","endLine":9,"endColumn":17},{"ruleId":"821","severity":1,"message":"947","line":8,"column":3,"nodeType":"823","messageId":"824","endLine":8,"endColumn":12},{"ruleId":"821","severity":1,"message":"948","line":11,"column":8,"nodeType":"823","messageId":"824","endLine":11,"endColumn":23},{"ruleId":"821","severity":1,"message":"949","line":12,"column":8,"nodeType":"823","messageId":"824","endLine":12,"endColumn":17},{"ruleId":"821","severity":1,"message":"950","line":14,"column":10,"nodeType":"823","messageId":"824","endLine":14,"endColumn":19},{"ruleId":"821","severity":1,"message":"951","line":161,"column":10,"nodeType":"823","messageId":"824","endLine":161,"endColumn":23},{"ruleId":"821","severity":1,"message":"952","line":161,"column":25,"nodeType":"823","messageId":"824","endLine":161,"endColumn":41},{"ruleId":"821","severity":1,"message":"953","line":23,"column":9,"nodeType":"823","messageId":"824","endLine":23,"endColumn":14},{"ruleId":"861","severity":1,"message":"862","line":54,"column":17,"nodeType":"860","endLine":54,"endColumn":61},{"ruleId":"861","severity":1,"message":"862","line":57,"column":17,"nodeType":"860","endLine":57,"endColumn":61},{"ruleId":"861","severity":1,"message":"862","line":60,"column":17,"nodeType":"860","endLine":60,"endColumn":61},{"ruleId":"861","severity":1,"message":"862","line":63,"column":17,"nodeType":"860","endLine":63,"endColumn":61},{"ruleId":"861","severity":1,"message":"954","line":104,"column":13,"nodeType":"860","endLine":104,"endColumn":59},{"ruleId":"861","severity":1,"message":"954","line":107,"column":13,"nodeType":"860","endLine":107,"endColumn":59},{"ruleId":"861","severity":1,"message":"954","line":110,"column":13,"nodeType":"860","endLine":110,"endColumn":59},{"ruleId":"861","severity":1,"message":"954","line":113,"column":13,"nodeType":"860","endLine":113,"endColumn":59},{"ruleId":"914","severity":1,"message":"915","line":14,"column":1,"nodeType":"916","endLine":119,"endColumn":3},{"ruleId":"821","severity":1,"message":"836","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":16},{"ruleId":"821","severity":1,"message":"955","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":18},{"ruleId":"821","severity":1,"message":"956","line":7,"column":8,"nodeType":"823","messageId":"824","endLine":7,"endColumn":22},{"ruleId":"821","severity":1,"message":"957","line":8,"column":8,"nodeType":"823","messageId":"824","endLine":8,"endColumn":21},{"ruleId":"914","severity":1,"message":"915","line":31,"column":1,"nodeType":"916","endLine":144,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":32,"column":3,"nodeType":"921","messageId":"922","endLine":142,"endColumn":4},{"ruleId":"923","severity":1,"message":"924","line":58,"column":5,"nodeType":"925","messageId":"926","endLine":69,"endColumn":6},{"ruleId":"821","severity":1,"message":"927","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":13},{"ruleId":"821","severity":1,"message":"958","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":30},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":27,"suggestions":"959"},{"ruleId":"821","severity":1,"message":"927","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":13},{"ruleId":"821","severity":1,"message":"960","line":13,"column":10,"nodeType":"823","messageId":"824","endLine":13,"endColumn":16},{"ruleId":"821","severity":1,"message":"961","line":13,"column":18,"nodeType":"823","messageId":"824","endLine":13,"endColumn":27},{"ruleId":"821","severity":1,"message":"962","line":16,"column":24,"nodeType":"823","messageId":"824","endLine":16,"endColumn":33},{"ruleId":"821","severity":1,"message":"963","line":31,"column":10,"nodeType":"823","messageId":"824","endLine":31,"endColumn":17},{"ruleId":"821","severity":1,"message":"964","line":31,"column":19,"nodeType":"823","messageId":"824","endLine":31,"endColumn":29},{"ruleId":"876","severity":1,"message":"965","line":61,"column":6,"nodeType":"878","endLine":61,"endColumn":25,"suggestions":"966"},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"967"},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"968"},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"969"},{"ruleId":"821","severity":1,"message":"970","line":10,"column":8,"nodeType":"823","messageId":"824","endLine":10,"endColumn":29},{"ruleId":"821","severity":1,"message":"971","line":13,"column":10,"nodeType":"823","messageId":"824","endLine":13,"endColumn":31},{"ruleId":"821","severity":1,"message":"972","line":14,"column":8,"nodeType":"823","messageId":"824","endLine":14,"endColumn":20},{"ruleId":"876","severity":1,"message":"880","line":37,"column":6,"nodeType":"878","endLine":37,"endColumn":8,"suggestions":"973"},{"ruleId":"821","severity":1,"message":"974","line":108,"column":9,"nodeType":"823","messageId":"824","endLine":108,"endColumn":28},{"ruleId":"821","severity":1,"message":"975","line":9,"column":22,"nodeType":"823","messageId":"824","endLine":9,"endColumn":35},{"ruleId":"821","severity":1,"message":"976","line":14,"column":32,"nodeType":"823","messageId":"824","endLine":14,"endColumn":55},{"ruleId":"821","severity":1,"message":"977","line":99,"column":26,"nodeType":"823","messageId":"824","endLine":99,"endColumn":43},{"ruleId":"821","severity":1,"message":"978","line":130,"column":38,"nodeType":"823","messageId":"824","endLine":130,"endColumn":67},{"ruleId":"821","severity":1,"message":"979","line":5,"column":8,"nodeType":"823","messageId":"824","endLine":5,"endColumn":16},{"ruleId":"821","severity":1,"message":"980","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":13},{"ruleId":"821","severity":1,"message":"981","line":4,"column":8,"nodeType":"823","messageId":"824","endLine":4,"endColumn":32},{"ruleId":"821","severity":1,"message":"982","line":6,"column":8,"nodeType":"823","messageId":"824","endLine":6,"endColumn":20},{"ruleId":"821","severity":1,"message":"983","line":10,"column":18,"nodeType":"823","messageId":"824","endLine":10,"endColumn":25},{"ruleId":"821","severity":1,"message":"984","line":50,"column":9,"nodeType":"823","messageId":"824","endLine":50,"endColumn":21},{"ruleId":"914","severity":1,"message":"915","line":10,"column":1,"nodeType":"916","endLine":48,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":11,"column":3,"nodeType":"921","messageId":"922","endLine":46,"endColumn":4},{"ruleId":"821","severity":1,"message":"927","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":13},{"ruleId":"876","severity":1,"message":"929","line":27,"column":6,"nodeType":"878","endLine":27,"endColumn":20,"suggestions":"985"},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":2,"column":17,"nodeType":"823","messageId":"824","endLine":2,"endColumn":25},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"986"},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"987"},{"ruleId":"821","severity":1,"message":"891","line":1,"column":36,"nodeType":"823","messageId":"824","endLine":1,"endColumn":47},{"ruleId":"821","severity":1,"message":"931","line":9,"column":8,"nodeType":"823","messageId":"824","endLine":9,"endColumn":20},{"ruleId":"876","severity":1,"message":"988","line":24,"column":6,"nodeType":"878","endLine":24,"endColumn":8,"suggestions":"989"},{"ruleId":"821","severity":1,"message":"990","line":13,"column":8,"nodeType":"823","messageId":"824","endLine":13,"endColumn":14},{"ruleId":"821","severity":1,"message":"991","line":14,"column":8,"nodeType":"823","messageId":"824","endLine":14,"endColumn":16},{"ruleId":"821","severity":1,"message":"992","line":16,"column":8,"nodeType":"823","messageId":"824","endLine":16,"endColumn":13},{"ruleId":"821","severity":1,"message":"993","line":27,"column":8,"nodeType":"823","messageId":"824","endLine":27,"endColumn":25},{"ruleId":"821","severity":1,"message":"994","line":28,"column":8,"nodeType":"823","messageId":"824","endLine":28,"endColumn":23},{"ruleId":"821","severity":1,"message":"995","line":29,"column":8,"nodeType":"823","messageId":"824","endLine":29,"endColumn":22},{"ruleId":"821","severity":1,"message":"996","line":30,"column":8,"nodeType":"823","messageId":"824","endLine":30,"endColumn":25},{"ruleId":"821","severity":1,"message":"997","line":31,"column":8,"nodeType":"823","messageId":"824","endLine":31,"endColumn":24},{"ruleId":"821","severity":1,"message":"998","line":32,"column":8,"nodeType":"823","messageId":"824","endLine":32,"endColumn":24},{"ruleId":"876","severity":1,"message":"988","line":47,"column":6,"nodeType":"878","endLine":47,"endColumn":12,"suggestions":"999"},{"ruleId":"821","severity":1,"message":"831","line":3,"column":10,"nodeType":"823","messageId":"824","endLine":3,"endColumn":16},{"ruleId":"821","severity":1,"message":"891","line":3,"column":36,"nodeType":"823","messageId":"824","endLine":3,"endColumn":47},{"ruleId":"821","severity":1,"message":"892","line":9,"column":16,"nodeType":"823","messageId":"824","endLine":9,"endColumn":23},{"ruleId":"821","severity":1,"message":"893","line":25,"column":17,"nodeType":"823","messageId":"824","endLine":25,"endColumn":25},{"ruleId":"821","severity":1,"message":"894","line":51,"column":9,"nodeType":"823","messageId":"824","endLine":51,"endColumn":20},{"ruleId":"821","severity":1,"message":"895","line":60,"column":9,"nodeType":"823","messageId":"824","endLine":60,"endColumn":21},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"876","severity":1,"message":"929","line":22,"column":6,"nodeType":"878","endLine":22,"endColumn":14,"suggestions":"1000"},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"1001"},{"ruleId":"821","severity":1,"message":"897","line":5,"column":3,"nodeType":"823","messageId":"824","endLine":5,"endColumn":12},{"ruleId":"821","severity":1,"message":"828","line":6,"column":3,"nodeType":"823","messageId":"824","endLine":6,"endColumn":6},{"ruleId":"821","severity":1,"message":"832","line":7,"column":3,"nodeType":"823","messageId":"824","endLine":7,"endColumn":6},{"ruleId":"821","severity":1,"message":"831","line":9,"column":3,"nodeType":"823","messageId":"824","endLine":9,"endColumn":9},{"ruleId":"821","severity":1,"message":"888","line":12,"column":16,"nodeType":"823","messageId":"824","endLine":12,"endColumn":24},{"ruleId":"821","severity":1,"message":"1002","line":14,"column":3,"nodeType":"823","messageId":"824","endLine":14,"endColumn":21},{"ruleId":"821","severity":1,"message":"1003","line":15,"column":3,"nodeType":"823","messageId":"824","endLine":15,"endColumn":19},{"ruleId":"821","severity":1,"message":"865","line":21,"column":8,"nodeType":"823","messageId":"824","endLine":21,"endColumn":13},{"ruleId":"821","severity":1,"message":"1004","line":22,"column":8,"nodeType":"823","messageId":"824","endLine":22,"endColumn":24},{"ruleId":"821","severity":1,"message":"839","line":23,"column":8,"nodeType":"823","messageId":"824","endLine":23,"endColumn":24},{"ruleId":"821","severity":1,"message":"1005","line":24,"column":28,"nodeType":"823","messageId":"824","endLine":24,"endColumn":33},{"ruleId":"821","severity":1,"message":"1006","line":26,"column":28,"nodeType":"823","messageId":"824","endLine":26,"endColumn":40},{"ruleId":"821","severity":1,"message":"1007","line":27,"column":8,"nodeType":"823","messageId":"824","endLine":27,"endColumn":16},{"ruleId":"821","severity":1,"message":"891","line":30,"column":3,"nodeType":"823","messageId":"824","endLine":30,"endColumn":14},{"ruleId":"821","severity":1,"message":"1008","line":31,"column":3,"nodeType":"823","messageId":"824","endLine":31,"endColumn":19},{"ruleId":"821","severity":1,"message":"1009","line":32,"column":3,"nodeType":"823","messageId":"824","endLine":32,"endColumn":17},{"ruleId":"821","severity":1,"message":"1010","line":33,"column":3,"nodeType":"823","messageId":"824","endLine":33,"endColumn":13},{"ruleId":"821","severity":1,"message":"1011","line":34,"column":3,"nodeType":"823","messageId":"824","endLine":34,"endColumn":16},{"ruleId":"821","severity":1,"message":"947","line":35,"column":3,"nodeType":"823","messageId":"824","endLine":35,"endColumn":12},{"ruleId":"821","severity":1,"message":"1012","line":40,"column":11,"nodeType":"823","messageId":"824","endLine":40,"endColumn":23},{"ruleId":"876","severity":1,"message":"988","line":62,"column":6,"nodeType":"878","endLine":62,"endColumn":8,"suggestions":"1013"},{"ruleId":"821","severity":1,"message":"864","line":2,"column":10,"nodeType":"823","messageId":"824","endLine":2,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1015","line":237,"column":9,"nodeType":"1016","messageId":"1017","endLine":237,"endColumn":15},{"ruleId":"821","severity":1,"message":"927","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":13},{"ruleId":"876","severity":1,"message":"929","line":52,"column":6,"nodeType":"878","endLine":52,"endColumn":21,"suggestions":"1018"},{"ruleId":"914","severity":1,"message":"915","line":49,"column":1,"nodeType":"916","endLine":163,"endColumn":3},{"ruleId":"919","severity":1,"message":"920","line":50,"column":3,"nodeType":"921","messageId":"922","endLine":161,"endColumn":4},{"ruleId":"914","severity":1,"message":"915","line":22,"column":1,"nodeType":"916","endLine":62,"endColumn":3},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"825","line":1,"column":17,"nodeType":"823","messageId":"824","endLine":1,"endColumn":25},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"1019"},{"ruleId":"821","severity":1,"message":"833","line":2,"column":10,"nodeType":"823","messageId":"824","endLine":2,"endColumn":13},{"ruleId":"821","severity":1,"message":"832","line":2,"column":26,"nodeType":"823","messageId":"824","endLine":2,"endColumn":29},{"ruleId":"821","severity":1,"message":"1020","line":2,"column":31,"nodeType":"823","messageId":"824","endLine":2,"endColumn":36},{"ruleId":"821","severity":1,"message":"1021","line":4,"column":8,"nodeType":"823","messageId":"824","endLine":4,"endColumn":34},{"ruleId":"821","severity":1,"message":"1022","line":5,"column":8,"nodeType":"823","messageId":"824","endLine":5,"endColumn":36},{"ruleId":"821","severity":1,"message":"1023","line":6,"column":8,"nodeType":"823","messageId":"824","endLine":6,"endColumn":18},{"ruleId":"821","severity":1,"message":"1024","line":7,"column":28,"nodeType":"823","messageId":"824","endLine":7,"endColumn":34},{"ruleId":"821","severity":1,"message":"927","line":1,"column":8,"nodeType":"823","messageId":"824","endLine":1,"endColumn":13},{"ruleId":"876","severity":1,"message":"929","line":28,"column":6,"nodeType":"878","endLine":28,"endColumn":14,"suggestions":"1025"},{"ruleId":"914","severity":1,"message":"915","line":25,"column":1,"nodeType":"916","endLine":26,"endColumn":81},{"ruleId":"876","severity":1,"message":"929","line":18,"column":6,"nodeType":"878","endLine":18,"endColumn":14,"suggestions":"1026"},{"ruleId":"821","severity":1,"message":"931","line":2,"column":8,"nodeType":"823","messageId":"824","endLine":2,"endColumn":20},{"ruleId":"821","severity":1,"message":"932","line":3,"column":8,"nodeType":"823","messageId":"824","endLine":3,"endColumn":25},"no-native-reassign",["1027"],"no-negated-in-lhs",["1028"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useSelector' is defined but never used.","'Layout' is defined but never used.","'HomeIcon' is defined but never used.","'CloseIcon' is defined but never used.","'Logo' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'Miccroorganism' is defined but never used.","'AboutUsImage' is defined but never used.","'ObjectSlider' is defined but never used.","'QueryBuilderIcon' is defined but never used.","'Timeline' is defined but never used.","'TimelineItem' is defined but never used.","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'TimelineContent' is defined but never used.","'TimelineDot' is defined but never used.","'ShoppingCartOutlinedIcon' is defined but never used.","'SearchOutlinedIcon' is defined but never used.","'CloseOutlinedIcon' is defined but never used.","'AwesomeSlider' is defined but never used.","'withAutoplay' is defined but never used.","'dispatch' is assigned a value but never used.","'setViewport' is assigned a value but never used.","'loggedInNavLinks' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Form' is defined but never used.","'Container' is defined but never used.","'Input' is defined but never used.","'PageHeader' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'signUpForm' is assigned a value but never used.","'setSignUpForm' is assigned a value but never used.","'goBack' is assigned a value but never used.",["1027"],["1028"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.state'. Either include them or remove the dependency array.","ArrayExpression",["1029"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["1030"],"'token' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1031"],"'responsiveFontSizes' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["1032"],"'FormControl' is defined but never used.","'setData' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'Select' is defined but never used.","'Jumbotron' is defined but never used.","'useLocation' is defined but never used.","'SideBar' is defined but never used.","'options' is assigned a value but never used.","'sideBarOptions' is assigned a value but never used.",["1027"],["1028"],"'urls' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useDispatch' is defined but never used.","'authConstants' is defined but never used.","'cartCount' is assigned a value but never used.",["1027"],["1028"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["1027"],["1028"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'React' is defined but never used.","'SignInValidator' is defined but never used.","React Hook useEffect has missing dependencies: 'handleSubmission' and 'isSubmitting'. Either include them or remove the dependency array. If 'handleSubmission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1033"],"'ItemListCard' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Avatar' is defined but never used.",["1034"],["1035"],["1027"],["1028"],["1036"],["1037"],["1038"],["1039"],"'updateUser' is assigned a value but never used.","'setUpdateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'userID'. Either include them or remove the dependency array.",["1040"],"'forgetPassword' is defined but never used.","'TextField' is defined but never used.","'CheckCircleIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'translate' is defined but never used.","'currentSlider' is assigned a value but never used.","'setCurrentSlider' is assigned a value but never used.","'error' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'PeopleIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'ResetPasswordValidator' is defined but never used.",["1041"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataList', 'filteredList', and 'searchFilter'. Either include them or remove the dependency array. You can also do a functional update 'setFilteredList(f => ...)' if you only need 'filteredList' in the 'setFilteredList' call.",["1042"],["1043"],["1044"],["1045"],"'AddMicroorganismModal' is defined but never used.","'microorganismTemplate' is defined but never used.","'useCatalogue' is defined but never used.",["1046"],"'microroganismAddRef' is assigned a value but never used.","'setRangeDates' is assigned a value but never used.","'setActiveUsersChartData' is assigned a value but never used.","'setsalesChartData' is assigned a value but never used.","'setpopularCategoriesChartData' is assigned a value but never used.","'MailIcon' is defined but never used.","'axios' is defined but never used.","'AccountCircleRoundedIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Tooltip' is defined but never used.","'changeActive' is assigned a value but never used.",["1047"],["1048"],["1049"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1050"],"'Orders' is defined but never used.","'Deposits' is defined but never used.","'Users' is defined but never used.","'DashboardDeposits' is defined but never used.","'DashboardOrders' is defined but never used.","'DashboardUsers' is defined but never used.","'DashboardPayments' is defined but never used.","'DashboardReports' is defined but never used.","'DashboardAddUser' is defined but never used.",["1051"],["1052"],["1053"],"'fetchCatalogueData' is defined but never used.","'fetchItemDetails' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Arrow' is defined but never used.","'ShoppingCart' is defined but never used.","'HomePage' is defined but never used.","'FormControlLabel' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'authenticate' is assigned a value but never used.",["1054"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["1055"],["1056"],"'Table' is defined but never used.","'KeyboardArrowUpRoundedIcon' is defined but never used.","'KeyboardArrowDownRoundedIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Delete' is defined but never used.",["1057"],["1058"],"no-global-assign","no-unsafe-negation",{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1063","fix":"1064"},{"desc":"1065","fix":"1066"},{"desc":"1067","fix":"1068"},{"desc":"1069","fix":"1070"},{"desc":"1069","fix":"1071"},{"desc":"1069","fix":"1072"},{"desc":"1069","fix":"1073"},{"desc":"1069","fix":"1074"},{"desc":"1069","fix":"1075"},{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1069","fix":"1082"},{"desc":"1069","fix":"1083"},{"desc":"1069","fix":"1084"},{"desc":"1061","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1069","fix":"1088"},{"desc":"1069","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1069","fix":"1094"},{"desc":"1069","fix":"1095"},{"desc":"1090","fix":"1096"},{"desc":"1097","fix":"1098"},{"desc":"1069","fix":"1099"},{"desc":"1069","fix":"1100"},{"desc":"1069","fix":"1101"},"Update the dependencies array to be: [dispatch, props.location.state]",{"range":"1102","text":"1103"},"Update the dependencies array to be: [dispatch, token]",{"range":"1104","text":"1105"},"Update the dependencies array to be: [id]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [token]",{"range":"1108","text":"1109"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signInErrors]",{"range":"1110","text":"1111"},"Update the dependencies array to be: [errors, handleSubmission, isSubmitting]",{"range":"1112","text":"1113"},{"range":"1114","text":"1113"},{"range":"1115","text":"1113"},{"range":"1116","text":"1113"},{"range":"1117","text":"1113"},{"range":"1118","text":"1113"},"Update the dependencies array to be: [dispatch, token, userID]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [handleSubmission, isSubmitting, resetPasswordErrors]",{"range":"1121","text":"1122"},"Update the dependencies array to be: [applySearchFilter, dataList, filteredList, searchFilter]",{"range":"1123","text":"1124"},{"range":"1125","text":"1113"},{"range":"1126","text":"1113"},{"range":"1127","text":"1113"},{"range":"1128","text":"1105"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signUpErrors]",{"range":"1129","text":"1130"},{"range":"1131","text":"1113"},{"range":"1132","text":"1113"},"Update the dependencies array to be: [dispatch]",{"range":"1133","text":"1134"},"Update the dependencies array to be: [auth, dispatch]",{"range":"1135","text":"1136"},{"range":"1137","text":"1113"},{"range":"1138","text":"1113"},{"range":"1139","text":"1134"},"Update the dependencies array to be: [addUserErrors, handleSubmission, isSubmitting]",{"range":"1140","text":"1141"},{"range":"1142","text":"1113"},{"range":"1143","text":"1113"},{"range":"1144","text":"1113"},[777,779],"[dispatch, props.location.state]",[1304,1306],"[dispatch, token]",[931,933],"[id]",[1157,1159],"[token]",[657,671],"[handleSubmission, isSubmitting, signInErrors]",[543,551],"[errors, handleSubmission, isSubmitting]",[543,551],[561,569],[540,548],[558,566],[1144,1152],[1104,1106],"[dispatch, token, userID]",[736,757],"[handleSubmission, isSubmitting, resetPasswordErrors]",[1735,1754],"[applySearchFilter, dataList, filteredList, searchFilter]",[540,548],[558,566],[567,575],[1376,1378],[739,753],"[handleSubmission, isSubmitting, signUpErrors]",[558,566],[567,575],[974,976],"[dispatch]",[2486,2492],"[auth, dispatch]",[561,569],[540,548],[1858,1860],[1701,1716],"[addUserErrors, handleSubmission, isSubmitting]",[540,548],[704,712],[543,551]]