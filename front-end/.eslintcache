[{"E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\axios.js":"1","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js":"2","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\user.reducer.js":"3","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js":"4","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDetails\\index.js":"5","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\sidebardata.js":"6","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js":"7","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js":"8","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Details\\index.js":"9","E:\\Study\\FYP\\Project\\front-end\\src\\index.js":"10","E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js":"11","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js":"12","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\index.js":"13","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Users\\index.js":"14","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\index.js":"15","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js":"16","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js":"17","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\cart.actions.js":"18","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\auth.actions.js":"19","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js":"20","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\signup.reducers.js":"21","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\catalogue.reducers.js":"22","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js":"23","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js":"24","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"25","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DropDown\\index.js":"26","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js":"27","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js":"28","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"29","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js":"30","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"31","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js":"32","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js":"33","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js":"34","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js":"35","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"36","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"37","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js":"38","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"39","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js":"40","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\index.js":"41","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Logo\\index.js":"42","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js":"43","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js":"44","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Cart\\index.js":"45","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\HomePage\\index.js":"46","E:\\Study\\FYP\\Project\\front-end\\src\\store\\index.js":"47","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js":"48","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js":"49","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\index.js":"50","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Orders\\index.js":"51","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Microorganism\\index.js":"52","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\User\\index.js":"53","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\index.js":"54","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js":"55","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\catalogue.actions.js":"56","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpValidator.js":"57","E:\\Study\\FYP\\Project\\front-end\\src\\components\\PageHeader\\index.js":"58","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js":"59","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\Item.js":"60","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Header\\index.js":"61","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js":"62","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js":"63","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"64","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js":"65","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js":"66","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\ResponseModal\\index.js":"67","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js":"68","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js":"69","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js":"70","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"71","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js":"72","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js":"73","E:\\Study\\FYP\\Project\\front-end\\src\\components\\TagInput\\index.js":"74","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\EmailVerified\\index.js":"75","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpValidator.js":"76","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js":"77","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js":"78","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js":"79","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SearchBar\\index.js":"80","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js":"81","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js":"82","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js":"83","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"84","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js":"85","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\index.js":"86","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js":"87","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\index.js":"88","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\index.js":"89","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardOrders\\index.js":"90","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardUsers\\index.js":"91","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemListCard\\index.js":"92","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardPayments\\index.js":"93","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js":"94","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js":"95","E:\\Study\\FYP\\Project\\front-end\\src\\App.js":"96","E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js":"97","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Deposits\\index.js":"98","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInValidator.js":"99","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js":"100","E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\templates.js":"101","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\cart.reducer.js":"102","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"103","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"104","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js":"105","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"106","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js":"107","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js":"108","E:\\Study\\FYP\\Project\\front-end\\src\\components\\OrderItemList\\index.js":"109","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js":"110","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositItemList\\index.js":"111","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardReports\\index.js":"112","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js":"113","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js":"114","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js":"115","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js":"116","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\itemInfo.reducer.js":"117","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js":"118","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"119","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js":"120"},{"size":1196,"mtime":1615151359232,"results":"121","hashOfConfig":"122"},{"size":4014,"mtime":1615384027274,"results":"123","hashOfConfig":"122"},{"size":3476,"mtime":1615151896142,"results":"124","hashOfConfig":"122"},{"size":6062,"mtime":1615225601456,"results":"125","hashOfConfig":"122"},{"size":1826,"mtime":1615662012640,"results":"126","hashOfConfig":"122"},{"size":1417,"mtime":1615405011242,"results":"127","hashOfConfig":"122"},{"size":1169,"mtime":1615154440781,"results":"128","hashOfConfig":"122"},{"size":2718,"mtime":1615154659999,"results":"129","hashOfConfig":"122"},{"size":2387,"mtime":1615154773802,"results":"130","hashOfConfig":"122"},{"size":730,"mtime":1609760640859,"results":"131","hashOfConfig":"122"},{"size":619,"mtime":1611212907524,"results":"132","hashOfConfig":"122"},{"size":12481,"mtime":1614964268739,"results":"133","hashOfConfig":"122"},{"size":33,"mtime":1609760109116,"results":"134","hashOfConfig":"122"},{"size":5823,"mtime":1612366309019,"results":"135","hashOfConfig":"122"},{"size":6059,"mtime":1614370693228,"results":"136","hashOfConfig":"122"},{"size":9169,"mtime":1612163314689,"results":"137","hashOfConfig":"122"},{"size":3663,"mtime":1614302803162,"results":"138","hashOfConfig":"122"},{"size":838,"mtime":1613556268005,"results":"139","hashOfConfig":"122"},{"size":1779,"mtime":1615224908191,"results":"140","hashOfConfig":"122"},{"size":2581,"mtime":1615289386341,"results":"141","hashOfConfig":"122"},{"size":1298,"mtime":1614299856936,"results":"142","hashOfConfig":"122"},{"size":3175,"mtime":1612234828088,"results":"143","hashOfConfig":"122"},{"size":1834,"mtime":1611594161844,"results":"144","hashOfConfig":"122"},{"size":6297,"mtime":1612093815090,"results":"145","hashOfConfig":"122"},{"size":1512,"mtime":1612089344923,"results":"146","hashOfConfig":"122"},{"size":1188,"mtime":1614981659971,"results":"147","hashOfConfig":"122"},{"size":8500,"mtime":1612157285641,"results":"148","hashOfConfig":"122"},{"size":6484,"mtime":1612105057163,"results":"149","hashOfConfig":"122"},{"size":1630,"mtime":1612162438518,"results":"150","hashOfConfig":"122"},{"size":745,"mtime":1611661892689,"results":"151","hashOfConfig":"122"},{"size":343,"mtime":1612089355765,"results":"152","hashOfConfig":"122"},{"size":339,"mtime":1612089188318,"results":"153","hashOfConfig":"122"},{"size":369,"mtime":1612099856264,"results":"154","hashOfConfig":"122"},{"size":770,"mtime":1611979794570,"results":"155","hashOfConfig":"122"},{"size":770,"mtime":1612156927091,"results":"156","hashOfConfig":"122"},{"size":770,"mtime":1612094125839,"results":"157","hashOfConfig":"122"},{"size":794,"mtime":1612099149958,"results":"158","hashOfConfig":"122"},{"size":341,"mtime":1612093363071,"results":"159","hashOfConfig":"122"},{"size":343,"mtime":1612093014041,"results":"160","hashOfConfig":"122"},{"size":1016,"mtime":1614295192475,"results":"161","hashOfConfig":"122"},{"size":1546,"mtime":1613844016722,"results":"162","hashOfConfig":"122"},{"size":209,"mtime":1613760444923,"results":"163","hashOfConfig":"122"},{"size":1596,"mtime":1611577118003,"results":"164","hashOfConfig":"122"},{"size":4181,"mtime":1615225728963,"results":"165","hashOfConfig":"122"},{"size":3391,"mtime":1615172980341,"results":"166","hashOfConfig":"122"},{"size":19429,"mtime":1615206142797,"results":"167","hashOfConfig":"122"},{"size":1229,"mtime":1611219496629,"results":"168","hashOfConfig":"122"},{"size":7571,"mtime":1610028026504,"results":"169","hashOfConfig":"122"},{"size":281,"mtime":1614933608662,"results":"170","hashOfConfig":"122"},{"size":25776,"mtime":1614933393627,"results":"171","hashOfConfig":"122"},{"size":258,"mtime":1610517428921,"results":"172","hashOfConfig":"122"},{"size":200,"mtime":1610703340036,"results":"173","hashOfConfig":"122"},{"size":5307,"mtime":1612364728842,"results":"174","hashOfConfig":"122"},{"size":5570,"mtime":1612352457172,"results":"175","hashOfConfig":"122"},{"size":2761,"mtime":1614370591487,"results":"176","hashOfConfig":"122"},{"size":4628,"mtime":1614188373409,"results":"177","hashOfConfig":"122"},{"size":1688,"mtime":1614295139760,"results":"178","hashOfConfig":"122"},{"size":5917,"mtime":1614208315155,"results":"179","hashOfConfig":"122"},{"size":961,"mtime":1611325418573,"results":"180","hashOfConfig":"122"},{"size":363,"mtime":1613844219436,"results":"181","hashOfConfig":"122"},{"size":2539,"mtime":1612929880350,"results":"182","hashOfConfig":"122"},{"size":1067,"mtime":1614352819852,"results":"183","hashOfConfig":"122"},{"size":934,"mtime":1614203385289,"results":"184","hashOfConfig":"122"},{"size":3041,"mtime":1612089178067,"results":"185","hashOfConfig":"122"},{"size":3514,"mtime":1612099729393,"results":"186","hashOfConfig":"122"},{"size":2554,"mtime":1612096116912,"results":"187","hashOfConfig":"122"},{"size":741,"mtime":1611579988023,"results":"188","hashOfConfig":"122"},{"size":790,"mtime":1612089420488,"results":"189","hashOfConfig":"122"},{"size":649,"mtime":1612087367143,"results":"190","hashOfConfig":"122"},{"size":790,"mtime":1612081405740,"results":"191","hashOfConfig":"122"},{"size":345,"mtime":1612096115416,"results":"192","hashOfConfig":"122"},{"size":1429,"mtime":1612096412221,"results":"193","hashOfConfig":"122"},{"size":802,"mtime":1612099889944,"results":"194","hashOfConfig":"122"},{"size":1413,"mtime":1612105229810,"results":"195","hashOfConfig":"122"},{"size":2390,"mtime":1614304414037,"results":"196","hashOfConfig":"122"},{"size":1528,"mtime":1610000731423,"results":"197","hashOfConfig":"122"},{"size":386,"mtime":1614936932140,"results":"198","hashOfConfig":"122"},{"size":1138,"mtime":1611334830974,"results":"199","hashOfConfig":"122"},{"size":539,"mtime":1612331046077,"results":"200","hashOfConfig":"122"},{"size":921,"mtime":1614951035192,"results":"201","hashOfConfig":"122"},{"size":3950,"mtime":1612088856001,"results":"202","hashOfConfig":"122"},{"size":2190,"mtime":1612096389248,"results":"203","hashOfConfig":"122"},{"size":12264,"mtime":1612095907628,"results":"204","hashOfConfig":"122"},{"size":774,"mtime":1612081649405,"results":"205","hashOfConfig":"122"},{"size":770,"mtime":1612088989396,"results":"206","hashOfConfig":"122"},{"size":6085,"mtime":1611505426679,"results":"207","hashOfConfig":"122"},{"size":1652,"mtime":1611504892762,"results":"208","hashOfConfig":"122"},{"size":641,"mtime":1611497074412,"results":"209","hashOfConfig":"122"},{"size":1055,"mtime":1615235627701,"results":"210","hashOfConfig":"122"},{"size":4262,"mtime":1615389926332,"results":"211","hashOfConfig":"122"},{"size":4840,"mtime":1615386593690,"results":"212","hashOfConfig":"122"},{"size":152,"mtime":1614951402830,"results":"213","hashOfConfig":"122"},{"size":311,"mtime":1615226256945,"results":"214","hashOfConfig":"122"},{"size":2614,"mtime":1615152111026,"results":"215","hashOfConfig":"122"},{"size":1735,"mtime":1615116735436,"results":"216","hashOfConfig":"122"},{"size":4936,"mtime":1615227016510,"results":"217","hashOfConfig":"122"},{"size":362,"mtime":499162500000,"results":"218","hashOfConfig":"122"},{"size":275,"mtime":1614933751197,"results":"219","hashOfConfig":"122"},{"size":748,"mtime":1614271165695,"results":"220","hashOfConfig":"122"},{"size":960,"mtime":1614936972510,"results":"221","hashOfConfig":"122"},{"size":161,"mtime":1611765866106,"results":"222","hashOfConfig":"122"},{"size":2818,"mtime":1613556271952,"results":"223","hashOfConfig":"122"},{"size":774,"mtime":1612093359239,"results":"224","hashOfConfig":"122"},{"size":790,"mtime":1612089286801,"results":"225","hashOfConfig":"122"},{"size":354,"mtime":1612088880577,"results":"226","hashOfConfig":"122"},{"size":802,"mtime":1612099703576,"results":"227","hashOfConfig":"122"},{"size":365,"mtime":1612096387800,"results":"228","hashOfConfig":"122"},{"size":1929,"mtime":1611934862527,"results":"229","hashOfConfig":"122"},{"size":3495,"mtime":1615392101937,"results":"230","hashOfConfig":"122"},{"size":3960,"mtime":1615406098948,"results":"231","hashOfConfig":"122"},{"size":3344,"mtime":1615405130500,"results":"232","hashOfConfig":"122"},{"size":253,"mtime":1615226310899,"results":"233","hashOfConfig":"122"},{"size":5466,"mtime":1612158903313,"results":"234","hashOfConfig":"122"},{"size":5702,"mtime":1612093270364,"results":"235","hashOfConfig":"122"},{"size":794,"mtime":1612095969407,"results":"236","hashOfConfig":"122"},{"size":12758,"mtime":1615226580618,"results":"237","hashOfConfig":"122"},{"size":1057,"mtime":1610303889817,"results":"238","hashOfConfig":"122"},{"size":927,"mtime":1609997157202,"results":"239","hashOfConfig":"122"},{"size":4204,"mtime":1612099911161,"results":"240","hashOfConfig":"122"},{"size":791,"mtime":1612081099560,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},"1a9qnim",{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"245"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"256"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"252"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"245"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"256"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"271"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"256"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"271"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"245"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"271"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"287"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"252"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"287"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"245"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"245"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"256"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"256"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"252"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"256"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"271"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"271"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"256"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"245"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"271"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"256"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"245"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"245"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"256"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"256"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"256"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"252"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"256"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"245"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"252"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"252"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"256"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"245"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"256"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"245"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"245"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"245"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"256"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"245"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"245"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"256"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"245"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"245"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"245"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"256"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"256"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\axios.js",["542","543","544"],"import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authConstants } from \"../actions/constants\";\r\nimport store from \"../store\";\r\nconst token = window.localStorage.getItem(\"token\");\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:2000/api\",\r\n  headers: {\r\n    authorization: token ? `${window.localStorage.getItem(\"token\")}` : ``,\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use((req) => {\r\n  const { auth } = store.getState();\r\n  if (auth.token) {\r\n    req.headers.Authorization = `Bearer ${auth.token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  (error) => {\r\n    const { response } = error;\r\n\r\n    if (!response) {\r\n      alert(\"There was some error on the serverside. Try again\");\r\n    }\r\n    if (response) {\r\n      if (response.status === 500) {\r\n        console.log(\"token expired\");\r\n        console.log(response);\r\n      }\r\n\r\n      if (response.status === 400) {\r\n        console.log(\"handling response in the axios.js file\");\r\n        console.log(response);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n",["545","546"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js",["547","548"],"import axios from \"../helpers/axios.js\";\r\nimport urls from \"../server_urls.js\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nexport const getUsers = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.USERS_FETCH_REQUEST });\r\n    try {\r\n      let user_Request_Response = await axios.post(\"/users\", {});\r\n      if (user_Request_Response.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_SUCCESS,\r\n          payload: { users: user_Request_Response.data },\r\n        });\r\n        dispatch({\r\n          type: authConstants.DASHBOARD_OPTIONS_UPDATE,\r\n          payload: { option: \"USERS\" },\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response && e.response.status === 405) {\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n      if (e.response && e.response.status === 400) {\r\n        dispatch({\r\n          type: authConstants.USERS_FETCH_FAILURE,\r\n          payload: {\r\n            status_code: e.response.status,\r\n            message: e.response.data.message,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\nexport const getUserData = (id, token) => {\r\n  return async (dispatch) => {\r\n    if (token) {\r\n      console.log(\"fetching user data\");\r\n      dispatch({ type: authConstants.USER_DATA_REQUEST });\r\n      const res = await axios.post(\r\n        \"/userData\",\r\n        { id }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      dispatch({\r\n        type: authConstants.USER_DATA_SUCCESS,\r\n        payload: { user: res.data },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserInfo = (data, token) => {\r\n  return async (dispatch) => {\r\n    if (token) {\r\n      dispatch({\r\n        type: authConstants.UPDATING_USER_REQUEST,\r\n        payload: { data: data },\r\n      });\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          \"/updateUser\",\r\n          { data }\r\n          // {\r\n          //   headers: { authorization: token },\r\n          // }\r\n        );\r\n\r\n        if (res.status == 200) {\r\n          dispatch({\r\n            type: authConstants.UPDATING_USER_SUCCESS,\r\n            payload: {\r\n              status_code: res.status,\r\n              message: res.data.message,\r\n            },\r\n          });\r\n          dispatch(getUsers(token));\r\n        }\r\n      } catch (error) {\r\n        console.log(error.data);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUser = (data, token) => {\r\n  return async (dispatch) => {\r\n    console.log(\"user data sent to method was: \");\r\n    console.log(data);\r\n    dispatch({ type: authConstants.USER_DELETE_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/deleteUser\",\r\n        { id: data }\r\n        // { headers: { authorization: token } }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"user deleted successfully\");\r\n        dispatch({ type: authConstants.USER_DELETE_SUCCESS });\r\n        dispatch(getUsers(token));\r\n      }\r\n    } catch (error) {\r\n      console.log(error.data);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addUser = (userData, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: authConstants.USER_ADD_REQUEST,\r\n        payload: { data: userData },\r\n      });\r\n      const res = await axios.post(\"/addUser\", userData, {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      });\r\n      // console.log(res.status);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: authConstants.USER_ADD_SUCCESS,\r\n          payload: { message: res.data.message },\r\n        });\r\n        // dispatch(getUsers(token));\r\n      }\r\n      if (res.status === 405) {\r\n        alert(\"Token has expired \");\r\n        dispatch({ type: authConstants.LOGOUT });\r\n      }\r\n    } catch ({ response }) {\r\n      console.log(\"err\");\r\n      console.log(response);\r\n      dispatch({\r\n        type: authConstants.USER_ADD_FAILURE,\r\n        payload: {\r\n          status: response.data.status,\r\n          message: response.data.message,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\user.reducer.js",["549","550"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: {\r\n    userList: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  add_user: {\r\n    data: {},\r\n    adding: false,\r\n    added: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete_user: {},\r\n  user_data: {},\r\n  // users: [],\r\n  // user: {\r\n  //   data: {},\r\n\r\n  //   deleting: false,\r\n  //   deleted: false,\r\n  // },\r\n  // add_user: {\r\n  //   data: {},\r\n  //   error: false,\r\n  //   message: \"\",\r\n  //   adding: false,\r\n  //   added: false,\r\n  // },\r\n  // fetching: false,\r\n  // fetched: false,\r\n  // error: {\r\n  //   found:false,\r\n  //   status_code: 0,\r\n  //   message: \"\",\r\n  // },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.USERS_FETCH_REQUEST:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetched: true,\r\n          fetching: false,\r\n          userList: action.payload.users,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_FAILURE:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: false,\r\n          error: {\r\n            found: true,\r\n            status_code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetched: true,\r\n        fetching: false,\r\n        user: action.payload.user,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...initialState.add_user,\r\n          data: action.payload.data,\r\n          adding: true,\r\n          added: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added: true,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: false,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: true,\r\n            message: action.payload.message,\r\n            status_code: action.payload.status,\r\n          },\r\n        },\r\n      };\r\n  }\r\n  return state;\r\n};\r\n",["551","552"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js",["553","554","555","556"],"import React, { useEffect, useState } from \"react\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n// import Image from \"./image.jpg\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Tooltip } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sidebarData } from \"./sidebardata\";\r\nimport { authConstants } from \"../../actions/constants\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst SideBar = (props) => {\r\n  const sidebarCollapse = useSelector((state) => state.sidebar.collapsed);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(sidebarCollapse);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const showNavbar = (toggleId, navId, bodyId, headerId, dashboardId) => {\r\n  //   dispatch({ type: authConstants.COLLAPSE_SIDEBAR });\r\n  //   // console.log(\"showing sidebar\");\r\n\r\n  //   const toggle = document.getElementById(toggleId),\r\n  //     nav = document.getElementById(navId),\r\n  //     bodypd = document.getElementById(bodyId),\r\n  //     headerpd = document.getElementById(headerId),\r\n  //     dashboardpd = document.getElementById(dashboardId);\r\n  //   if (toggle && nav && bodypd && headerpd) {\r\n  //     // nav.classList.toggle(\"show\");\r\n  //     // bodypd.classList.toggle(\"body-pd\");\r\n  //     headerpd.classList.toggle(\"body-pd\");\r\n  //     dashboardpd.classList.toggle(\"body-pd\");\r\n  //   }\r\n  // };\r\n\r\n  // if (sidebarCollapse === false) {\r\n  //   console.log(sidebarCollapse);\r\n  //   showNavbar(\r\n  //     \"header__toggle\",\r\n  //     \"nav-bar\",\r\n  //     \"body-pd\",\r\n  //     \"header\",\r\n  //     \"dashboard__content\"\r\n  //   );\r\n  // }\r\n\r\n  const changeActive = (e) => {\r\n    const link_color = document.querySelectorAll(\".nav__link\");\r\n    if (link_color) {\r\n      link_color.forEach((l) => l.classList.remove(\"active\"));\r\n      e.currentTarget.classList.add(\"active\");\r\n    }\r\n  };\r\n\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={sidebarCollapsed ? null : \"body-pd\"} id=\"body-pd\">\r\n      <header\r\n        className={`header ${sidebarCollapsed ? null : \"body-pd\"}`}\r\n        id=\"header\"\r\n      >\r\n        <div\r\n          className=\"header__toggle\"\r\n          id=\"header__toggle\"\r\n          onClick={(e) => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <MenuRoundedIcon /> : <CloseRoundedIcon />}\r\n        </div>\r\n\r\n        <div className=\"header__img\">\r\n          <Avatar src={user.profilePicture} />\r\n          {/* <img src={user.profilePicture} /> */}\r\n        </div>\r\n      </header>\r\n      <div\r\n        className={`l-navbar ${sidebarCollapsed ? null : \"show\"}`}\r\n        id=\"nav-bar\"\r\n      >\r\n        <nav className=\"nav\">\r\n          <div>\r\n            <div id=\"brand\">\r\n              <div className=\"brand_logo\">\r\n                <LayersIcon />\r\n              </div>\r\n              <div className=\"brand_name\">NCCP</div>\r\n            </div>\r\n            <div>\r\n              {sidebarData.map((link, key) => {\r\n                return (\r\n                  <Link\r\n                    to={link.link}\r\n                    className={`nav__link ${\r\n                      props.active.toLowerCase() === link.title.toLowerCase()\r\n                        ? \"active\"\r\n                        : null\r\n                    }`}\r\n                    key={key}\r\n                  >\r\n                    {link.icon}\r\n                    <div className=\"nav_link_title\">{link.title}</div>\r\n                  </Link>\r\n                );\r\n              })}\r\n              {/* <Link\r\n                to=\"/AdminDashboard\"\r\n                className=\"nav__link active\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <DashboardIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Dashboard</div>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/dashboard/users\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <PeopleRoundedIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Users</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/orders\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <ListAltIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Orders</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/deposits\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AccountBalanceIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Deposits</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/dashboard/reports\"\r\n                className=\"nav__link\"\r\n                onClick={(e) => changeActive(e)}\r\n              >\r\n                <AssessmentIcon className=\"nav_link_logo\" />\r\n                <div className=\"nav_link_title\">Reports</div>\r\n              </Link> */}\r\n            </div>\r\n          </div>\r\n          <Link\r\n            onClick={(e) => dispatch({ type: authConstants.LOGOUT })}\r\n            className=\"nav__link\"\r\n            to=\"\"\r\n          >\r\n            <ExitToAppIcon className=\"nav_link_logo\" />\r\n            <div className=\"nav_link_title\">Logout</div>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className={`dashboard__content ${sidebarCollapsed ? null : \"body-pd\"}`}\r\n        id=\"dashboard__content\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n",["557","558"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDetails\\index.js",["559"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\sidebardata.js",["560","561","562"],"import HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n// import { ReactComponent as Cell } from \"./Icons/cell.svg\";\r\nimport PeopleRoundedIcon from \"@material-ui/icons/PeopleRounded\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nexport const sidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    icon: <DashboardIcon />,\r\n    link: \"/AdminDashboard\",\r\n  },\r\n  {\r\n    title: \"Users\",\r\n    icon: <PeopleRoundedIcon />,\r\n    link: \"/adminDashboard/users\",\r\n  },\r\n  {\r\n    title: \"Orders\",\r\n    icon: <ListAltIcon />,\r\n    link: \"/adminDashboard/orders\",\r\n  },\r\n  {\r\n    title: \"Deposits\",\r\n    icon: <AccountBalanceIcon />,\r\n    link: \"/adminDashboard/deposits\",\r\n  },\r\n  {\r\n    title: \"Payments\",\r\n    icon: <MonetizationOnIcon />,\r\n    link: \"/adminDashboard/payments\",\r\n  },\r\n  {\r\n    title: \"Reports\",\r\n    icon: <AssessmentIcon />,\r\n    link: \"/adminDashboard/reports\",\r\n  },\r\n\r\n  {\r\n    title: \"Settings\",\r\n    icon: <SettingsIcon />,\r\n    link: \"/adminDashboard/settings\",\r\n  },\r\n];\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js",["563","564","565"],"import { authConstants } from \"../actions/constants\";\r\nconst initialState = {\r\n  token: null,\r\n  user: {\r\n    id: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n  },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  error: {\r\n    found: false,\r\n    status_code: 0,\r\n    message: 0,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n    case authConstants.LOGIN_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n    case authConstants.LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      // alert(\"everything reset\");\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js",["566","567","568"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nconst DashboardCatalogueDetail = (props) => {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = props.location.state;\r\n  const [data, setData] = useState({});\r\n\r\n  const [option, setOption] = useState(false);\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === \"save\") {\r\n      // dispatch(updateUserInfo(userData, token));\r\n      // setSavingData(!savingData);\r\n    }\r\n    setOption(!option);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.post(\r\n      \"/findmicroorganism\",\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    setData(res.data);\r\n  }, []);\r\n  return (\r\n    <Layout sidebar>\r\n      <Button\r\n        onClick={(e) =>\r\n          handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n        }\r\n      >\r\n        {option ? \"Save\" : \"Edit\"}\r\n      </Button>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {Object.keys(data).map((heading, key) => {\r\n          return (\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey={`${key}`}>\r\n                {heading}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${key}`}>\r\n                <Card.Body>\r\n                  {Object.keys(data[heading]).map((label, i) => {\r\n                    return (\r\n                      <Row className=\"p-2\" key={i}>\r\n                        <Col>{label}</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ backgroundColor: \"green\" }}\r\n                            value={data[heading][label]}\r\n                            onChange={(e) => {\r\n                              setData({\r\n                                ...data,\r\n                                [heading]: {\r\n                                  ...data[heading],\r\n                                  [label]: e.target.value,\r\n                                },\r\n                              });\r\n                            }}\r\n                            disabled={!option}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogueDetail;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Details\\index.js",["569"],"import React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Container, Jumbotron } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchItemDetails } from \"../../actions/catalogue.actions\";\r\nimport Layout from \"../../components/Layout\";\r\n\r\nconst ItemDetails = (props) => {\r\n  const [itemDetail, setItemDetail] = useState({});\r\n  const detail = useSelector((state) => state.details);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setItemDetail(detail.details);\r\n  }, [detail]);\r\n\r\n  useEffect(() => {\r\n    const { id } = props.location.state;\r\n    // console.log(id);\r\n    if (id) {\r\n      console.log(\"Dispatching fetch Item request\");\r\n      dispatch(fetchItemDetails(id, \"external\"));\r\n    }\r\n  }, []);\r\n\r\n  const itemData = () => {\r\n    return (\r\n      <div>\r\n        {Object.keys(itemDetail).map((value, index) => {\r\n          return (\r\n            <Accordion key={index}>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\r\n                  {value}\r\n                </Accordion.Toggle>\r\n\r\n                {Object.keys(itemDetail[value]).map((v, i) => {\r\n                  return (\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                      <Card.Body\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <span>{v}</span>\r\n                        <span>\r\n                          {itemDetail[value][v] === \"\"\r\n                            ? \"Nill\"\r\n                            : itemDetail[value][v]}\r\n                        </span>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  );\r\n                })}\r\n              </Card>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Jumbotron>\r\n        <h1>\r\n          {itemDetail.CoreDataSets\r\n            ? `${itemDetail.CoreDataSets.Genus} ${itemDetail.CoreDataSets.SpeciesEpithet}`\r\n            : \"\"}\r\n        </h1>\r\n      </Jumbotron>\r\n      <Container>\r\n        {detail.error.code > 200 ? detail.error.message : itemData()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ItemDetails;\r\n",["570","571"],"E:\\Study\\FYP\\Project\\front-end\\src\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js",["572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Jumbotron,\r\n  Nav,\r\n  Row,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  fetchCatalogueData,\r\n  fetchItemDetails,\r\n  getCatalogueData,\r\n} from \"../../actions/catalogue.actions\";\r\nimport { addItemToCart } from \"../../actions/cart.actions\";\r\nimport \"./style.css\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { ReactComponent as Arrow } from \"./Icons/right-arrow.svg\";\r\nimport { ReactComponent as Bacteria } from \"./Icons/bacterium-solid.svg\";\r\nimport { ReactComponent as ShoppingCart } from \"./Icons/shopping-cart-solid.svg\";\r\nimport HomePage from \"../HomePage\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst Catalogue = (props) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\r\n    \"bacteria\",\r\n    \"fungi\",\r\n    \"archaea\",\r\n    \"antibody\",\r\n    \"microalgae\",\r\n    \"phage\",\r\n    \"virus\",\r\n    \"yeast\",\r\n  ];\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [addedToCart, setAddedToCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"OrganismType\"].toLowerCase())\r\n        : true;\r\n      // console.log(\r\n      //   columns &&\r\n      //     columns.some((column) => {\r\n      //       return (\r\n      //         applyFilter &&\r\n      //         row[column]\r\n      //           .toString()\r\n      //           .toLowerCase()\r\n      //           .indexOf(query.toLowerCase()) > -1\r\n      //       );\r\n      //     })\r\n      // );\r\n      return (\r\n        columns &&\r\n        columns.some((column) => {\r\n          return (\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n          );\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const addToCart = (row) => {\r\n    const { id } = row;\r\n    setAddedToCart([...addedToCart, id]);\r\n    const { OrganismType, Genus, SpeciesEpithet } = row;\r\n    dispatch(addItemToCart({ id: id, OrganismType, Genus, SpeciesEpithet }));\r\n  };\r\n\r\n  if (fetching) {\r\n    <Layout>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Layout>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n\r\n      <div className=\"page-heading\">\r\n        <Container className=\"page-heading-content\">\r\n          <h1>Catalogue</h1>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"catalogue-div\">\r\n        <Container className=\"catalogue-content\">\r\n          <div className=\"search-bar-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              id=\"search-bar-input\"\r\n            />\r\n            <SearchOutlined className=\"search-bar-icon\" fontSize=\"32px\" />\r\n          </div>\r\n          <div className=\"search-filters-box\">\r\n            <h3>Filters</h3>\r\n            <hr />\r\n            {filters &&\r\n              filters.map((filter) => {\r\n                return (\r\n                  <Form.Check\r\n                    label={filter}\r\n                    name={filter}\r\n                    className=\"filter-check\"\r\n                    checked={searchFilters.includes(filter)}\r\n                    onChange={(e) => {\r\n                      const checked = searchFilters.includes(filter);\r\n                      setSearchFilters((prev) =>\r\n                        checked\r\n                          ? prev.filter((sf) => sf !== filter)\r\n                          : [...prev, filter]\r\n                      );\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"catalogue-data-content-box\">\r\n            <div>\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"catalogue-data-item\">\r\n                    <div>\r\n                      <Bacteria className=\"image\" />\r\n                      <h4 className=\"catalogue-data-item-organism-type\">\r\n                        {row.OrganismType}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"item-detail\">\r\n                      <Link\r\n                        className=\"catalogue-data-item-name\"\r\n                        to={{\r\n                          pathname: \"/itemDetails\",\r\n                          state: { id: row.id },\r\n                        }}\r\n                      >\r\n                        <h4 className=\"item-name\">{`${row.Genus} ${row.SpeciesEpithet}`}</h4>\r\n                        {/* <h3 className=\"arrow-box\">\r\n                          <Arrow className=\"arrow\" />\r\n                        </h3> */}\r\n                      </Link>\r\n                      <span className=\"catalogue-data-item-accession-number\">{`Accession Number    ${row.AccessionNumber}`}</span>\r\n                      <span className=\"catalogue-data-item-strain-type\">{`Strain Type      ${row.Status}`}</span>\r\n                      <span className=\"catalogue-data-item-bio-hazard-level\">{`Bio Hazard Level     ${row.BioHazardLevel}`}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        className={\r\n                          addedToCart.includes(row.id)\r\n                            ? \"add-to-cart-button-disabled\"\r\n                            : \"add-to-cart-button\"\r\n                        }\r\n                        onClick={(e) => addToCart(row)}\r\n                      >\r\n                        {addedToCart.includes(row.id)\r\n                          ? \"Added To Cart\"\r\n                          : \"Add To Cart\"}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row.OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row.Genus} ${row.SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row.AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <Layout>\r\n        <Jumbotron>\r\n          <div id=\"upper-content\">\r\n            <h1>Catalogue</h1>\r\n          </div>\r\n          <div id=\"catalogue\">\r\n            <div id=\"filter-box\">\r\n              <div id=\"filters\">\r\n                <h5>Filters</h5>\r\n                <hr />\r\n                {filters &&\r\n                  filters.map((filter) => {\r\n                    return (\r\n                      <Form.Check\r\n                        label={filter}\r\n                        name={filter}\r\n                        className\r\n                        checked={searchFilters.includes(filter)}\r\n                        onChange={(e) => {\r\n                          const checked = searchFilters.includes(filter);\r\n                          setSearchFilters((prev) =>\r\n                            checked\r\n                              ? prev.filter((sf) => sf !== filter)\r\n                              : [...prev, filter]\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div id=\"items\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row[\"CoreDataSets\"].OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row[\"CoreDataSets\"].Genus} ${row[\"CoreDataSets\"].SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row[\"CoreDataSets\"].AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Users\\index.js",["593"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Container, Form, Row, Spinner, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddUserModal from \"../../components/Modals/AddUserModal\";\r\nimport ResponseModal from \"../../components/Modals/ResponseModal\";\r\nimport DeleteUserModal from \"../../components/Modals/DeleteUserModal\";\r\nimport { deleteMicroorganism } from \"../../actions/catalogue.actions\";\r\nimport Input from \"../../components/UI/Input/input\";\r\n\r\nconst Users = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { fetching, users, add_user } = useSelector((state) => state.user);\r\n\r\n  /////delete record id\r\n  const [deleteRecordId, setDeleteRecordId] = useState(\"\");\r\n  const deleteRecordRef = useRef();\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    console.log(\"user deleted\");\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(token));\r\n  }, []);\r\n\r\n  ///////////////////////////////////////////////////////\r\n  //query and search\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\"admin\", \"internal\", \"external\"];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  useEffect(() => {\r\n    setData(users);\r\n  }, [users]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  //request response\r\n  const serverResponseRef = useRef();\r\n  const handleResponse = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  /////add user\r\n  const addUserRef = useRef();\r\n  const handleAddModalShow = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  const handleAddUser = (userData) => {\r\n    console.log(\"handling add user\");\r\n    // dispatch(addUser(userData, token));\r\n  };\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"role\"].toLowerCase())\r\n        : true;\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_U_Permission ? \"/dashboard/user\" : \"#\",\r\n            state: { userID: permissions.view_U_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_U_Permission ? \"primary\" : \"secondary\"}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_U_Permission ? \"danger\" : \"secondary\"}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <AddUserModal ref={addUserRef} confirm={handleAddUser} />\r\n      <ResponseModal\r\n        ref={serverResponseRef}\r\n        message={add_user.message}\r\n        confirm={handleResponse}\r\n      />\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                      checked\r\n                        ? prev.filter((sf) => sf !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          <Button variant=\"primary\" onClick={() => handleAddModalShow()}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n      <Table stripped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            {columns &&\r\n              columns.map((heading) => {\r\n                return heading === \"_id\" ? null : <th>{heading}</th>;\r\n              })}\r\n            <th className=\"text-center\">Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {search(data).map((row) => {\r\n            return (\r\n              <tr>\r\n                {columns.map((heading) => {\r\n                  return heading === \"_id\" ? null : <td>{row[heading]}</td>;\r\n                })}\r\n                <td style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                  {recordOptions(row._id)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\index.js",["594","595","596","597","598","599"],"import {\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport React, { useState } from \"react\";\r\nimport { translate } from \"react-range/lib/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nimport \"./style.css\";\r\nimport useFormResetPassword from \"./useFormResetPassword\";\r\nconst ResetPassword = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [passwordReset, setPasswordReset] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/resetPassword\", { token, password: resetPassword.password })\r\n      .then((response) => {\r\n        setPasswordReset(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setPasswordReset(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    const slides = document.querySelector(\".slides\");\r\n    slides.style.transform = \"translate(-50%)\";\r\n  };\r\n  const {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  } = useFormResetPassword(handleSubmission, ResetPasswordValidator);\r\n\r\n  const passwordForm = () => {\r\n    return (\r\n      <div className=\"reset-password-div\">\r\n        <h3>Set new password</h3>\r\n        <div className=\"reset-password-form\">\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.password}\r\n          >\r\n            <InputLabel htmlFor=\"password\">New password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"password\"\r\n              name=\"password\"\r\n              // className=\"password-input-box\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={resetPassword.password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) => setShowPassword(!showPassword)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.password ? resetPasswordErrors.password : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"confirm_password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.confirm_password}\r\n          >\r\n            <InputLabel htmlFor=\"confirm_password\">Confirm password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"confirm_password\"\r\n              name=\"confirm_password\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              value={resetPassword.confirm_password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) =>\r\n                      setShowConfirmPassword(!showConfirmPassword)\r\n                    }\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.confirm_password\r\n                ? resetPasswordErrors.confirm_password\r\n                : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <button\r\n          onClick={(e) => handleResetSubmit(e)}\r\n          className=\"reset-password-btn\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const resetResponseSlide = () => {\r\n    return (\r\n      <div className=\"reset-response-div\">\r\n        <h3 className=\"reset-response-title\">\r\n          {passwordReset\r\n            ? \"Your account password has been changed successfully\"\r\n            : \"Password reset failed\"}\r\n        </h3>\r\n        <p>{message}</p>\r\n        {passwordReset ? (\r\n          <Link to=\"\">Go to Sign In</Link>\r\n        ) : (\r\n          <Link\r\n            onClick={(e) => {\r\n              const slides = document.querySelector(\".slides\");\r\n              slides.style.transform = \"translate(0%)\";\r\n            }}\r\n          >\r\n            Go back to reset\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const [currentSlider, setCurrentSlider] = useState(true);\r\n\r\n  return (\r\n    <div className=\"reset-password-outer-div\">\r\n      <div className=\"slider-outer-div\">\r\n        <div className={`slides`}>\r\n          <div className=\"slide\">{passwordForm()}</div>\r\n          <div className=\"slide\">{resetResponseSlide()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n",["600","601"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js",["602","603"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  addMicroorganism,\r\n  resetAddMicroorganismState,\r\n} from \"../../actions/catalogue.actions\";\r\nimport Review from \"../../components/AddMicroorgansimForm/Review\";\r\nimport Step1 from \"../../components/AddMicroorgansimForm/Step1\";\r\nimport Step10 from \"../../components/AddMicroorgansimForm/Step10\";\r\nimport Step11 from \"../../components/AddMicroorgansimForm/Step11\";\r\nimport Step12 from \"../../components/AddMicroorgansimForm/Step12\";\r\nimport Step13 from \"../../components/AddMicroorgansimForm/Step13\";\r\nimport Step14 from \"../../components/AddMicroorgansimForm/Step14\";\r\nimport Step2 from \"../../components/AddMicroorgansimForm/Step2\";\r\nimport Step3 from \"../../components/AddMicroorgansimForm/Step3\";\r\nimport Step4 from \"../../components/AddMicroorgansimForm/Step4\";\r\nimport Step5 from \"../../components/AddMicroorgansimForm/Step5\";\r\nimport Step6 from \"../../components/AddMicroorgansimForm/Step6\";\r\nimport Step7 from \"../../components/AddMicroorgansimForm/Step7\";\r\nimport Step8 from \"../../components/AddMicroorgansimForm/Step8\";\r\nimport Step9 from \"../../components/AddMicroorgansimForm/Step9\";\r\nimport Layout from \"../../components/Layout\";\r\n\r\nfunction AddMicroorganism() {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const added = useSelector((state) => state.catalogue.addMicroorganism.added);\r\n  const [currentStep, setCurrentStep] = useState(14);\r\n  const [formData, setFormData] = useState({\r\n    CoreDataSets: {\r\n      Genus: \"\",\r\n      AccessionNumber: \"\",\r\n      OtherCollection: [],\r\n      SpeciesEpithet: \"\",\r\n      Author: \"\",\r\n      OrganismType: \"Bacteria\",\r\n      HistoryOfDeposit: \"\",\r\n      DateOfIsolation: \"\",\r\n      IsolatedFrom: \"\",\r\n      GeographicOrigin: \"\",\r\n      Status: \"Type\",\r\n      Medium: \"\",\r\n      Application: \"\",\r\n      Literature: \"\",\r\n      OptimumGrowthTemperature: \"\",\r\n      MaximumGrowthTemperature: \"\",\r\n      MinimumGrowthTemperature: \"\",\r\n    },\r\n    Name: {\r\n      TaxonomyID: \"\",\r\n    },\r\n    StrainAdministration: {\r\n      DateOfAccession: \"\",\r\n      HerbariumNo: \"\",\r\n      InternalIdentityCheck: \"\",\r\n      ModeOfPreservation: \"\",\r\n      BioHazardLevel: \"1\",\r\n      RestrictionRemarks: \"\",\r\n      CountryOfExport: \"\",\r\n      MTA: \"\",\r\n      DistributionRestriction: \"\",\r\n      AnimalQuarantineNo: \"\",\r\n      PlantQuarantineNo: \"\",\r\n      FormOfSupply: \"\",\r\n    },\r\n    EnviromentAndHistory: {\r\n      SubStrate: \"\",\r\n      Habitat: \"\",\r\n      Latitude: \"\",\r\n      Longitude: \"\",\r\n      Altitude: \"\",\r\n      Depth: \"\",\r\n      Humidity: \"\",\r\n      PHForEnviroment: \"\",\r\n      TemperatureForEnviroment: \"\",\r\n      CollectionMethod: \"\",\r\n      DateOfCollection: \"\",\r\n      CountryOfCollection: \"\",\r\n      State: \"\",\r\n      RegionOfCollection: \"\",\r\n      CollectedBy: \"\",\r\n      IsolatedBy: \"\",\r\n      MethodOfIsolation: \"\",\r\n      IdentifiedBy: \"\",\r\n      DateOfIdentification: \"\",\r\n      DepositedBy: \"\",\r\n      DateOfDeposition: \"\",\r\n      NameAtAccept: \"\",\r\n    },\r\n    Publication: {\r\n      LiteratureCategories: \"\",\r\n      Title: \"\",\r\n      Author: \"\",\r\n      Journal: \"\",\r\n      Volume: \"\",\r\n      Number: \"\",\r\n      StartingPage: \"\",\r\n      PageRange: \"\",\r\n      Year: \"\",\r\n      DOINumber: \"\",\r\n    },\r\n    BiologicalInteractions: {\r\n      Symbiosis: \"\",\r\n      Mycoparasitism: \"\",\r\n      Pathogenicity: \"\",\r\n      Allergenicity: \"\",\r\n      OtherOrganismToxicity: \"\",\r\n      AntagonisticActivities: \"\",\r\n    },\r\n    Sexuality: {\r\n      SexualBehaviour: \"\",\r\n      SexualState: \"\",\r\n    },\r\n    Properties: {\r\n      NumberOfNuclei: \"\",\r\n      RehyderationFluid: \"\",\r\n      FineStructureData: \"\",\r\n      WallConstituents: \"\",\r\n      CellContents: \"\",\r\n      CoenzymeQSystem: \"\",\r\n      StainingReactions: \"Positive\",\r\n      PigmentProduction: \"\",\r\n      CellShape: \"\",\r\n      CellSize: \"\",\r\n      Motile: \"Motile\",\r\n      SporeForming: \"\",\r\n      MotileBy: \"\",\r\n    },\r\n    GenotypeAndGenetics: {\r\n      Genotype: \"\",\r\n      Phenotype: \"\",\r\n      MatingType: \"\",\r\n      SexualReproduction: \"\",\r\n      GCContentOfDNA: \"\",\r\n      OtherStrainsHybridization: \"\",\r\n      HybridizationStrainNumber: \"\",\r\n      TypeOfDNAOrRNA: \"\",\r\n      Percentage: \"\",\r\n      TemperatureOfHybridization: \"\",\r\n      Mutants: \"\",\r\n      MutationMethods: \"\",\r\n      Hybrids: \"\",\r\n      Plasmid: \"\",\r\n      KillerPropertiesOfYeast: \"\",\r\n    },\r\n    GrowthConditions: {\r\n      ConditionsForGrowthAndMaintenenceOnSolidMedia: \"\",\r\n      ConditionsForGrowthInLiquidMedia: \"\",\r\n      ConditionsForFruitingOrSporulation: \"\",\r\n      ConditionsForGermination: \"\",\r\n      CarbonSourcesTested: \"\",\r\n      NitrogenSourcesTested: \"\",\r\n      SingleCompoundTested: \"\",\r\n      NutritionalRequirements: \"\",\r\n      Deficiencies: \"\",\r\n      TolerancesAndSensitivities: \"\",\r\n      TemperatureRelationships: \"\",\r\n      MaximumGrowthPH: \"\",\r\n      MinimumGrowthPH: \"\",\r\n      OptimalGrowthPH: \"\",\r\n      LighConditions: \"\",\r\n      OxygenRelationship: \"\",\r\n      HeatResistence: \"\",\r\n      EthanolConditions: \"\",\r\n      SalinityRequirements: \"\",\r\n      OptimalNaClConcentration: \"\",\r\n      MinimumNaClConcentration: \"\",\r\n      MaximumNaClConcentration: \"\",\r\n      OptimumSugarConcentration: \"\",\r\n      MinimumSugarConcentration: \"\",\r\n      MaximumSugarConcentration: \"\",\r\n      OsmophilyAndXerophily: \"\",\r\n      WaterActivityConditions: \"\",\r\n    },\r\n    ChemistryAndEnzymes: {\r\n      EnzymesProduced: \"\",\r\n      DecompositionAndDeterioratingCapacities: \"\",\r\n      MetabolitiesProduced: \"\",\r\n      Biotransformations: \"\",\r\n    },\r\n    Medium: {\r\n      MediumNumber: \"\",\r\n      MediumName: \"\",\r\n      MediumComposition: \"\",\r\n      MediumPH: \"\",\r\n    },\r\n    Sequence: {\r\n      AccessionNumber: \"\",\r\n      TargetGene: \"\",\r\n      Definition: \"\",\r\n      SequencingMethod: \"\",\r\n      Length: \"\",\r\n      SequenceType: \"\",\r\n      Source: \"\",\r\n      Sequence: \"\",\r\n    },\r\n    Catalogue: {\r\n      CatalogueName: \"\",\r\n      CatalogueURL: \"\",\r\n      CatalogueUpdateTime: \"\",\r\n      ContactPersonOfCatalogue: \"\",\r\n      ContactEmail: \"\",\r\n      ContactAddress: \"\",\r\n      ContactTelephone: \"\",\r\n      ContactFax: \"\",\r\n      NumberOfStrains: \"\",\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  const nextStep = (value) => {\r\n    setFormData({\r\n      ...formData,\r\n      ...value,\r\n    });\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n  const prevStep = () => setCurrentStep(currentStep - 1);\r\n\r\n  const setStep = (step) => setCurrentStep(step);\r\n  const submit = () => {\r\n    dispatch(addMicroorganism(formData, token));\r\n  };\r\n\r\n  if (added) {\r\n    dispatch(resetAddMicroorganismState());\r\n    return <Redirect to=\"/dashboard/catalogue\" />;\r\n  }\r\n\r\n  const getStep = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <Step1 data={formData.CoreDataSets} next={nextStep} />;\r\n        break;\r\n      case 1:\r\n        return <Step2 data={formData.Name} next={nextStep} prev={prevStep} />;\r\n      case 2:\r\n        return (\r\n          <Step3\r\n            data={formData.StrainAdministration}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Step4\r\n            data={formData.EnviromentAndHistory}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Step5 data={formData.Publication} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 5:\r\n        return (\r\n          <Step6\r\n            data={formData.BiologicalInteractions}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 6:\r\n        return (\r\n          <Step7 data={formData.Sexuality} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 7:\r\n        return (\r\n          <Step8 data={formData.Properties} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 8:\r\n        return (\r\n          <Step9\r\n            data={formData.GenotypeAndGenetics}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 9:\r\n        return (\r\n          <Step10\r\n            data={formData.GrowthConditions}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 10:\r\n        return (\r\n          <Step11\r\n            data={formData.ChemistryAndEnzymes}\r\n            next={nextStep}\r\n            prev={prevStep}\r\n          />\r\n        );\r\n      case 11:\r\n        return (\r\n          <Step12 data={formData.Medium} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 12:\r\n        return (\r\n          <Step13 data={formData.Sequence} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 13:\r\n        return (\r\n          <Step14 data={formData.Catalogue} next={nextStep} prev={prevStep} />\r\n        );\r\n      case 14:\r\n        return <Review data={formData} set={setStep} submit={submit} />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return <Layout>{getStep()}</Layout>;\r\n}\r\n\r\nexport default AddMicroorganism;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\cart.actions.js",["604"],"import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const addItemToCart = (data) => {\r\n  return (dispatch) => {\r\n    //dispatch({ type: authConstants.CART_RESET });\r\n    dispatch({ type: authConstants.CART_ITEM_ADD, payload: { ...data } });\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: authConstants.CART_ITEM_REMOVE, payload: { ...data } });\r\n  };\r\n};\r\n\r\nexport const increaseQuantity = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_INCREASE,\r\n      payload: { ...data },\r\n    });\r\n  };\r\n};\r\nexport const decreaseQuantity = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: authConstants.CART_ITEM_QUANTITY_DECREASE,\r\n      payload: { ...data },\r\n    });\r\n  };\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\auth.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\signup.reducers.js",["605"],"import { authConstants } from \"../actions/constants\";\r\nconst initialState = {\r\n  // userData: {\r\n  //   firstname: \"\",\r\n  //   lastname: \"\",\r\n  //   email: \"\",\r\n  //   role: \"\",\r\n  //   type: \"Student\",\r\n  //   affiliation: \"\",\r\n  //   password: \"\",\r\n  // },\r\n  // data: {},\r\n  registering: false,\r\n  registered: false,\r\n  error: {\r\n    found: false,\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.SIGNUP_REQUEST:\r\n      state = {\r\n        ...state,\r\n        // userData: action.payload.data,\r\n        registering: true,\r\n        registered: false,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: true,\r\n      };\r\n      break;\r\n    case authConstants.SIGNUP_FAILURE:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        error: {\r\n          found: true,\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n\r\n    case authConstants.SIGNUP_STORE_RESET:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\catalogue.reducers.js",["606","607","608"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  catalogueData: [],\r\n  fetching: false,\r\n  fetched: false,\r\n  addMicroorganism: {\r\n    adding: false,\r\n    added: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete: {\r\n    deleting: false,\r\n    deleted: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_INFO_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n        fetched: false,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        catalogueData: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case authConstants.ADD_MICROORGANISM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          adding: true,\r\n          added: false,\r\n          data: action.payload.data,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: true,\r\n          adding: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.RESET_ADD_MICROORGANISM_STATE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...initialState.addMicroorganism,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          data: action.payload.data,\r\n          deleting: true,\r\n          deleted: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js",["609","610","611","612","613","614","615"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js",["616"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",["617"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSevenValidator from \"./StepSevenValidator\";\r\nimport useStepSevenForm from \"./useStepSevenForm\";\r\n\r\nfunction Step7(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Sexuality: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Sexuality</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Sexual Behaviour\"\r\n          type=\"text\"\r\n          name=\"SexualBehaviour\"\r\n          placeholder=\"Enter Sexual Behaviour here\"\r\n          value={value.SexualBehaviour}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualBehaviour && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualBehaviour}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sexual State\"\r\n          type=\"text\"\r\n          name=\"SexualState\"\r\n          placeholder=\"Enter Sexual State here\"\r\n          value={value.SexualState}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualState && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualState}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step7;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DropDown\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js",["618"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourValidator from \"./StepFourValidator\";\r\nimport useStepFourForm from \"./useStepFourForm\";\r\n\r\nfunction Step4(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      EnviromentAndHistory: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Enviroment And History</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"SubStrate\"\r\n          type=\"text\"\r\n          name=\"SubStrate\"\r\n          placeholder=\"Enter SubStrate here\"\r\n          value={value.SubStrate}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SubStrate && <p style={{ color: \"red\" }}>{errors.SubStrate}</p>}\r\n        <Input\r\n          label=\"Habitat\"\r\n          type=\"text\"\r\n          name=\"Habitat\"\r\n          placeholder=\"Enter Habitat here\"\r\n          value={value.Habitat}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Habitat && <p style={{ color: \"red\" }}>{errors.Habitat}</p>}\r\n        <Input\r\n          label=\"Latitude\"\r\n          type=\"text\"\r\n          name=\"Latitude\"\r\n          placeholder=\"Enter Latitude here\"\r\n          value={value.Latitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Latitude && <p style={{ color: \"red\" }}>{errors.Latitude}</p>}\r\n        <Input\r\n          label=\"Longitude\"\r\n          type=\"text\"\r\n          name=\"Longitude\"\r\n          placeholder=\"Enter Longitude here\"\r\n          value={value.Longitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Longitude && <p style={{ color: \"red\" }}>{errors.Longitude}</p>}\r\n        <Input\r\n          label=\"Altitude\"\r\n          type=\"text\"\r\n          name=\"Altitude\"\r\n          placeholder=\"Enter Altitude here\"\r\n          value={value.Altitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Altitude && <p style={{ color: \"red\" }}>{errors.Altitude}</p>}\r\n        <Input\r\n          label=\"Depth\"\r\n          type=\"text\"\r\n          name=\"Depth\"\r\n          placeholder=\"Enter Depth here\"\r\n          value={value.Depth}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Depth && <p style={{ color: \"red\" }}>{errors.Depth}</p>}\r\n        <Input\r\n          label=\"Humidity\"\r\n          type=\"text\"\r\n          name=\"Humidity\"\r\n          placeholder=\"Enter Humidity here\"\r\n          value={value.Humidity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Humidity && <p style={{ color: \"red\" }}>{errors.Humidity}</p>}\r\n        <Input\r\n          label=\"PH for Enviroment\"\r\n          type=\"text\"\r\n          name=\"PHForEnviroment\"\r\n          placeholder=\"Enter PH for Enviroment here\"\r\n          value={value.PHForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PHForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.PHForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature for Enviroment\"\r\n          type=\"text\"\r\n          name=\"TemperatureForEnviroment\"\r\n          placeholder=\"Enter Temperature for Enviroment here\"\r\n          value={value.TemperatureForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"CollectionMethod\"\r\n          type=\"text\"\r\n          name=\"CollectionMethod\"\r\n          placeholder=\"Enter CollectionMethod here\"\r\n          value={value.CollectionMethod}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectionMethod && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectionMethod}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Collection\"\r\n          type=\"date\"\r\n          name=\"DateOfCollection\"\r\n          placeholder=\"Enter Date of collection here\"\r\n          value={value.DateOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Collection\"\r\n          type=\"text\"\r\n          name=\"CountryOfCollection\"\r\n          placeholder=\"Enter Country of Collection here\"\r\n          value={value.CountryOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"State\"\r\n          type=\"text\"\r\n          name=\"State\"\r\n          placeholder=\"Enter State here\"\r\n          value={value.State}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.State && <p style={{ color: \"red\" }}>{errors.State}</p>}\r\n        <Input\r\n          label=\"Region of Collection\"\r\n          type=\"text\"\r\n          name=\"RegionOfCollection\"\r\n          placeholder=\"Enter Region of Collection here\"\r\n          value={value.RegionOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RegionOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.RegionOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Collected By\"\r\n          type=\"text\"\r\n          name=\"CollectedBy\"\r\n          placeholder=\"Collected By\"\r\n          value={value.CollectedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated By\"\r\n          type=\"text\"\r\n          name=\"IsolatedBy\"\r\n          placeholder=\"Enter Isolated By here\"\r\n          value={value.IsolatedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Method of Isolation\"\r\n          type=\"text\"\r\n          name=\"MethodOfIsolation\"\r\n          placeholder=\"Method of Isolation\"\r\n          value={value.MethodOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MethodOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.MethodOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Identified By\"\r\n          type=\"text\"\r\n          name=\"IdentifiedBy\"\r\n          placeholder=\"IdentifiedBy\"\r\n          value={value.IdentifiedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IdentifiedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IdentifiedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date Of Identification\"\r\n          type=\"date\"\r\n          name=\"DateOfIdentification\"\r\n          placeholder=\"Date Of Identification\"\r\n          value={value.DateOfIdentification}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIdentification && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIdentification}</p>\r\n        )}\r\n        <Input\r\n          label=\"Deposited By\"\r\n          type=\"text\"\r\n          name=\"DepositedBy\"\r\n          placeholder=\"Deposited By\"\r\n          value={value.DepositedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DepositedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.DepositedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Deposition\"\r\n          type=\"date\"\r\n          name=\"DateOfDeposition\"\r\n          placeholder=\"Date of Deposition\"\r\n          value={value.DateOfDeposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfDeposition && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfDeposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Name At Accept\"\r\n          type=\"text\"\r\n          name=\"NameAtAccept\"\r\n          placeholder=\"Name At Accept\"\r\n          value={value.NameAtAccept}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NameAtAccept && (\r\n          <p style={{ color: \"red\" }}>{errors.NameAtAccept}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step4;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js",["619"],"import { Button, Container, Form } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport TagInput from \"../../TagInput\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport useStepOneForm from \"./useStepOneForm\";\r\nimport StepOneValidator from \"./StepOneValidator\";\r\n\r\nfunction Step1(props) {\r\n  const handleSubmission = () => {\r\n    props.next({ CoreDataSets: value });\r\n  };\r\n  const { handleSubmit, value, updateValue, errors } = useStepOneForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepOneValidator\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Core Data Sets</h2>\r\n      <Form>\r\n        <Input\r\n          label=\"Genus\"\r\n          type=\"text\"\r\n          name=\"Genus\"\r\n          placeholder=\"Enter Genus here\"\r\n          value={value.Genus}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Genus && <p style={{ color: \"red\" }}>{errors.Genus}</p>}\r\n        <Input\r\n          label=\"AccessionNumber\"\r\n          type=\"text\"\r\n          name=\"AccessionNumber\"\r\n          placeholder=\"Enter Accession Number here\"\r\n          value={value.AccessionNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AccessionNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.AccessionNumber}</p>\r\n        )}\r\n        <TagInput\r\n          label=\"Other Acession Numbers\"\r\n          name=\"OtherCollection\"\r\n          selected={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Species Epithet\"\r\n          type=\"text\"\r\n          name=\"SpeciesEpithet\"\r\n          placeholder=\"Enter Species Name Here\"\r\n          value={value.SpeciesEpithet}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SpeciesEpithet && (\r\n          <p style={{ color: \"red\" }}>{errors.SpeciesEpithet}</p>\r\n        )}\r\n        <Input\r\n          label=\"Author\"\r\n          type=\"text\"\r\n          name=\"Author\"\r\n          placeholder=\"Enter Author Name Here\"\r\n          value={value.Author}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Author && <p style={{ color: \"red\" }}>{errors.Author}</p>}\r\n        <Form.Label>Organism Type</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          name=\"OrganismType\"\r\n          value={value.OrganismType}\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>Bacteria</option>\r\n          <option>Yeast</option>\r\n          <option>Fungi</option>\r\n          <option>Phage</option>\r\n          <option>Algae</option>\r\n          <option>MicroAlgae</option>\r\n          <option>Virus</option>\r\n          <option>Archaea</option>\r\n          <option>Antibody</option>\r\n        </Form.Control>\r\n        {errors.OrganismType && (\r\n          <p style={{ color: \"red\" }}>{errors.OrganismType}</p>\r\n        )}\r\n        <Input\r\n          label=\"History of Deposit\"\r\n          type=\"text\"\r\n          name=\"HistoryOfDeposit\"\r\n          placeholder=\"Enter History of Deposit Here\"\r\n          value={value.HistoryOfDeposit}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HistoryOfDeposit && (\r\n          <p style={{ color: \"red\" }}>{errors.HistoryOfDeposit}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Isolation\"\r\n          type=\"date\"\r\n          name=\"DateOfIsolation\"\r\n          placeholder=\"Enter Date of Isolation Here\"\r\n          value={value.DateOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated From\"\r\n          type=\"text\"\r\n          name=\"IsolatedFrom\"\r\n          placeholder=\"Isolated From\"\r\n          value={value.IsolatedFrom}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedFrom && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedFrom}</p>\r\n        )}\r\n        <Input\r\n          label=\"Geographic Origin\"\r\n          type=\"text\"\r\n          name=\"GeographicOrigin\"\r\n          placeholder=\"Enter Geographic Origin Here\"\r\n          value={value.GeographicOrigin}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.GeographicOrigin && (\r\n          <p style={{ color: \"red\" }}>{errors.GeographicOrigin}</p>\r\n        )}\r\n        <Form.Label>Status</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={value.Status}\r\n          name=\"Status\"\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>Type</option>\r\n          <option>Non-Type</option>\r\n        </Form.Control>\r\n        {errors.Status && <p style={{ color: \"red\" }}>{errors.Status}</p>}\r\n        <Input\r\n          label=\"Medium\"\r\n          type=\"text\"\r\n          name=\"Medium\"\r\n          placeholder=\"Enter Medium Here\"\r\n          value={value.Medium}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Medium && <p style={{ color: \"red\" }}>{errors.Medium}</p>}\r\n        <Input\r\n          label=\"Optimum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"OptimumGrowthTemperature\"\r\n          placeholder=\"Enter Optimum Growth Temperature Here\"\r\n          value={value.OptimumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimumGrowthTemperature}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"MaximumGrowthTemperature\"\r\n          placeholder=\"Enter Maximum Growth Temperature Here\"\r\n          value={value.MaximumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumGrowthTemperature}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"MinimumGrowthTemperature\"\r\n          placeholder=\"Enter Minimum Growth Temperature Here\"\r\n          value={value.MinimumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumGrowthTemperature}</p>\r\n        )}\r\n        <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step1;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\useStepTwoForm.js",["620"],"import { useEffect, useState } from \"react\";\r\nconst useStepTwoForm = (initialValue, handleSubmission, StepTwoValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwoValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwoForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js",["621"],"import { useEffect, useState } from \"react\";\r\nconst useStepOneForm = (initialValue, handleSubmission, StepOneValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepOneValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepOneForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["622"],"import { useEffect, useState } from \"react\";\r\nconst useStepTenForm = (initialValue, handleSubmission, StepTenValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["623"],"import { useEffect, useState } from \"react\";\r\nconst useStepTwelveForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepTwelveValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwelveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwelveForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js",["624","625"],"import React, { useEffect, useState } from \"react\";\r\nconst useFormSignUp = (handleSubmission, SignUpValidator) => {\r\n  const [signUpValue, setSignUpValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    type: \"Student\",\r\n    affiliation: \"\",\r\n    description: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [signUpErrors, setSignUpErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignUpSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignUpErrors(SignUpValidator(signUpValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signUpErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signUpErrors]);\r\n\r\n  const updateSignUpValue = (e) => {\r\n    setSignUpValue({\r\n      ...signUpValue,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSignUpSubmit, signUpValue, updateSignUpValue, signUpErrors };\r\n};\r\n\r\nexport default useFormSignUp;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\index.js",["626"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Logo\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js",["627"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js",["628","629"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Cart\\index.js",["630","631","632","633","634","635","636"],"import React from \"react\";\r\nimport { Col, Jumbotron, Row, Table } from \"react-bootstrap\";\r\nimport Layout from \"../../components/Layout\";\r\nimport KeyboardArrowUpRoundedIcon from \"@material-ui/icons/KeyboardArrowUpRounded\";\r\nimport KeyboardArrowDownRoundedIcon from \"@material-ui/icons/KeyboardArrowDownRounded\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { ReactComponent as Delete } from \"../Cart/Icons/trash-alt-solid.svg\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport {\r\n  IoIosArrowDroprightCircle,\r\n  IoIosArrowDropleftCircle,\r\n} from \"react-icons/io\";\r\nimport \"./style.css\";\r\n// import logo from \"./product-image.jpg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  decreaseQuantity,\r\n  increaseQuantity,\r\n  removeFromCart,\r\n} from \"../../actions/cart.actions\";\r\n\r\nconst Cart = (props) => {\r\n  const dispatch = useDispatch();\r\n  const cartData = useSelector((state) => state.cart.cartData);\r\n\r\n  const increaseQty = (id) => {\r\n    dispatch(increaseQuantity({ id }));\r\n  };\r\n  const decreaseQty = (id) => {\r\n    dispatch(decreaseQuantity({ id }));\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    dispatch(removeFromCart({ id }));\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Jumbotron style={{ height: \"100%\" }}>\r\n        <div id=\"cart-header\">\r\n          <span id=\"description-heading\">DESCRIPTION</span>\r\n          <span id=\"quantity-heading\">QUANTITY</span>\r\n          <span id=\"price-heading\">PRICE</span>\r\n          <span id=\"delete-heading\"></span>\r\n        </div>\r\n        <div id=\"cart-content\">\r\n          {cartData.map((item) => {\r\n            return (\r\n              <div className=\"item-details\">\r\n                <div className=\"description-box\">\r\n                  {/* <img src={logo} className=\"product-image\" /> */}\r\n                  <div className=\"cart-item-details\">\r\n                    <span className=\"cart-item-name\">{`${item.Genus} ${item.SpeciesEpithet}`}</span>\r\n                    <span className=\"cart-item-type\">{`${item.OrganismType}`}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"quantity-box\">\r\n                  {/* <KeyboardArrowUpRoundedIcon className=\"decrease-quantity-icon\" /> */}\r\n                  <IoIosArrowDropleftCircle\r\n                    className=\"arrow\"\r\n                    onClick={(e) => decreaseQty(item.id)}\r\n                  />\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    className=\"quantity-input\"\r\n                    value={item.qty}\r\n                    disabled\r\n                  />\r\n                  <IoIosArrowDroprightCircle\r\n                    className=\"arrow\"\r\n                    onClick={(e) => increaseQty(item.id)}\r\n                  />\r\n                  {/* <KeyboardArrowDownRoundedIcon classname=\"arrow\" /> */}\r\n                </div>\r\n                <div className=\"price-box\">\r\n                  <span className=\"cart-item-price\">$299 USD</span>\r\n                </div>\r\n                <div className=\"operation-box\">\r\n                  <RiDeleteBin6Line\r\n                    className=\"delete-icon\"\r\n                    onClick={(e) => removeItem(item.id)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Jumbotron>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\HomePage\\index.js",["637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  NavLink,\r\n  Carousel,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\n//import SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n// import \"../HomePage/index.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Logo from \"../../components/Logo\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Bacteria from \"./Images/bacteria.jpg\";\r\nimport Miccroorganism from \"./Images/hqdefault.jpg\";\r\nimport Bacteria2 from \"./Images/bacteria-2.jpg\";\r\nimport AboutUsImage from \"./Images/about-us-image.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ObjectSlider from \"../../components/ObjectSlider\";\r\n\r\nimport \"./style.css\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\n\r\nimport AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [viewport, setViewport] = React.useState({\r\n    latitude: 33.678403942756674,\r\n    longitude: 73.13901040682869,\r\n    zoom: 15,\r\n  });\r\n\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Item>Item 1</Dropdown.Item>\r\n          <Dropdown.Item>Item 2</Dropdown.Item>\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // const products = [\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  // ];\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n      <div id=\"hero-div\" className=\"hero-div\">\r\n        <Container>\r\n          {/* {searchBarShow ? (\r\n            <div className=\"search-box\">\r\n              <input placeholder=\"Enter Keyword\" />\r\n            </div>\r\n          ) : null} */}\r\n        </Container>\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000} className=\"carousel-item\">\r\n            <img\r\n              src={Bacteria2}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h2>Welcome to</h2>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img\r\n              src={Bacteria}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h2>Welcome to</h2>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n\r\n      <div id=\"about-us\" className=\"about-us-div\">\r\n        <Container className=\"about-us-content\">\r\n          <div className=\"about-us-image\">\r\n            <img src={Bacteria2} alt=\"about-us-image\" />\r\n          </div>\r\n          <div className=\"about-us-details\">\r\n            <div className=\"about-us-title\">\r\n              <h5>ABOUT US</h5>\r\n              <h2>\r\n                We are the leading institute for microorganism reasearch in\r\n                Pakistan\r\n              </h2>\r\n            </div>\r\n            <div className=\"about-us-description\">\r\n              NCCP plays an important role in offering services not only to\r\n              preserve microorganisms using techniques that maintain viability,\r\n              purity, and important characteristics of microorganisms, but also\r\n              to supply high quality microorganisms for use in teaching,\r\n              research and industrial applications.\r\n            </div>\r\n            {/* <div className=\"about-us-featured-list\">\r\n              <Timeline>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Eat</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Code</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Sleep</TimelineContent>\r\n                </TimelineItem>\r\n              </Timeline>\r\n            </div> */}\r\n            <div className=\"about-us-featured-list\">\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">01</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Plant growth promoting microbess</h5>\r\n                  <p>\r\n                    Isolation, identification and molecular characterization of\r\n                    plant growth promoting microbes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">02</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Heavy metal tolerant bacteria</h5>\r\n                  <p>\r\n                    solation, identification and characterization of heavy metal\r\n                    tolerant bacteria for bioremediation of contaminated soil.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">03</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Halotolerant rhizobacteria </h5>\r\n                  <p>\r\n                    Identification and characterization of halotolerant\r\n                    rhizobacteria containing ACC-deaminase, for growth promotion\r\n                    of Phaseolus vulgaris L. under salt stress\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"achievements\" className=\"achievements-div\">\r\n        <Container className=\"achievement-content\">\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublishIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3 onClick={(e) => alert(\"odsfjo\")}> 40+</h3>\r\n              <h4>Publications</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Accomplishment</h3>\r\n              <h4>Women in agriculture forum</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarsIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Achievement</h3>\r\n              <h4>Association of Farmers association</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublicIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>81+</h3>\r\n              <h4>International linkages</h4>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"services\" className=\"services\">\r\n        <h5>OUR SERVICES</h5>\r\n        <h2>Explore Our Main Services</h2>\r\n        <div className=\"services-tag\">\r\n          <Container className=\"services-content\">\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Order</h5>\r\n                <p>Order some things from us</p>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Deposit</h5>\r\n                <p>Deposit some things from us</p>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"/catalogue\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Resources</h5>\r\n                <p>Seek some things from us</p>\r\n              </div>\r\n            </Link>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"location\" className=\"location\">\r\n        <div className=\"location-heading\">\r\n          <h5>Where are we</h5>\r\n          <h2>Our Current Location</h2>\r\n        </div>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          width=\"100%\"\r\n          height=\"450px\"\r\n          mapboxApiAccessToken={`pk.eyJ1IjoiemFpbm5vb3IwMzUwMjAiLCJhIjoiY2tsZ2ZubG80MndtdDJvbnAwYnVya2tjZiJ9.r49QIKppAmNWiDhexQhQTw`}\r\n          mapStyle=\"mapbox://styles/zainnoor035020/cklgg7lq54jp617meh87g9vqi\"\r\n        >\r\n          <Marker longitude={viewport.longitude} latitude={viewport.latitude}>\r\n            <LocationOnIcon fontSize=\"large\" color=\"blue\" />\r\n          </Marker>\r\n          <div className=\"map-detials\">\r\n            <Container className=\"map-content\">\r\n              <h3>\r\n                Park Rd, National Agricultural Research Center, Islamabad,\r\n                Islamabad Capital Territory, Pakistan\r\n              </h3>\r\n            </Container>\r\n          </div>\r\n        </ReactMapGL>\r\n        {/* <Container className=\"location-content\">\r\n          <div className=\"location-map\">\r\n           \r\n          </div>\r\n          {/* <div className=\"location-details\">Details</div> */}\r\n        {/* </Container> */}\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <Container className=\"footer-content\">\r\n          <div className=\"first-footer\">\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <LocationOnOutlinedIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Address</h5>\r\n                <p>National Agricultural Research Center, Islamabad</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <PhoneIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Contact Number</h5>\r\n                <p>+92335 6291805</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <EmailOutlined />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Email</h5>\r\n                <p>zainnoor6035020@gmail.com</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"second-footer\">\r\n            <div className=\"second-footer-detail-box\">\r\n              <div>Logo</div>\r\n              <p>\r\n                NCCP plays an important role in offering services not only to\r\n                preserve microorganisms using techniques that maintain\r\n                viability, purity, and important characteristics of\r\n                microorganisms, but also to supply high quality microorganisms\r\n                for use in teaching, research and industrial applications.\r\n              </p>\r\n              <a>Read More!</a>\r\n            </div>\r\n            <div className=\"second-footer-useful-links-box\">\r\n              <h3>Useful Links</h3>\r\n              <div className=\"useful-links-div\">\r\n                <a href=\"#hero-div\">Home</a>\r\n                <a href=\"#about-us\">About Us</a>\r\n                <a href=\"#achievements\">Achievement</a>\r\n                <a href=\"#services\">Services</a>\r\n                <a href=\"#location\">Current Location</a>\r\n                <a>Cart</a>\r\n                {/* <a>- Home</a> */}\r\n                {/* <a>- Home</a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"third-footer\">\r\n            <div>Copyright</div>\r\n            <div>social links</div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n        <div className=\"sidebar-upper-div\">\r\n          <div className=\"sidebar-upper-div-options\">\r\n            <HomeIcon fontSize=\"large\" />\r\n            <span>Sign In</span>\r\n          </div>\r\n          <CloseIcon onClick={(e) => setSideBarShow(false)} />\r\n        </div>\r\n        <div className=\"sidebar-links\">\r\n          <ul className=\"sidebar-links-list\">\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Order</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebar-footer\">\r\n          <ul className=\"sidebar-footer-list\">\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"header-logo\">\r\n          <h1>NCCP</h1>\r\n        </div>\r\n        <div className=\"header-content\">\r\n          <div className=\"menu-content\">\r\n            <Link>Sign In</Link>\r\n          </div>\r\n          <div className=\"hamburger-menu-box\">\r\n            <MenuRoundedIcon\r\n              className=\"hamburger-menu\"\r\n              fontSize=\"large\"\r\n              onClick={(e) => setSideBarShow(!sideBarshow)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-bar\">\r\n        <Link>About NCCP</Link>\r\n        <Link>Deposit</Link>\r\n        <Link>Order</Link>\r\n        <Link>Contact Us</Link>\r\n      </div>\r\n\r\n      <div className=\"hero-div\">\r\n        <div>\r\n          <h1>Welcome to NCCP</h1>\r\n          <p>\r\n            We are the leading institute of microbial research and preservation\r\n            in Pakistan...\r\n          </p>\r\n        </div>\r\n        <Link>Learn More</Link>\r\n      </div>\r\n\r\n      <div className=\"product-category-div\">\r\n        <h1>Resources</h1>\r\n        <ObjectSlider />\r\n      </div>\r\n      <div className=\"about-us-div\">\r\n        <img src={AboutUsImage} />\r\n      </div> */}\r\n\r\n      {/* <div className=\"carousel-div\">\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>Welcome to NCCP</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>We are a leading institute in Microorganism reasearch</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div> */}\r\n\r\n      {/* <div className=\"navigation-bar\">\r\n        <Container className=\"navigation-bar-content\">\r\n          <Logo />\r\n          <div className=\"navigation-links\">\r\n            <SearchOutlinedIcon />\r\n            <MenuRoundedIcon />\r\n          </div>\r\n        </Container>\r\n      </div> */}\r\n\r\n      {/* <Layout>\r\n        <div id=\"homepage-upper-nav-bar\">\r\n          <NavDropdown\r\n            title=\"NCCP\"\r\n            id=\"collasible-nav-dropdown\"\r\n            show={show}\r\n            onMouseEnter={(e) => setShow(true)}\r\n            onMouseLeave={(e) => setShow(false)}\r\n          >\r\n            <NavLink>NCCP</NavLink>\r\n\r\n            <NavLink>Deposit</NavLink>\r\n            <NavLink>Orders</NavLink>\r\n            <NavLink>Catalogue</NavLink>\r\n            <NavDropdown\r\n              title=\"NCCP\"\r\n              id=\"collasible-nav-dropdown\"\r\n              show={show}\r\n              onMouseEnter={(e) => setShow(true)}\r\n              onMouseLeave={(e) => setShow(false)}\r\n              subme\r\n            >\r\n              <NavLink>NCCP</NavLink>\r\n\r\n              <NavLink>Deposit</NavLink>\r\n              <NavLink>Orders</NavLink>\r\n              <NavLink>Catalogue</NavLink>\r\n            </NavDropdown>\r\n          </NavDropdown>\r\n          <NavLink>NCCP</NavLink>\r\n\r\n          <NavLink>Deposit</NavLink>\r\n          <NavLink>Orders</NavLink>\r\n          <NavLink>Catalogue</NavLink>\r\n        </div>\r\n        <div>other content</div>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\store\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js",["674"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useForm from \"./SignUpUseForm\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport { signup } from \"../../actions/signup.actions\";\r\nconst Signup = (props) => {\r\n  const signupStore = useSelector((state) => state.sign);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmission = () => {\r\n    console.log(\"handling submission\");\r\n    const userData = {\r\n      ...value,\r\n      role: \"external\",\r\n    };\r\n    dispatch(signup(userData));\r\n  };\r\n\r\n  const { value, handleSubmit, updateValue, errors } = useForm(\r\n    handleSubmission,\r\n    SignUpValidator\r\n  );\r\n\r\n  if (signupStore.registered) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              {signupStore.error.code > 300 && (\r\n                <h2>{signupStore.error.message}</h2>\r\n              )}\r\n              <Form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"first_name\"\r\n                      label=\"Fristname\"\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      value={value.firstname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Firstname\"\r\n                    />\r\n                    {errors.firstname && <p>{errors.firstname}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"last_name\"\r\n                      label=\"Lastname\"\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      value={value.lastname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Lastname\"\r\n                    />\r\n                    {errors.lastname && <p>{errors.lastname}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"username\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      value={value.username}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"username\"\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={value.email}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Email\"\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <Form.Label>What type of user are you:</Form.Label>\r\n                    <div key={`default-radio`} className=\"mb-3\">\r\n                      <Form.Check\r\n                        label=\"Student\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-1`}\r\n                        name=\"user-type\"\r\n                        value=\"Student\"\r\n                        checked={value.type === \"Student\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Research Institute Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-2`}\r\n                        name=\"user-type\"\r\n                        value=\"ResearchInstituteRepresentative\"\r\n                        checked={\r\n                          value.type === \"ResearchInstituteRepresentative\"\r\n                        }\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Industry Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-3`}\r\n                        name=\"user-type\"\r\n                        value=\"IndustryRepresentative\"\r\n                        checked={value.type === \"IndustryRepresentative\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Input\r\n                      id=\"associated-institute-name\"\r\n                      label=\"Associated Institute Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Institute name\"\r\n                      name=\"affiliation\"\r\n                      value={value.affiliation}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.affiliation && <p>{errors.affiliation}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Group controlId=\"description-text-area\">\r\n                      <Form.Label>Description (of what you do)</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={value.description}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      {errors.description && <p>{errors.description}</p>}\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      value={value.password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                  </Col>\r\n                  {errors.password && <p>{errors.password}</p>}\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      name=\"confirm_password\"\r\n                      value={value.confirm_password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <p>{errors.confirm_password}</p>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={(e) => handleSubmit(e)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\index.js",["675","676","677","678","679","680","681","682","683","684","685","686","687","688"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col, FormLabel } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { login } from \"../../actions\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport \"./style.css\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport useSignInForm from \"./SignInUseForm\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport useFormSignUp from \"./SignUpUseForm\";\r\nimport { authConstants } from \"../../actions/constants\";\r\nimport { resetSignUpStore, signup } from \"../../actions/signup.actions\";\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signInForm, setSignInForm] = useState(true);\r\n  const [signUpForm, setSignUpForm] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const signUpStore = useSelector((state) => state.sign);\r\n  const signInStore = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal show code\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const selectUserType = (e) => {\r\n    setUserType(e.target.name);\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  const goBack = () => {\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(0%)\";\r\n  };\r\n\r\n  // method to reset the sign up  store on modal close\r\n\r\n  const reset = () => {\r\n    dispatch(resetSignUpStore());\r\n  };\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    if (signUpStore.error.found || signUpStore.registered) {\r\n      setModalOpen(true);\r\n    }\r\n  }, [signUpStore]);\r\n\r\n  useEffect(() => {\r\n    if (signInStore.error.found) {\r\n      setSignInModal(true);\r\n    }\r\n  }, [signInStore]);\r\n\r\n  const userLogin = () => {\r\n    // e.preventDefault();\r\n    const { email, password } = signInValue;\r\n    const user = {\r\n      email,\r\n      password,\r\n      token: recaptchaRef.current.getValue(),\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  // Material Ui React Material\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handleSignUpSubmission = () => {\r\n    dispatch(signup(signUpValue));\r\n  };\r\n\r\n  const {\r\n    signInValue,\r\n    handleSignInSubmit,\r\n    updateSignInValue,\r\n    signInErrors,\r\n  } = useSignInForm(userLogin, SignInValidator);\r\n\r\n  const {\r\n    handleSignUpSubmit,\r\n    signUpValue,\r\n    updateSignUpValue,\r\n    signUpErrors,\r\n  } = useFormSignUp(handleSignUpSubmission, SignUpValidator);\r\n\r\n  // Captcha functions\r\n\r\n  const recaptchaRef = useRef();\r\n\r\n  if (auth.authenticate) {\r\n    if (userType === \"employee\") {\r\n      return <Redirect to={\"/adminDashboard\"} />;\r\n    } else {\r\n      return <Redirect to={\"/\"} />;\r\n    }\r\n  }\r\n\r\n  // const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n  // const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n  // const container = document.querySelector(\".container\");\r\n\r\n  // console.log(container);\r\n\r\n  const signInButtonPress = () => {\r\n    setSignInForm(true);\r\n  };\r\n\r\n  const signUpButtonPress = () => {\r\n    setSignInForm(false);\r\n  };\r\n\r\n  // sign_up_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.add(\"sign-up-mode\");\r\n  // });\r\n\r\n  // sign_in_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.remove(\"sign-up-mode\");\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          reset();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signUpStore.registered ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {signUpStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signUpStore.registered ? \"Success\" : \"Error\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signUpStore.registered\r\n                ? \"The signup request was successful. Check your email for verification\"\r\n                : signUpStore.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={signInModal}\r\n        onClose={(e) => {\r\n          setSignInModal(false);\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={signInModal}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signInStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signInStore.error.found ? \"Error\" : null}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signInStore.error.found ? signInStore.error.message : null}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <div class={`container-div ${signInForm ? \"\" : \"sign-up-mode\"}`}>\r\n        <div class=\"forms-container\">\r\n          <div class=\"signin-signup\">\r\n            <form action=\"#\" className=\"sign-in-form\">\r\n              <div className=\"sign-in-form-slides-outer-div\">\r\n                <div\r\n                  className=\"sign-in-form-slides-inner-div\"\r\n                  id=\"sign-in-form-slides-inner-div\"\r\n                >\r\n                  <div className=\"sign-in-type\">\r\n                    <h3>What type of user are you?</h3>\r\n                    <Button name=\"user\" onClick={(e) => selectUserType(e)}>\r\n                      General User\r\n                    </Button>\r\n                    <Button name=\"employee\" onClick={(e) => selectUserType(e)}>\r\n                      Employee\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"title\">Sign In</h2>\r\n                    <TextField\r\n                      error={signInErrors.email ? true : undefined}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"e.g. name@gmail.com\"\r\n                      value={signInValue.email}\r\n                      onChange={(e) => updateSignInValue(e)}\r\n                      helperText={signInErrors.email ? signInErrors.email : \"\"}\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                    />\r\n                    <FormControl\r\n                      // className={clsx(classes.margin, classes.textField)}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                      error={signInErrors.password ? true : undefined}\r\n                      // helperText={signInErrors.password ? signInErrors.password : \"\"}\r\n                    >\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Min 6 letters & a capital letter\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={signInValue.password}\r\n                        onChange={(e) => updateSignInValue(e)}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => setShowPassword(!showPassword)}\r\n                              onMouseDown={(e) => e.preventDefault()}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <Visibility />\r\n                              ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                      />\r\n                      <FormHelperText id=\"my-helper-text\">\r\n                        {signInErrors.password ? signInErrors.password : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <Link to=\"/forgetPassword\" className=\"forget-password-link\">\r\n                      Forgot your password?\r\n                    </Link>\r\n                    <ReCAPTCHA\r\n                      ref={recaptchaRef}\r\n                      sitekey={authConstants.ReCAPTCHA_KEY}\r\n                    />\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"sign-in-btn\"\r\n                      onClick={(e) => handleSignInSubmit(e)}\r\n                    >\r\n                      sign in\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form class=\"sign-up-form\">\r\n              <h2 className=\"title\">Sign Up</h2>\r\n              <div className=\"sign-up-form-content\">\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  name=\"firstname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.firstname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.firstname}\r\n                  helperText={signUpErrors.firstname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.lastname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.lastname}\r\n                  helperText={signUpErrors.lastname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.email}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.email}\r\n                  helperText={signUpErrors.email}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Affiliation\"\r\n                  name=\"affiliation\"\r\n                  placeholder=\"Institute affiliated to\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.affiliation}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.affiliation}\r\n                  helperText={signUpErrors.affiliation}\r\n                  required\r\n                />\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={signUpErrors.type}\r\n                  className=\"user-type-radio-group\"\r\n                >\r\n                  <FormLabel component=\"legend\">\r\n                    What type of user are you?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-label=\"user-type\"\r\n                    name=\"type\"\r\n                    value={signUpValue.type}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"ResearchInstitute\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Research Institute\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Industry\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Industry\"\r\n                    />\r\n                  </RadioGroup>\r\n                  <FormHelperText>\r\n                    {signUpErrors.type ? signUpErrors.type : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                {/* \r\n                <TextField\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.description}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.description}\r\n                  helperText={signUpErrors.description}\r\n                  multiline\r\n                  rows={4}\r\n                /> */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  className=\"input password-input\"\r\n                  error={signUpErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.password ? signUpErrors.password : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  error={signUpErrors.confirm_password ? true : undefined}\r\n                  className=\"input\"\r\n                  required\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.confirme_password}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.confirm_password\r\n                      ? signUpErrors.confirm_password\r\n                      : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Link className=\"forget-password-link\">\r\n                  Already a user Sign In\r\n                </Link>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"sign-up-btn\"\r\n                  onClick={(e) => handleSignUpSubmit(e)}\r\n                >\r\n                  sign up\r\n                </Button>\r\n                {/* <TextField\r\n                  error={signUpErrors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                /> */}\r\n              </div>\r\n            </form>\r\n            {/* <form action=\"#\" class=\"sign-in-form\">\r\n              <h2 class=\"title\">Sign in</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" value=\"Login\" class=\"btn solid\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign in with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n            {/* <form action=\"#\" class=\"sign-up-form\">\r\n              <h2 class=\"title\">Sign up</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-envelope\"></i>\r\n                <input type=\"email\" placeholder=\"Email\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" class=\"btn\" value=\"Sign up\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign up with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n          </div>\r\n        </div>\r\n        <div class=\"panels-container\">\r\n          <div class=\"panel left-panel\">\r\n            <div class=\"content\">\r\n              <h3>New here ?</h3>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Debitis, ex ratione. Aliquid!\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-up-btn\"\r\n                onClick={signUpButtonPress}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/log.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n          <div class=\"panel right-panel\">\r\n            <div class=\"content\">\r\n              <h3>One of us ?</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                laboriosam ad deleniti.\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-in-btn\"\r\n                onClick={signInButtonPress}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/register.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userLogin}>\r\n                <Input\r\n                  id=\"email_username\"\r\n                  label=\"Email/Username\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email/Username\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"basicPassword\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Orders\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Microorganism\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\User\\index.js",["689","690","691"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Image, Row, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUserData, updateUserInfo } from \"../../actions/user.actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input/input\";\r\n\r\nconst User = (props) => {\r\n  const authenticate = useSelector((state) => state.auth.authenticate);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dispatch = useDispatch();\r\n  const { userID } = props.location.state;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [updateUser, setUpdateUser] = useState(\r\n    useSelector((state) => state.userUpdate)\r\n  );\r\n  const update = useSelector((state) => state.userUpdate);\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const [updateForm, setUpdateForm] = useState(false);\r\n  const [savingData, setSavingData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserData(userID, token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUserData(user.user);\r\n  }, [user]);\r\n\r\n  const updateValue = (e) => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === \"save\") {\r\n      dispatch(updateUserInfo(userData, token));\r\n      setSavingData(!savingData);\r\n    }\r\n    setUpdateForm(!updateForm);\r\n  };\r\n\r\n  if (!authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      {update.updating ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <p>{JSON.stringify(update.message)}</p>\r\n          <Button\r\n            onClick={(e) =>\r\n              handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n            }\r\n          >\r\n            {updateForm ? \"Save\" : \"Edit\"}\r\n          </Button>\r\n          <Container>\r\n            <Row>\r\n              <Input\r\n                id=\"first_name\"\r\n                label=\"Fristname\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                disabled={!updateForm}\r\n                value={userData.firstname}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Firstname\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"last_name\"\r\n                label=\"Lastname\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                value={userData.lastname}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Lastname\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"contact-number\"\r\n                label=\"Contact Number\"\r\n                type=\"text\"\r\n                name=\"contactNumber\"\r\n                value={userData.contactNumber}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Contact Number\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Form.Label>Profile Picture</Form.Label>\r\n              <Image src=\"https://picsum.photos/171/180\" roundedCircle />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"affiliation\"\r\n                label=\"Affiliation\"\r\n                type=\"text\"\r\n                name=\"affiliation\"\r\n                value={userData.affiliation ? userData.affiliation : \"NULL\"}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Affiliation\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                type=\"textarea\"\r\n                as=\"textarea\"\r\n                rows={3}\r\n                name=\"description\"\r\n                value={userData.description}\r\n                disabled={!updateForm}\r\n                onChange={(e) => updateValue(e)}\r\n                placeholder=\"Description\"\r\n              />\r\n            </Row>\r\n            {userData.permissions\r\n              ? Object.keys(userData.permissions).map((permission) => (\r\n                  <Form.Check\r\n                    label={permission}\r\n                    name={permission}\r\n                    checked={userData.permissions[permission]}\r\n                    disabled={!updateForm}\r\n                    onChange={(e) =>\r\n                      (userData.permissions[permission] = e.target.checked)\r\n                    }\r\n                  ></Form.Check>\r\n                ))\r\n              : undefined}\r\n          </Container>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\index.js",["692","693","694","695","696"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Spinner, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  deleteMicroorganism,\r\n  getCatalogueData,\r\n} from \"../../actions/catalogue.actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport AddMicroorganismModal from \"../../components/Modals/AddMicroorganismModal\";\r\nimport DeleteUserModal from \"../../components/Modals/DeleteUserModal\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { microorganismTemplate } from \"../../helpers/templates\";\r\nimport useCatalogue from \"./useCatalogue\";\r\nconst DashboardCatalogue = (props) => {\r\n  const { authenticate, token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\r\n    \"bacteria\",\r\n    \"fungi\",\r\n    \"archaea\",\r\n    \"antibody\",\r\n    \"microalgae\",\r\n    \"phage\",\r\n    \"virus\",\r\n    \"yeast\",\r\n  ];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  //delete hook\r\n  const [deleteRecordId, setDeleteRecordId] = useState(\"\");\r\n\r\n  const columns = data[0] && Object.keys(data[0].CoreDataSets);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(\r\n            row[\"CoreDataSets\"][\"OrganismType\"].toLowerCase()\r\n          )\r\n        : true;\r\n\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row[\"CoreDataSets\"][column]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_M_Permission\r\n              ? \"/dashboard/details\"\r\n              : \"#\",\r\n            state: { id: permissions.view_M_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_M_Permission ? \"primary\" : \"secondary\"}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_M_Permission ? \"danger\" : \"secondary\"}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const deleteRecordRef = useRef();\r\n  const microroganismAddRef = useRef();\r\n\r\n  if (!authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                      checked\r\n                        ? prev.filter((sf) => sf !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          <Link to=\"/dashboard/addMicroorganism\">\r\n            <Button>Add</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            {columns &&\r\n              columns.map((heading) => {\r\n                return <th>{heading}</th>;\r\n              })}\r\n            <th className=\"text-center\">Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {search(data).map((row) => {\r\n            return (\r\n              <tr>\r\n                {columns.map((heading) => {\r\n                  return <td>{row[\"CoreDataSets\"][heading]}</td>;\r\n                })}\r\n                <td style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                  {recordOptions(row._id)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogue;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js",["697","698","699"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgetPassword } from \"../../actions\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nconst ForgetPassword = () => {\r\n  const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  const dispatch = useDispatch();\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [slideChange, setSlideChange] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/forget-password\", { email: emailValue })\r\n      .then((response) => {\r\n        setSlideChange(true);\r\n        setEmailSent(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setSlideChange(true);\r\n        setEmailSent(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    // const slides = document.querySelector(\".slides\");\r\n    // slides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (slideChange) {\r\n  //     dispatch(\r\n  //       forgetPassword({\r\n  //         email: emailValue,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }, [slideChange]);\r\n  return (\r\n    <div className=\"outer-div\">\r\n      {/* <div className=\"upper-nav\">Logo</div> */}\r\n      {slideChange ? (\r\n        <div className=\"check-email-div\">\r\n          <h3>{emailSent ? \"Check your Email\" : \"Failed\"}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forget-password-div\">\r\n          <div className=\"forget-password-title\">\r\n            <h3>Forgot password</h3>\r\n            <p>Instructions will be sent to your email</p>\r\n          </div>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"example@name.com\"\r\n            variant=\"outlined\"\r\n            className=\"forgot-password-email-input\"\r\n            value={emailValue}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            error={!emailValidator.test(emailValue.trim()) && emailValue !== \"\"}\r\n            helperText=\"must be of form: name@gmail.com\"\r\n            required\r\n          />\r\n          <button\r\n            onClick={(e) => {\r\n              if (emailValidator.test(emailValue.trim())) {\r\n                handleSubmission();\r\n              }\r\n            }}\r\n            className=\"send-instructions-btn\"\r\n          >\r\n            Send Instructions\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\catalogue.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\PageHeader\\index.js",["700","701","702","703","704","705","706","707","708"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport \"./style.css\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst PageHeader = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [sideBarshow, setSideBarShow] = useState(false);\r\n  const [searchBarShow, setSearchBarShow] = useState(false);\r\n  const [userSignedIn, setUserSignedIn] = useState(false);\r\n  const authenticate = useSelector((state) => state.auth.authenticate);\r\n  const error = useSelector((state) => state.auth.error);\r\n\r\n  const handleLogout = () => {\r\n    setUserSignedIn(false);\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(authenticate);\r\n    if (authenticate) {\r\n      setUserSignedIn(true);\r\n    }\r\n  }, [authenticate]);\r\n  return (\r\n    <>\r\n      {sideBarshow ? (\r\n        <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n          <div className=\"sidebar-upper-div\">\r\n            <div className=\"sidebar-upper-div-options\">\r\n              <HomeIcon fontSize=\"large\" />\r\n              {userSignedIn ? (\r\n                <Link onClick={(e) => handleLogout()}>Sign Out</Link>\r\n              ) : (\r\n                <Link to=\"/signin\">Sign In</Link>\r\n              )}\r\n            </div>\r\n            {/* <CloseIcon onClick={(e) => setSideBarShow(false)} /> */}\r\n          </div>\r\n          <div className=\"sidebar-links\">\r\n            <ul className=\"sidebar-links-list\">\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Order</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"sidebar-footer\">\r\n            <ul className=\"sidebar-footer-list\">\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"upper-ticker\">\r\n        <Container className=\"upper-ticker-content\">\r\n          <div className=\"upper-ticker-contacts\">\r\n            <div className=\"upper-ticker-contact-number\">\r\n              <PhoneIcon fontSize=\"small\" />\r\n              <span> +923356291805</span>\r\n            </div>\r\n            <div className=\"upper-ticker-contact-email\">\r\n              <EmailOutlined />\r\n              <span> zainnoor6035020@gmail.com</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"upper-ticker-timings\">\r\n            <QueryBuilderIcon />\r\n            <span> Working Hours - Mon - Fri: 9:30 - 18:30</span>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <div className=\"stickable-navbar\">\r\n        <Container className=\"stickable-navbar-content\">\r\n          <div className=\"stickable-navbar-logo\">NCCP</div>\r\n          <div className=\"stickable-navbar-links\">\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Home\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Resources\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Services\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Contact\r\n            </a>\r\n            <div className=\"stickable-navbar-operations\">\r\n              <div className=\"stickable-navbar-operation-sign-in\">\r\n                {userSignedIn ? (\r\n                  <Link onClick={(e) => handleLogout()}>Sign Out</Link>\r\n                ) : (\r\n                  <Link to=\"/signin\">Sign In</Link>\r\n                )}\r\n              </div>\r\n              <div className=\"stickable-navbar-operation-cart\">\r\n                <ShoppingCartOutlinedIcon fontSize=\"small\" />\r\n              </div>\r\n              <div\r\n                className=\"stickable-navbar-operation-search\"\r\n                onClick={(e) => setSearchBarShow(!searchBarShow)}\r\n              >\r\n                {searchBarShow ? <CloseOutlinedIcon /> : <SearchOutlinedIcon />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"stickable-navbar-hamburger-menu\"\r\n            onClick={(e) => setSideBarShow(!sideBarshow)}\r\n          >\r\n            {sideBarshow ? (\r\n              <CloseOutlinedIcon fontSize=\"large\" />\r\n            ) : (\r\n              <MenuRoundedIcon fontSize=\"large\" />\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js",["709","710"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  data: {},\r\n  updating: false,\r\n  updated: false,\r\n  updateError: false,\r\n  code: 0,\r\n  message: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.UPDATING_USER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        updating: true,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated: true,\r\n        code: action.payload.status_code,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case authConstants.UPDATING_USER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        updating: false,\r\n        updated: false,\r\n        updateError: true,\r\n        code: action.payload.status_code,\r\n        message: action.payload.message,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\Item.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Header\\index.js",["711","712"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  NavLink,\r\n} from \"react-bootstrap\";\r\nimport { RiDashboardLine } from \"react-icons/ri\";\r\nimport { CgLogOut } from \"react-icons/cg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport \"./style.css\";\r\nconst Header = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const cart_size = useSelector((state) => state.cart.size);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart_size);\r\n  }, [cart_size]);\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Header>\r\n            <b>Noor Muhammad</b>\r\n          </Dropdown.Header>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item>\r\n            <RiDashboardLine style={{ marginRight: \"10px\" }} />\r\n            <Link to=\"/dashboard\">Dashboard</Link>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              logUserOut();\r\n            }}\r\n          >\r\n            <CgLogOut style={{ marginRight: \"10px\" }} />\r\n            Logout\r\n          </Dropdown.Item>\r\n          <ShoppingCartIcon />\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const loggedOutNavLinks = () => {\r\n    return (\r\n      <>\r\n        <Nav.Link href=\"/signin\">Signin</Nav.Link>\r\n        <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n        <Nav.Link href=\"/cart\" id=\"shopping-cart-box\">\r\n          <div>\r\n            <ShoppingCartIcon id=\"shopping-cart-icon\" />\r\n          </div>\r\n          {cart_size > 0 ? (\r\n            <div id=\"shopping-cart-number\">{`${cart_size}`}</div>\r\n          ) : null}\r\n        </Nav.Link>\r\n\r\n        <Nav.Link href=\"/catalogue\">Catalogue</Nav.Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const logUserOut = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar\r\n        variant=\"dark\"\r\n        style={{ backgroundColor: \"#212529\", zIndex: 1 }}\r\n        expand=\"lg\"\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/\">NCCP Information System</Navbar.Brand>\r\n          <Nav>\r\n            {useSelector((state) => state.auth.token)\r\n              ? loggedInNavLinks()\r\n              : loggedOutNavLinks()}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js",["713","714","715"],"import React, { useEffect, useState } from \"react\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nconst useFormResetPassword = (handleSubmission, ResetPasswordValidator) => {\r\n  const [resetPassword, setResetPassword] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [resetPasswordErrors, setResetPasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleResetSubmit = (e) => {\r\n    e.preventDefault();\r\n    setResetPasswordErrors(ResetPasswordValidator(resetPassword));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(resetPasswordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [resetPasswordErrors]);\r\n\r\n  const updateResetPassword = (e) => {\r\n    setResetPassword({\r\n      ...resetPassword,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormResetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js",["716","717","718"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",["719"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSixValidator from \"./StepSixValidator\";\r\nimport useStepSixForm from \"./useStepSixForm\";\r\n\r\nfunction Step6(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      BiologicalInteractions: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSixForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSixValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Biological Interactions</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Symbiosis\"\r\n          type=\"text\"\r\n          name=\"Symbiosis\"\r\n          placeholder=\"Enter Symbiosis here\"\r\n          value={value.Symbiosis}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Symbiosis && <p style={{ color: \"red\" }}>{errors.Symbiosis}</p>}\r\n        <Input\r\n          label=\"Mycoparasitism\"\r\n          type=\"text\"\r\n          name=\"Mycoparasitism\"\r\n          placeholder=\"Enter Mycoparasitism here\"\r\n          value={value.Mycoparasitism}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Mycoparasitism && (\r\n          <p style={{ color: \"red\" }}>{errors.Mycoparasitism}</p>\r\n        )}\r\n        <Input\r\n          label=\"Pathogenicity\"\r\n          type=\"text\"\r\n          name=\"Pathogenicity\"\r\n          placeholder=\"Enter Pathogenicity here\"\r\n          value={value.Pathogenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Pathogenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Pathogenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Allergenicity\"\r\n          type=\"text\"\r\n          name=\"Allergenicity\"\r\n          placeholder=\"Enter Allergenicity here\"\r\n          value={value.Allergenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Allergenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Allergenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Other Organism Toxicity\"\r\n          type=\"text\"\r\n          name=\"OtherOrganismToxicity\"\r\n          placeholder=\"Enter Other Organism Toxicity here\"\r\n          value={value.OtherOrganismToxicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherOrganismToxicity && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherOrganismToxicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Antagonistic Activities\"\r\n          type=\"text\"\r\n          name=\"AntagonisticActivities\"\r\n          placeholder=\"Enter Antagonistic Activities here\"\r\n          value={value.AntagonisticActivities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AntagonisticActivities && (\r\n          <p style={{ color: \"red\" }}>{errors.AntagonisticActivities}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step6;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js",["720"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js",["721"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepElevenValidator from \"./StepElevenValidator\";\r\nimport useStepElevenForm from \"./useStepElevenForm\";\r\n\r\nfunction Step11(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      ChemistryAndEnzymes: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepElevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepElevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Chemistry And Enzymes</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Enzymes Produced\"\r\n          type=\"text\"\r\n          name=\"EnzymesProduced\"\r\n          placeholder=\"Enter Enzymes Produced here\"\r\n          value={value.EnzymesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.EnzymesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.EnzymesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Decomposition And Deteriorating Capabilities\"\r\n          type=\"text\"\r\n          name=\"DecompositionAndDeterioratingCapabilities\"\r\n          placeholder=\"Enter Decomposition And Deteriorating Capabilities here\"\r\n          value={value.DecompositionAndDeterioratingCapabilities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DecompositionAndDeterioratingCapabilities && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.DecompositionAndDeterioratingCapabilities}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Metabolities Produced\"\r\n          type=\"text\"\r\n          name=\"MetabolitiesProduced\"\r\n          placeholder=\"Enter Metabolities Produced here\"\r\n          value={value.MetabolitiesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MetabolitiesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.MetabolitiesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Bio transformations\"\r\n          type=\"text\"\r\n          name=\"Biotransformations\"\r\n          placeholder=\"Enter Bio transformations here\"\r\n          value={value.Biotransformations}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Biotransformations && (\r\n          <p style={{ color: \"red\" }}>{errors.Biotransformations}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step11;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\ResponseModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\useStepEightForm.js",["722"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js",["723"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\useStepFourteenForm.js",["724"],"import { useEffect, useState } from \"react\";\r\nconst useStepFourteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepFourteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFourteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFourteenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\TagInput\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\EmailVerified\\index.js",["725","726","727","728"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nimport { responsiveFontSizes } from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nconst EmailVerified = (props) => {\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"initial message\");\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .post(\"/verifyEmail\", { token })\r\n      .then((response) => {\r\n        setEmailVerified(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setEmailVerified(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    setModalOpen(true);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className=\"signup-response-modal\"\r\n      open={modalOpen}\r\n      onClose={(e) => {\r\n        setModalOpen(false);\r\n        // props.history.push(\"/signin\");\r\n      }}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <div className=\"email-verify-modal-content-div\">\r\n          {emailVerified ? (\r\n            <CheckCircleIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          ) : (\r\n            <ErrorIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          )}\r\n          <h2 id=\"transition-modal-title\">\r\n            {emailVerified ? \"Success\" : \"Error\"}\r\n          </h2>\r\n          <p id=\"transition-modal-description\">{message}</p>\r\n          <Link to=\"/signin\">\r\n            Go to {emailVerified ? \"Sign In\" : \"Sign Up\"}\r\n          </Link>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailVerified;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js",["729"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  collapsed: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.COLLAPSE_SIDEBAR:\r\n      state = {\r\n        ...state,\r\n        collapsed: !state.collapsed,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js",["730","731"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  options: [],\r\n  data: {},\r\n  fetching: false,\r\n  fetched: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.DASHBOARD_OPTIONS_UPDATE:\r\n      state = {\r\n        ...state,\r\n        options: [\r\n          ...(!state.options.includes(action.payload.option)\r\n            ? [...state.options, action.payload.option]\r\n            : [...state.options]),\r\n        ],\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.DASHBOARD_DATA_FAILURE:\r\n      state = initialState;\r\n      break;\r\n\r\n    case authConstants.UPDATE_DASHBOARD_OPTIONS:\r\n      state = {\r\n        ...state,\r\n        options: action.payload.options,\r\n        fetched: true,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SearchBar\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js",["732"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js",["733"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepTwelveValidator from \"./StepTwelveValidator\";\r\nimport useStepTwelveForm from \"./useStepTwelveForm\";\r\n\r\nfunction Step12(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Medium: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepTwelveForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepTwelveValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Medium</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Medium Number\"\r\n          type=\"text\"\r\n          name=\"MediumNumber\"\r\n          placeholder=\"Enter Medium Number here\"\r\n          value={value.MediumNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium Name\"\r\n          type=\"text\"\r\n          name=\"MediumName\"\r\n          placeholder=\"Enter Medium Name here\"\r\n          value={value.MediumName}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumName && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumName}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium Composition\"\r\n          type=\"text\"\r\n          name=\"MediumComposition\"\r\n          placeholder=\"Enter Medium Composition here\"\r\n          value={value.MediumComposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumComposition && (\r\n          <p style={{ color: \"red\" }}>{errors.MediumComposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Medium PH\"\r\n          type=\"text\"\r\n          name=\"MediumPH\"\r\n          placeholder=\"Enter Medium PH here\"\r\n          value={value.MediumPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MediumPH && <p style={{ color: \"red\" }}>{errors.MediumPH}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step12;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js",["734"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepTenValidator from \"./StepTenValidator\";\r\nimport useStepTenForm from \"./useStepTenForm\";\r\n\r\nfunction Step10(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      GrowthConditions: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepTenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepTenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Growth Conditions</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Conditions For Growth And Maintenence On Solid Media\"\r\n          type=\"text\"\r\n          name=\"ConditionsForGrowthAndMaintenenceOnSolidMedia\"\r\n          placeholder=\"Enter Conditions For Growth And Maintenence On Solid Media here\"\r\n          value={value.ConditionsForGrowthAndMaintenenceOnSolidMedia}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForGrowthAndMaintenenceOnSolidMedia && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.ConditionsForGrowthAndMaintenenceOnSolidMedia}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Conditions For Growth In Liquid Media\"\r\n          type=\"text\"\r\n          name=\"ConditionsForGrowthInLiquidMedia\"\r\n          placeholder=\"Enter Conditions For Growth In Liquid Media here\"\r\n          value={value.ConditionsForGrowthInLiquidMedia}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForGrowthInLiquidMedia && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.ConditionsForGrowthInLiquidMedia}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Conditions For Fruiting Or Sporulation\"\r\n          type=\"text\"\r\n          name=\"ConditionsForFruitingOrSporulation\"\r\n          placeholder=\"Enter Conditions For Fruiting Or Sporulation here\"\r\n          value={value.ConditionsForFruitingOrSporulation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForFruitingOrSporulation && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.ConditionsForFruitingOrSporulation}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Conditions For Germination\"\r\n          type=\"text\"\r\n          name=\"ConditionsForGermination\"\r\n          placeholder=\"Enter Conditions For Germination here\"\r\n          value={value.ConditionsForGermination}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ConditionsForGermination && (\r\n          <p style={{ color: \"red\" }}>{errors.ConditionsForGermination}</p>\r\n        )}\r\n        <Input\r\n          label=\"Carbon Sources Tested\"\r\n          type=\"text\"\r\n          name=\"CarbonSourcesTested\"\r\n          placeholder=\"Enter Carbon Sources Tested here\"\r\n          value={value.CarbonSourcesTested}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CarbonSourcesTested && (\r\n          <p style={{ color: \"red\" }}>{errors.CarbonSourcesTested}</p>\r\n        )}\r\n        <Input\r\n          label=\"Nitrogen Sources Tested\"\r\n          type=\"text\"\r\n          name=\"NitrogenSourcesTested\"\r\n          placeholder=\"Enter Nitrogen Sources Tested here\"\r\n          value={value.NitrogenSourcesTested}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NitrogenSourcesTested && (\r\n          <p style={{ color: \"red\" }}>{errors.NitrogenSourcesTested}</p>\r\n        )}\r\n        <Input\r\n          label=\"Single Compound Tested\"\r\n          type=\"text\"\r\n          name=\"SingleCompoundTested\"\r\n          placeholder=\"Enter Single Compound Tested here\"\r\n          value={value.SingleCompoundTested}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SingleCompoundTested && (\r\n          <p style={{ color: \"red\" }}>{errors.SingleCompoundTested}</p>\r\n        )}\r\n        <Input\r\n          label=\"Nutritional Requirements\"\r\n          type=\"text\"\r\n          name=\"NutritionalRequirements\"\r\n          placeholder=\"Enter Nutritional Requirements here\"\r\n          value={value.NutritionalRequirements}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NutritionalRequirements && (\r\n          <p style={{ color: \"red\" }}>{errors.NutritionalRequirements}</p>\r\n        )}\r\n        <Input\r\n          label=\"Defeciencies\"\r\n          type=\"text\"\r\n          name=\"Defeciencies\"\r\n          placeholder=\"Enter Defeciencies here\"\r\n          value={value.Defeciencies}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Defeciencies && (\r\n          <p style={{ color: \"red\" }}>{errors.Defeciencies}</p>\r\n        )}\r\n        <Input\r\n          label=\"Tolerances And Sensitivities\"\r\n          type=\"text\"\r\n          name=\"TolerancesAndSensitivities\"\r\n          placeholder=\"Enter Tolerances And Sensitivities here\"\r\n          value={value.TolerancesAndSensitivities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TolerancesAndSensitivities && (\r\n          <p style={{ color: \"red\" }}>{errors.TolerancesAndSensitivities}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature Relationships\"\r\n          type=\"text\"\r\n          name=\"TemperatureRelationships\"\r\n          placeholder=\"Enter Temperature Relationships here\"\r\n          value={value.TemperatureRelationships}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureRelationships && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureRelationships}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Growth PH\"\r\n          type=\"text\"\r\n          name=\"MaximumGrowthPH\"\r\n          placeholder=\"Enter Maximum Growth PH here\"\r\n          value={value.MaximumGrowthPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumGrowthPH && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumGrowthPH}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Growth PH\"\r\n          type=\"text\"\r\n          name=\"MinimumGrowthPH\"\r\n          placeholder=\"Enter Minimum Growth PH here\"\r\n          value={value.MinimumGrowthPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumGrowthPH && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumGrowthPH}</p>\r\n        )}\r\n        <Input\r\n          label=\"Optimal Growth PH\"\r\n          type=\"text\"\r\n          name=\"OptimalGrowthPH\"\r\n          placeholder=\"Enter Optimal Growth PH here\"\r\n          value={value.OptimalGrowthPH}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimalGrowthPH && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimalGrowthPH}</p>\r\n        )}\r\n        <Input\r\n          label=\"Light Conditions\"\r\n          type=\"text\"\r\n          name=\"LightConditions\"\r\n          placeholder=\"Enter Light Conditions here\"\r\n          value={value.LightConditions}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.LightConditions && (\r\n          <p style={{ color: \"red\" }}>{errors.LightConditions}</p>\r\n        )}\r\n        <Input\r\n          label=\"Oxygen Relationship\"\r\n          type=\"text\"\r\n          name=\"OxygenRelationship\"\r\n          placeholder=\"Enter Oxygen Relationship here\"\r\n          value={value.OxygenRelationship}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OxygenRelationship && (\r\n          <p style={{ color: \"red\" }}>{errors.OxygenRelationship}</p>\r\n        )}\r\n        <Input\r\n          label=\"Heat Resistence\"\r\n          type=\"text\"\r\n          name=\"HeatResistence\"\r\n          placeholder=\"Enter Heat Resistence here\"\r\n          value={value.HeatResistence}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HeatResistence && (\r\n          <p style={{ color: \"red\" }}>{errors.HeatResistence}</p>\r\n        )}\r\n        <Input\r\n          label=\"Ethanol Conditions\"\r\n          type=\"text\"\r\n          name=\"EthanolConditions\"\r\n          placeholder=\"Enter Ethanol Conditions here\"\r\n          value={value.EthanolConditions}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.EthanolConditions && (\r\n          <p style={{ color: \"red\" }}>{errors.EthanolConditions}</p>\r\n        )}\r\n        <Input\r\n          label=\"Salinity Requirements\"\r\n          type=\"text\"\r\n          name=\"SalinityRequirements\"\r\n          placeholder=\"Enter Salinity Requirements here\"\r\n          value={value.SalinityRequirements}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SalinityRequirements && (\r\n          <p style={{ color: \"red\" }}>{errors.SalinityRequirements}</p>\r\n        )}\r\n        <Input\r\n          label=\"Optimal NaCl Concentration\"\r\n          type=\"text\"\r\n          name=\"OptimalNaClConcentration\"\r\n          placeholder=\"Enter Optimal NaCl Concentration here\"\r\n          value={value.OptimalNaClConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimalNaClConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimalNaClConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum NaCl Concentration\"\r\n          type=\"text\"\r\n          name=\"MinimumNaClConcentration\"\r\n          placeholder=\"Enter Minimum NaCl Concentration here\"\r\n          value={value.MinimumNaClConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumNaClConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumNaClConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum NaCl Cocentration\"\r\n          type=\"text\"\r\n          name=\"MaximumNaClCocentration\"\r\n          placeholder=\"Enter Maximum NaCl Cocentration here\"\r\n          value={value.MaximumNaClCocentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumNaClCocentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumNaClCocentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Optimum Sugar Concentration\"\r\n          type=\"text\"\r\n          name=\"OptimumSugarConcentration\"\r\n          placeholder=\"Enter Optimum Sugar Concentration here\"\r\n          value={value.OptimumSugarConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimumSugarConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimumSugarConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Sugar Concentration\"\r\n          type=\"text\"\r\n          name=\"MinimumSugarConcentration\"\r\n          placeholder=\"Enter Minimum Sugar Concentration here\"\r\n          value={value.MinimumSugarConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumSugarConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumSugarConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Sugar Concentration\"\r\n          type=\"text\"\r\n          name=\"MaximumSugarConcentration\"\r\n          placeholder=\"Enter Maximum Sugar Concentration here\"\r\n          value={value.MaximumSugarConcentration}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumSugarConcentration && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumSugarConcentration}</p>\r\n        )}\r\n        <Input\r\n          label=\"Osmophily And Xerophily\"\r\n          type=\"text\"\r\n          name=\"OsmophilyAndXerophily\"\r\n          placeholder=\"Enter Osmophily And Xerophily here\"\r\n          value={value.OsmophilyAndXerophily}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OsmophilyAndXerophily && (\r\n          <p style={{ color: \"red\" }}>{errors.OsmophilyAndXerophily}</p>\r\n        )}\r\n        <Input\r\n          label=\"Water Activity Conditions\"\r\n          type=\"text\"\r\n          name=\"WaterActivityConditions\"\r\n          placeholder=\"Enter Water Activity Conditions here\"\r\n          value={value.WaterActivityConditions}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.WaterActivityConditions && (\r\n          <p style={{ color: \"red\" }}>{errors.WaterActivityConditions}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step10;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["735"],"import { useEffect, useState } from \"react\";\r\nconst useStepFourForm = (initialValue, handleSubmission, StepFourValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFourValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFourForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js",["736"],"import { useEffect, useState } from \"react\";\r\nconst useStepSixForm = (InitialValue, handleSubmission, StepSixValidator) => {\r\n  const [value, setValue] = useState(InitialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepSixValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepSixForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\index.js",["737"],"import React from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { TextField } from \"@material-ui/core\";\r\nconst AdminDashboardSettings = () => {\r\n  return (\r\n    <SideBar active=\"settings\">\r\n      <h1>Settings</h1>\r\n      <Badge\r\n        color=\"primary\"\r\n        badgeContent={\r\n          <CreateIcon\r\n            style={{\r\n              width: \"12px\",\r\n              height: \"12px\",\r\n              borderRadius: \"2px solid royalblue\",\r\n              backgroundColor: \"royalblue\",\r\n            }}\r\n          />\r\n        }\r\n        showZero\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <Avatar />\r\n      </Badge>\r\n\r\n      <TextField variant=\"outlined\" label=\"Firstname\" />\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardSettings;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardOrders\\index.js",["738","739","740","741","742","743"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardUsers\\index.js",["744","745","746","747"],"import { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport { Dropdown } from \"bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport ItemList from \"../../components/ItemList\";\r\nimport ItemListCard from \"../../components/ItemListCard\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\n\r\nimport \"./style.css\";\r\nconst AdminDashboardUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users);\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      users.userList.map((row) => {\r\n        return {\r\n          ...row,\r\n          orders: Math.floor(Math.random() * 10),\r\n          deposits: Math.floor(Math.random() * 10),\r\n        };\r\n      })\r\n    );\r\n    // setData(users.userList);\r\n  }, [users]);\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.role.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.firstname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.lastname.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{users.error.message}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (users.fetching) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{requestSent()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  if (users.error.found) {\r\n    return (\r\n      <SideBar active=\"Users\">\r\n        <div className=\"users__content__div\">{ErrorMessage()}</div>\r\n      </SideBar>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Orders\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"Deposits\",\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n  return (\r\n    <SideBar active=\"Users\">\r\n      <div className=\"div__one\">\r\n        <SearchBar query={query} setQuery={setQuery} />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Users</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Name\",\r\n                value: \"name\",\r\n              },\r\n              {\r\n                title: \"Orders\",\r\n                value: \"orders\",\r\n              },\r\n              {\r\n                title: \"Deposits\",\r\n                value: \"deposits\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Role\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Admin\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                title: \"Internal\",\r\n                value: \"internal\",\r\n              },\r\n              {\r\n                title: \"External\",\r\n                value: \"External\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <ItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardUsers;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemListCard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardPayments\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js",["748","749"],"import React, { useEffect, useState } from \"react\";\r\nconst useFormAddUser = (handleSubmission, SignInValidator) => {\r\n  const [addUserValue, setAddUserValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"internal\",\r\n    profile_picture: \"null\",\r\n    permissions: {\r\n      view_microorganism_permission: false,\r\n      add_microorganism_permission: false,\r\n      delete_microorganism_permission: false,\r\n      update_microorganism_permission: false,\r\n      view_order_permission: false,\r\n      add_order_permission: false,\r\n      delete_order_permission: false,\r\n      update_order_permission: false,\r\n      view_deposit_permission: false,\r\n      add_deposit_permission: false,\r\n      delete_deposit_permission: false,\r\n      update_deposit_permission: false,\r\n      view_user_permission: false,\r\n      add_user_permission: false,\r\n      delete_user_permission: false,\r\n      update_user_permission: false,\r\n      view_report_permission: false,\r\n      add_report_permission: false,\r\n      delete_report_permission: false,\r\n      update_report_permission: false,\r\n      view_log_permission: false,\r\n      add_log_permission: false,\r\n      delete_log_permission: false,\r\n      update_log_permission: false,\r\n    },\r\n  });\r\n\r\n  const [addUserErrors, setaddUserErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleAddUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    setaddUserErrors(SignInValidator(addUserValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(addUserErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [addUserErrors]);\r\n\r\n  const updateAddUser = (e) => {\r\n    if (e.target.type === \"text\" || e.target.type === \"password\") {\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else if (e.target.type === \"file\") {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onloadend = () => {\r\n        setAddUserValue({\r\n          ...addUserValue,\r\n          [e.target.name]: reader.result,\r\n        });\r\n      };\r\n    } else if (e.target.type === \"checkbox\") {\r\n      //   alert(e.target.name);\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        permissions: {\r\n          ...addUserValue.permissions,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return { addUserValue, handleAddUserSubmit, updateAddUser, addUserErrors };\r\n};\r\n\r\nexport default useFormAddUser;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\App.js",["750","751","752","753","754","755","756","757","758","759"],"import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./containers/HomePage/index\";\nimport Signup from \"./containers/Signup/index\";\nimport Signin from \"./containers/SignIn/index\";\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Catalogue from \"../src/containers/Catalogue/index\";\nimport Dashboard from \"./containers/Dashboard/index\";\nimport { isUserLoggedIn } from \"./actions\";\nimport ItemDetails from \"./containers/Details\";\nimport Orders from \"./containers/Orders\";\nimport Deposits from \"./containers/Deposits\";\nimport Microorganism from \"./containers/Microorganism\";\nimport Users from \"./containers/Users\";\nimport User from \"./containers/User\";\nimport DashboardCatalogue from \"./containers/DashboardCatalogue\";\nimport DashboardCatalogueDetail from \"./containers/DashboardCatalogueDetail\";\nimport AddMicroorganism from \"./containers/AddMicroorganism\";\nimport AddUserForm from \"./components/AddUserForm\";\nimport Cart from \"./containers/Cart\";\nimport ForgetPassword from \"./containers/ForgetPassword\";\nimport ResetPassword from \"./containers/ResetPassword\";\nimport EmailVerified from \"./containers/EmailVerified\";\nimport AdminDashboardDetails from \"./containers/AdminDashboardDetails\";\nimport DashboardDeposits from \"./containers/AdminDashboardDeposits\";\nimport DashboardOrders from \"./containers/AdminDashboardOrders\";\nimport DashboardUsers from \"./containers/AdminDashboardUsers\";\nimport DashboardPayments from \"./containers/AdminDashboardPayments\";\nimport DashboardReports from \"./containers/AdminDashboardReports\";\nimport DashboardAddUser from \"./containers/AdminDashboardAddUser\";\nimport AdminDashboardSettings from \"./containers/AdminDashboardSettings\";\nimport AdminDashboardOrders from \"./containers/AdminDashboardOrders\";\nimport AdminDashboardUsers from \"./containers/AdminDashboardUsers\";\nimport AdminDashboardPayments from \"./containers/AdminDashboardPayments\";\nimport AdminDashboardReports from \"./containers/AdminDashboardReports\";\nimport AdminDashboardDeposits from \"./containers/AdminDashboardDeposits\";\nimport AdminDashboardAddUser from \"./containers/AdminDashboardAddUser\";\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth]);\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* <PrivateRoute path=\"/\" exact component={HomePage} /> */}\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/catalogue\" component={Catalogue} />\n        <Route path=\"/dashboard\" exact component={Dashboard} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/forgetPassword\" component={ForgetPassword} />\n        <Route path=\"/authentication/activate\" component={EmailVerified} />\n        <Route path=\"/resetPassword\" component={ResetPassword} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/itemDetails\" component={ItemDetails} />\n        <PrivateRoute\n          path=\"/adminDashboard\"\n          exact\n          component={AdminDashboardDetails}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/settings\"\n          component={AdminDashboardSettings}\n        />\n        {/* <PrivateRoute path=\"/dashboard/orders\" component={Orders} /> */}\n        <PrivateRoute\n          path=\"/adminDashboard/deposits\"\n          component={AdminDashboardDeposits}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/orders\"\n          component={AdminDashboardOrders}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/users\"\n          component={AdminDashboardUsers}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/addUser\"\n          component={AdminDashboardAddUser}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/payments\"\n          component={AdminDashboardPayments}\n        />\n        <PrivateRoute\n          path=\"/adminDashboard/reports\"\n          component={AdminDashboardReports}\n        />\n        {/* <PrivateRoute path=\"dashboard/reports\" component={DashboardReports}/> */}\n\n        <Route path=\"/dashboard/microorgansims\" component={Microorganism} />\n        {/* <PrivateRoute path=\"/dashboard/users\" component={Users} /> */}\n        <Route path=\"/dashboard/catalogue\" component={DashboardCatalogue} />\n        <Route path=\"/dashboard/user\" component={User} />\n        <PrivateRoute path=\"/dashboard/addUser\" component={AddUserForm} />\n        <PrivateRoute\n          path=\"/dashboard/details\"\n          component={DashboardCatalogueDetail}\n        />\n        <PrivateRoute\n          path=\"/dashboard/addMicroorganism\"\n          component={AddMicroorganism}\n        />\n        <Route path=\"/cart\" component={Cart} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Deposits\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js",["760"],"import authReducer from \"./auth.reducers\";\r\nimport { combineReducers } from \"redux\";\r\nimport signupReducers from \"./signup.reducers\";\r\nimport catalogueReducers from \"./catalogue.reducers\";\r\nimport itemInfoReducer from \"./itemInfo.reducer\";\r\nimport dashboardReducers from \"./dashboard.reducers\";\r\nimport userReducer from \"./user.reducer\";\r\nimport updatingUserReducer from \"./updatingUser.reducer\";\r\nimport { authConstants } from \"../actions/constants\";\r\nimport cartReducer from \"./cart.reducer\";\r\nimport sidebarReducer from \"./sidebar.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  sign: signupReducers,\r\n  catalogue: catalogueReducers,\r\n  details: itemInfoReducer,\r\n  dashboard: dashboardReducers,\r\n  user: userReducer,\r\n  userUpdate: updatingUserReducer,\r\n  cart: cartReducer,\r\n  sidebar: sidebarReducer,\r\n});\r\n\r\nexport default (state, action) =>\r\n  rootReducer(action.type === authConstants.LOGOUT ? undefined : state, action);\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\templates.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\cart.reducer.js",["761"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  cartData: [],\r\n  size: 0,\r\n  submitting: false,\r\n  submitted: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CART_ITEM_ADD:\r\n      let item_exists = state.cartData.find(\r\n        (el) => el.id === action.payload.id\r\n      );\r\n      if (item_exists) {\r\n        state = {\r\n          ...state,\r\n          cartData: state.cartData.map((item) => {\r\n            if (item.id === action.payload.id) {\r\n              return {\r\n                ...item,\r\n                qty: item.qty + 1,\r\n              };\r\n            }\r\n            return item;\r\n          }),\r\n        };\r\n      } else {\r\n        state = {\r\n          ...state,\r\n          cartData: [\r\n            ...state.cartData,\r\n            {\r\n              ...action.payload,\r\n              qty: 1,\r\n            },\r\n          ],\r\n          size: state.size + 1,\r\n        };\r\n      }\r\n      break;\r\n    case authConstants.CART_ITEM_REMOVE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.filter((item) => {\r\n          return item.id !== action.payload.id;\r\n        }),\r\n        size: state.size - 1,\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_INCREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          console.log(action.payload.id);\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty + 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n    case authConstants.CART_ITEM_QUANTITY_DECREASE:\r\n      state = {\r\n        ...state,\r\n        cartData: state.cartData.map((item) => {\r\n          if (item.id === action.payload.id && item.qty > 1) {\r\n            return {\r\n              ...item,\r\n              qty: item.qty - 1,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n      break;\r\n\r\n    case authConstants.CART_SUBMIT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        submitting: true,\r\n        submitted: false,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        submitted: true,\r\n        submitting: false,\r\n        size: 0,\r\n      };\r\n      break;\r\n    case authConstants.CART_SUBMIT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        submitting: false,\r\n        submitted: true,\r\n        error: {\r\n          code: action.payload.code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.CART_RESET:\r\n      state = initialState;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["762"],"import { useEffect, useState } from \"react\";\r\nconst useStepNineForm = (initialValue, handleSubmission, StepNineValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepNineValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepNineForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["763"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["764"],"import { useEffect, useState } from \"react\";\r\nconst useStepThirteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThirteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThirteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThirteenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js",["765"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\OrderItemList\\index.js",["766","767","768"],"import React, { useState } from \"react\";\r\nimport ItemListCard from \"../ItemListCard\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import \"./style.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nconst OrderItemList = (props) => {\r\n  const options = [\r\n    {\r\n      title: \"View\",\r\n      icon: <VisibilityIcon />,\r\n      link: \"#\",\r\n    },\r\n    {\r\n      title: \"Delete\",\r\n      icon: <DeleteIcon />,\r\n      link: \"#\",\r\n    },\r\n  ];\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"item__list__header\">\r\n        {props.columns.map((column, key) => {\r\n          return (\r\n            <div key={key} style={{ flexBasis: column.width }}>\r\n              {column.title}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"item__list__body\">\r\n        {props.rows.map((row, key) => {\r\n          return (\r\n            <div className=\"item__list__item\" key={key}>\r\n              <div\r\n                className=\"item__list__item__personal\"\r\n                style={{\r\n                  flexBasis: props.columns[0].width,\r\n                  paddingLeft: \"0px\",\r\n                }}\r\n              >\r\n                <div className=\"item__list__item__details\">\r\n                  <div className=\"item__list__item__name\">{`${row.order_id}`}</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[1].width }}>\r\n                {row.created}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[2].width }}>\r\n                {row.customer}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[3].width }}>\r\n                {row.total}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[4].width }}>\r\n                {row.status}\r\n              </div>\r\n              <div style={{ flexBasis: props.columns[5].width }}>\r\n                <IconButton\r\n                  aria-label=\"more\"\r\n                  aria-controls=\"long-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {options.map((option, key) => (\r\n                    <MenuItem key={key} onClick={handleClose}>\r\n                      <Link to={option.link} className=\"item__option\">\r\n                        {option.icon}\r\n                        {option.title}\r\n                      </Link>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItemList;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js",["769","770","771","772","773","774"],"import React, { useState } from \"react\";\r\nimport DepositItemList from \"../../components/DepositItemList\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport DropDown from \"../../components/DropDown\";\r\n// import \"./style.css\";\r\nconst AdminDashboardDeposits = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      deposit_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      deposit_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Deposit ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\"></div>\r\n      <div className=\"div__two\">\r\n        <h3>Deposits</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit ID\",\r\n                value: \"deposit_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardDeposits;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositItemList\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardReports\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js",["775"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js",["776"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepEightValidator from \"./StepEightValidator\";\r\nimport useStepEightForm from \"./useStepEightForm\";\r\n\r\nfunction Step8(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Properties: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepEightForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepEightValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Properties</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Number Of Nuclei\"\r\n          type=\"text\"\r\n          name=\"NumberOfNuclei\"\r\n          placeholder=\"Enter Number Of Nuclei here\"\r\n          value={value.NumberOfNuclei}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NumberOfNuclei && (\r\n          <p style={{ color: \"red\" }}>{errors.NumberOfNuclei}</p>\r\n        )}\r\n        <Input\r\n          label=\"Rehydration Fluid\"\r\n          type=\"text\"\r\n          name=\"RehydrationFluid\"\r\n          placeholder=\"Enter Rehydration Fluid here\"\r\n          value={value.RehydrationFluid}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RehydrationFluid && (\r\n          <p style={{ color: \"red\" }}>{errors.RehydrationFluid}</p>\r\n        )}\r\n        <Input\r\n          label=\"Fine Structure Data\"\r\n          type=\"text\"\r\n          name=\"FineStructureData\"\r\n          placeholder=\"Enter Fine Structure Data here\"\r\n          value={value.FineStructureData}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.FineStructureData && (\r\n          <p style={{ color: \"red\" }}>{errors.FineStructureData}</p>\r\n        )}\r\n        <Input\r\n          label=\"WallConstituents\"\r\n          type=\"text\"\r\n          name=\"WallConstituents\"\r\n          placeholder=\"Enter WallConstituents here\"\r\n          value={value.WallConstituents}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.WallConstituents && (\r\n          <p style={{ color: \"red\" }}>{errors.WallConstituents}</p>\r\n        )}\r\n        <Input\r\n          label=\"Cell Contents\"\r\n          type=\"text\"\r\n          name=\"CellContents\"\r\n          placeholder=\"Enter Cell Contents here\"\r\n          value={value.CellContents}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CellContents && (\r\n          <p style={{ color: \"red\" }}>{errors.CellContents}</p>\r\n        )}\r\n        <Input\r\n          label=\"Coenzyme Q System\"\r\n          type=\"text\"\r\n          name=\"CoenzymeQSystem\"\r\n          placeholder=\"Enter Coenzyme Q System here\"\r\n          value={value.CoenzymeQSystem}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CoenzymeQSystem && (\r\n          <p style={{ color: \"red\" }}>{errors.CoenzymeQSystem}</p>\r\n        )}\r\n        <FormGroup>\r\n          <Form.Label>Staining Reactions</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"StainingReactions\"\r\n            value={value.StainingReactions}\r\n            onChange={(e) => updateValue(e)}\r\n          >\r\n            <option>Positive</option>\r\n            <option>Negative</option>\r\n          </Form.Control>\r\n        </FormGroup>\r\n        {errors.StainingReactions && (\r\n          <p style={{ color: \"red\" }}>{errors.StainingReactions}</p>\r\n        )}\r\n        <Input\r\n          label=\"Pigment Production\"\r\n          type=\"text\"\r\n          name=\"PigmentProduction\"\r\n          placeholder=\"Enter Pigment Production here\"\r\n          value={value.PigmentProduction}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PigmentProduction && (\r\n          <p style={{ color: \"red\" }}>{errors.PigmentProduction}</p>\r\n        )}\r\n        <Input\r\n          label=\"Cell Shape\"\r\n          type=\"text\"\r\n          name=\"CellShape\"\r\n          placeholder=\"Enter Cell Shape here\"\r\n          value={value.CellShape}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CellShape && <p style={{ color: \"red\" }}>{errors.CellShape}</p>}\r\n        <Input\r\n          label=\"Cell Size\"\r\n          type=\"text\"\r\n          name=\"CellSize\"\r\n          placeholder=\"Enter Cell Size here\"\r\n          value={value.CellSize}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CellSize && <p style={{ color: \"red\" }}>{errors.CellSize}</p>}\r\n        <FormGroup>\r\n          <Form.Label>Motile</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"Motile\"\r\n            value={value.Motile}\r\n            onChange={(e) => updateValue(e)}\r\n          >\r\n            <option>Motile</option>\r\n            <option>Non-Motile</option>\r\n          </Form.Control>\r\n        </FormGroup>\r\n        {errors.Motile && <p style={{ color: \"red\" }}>{errors.Motile}</p>}\r\n        <Input\r\n          label=\"Spore Forming\"\r\n          type=\"text\"\r\n          name=\"SporeForming\"\r\n          placeholder=\"Enter Spore Forming here\"\r\n          value={value.SporeForming}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SporeForming && (\r\n          <p style={{ color: \"red\" }}>{errors.SporeForming}</p>\r\n        )}\r\n        <Input\r\n          label=\"Motile By\"\r\n          type=\"text\"\r\n          name=\"MotileBy\"\r\n          placeholder=\"Enter Motile By here\"\r\n          value={value.MotileBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MotileBy && <p style={{ color: \"red\" }}>{errors.MotileBy}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step8;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js",["777"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js",["778","779","780","781"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\itemInfo.reducer.js",["782"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js",["783","784"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",["785"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js",[],{"ruleId":"786","severity":1,"message":"787","line":2,"column":10,"nodeType":"788","messageId":"789","endLine":2,"endColumn":21},{"ruleId":"786","severity":1,"message":"790","line":2,"column":23,"nodeType":"788","messageId":"789","endLine":2,"endColumn":34},{"ruleId":"786","severity":1,"message":"791","line":3,"column":10,"nodeType":"788","messageId":"789","endLine":3,"endColumn":23},{"ruleId":"792","replacedBy":"793"},{"ruleId":"794","replacedBy":"795"},{"ruleId":"786","severity":1,"message":"796","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":12},{"ruleId":"797","severity":1,"message":"798","line":71,"column":24,"nodeType":"799","messageId":"800","endLine":71,"endColumn":26},{"ruleId":"801","severity":1,"message":"802","line":49,"column":1,"nodeType":"803","endLine":163,"endColumn":3},{"ruleId":"804","severity":1,"message":"805","line":50,"column":3,"nodeType":"806","messageId":"807","endLine":161,"endColumn":4},{"ruleId":"792","replacedBy":"808"},{"ruleId":"794","replacedBy":"809"},{"ruleId":"786","severity":1,"message":"810","line":4,"column":8,"nodeType":"788","messageId":"789","endLine":4,"endColumn":32},{"ruleId":"786","severity":1,"message":"811","line":6,"column":8,"nodeType":"788","messageId":"789","endLine":6,"endColumn":20},{"ruleId":"786","severity":1,"message":"812","line":10,"column":18,"nodeType":"788","messageId":"789","endLine":10,"endColumn":25},{"ruleId":"786","severity":1,"message":"813","line":50,"column":9,"nodeType":"788","messageId":"789","endLine":50,"endColumn":21},{"ruleId":"792","replacedBy":"814"},{"ruleId":"794","replacedBy":"815"},{"ruleId":"786","severity":1,"message":"816","line":6,"column":22,"nodeType":"788","messageId":"789","endLine":6,"endColumn":35},{"ruleId":"786","severity":1,"message":"817","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":16},{"ruleId":"786","severity":1,"message":"818","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":18},{"ruleId":"786","severity":1,"message":"819","line":8,"column":8,"nodeType":"788","messageId":"789","endLine":8,"endColumn":21},{"ruleId":"801","severity":1,"message":"802","line":19,"column":1,"nodeType":"803","endLine":52,"endColumn":3},{"ruleId":"804","severity":1,"message":"805","line":20,"column":3,"nodeType":"806","messageId":"807","endLine":50,"endColumn":4},{"ruleId":"820","severity":1,"message":"821","line":42,"column":5,"nodeType":"822","messageId":"823","endLine":49,"endColumn":13},{"ruleId":"786","severity":1,"message":"824","line":9,"column":11,"nodeType":"788","messageId":"789","endLine":9,"endColumn":16},{"ruleId":"825","severity":1,"message":"826","line":23,"column":13,"nodeType":"827","endLine":30,"endColumn":4},{"ruleId":"825","severity":1,"message":"828","line":30,"column":6,"nodeType":"829","endLine":30,"endColumn":8,"suggestions":"830"},{"ruleId":"825","severity":1,"message":"831","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":8,"suggestions":"832"},{"ruleId":"792","replacedBy":"833"},{"ruleId":"794","replacedBy":"834"},{"ruleId":"786","severity":1,"message":"835","line":5,"column":3,"nodeType":"788","messageId":"789","endLine":5,"endColumn":12},{"ruleId":"786","severity":1,"message":"836","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":6},{"ruleId":"786","severity":1,"message":"837","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":6},{"ruleId":"786","severity":1,"message":"838","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":9},{"ruleId":"786","severity":1,"message":"839","line":12,"column":16,"nodeType":"788","messageId":"789","endLine":12,"endColumn":24},{"ruleId":"786","severity":1,"message":"840","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":21},{"ruleId":"786","severity":1,"message":"841","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":19},{"ruleId":"786","severity":1,"message":"842","line":21,"column":8,"nodeType":"788","messageId":"789","endLine":21,"endColumn":13},{"ruleId":"786","severity":1,"message":"843","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":24},{"ruleId":"786","severity":1,"message":"844","line":23,"column":8,"nodeType":"788","messageId":"789","endLine":23,"endColumn":24},{"ruleId":"786","severity":1,"message":"845","line":24,"column":28,"nodeType":"788","messageId":"789","endLine":24,"endColumn":33},{"ruleId":"786","severity":1,"message":"846","line":26,"column":28,"nodeType":"788","messageId":"789","endLine":26,"endColumn":40},{"ruleId":"786","severity":1,"message":"847","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":16},{"ruleId":"786","severity":1,"message":"848","line":30,"column":3,"nodeType":"788","messageId":"789","endLine":30,"endColumn":14},{"ruleId":"786","severity":1,"message":"849","line":31,"column":3,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"850","line":32,"column":3,"nodeType":"788","messageId":"789","endLine":32,"endColumn":17},{"ruleId":"786","severity":1,"message":"851","line":33,"column":3,"nodeType":"788","messageId":"789","endLine":33,"endColumn":13},{"ruleId":"786","severity":1,"message":"852","line":34,"column":3,"nodeType":"788","messageId":"789","endLine":34,"endColumn":16},{"ruleId":"786","severity":1,"message":"853","line":35,"column":3,"nodeType":"788","messageId":"789","endLine":35,"endColumn":12},{"ruleId":"786","severity":1,"message":"854","line":40,"column":11,"nodeType":"788","messageId":"789","endLine":40,"endColumn":23},{"ruleId":"825","severity":1,"message":"855","line":62,"column":6,"nodeType":"829","endLine":62,"endColumn":8,"suggestions":"856"},{"ruleId":"825","severity":1,"message":"857","line":32,"column":6,"nodeType":"829","endLine":32,"endColumn":8,"suggestions":"858"},{"ruleId":"786","severity":1,"message":"853","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":12},{"ruleId":"786","severity":1,"message":"859","line":11,"column":8,"nodeType":"788","messageId":"789","endLine":11,"endColumn":23},{"ruleId":"786","severity":1,"message":"860","line":12,"column":8,"nodeType":"788","messageId":"789","endLine":12,"endColumn":17},{"ruleId":"786","severity":1,"message":"861","line":14,"column":10,"nodeType":"788","messageId":"789","endLine":14,"endColumn":19},{"ruleId":"786","severity":1,"message":"862","line":161,"column":10,"nodeType":"788","messageId":"789","endLine":161,"endColumn":23},{"ruleId":"786","severity":1,"message":"863","line":161,"column":25,"nodeType":"788","messageId":"789","endLine":161,"endColumn":41},{"ruleId":"792","replacedBy":"864"},{"ruleId":"794","replacedBy":"865"},{"ruleId":"786","severity":1,"message":"866","line":2,"column":10,"nodeType":"788","messageId":"789","endLine":2,"endColumn":19},{"ruleId":"867","severity":1,"message":"868","line":237,"column":9,"nodeType":"869","messageId":"870","endLine":237,"endColumn":15},{"ruleId":"786","severity":1,"message":"871","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":13},{"ruleId":"801","severity":1,"message":"802","line":22,"column":1,"nodeType":"803","endLine":62,"endColumn":3},{"ruleId":"801","severity":1,"message":"802","line":31,"column":1,"nodeType":"803","endLine":144,"endColumn":3},{"ruleId":"804","severity":1,"message":"805","line":32,"column":3,"nodeType":"806","messageId":"807","endLine":142,"endColumn":4},{"ruleId":"820","severity":1,"message":"821","line":58,"column":5,"nodeType":"822","messageId":"823","endLine":69,"endColumn":6},{"ruleId":"786","severity":1,"message":"872","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":13},{"ruleId":"786","severity":1,"message":"873","line":13,"column":10,"nodeType":"788","messageId":"789","endLine":13,"endColumn":16},{"ruleId":"786","severity":1,"message":"874","line":13,"column":18,"nodeType":"788","messageId":"789","endLine":13,"endColumn":27},{"ruleId":"786","severity":1,"message":"875","line":16,"column":24,"nodeType":"788","messageId":"789","endLine":16,"endColumn":33},{"ruleId":"786","severity":1,"message":"876","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":17},{"ruleId":"786","severity":1,"message":"877","line":31,"column":19,"nodeType":"788","messageId":"789","endLine":31,"endColumn":29},{"ruleId":"825","severity":1,"message":"878","line":61,"column":6,"nodeType":"829","endLine":61,"endColumn":25,"suggestions":"879"},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":2,"column":17,"nodeType":"788","messageId":"789","endLine":2,"endColumn":25},{"ruleId":"825","severity":1,"message":"881","line":18,"column":6,"nodeType":"829","endLine":18,"endColumn":14,"suggestions":"882"},{"ruleId":"825","severity":1,"message":"881","line":18,"column":6,"nodeType":"829","endLine":18,"endColumn":14,"suggestions":"883"},{"ruleId":"825","severity":1,"message":"881","line":18,"column":6,"nodeType":"829","endLine":18,"endColumn":14,"suggestions":"884"},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"885"},{"ruleId":"786","severity":1,"message":"872","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":13},{"ruleId":"825","severity":1,"message":"881","line":27,"column":6,"nodeType":"829","endLine":27,"endColumn":20,"suggestions":"886"},{"ruleId":"887","severity":1,"message":"888","line":33,"column":15,"nodeType":"889","endLine":33,"endColumn":39},{"ruleId":"825","severity":1,"message":"881","line":42,"column":6,"nodeType":"829","endLine":42,"endColumn":14,"suggestions":"890"},{"ruleId":"786","severity":1,"message":"891","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":20},{"ruleId":"786","severity":1,"message":"892","line":3,"column":8,"nodeType":"788","messageId":"789","endLine":3,"endColumn":25},{"ruleId":"786","severity":1,"message":"893","line":2,"column":10,"nodeType":"788","messageId":"789","endLine":2,"endColumn":13},{"ruleId":"786","severity":1,"message":"837","line":2,"column":26,"nodeType":"788","messageId":"789","endLine":2,"endColumn":29},{"ruleId":"786","severity":1,"message":"894","line":2,"column":31,"nodeType":"788","messageId":"789","endLine":2,"endColumn":36},{"ruleId":"786","severity":1,"message":"895","line":4,"column":8,"nodeType":"788","messageId":"789","endLine":4,"endColumn":34},{"ruleId":"786","severity":1,"message":"896","line":5,"column":8,"nodeType":"788","messageId":"789","endLine":5,"endColumn":36},{"ruleId":"786","severity":1,"message":"897","line":6,"column":8,"nodeType":"788","messageId":"789","endLine":6,"endColumn":18},{"ruleId":"786","severity":1,"message":"898","line":7,"column":28,"nodeType":"788","messageId":"789","endLine":7,"endColumn":34},{"ruleId":"786","severity":1,"message":"899","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":26},{"ruleId":"786","severity":1,"message":"880","line":1,"column":28,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"900","line":3,"column":3,"nodeType":"788","messageId":"789","endLine":3,"endColumn":9},{"ruleId":"786","severity":1,"message":"901","line":4,"column":3,"nodeType":"788","messageId":"789","endLine":4,"endColumn":14},{"ruleId":"786","severity":1,"message":"836","line":5,"column":3,"nodeType":"788","messageId":"789","endLine":5,"endColumn":6},{"ruleId":"786","severity":1,"message":"902","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":10},{"ruleId":"786","severity":1,"message":"903","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":7},{"ruleId":"786","severity":1,"message":"838","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":9},{"ruleId":"786","severity":1,"message":"837","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":6},{"ruleId":"786","severity":1,"message":"893","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":6},{"ruleId":"786","severity":1,"message":"790","line":16,"column":23,"nodeType":"788","messageId":"789","endLine":16,"endColumn":34},{"ruleId":"786","severity":1,"message":"904","line":17,"column":8,"nodeType":"788","messageId":"789","endLine":17,"endColumn":14},{"ruleId":"786","severity":1,"message":"817","line":20,"column":8,"nodeType":"788","messageId":"789","endLine":20,"endColumn":16},{"ruleId":"786","severity":1,"message":"905","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"906","line":23,"column":8,"nodeType":"788","messageId":"789","endLine":23,"endColumn":12},{"ruleId":"786","severity":1,"message":"844","line":24,"column":8,"nodeType":"788","messageId":"789","endLine":24,"endColumn":24},{"ruleId":"786","severity":1,"message":"907","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":22},{"ruleId":"786","severity":1,"message":"908","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":20},{"ruleId":"786","severity":1,"message":"909","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":20},{"ruleId":"786","severity":1,"message":"910","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":24},{"ruleId":"786","severity":1,"message":"911","line":36,"column":8,"nodeType":"788","messageId":"789","endLine":36,"endColumn":16},{"ruleId":"786","severity":1,"message":"912","line":37,"column":8,"nodeType":"788","messageId":"789","endLine":37,"endColumn":20},{"ruleId":"786","severity":1,"message":"913","line":38,"column":8,"nodeType":"788","messageId":"789","endLine":38,"endColumn":25},{"ruleId":"786","severity":1,"message":"914","line":39,"column":8,"nodeType":"788","messageId":"789","endLine":39,"endColumn":25},{"ruleId":"786","severity":1,"message":"915","line":40,"column":8,"nodeType":"788","messageId":"789","endLine":40,"endColumn":23},{"ruleId":"786","severity":1,"message":"916","line":41,"column":8,"nodeType":"788","messageId":"789","endLine":41,"endColumn":19},{"ruleId":"786","severity":1,"message":"917","line":42,"column":8,"nodeType":"788","messageId":"789","endLine":42,"endColumn":32},{"ruleId":"786","severity":1,"message":"918","line":43,"column":8,"nodeType":"788","messageId":"789","endLine":43,"endColumn":26},{"ruleId":"786","severity":1,"message":"919","line":44,"column":8,"nodeType":"788","messageId":"789","endLine":44,"endColumn":25},{"ruleId":"786","severity":1,"message":"920","line":52,"column":8,"nodeType":"788","messageId":"789","endLine":52,"endColumn":21},{"ruleId":"786","severity":1,"message":"921","line":53,"column":8,"nodeType":"788","messageId":"789","endLine":53,"endColumn":20},{"ruleId":"786","severity":1,"message":"922","line":59,"column":9,"nodeType":"788","messageId":"789","endLine":59,"endColumn":17},{"ruleId":"786","severity":1,"message":"923","line":61,"column":20,"nodeType":"788","messageId":"789","endLine":61,"endColumn":31},{"ruleId":"786","severity":1,"message":"924","line":67,"column":9,"nodeType":"788","messageId":"789","endLine":67,"endColumn":25},{"ruleId":"925","severity":1,"message":"926","line":128,"column":13,"nodeType":"889","endLine":128,"endColumn":57},{"ruleId":"927","severity":1,"message":"928","line":356,"column":15,"nodeType":"889","endLine":356,"endColumn":18},{"ruleId":"927","severity":1,"message":"928","line":366,"column":17,"nodeType":"889","endLine":366,"endColumn":20},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"904","line":3,"column":8,"nodeType":"788","messageId":"789","endLine":3,"endColumn":14},{"ruleId":"786","severity":1,"message":"929","line":4,"column":10,"nodeType":"788","messageId":"789","endLine":4,"endColumn":14},{"ruleId":"786","severity":1,"message":"866","line":4,"column":24,"nodeType":"788","messageId":"789","endLine":4,"endColumn":33},{"ruleId":"786","severity":1,"message":"837","line":4,"column":35,"nodeType":"788","messageId":"789","endLine":4,"endColumn":38},{"ruleId":"786","severity":1,"message":"893","line":4,"column":40,"nodeType":"788","messageId":"789","endLine":4,"endColumn":43},{"ruleId":"786","severity":1,"message":"842","line":5,"column":8,"nodeType":"788","messageId":"789","endLine":5,"endColumn":13},{"ruleId":"786","severity":1,"message":"930","line":9,"column":8,"nodeType":"788","messageId":"789","endLine":9,"endColumn":18},{"ruleId":"786","severity":1,"message":"931","line":38,"column":10,"nodeType":"788","messageId":"789","endLine":38,"endColumn":15},{"ruleId":"786","severity":1,"message":"932","line":38,"column":17,"nodeType":"788","messageId":"789","endLine":38,"endColumn":25},{"ruleId":"786","severity":1,"message":"933","line":39,"column":10,"nodeType":"788","messageId":"789","endLine":39,"endColumn":18},{"ruleId":"786","severity":1,"message":"934","line":39,"column":20,"nodeType":"788","messageId":"789","endLine":39,"endColumn":31},{"ruleId":"786","severity":1,"message":"935","line":41,"column":10,"nodeType":"788","messageId":"789","endLine":41,"endColumn":20},{"ruleId":"786","severity":1,"message":"936","line":41,"column":22,"nodeType":"788","messageId":"789","endLine":41,"endColumn":35},{"ruleId":"786","severity":1,"message":"937","line":63,"column":9,"nodeType":"788","messageId":"789","endLine":63,"endColumn":15},{"ruleId":"786","severity":1,"message":"938","line":17,"column":10,"nodeType":"788","messageId":"789","endLine":17,"endColumn":20},{"ruleId":"786","severity":1,"message":"939","line":17,"column":22,"nodeType":"788","messageId":"789","endLine":17,"endColumn":35},{"ruleId":"825","severity":1,"message":"940","line":28,"column":6,"nodeType":"829","endLine":28,"endColumn":8,"suggestions":"941"},{"ruleId":"786","severity":1,"message":"942","line":10,"column":8,"nodeType":"788","messageId":"789","endLine":10,"endColumn":29},{"ruleId":"786","severity":1,"message":"943","line":13,"column":10,"nodeType":"788","messageId":"789","endLine":13,"endColumn":31},{"ruleId":"786","severity":1,"message":"944","line":14,"column":8,"nodeType":"788","messageId":"789","endLine":14,"endColumn":20},{"ruleId":"825","severity":1,"message":"857","line":37,"column":6,"nodeType":"829","endLine":37,"endColumn":8,"suggestions":"945"},{"ruleId":"786","severity":1,"message":"946","line":108,"column":9,"nodeType":"788","messageId":"789","endLine":108,"endColumn":28},{"ruleId":"786","severity":1,"message":"899","line":2,"column":17,"nodeType":"788","messageId":"789","endLine":2,"endColumn":26},{"ruleId":"786","severity":1,"message":"947","line":4,"column":10,"nodeType":"788","messageId":"789","endLine":4,"endColumn":24},{"ruleId":"786","severity":1,"message":"922","line":9,"column":9,"nodeType":"788","messageId":"789","endLine":9,"endColumn":17},{"ruleId":"786","severity":1,"message":"948","line":23,"column":9,"nodeType":"788","messageId":"789","endLine":23,"endColumn":14},{"ruleId":"927","severity":1,"message":"928","line":54,"column":17,"nodeType":"889","endLine":54,"endColumn":61},{"ruleId":"927","severity":1,"message":"928","line":57,"column":17,"nodeType":"889","endLine":57,"endColumn":61},{"ruleId":"927","severity":1,"message":"928","line":60,"column":17,"nodeType":"889","endLine":60,"endColumn":61},{"ruleId":"927","severity":1,"message":"928","line":63,"column":17,"nodeType":"889","endLine":63,"endColumn":61},{"ruleId":"927","severity":1,"message":"949","line":104,"column":13,"nodeType":"889","endLine":104,"endColumn":59},{"ruleId":"927","severity":1,"message":"949","line":107,"column":13,"nodeType":"889","endLine":107,"endColumn":59},{"ruleId":"927","severity":1,"message":"949","line":110,"column":13,"nodeType":"889","endLine":110,"endColumn":59},{"ruleId":"927","severity":1,"message":"949","line":113,"column":13,"nodeType":"889","endLine":113,"endColumn":59},{"ruleId":"801","severity":1,"message":"802","line":12,"column":1,"nodeType":"803","endLine":41,"endColumn":3},{"ruleId":"804","severity":1,"message":"805","line":13,"column":3,"nodeType":"806","messageId":"807","endLine":39,"endColumn":4},{"ruleId":"786","severity":1,"message":"902","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":10},{"ruleId":"786","severity":1,"message":"950","line":19,"column":10,"nodeType":"788","messageId":"789","endLine":19,"endColumn":19},{"ruleId":"786","severity":1,"message":"872","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":13},{"ruleId":"786","severity":1,"message":"951","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":30},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":27,"suggestions":"952"},{"ruleId":"786","severity":1,"message":"872","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":13},{"ruleId":"786","severity":1,"message":"953","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":23},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":20,"suggestions":"954"},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"955"},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"956"},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"957"},{"ruleId":"786","severity":1,"message":"958","line":9,"column":10,"nodeType":"788","messageId":"789","endLine":9,"endColumn":29},{"ruleId":"786","severity":1,"message":"839","line":10,"column":16,"nodeType":"788","messageId":"789","endLine":10,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":19,"column":13,"nodeType":"827","endLine":31,"endColumn":4},{"ruleId":"825","severity":1,"message":"959","line":31,"column":6,"nodeType":"829","endLine":31,"endColumn":8,"suggestions":"960"},{"ruleId":"801","severity":1,"message":"802","line":7,"column":1,"nodeType":"803","endLine":19,"endColumn":3},{"ruleId":"801","severity":1,"message":"802","line":10,"column":1,"nodeType":"803","endLine":48,"endColumn":3},{"ruleId":"804","severity":1,"message":"805","line":11,"column":3,"nodeType":"806","messageId":"807","endLine":46,"endColumn":4},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"825","severity":1,"message":"881","line":18,"column":6,"nodeType":"829","endLine":18,"endColumn":14,"suggestions":"961"},{"ruleId":"825","severity":1,"message":"881","line":18,"column":6,"nodeType":"829","endLine":18,"endColumn":14,"suggestions":"962"},{"ruleId":"786","severity":1,"message":"963","line":5,"column":8,"nodeType":"788","messageId":"789","endLine":5,"endColumn":16},{"ruleId":"786","severity":1,"message":"838","line":3,"column":10,"nodeType":"788","messageId":"789","endLine":3,"endColumn":16},{"ruleId":"786","severity":1,"message":"848","line":3,"column":36,"nodeType":"788","messageId":"789","endLine":3,"endColumn":47},{"ruleId":"786","severity":1,"message":"964","line":9,"column":16,"nodeType":"788","messageId":"789","endLine":9,"endColumn":23},{"ruleId":"786","severity":1,"message":"965","line":25,"column":17,"nodeType":"788","messageId":"789","endLine":25,"endColumn":25},{"ruleId":"786","severity":1,"message":"966","line":51,"column":9,"nodeType":"788","messageId":"789","endLine":51,"endColumn":20},{"ruleId":"786","severity":1,"message":"967","line":60,"column":9,"nodeType":"788","messageId":"789","endLine":60,"endColumn":21},{"ruleId":"786","severity":1,"message":"848","line":1,"column":36,"nodeType":"788","messageId":"789","endLine":1,"endColumn":47},{"ruleId":"786","severity":1,"message":"968","line":2,"column":10,"nodeType":"788","messageId":"789","endLine":2,"endColumn":18},{"ruleId":"786","severity":1,"message":"891","line":9,"column":8,"nodeType":"788","messageId":"789","endLine":9,"endColumn":20},{"ruleId":"825","severity":1,"message":"855","line":24,"column":6,"nodeType":"829","endLine":24,"endColumn":8,"suggestions":"969"},{"ruleId":"786","severity":1,"message":"872","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":13},{"ruleId":"825","severity":1,"message":"881","line":52,"column":6,"nodeType":"829","endLine":52,"endColumn":21,"suggestions":"970"},{"ruleId":"786","severity":1,"message":"971","line":13,"column":8,"nodeType":"788","messageId":"789","endLine":13,"endColumn":14},{"ruleId":"786","severity":1,"message":"972","line":14,"column":8,"nodeType":"788","messageId":"789","endLine":14,"endColumn":16},{"ruleId":"786","severity":1,"message":"973","line":16,"column":8,"nodeType":"788","messageId":"789","endLine":16,"endColumn":13},{"ruleId":"786","severity":1,"message":"974","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":25},{"ruleId":"786","severity":1,"message":"975","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":23},{"ruleId":"786","severity":1,"message":"976","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":22},{"ruleId":"786","severity":1,"message":"977","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":25},{"ruleId":"786","severity":1,"message":"978","line":31,"column":8,"nodeType":"788","messageId":"789","endLine":31,"endColumn":24},{"ruleId":"786","severity":1,"message":"979","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":24},{"ruleId":"825","severity":1,"message":"855","line":47,"column":6,"nodeType":"829","endLine":47,"endColumn":12,"suggestions":"980"},{"ruleId":"801","severity":1,"message":"802","line":25,"column":1,"nodeType":"803","endLine":26,"endColumn":81},{"ruleId":"801","severity":1,"message":"802","line":14,"column":1,"nodeType":"803","endLine":119,"endColumn":3},{"ruleId":"825","severity":1,"message":"881","line":18,"column":6,"nodeType":"829","endLine":18,"endColumn":14,"suggestions":"981"},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"982"},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"983"},{"ruleId":"786","severity":1,"message":"984","line":1,"column":7,"nodeType":"788","messageId":"789","endLine":1,"endColumn":21},{"ruleId":"786","severity":1,"message":"891","line":2,"column":8,"nodeType":"788","messageId":"789","endLine":2,"endColumn":20},{"ruleId":"786","severity":1,"message":"892","line":3,"column":8,"nodeType":"788","messageId":"789","endLine":3,"endColumn":25},{"ruleId":"786","severity":1,"message":"985","line":11,"column":10,"nodeType":"788","messageId":"789","endLine":11,"endColumn":16},{"ruleId":"786","severity":1,"message":"838","line":3,"column":10,"nodeType":"788","messageId":"789","endLine":3,"endColumn":16},{"ruleId":"786","severity":1,"message":"848","line":3,"column":36,"nodeType":"788","messageId":"789","endLine":3,"endColumn":47},{"ruleId":"786","severity":1,"message":"964","line":8,"column":16,"nodeType":"788","messageId":"789","endLine":8,"endColumn":23},{"ruleId":"786","severity":1,"message":"965","line":24,"column":17,"nodeType":"788","messageId":"789","endLine":24,"endColumn":25},{"ruleId":"786","severity":1,"message":"966","line":50,"column":9,"nodeType":"788","messageId":"789","endLine":50,"endColumn":20},{"ruleId":"786","severity":1,"message":"967","line":59,"column":9,"nodeType":"788","messageId":"789","endLine":59,"endColumn":21},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"825","severity":1,"message":"881","line":22,"column":6,"nodeType":"829","endLine":22,"endColumn":14,"suggestions":"986"},{"ruleId":"786","severity":1,"message":"899","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":26},{"ruleId":"786","severity":1,"message":"838","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"842","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":8},{"ruleId":"786","severity":1,"message":"987","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":9},{"ruleId":"801","severity":1,"message":"802","line":13,"column":1,"nodeType":"803","endLine":46,"endColumn":3},{"ruleId":"786","severity":1,"message":"872","line":1,"column":8,"nodeType":"788","messageId":"789","endLine":1,"endColumn":13},{"ruleId":"825","severity":1,"message":"881","line":28,"column":6,"nodeType":"829","endLine":28,"endColumn":14,"suggestions":"988"},{"ruleId":"786","severity":1,"message":"880","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'authConstants' is defined but never used.","no-native-reassign",["989"],"no-negated-in-lhs",["990"],"'urls' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["989"],["990"],"'AccountCircleRoundedIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Tooltip' is defined but never used.","'changeActive' is assigned a value but never used.",["989"],["990"],"'setRangeDates' is assigned a value but never used.","'HomeIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["991"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.state'. Either include them or remove the dependency array.",["992"],["989"],["990"],"'Jumbotron' is defined but never used.","'Nav' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","'fetchCatalogueData' is defined but never used.","'fetchItemDetails' is defined but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'Arrow' is defined but never used.","'ShoppingCart' is defined but never used.","'HomePage' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'TextField' is defined but never used.","'authenticate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["993"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["994"],"'CheckCircleIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'translate' is defined but never used.","'currentSlider' is assigned a value but never used.","'setCurrentSlider' is assigned a value but never used.",["989"],["990"],"'Container' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'axios' is defined but never used.","'React' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataList', 'filteredList', and 'searchFilter'. Either include them or remove the dependency array. You can also do a functional update 'setFilteredList(f => ...)' if you only need 'filteredList' in the 'setFilteredList' call.",["995"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'handleSubmission' and 'isSubmitting'. Either include them or remove the dependency array. If 'handleSubmission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["996"],["997"],["998"],["999"],["1000"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["1001"],"'ItemListCard' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Col' is defined but never used.","'Table' is defined but never used.","'KeyboardArrowUpRoundedIcon' is defined but never used.","'KeyboardArrowDownRoundedIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Delete' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'Layout' is defined but never used.","'CloseIcon' is defined but never used.","'Logo' is defined but never used.","'Miccroorganism' is defined but never used.","'AboutUsImage' is defined but never used.","'ObjectSlider' is defined but never used.","'QueryBuilderIcon' is defined but never used.","'Timeline' is defined but never used.","'TimelineItem' is defined but never used.","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'TimelineContent' is defined but never used.","'TimelineDot' is defined but never used.","'ShoppingCartOutlinedIcon' is defined but never used.","'SearchOutlinedIcon' is defined but never used.","'CloseOutlinedIcon' is defined but never used.","'AwesomeSlider' is defined but never used.","'withAutoplay' is defined but never used.","'dispatch' is assigned a value but never used.","'setViewport' is assigned a value but never used.","'loggedInNavLinks' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Form' is defined but never used.","'PageHeader' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'signUpForm' is assigned a value but never used.","'setSignUpForm' is assigned a value but never used.","'goBack' is assigned a value but never used.","'updateUser' is assigned a value but never used.","'setUpdateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'userID'. Either include them or remove the dependency array.",["1002"],"'AddMicroorganismModal' is defined but never used.","'microorganismTemplate' is defined but never used.","'useCatalogue' is defined but never used.",["1003"],"'microroganismAddRef' is assigned a value but never used.","'forgetPassword' is defined but never used.","'error' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'cartCount' is assigned a value but never used.","'ResetPasswordValidator' is defined but never used.",["1004"],"'SignInValidator' is defined but never used.",["1005"],["1006"],["1007"],["1008"],"'responsiveFontSizes' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["1009"],["1010"],["1011"],"'MailIcon' is defined but never used.","'setData' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'Dropdown' is defined but never used.",["1012"],["1013"],"'Orders' is defined but never used.","'Deposits' is defined but never used.","'Users' is defined but never used.","'DashboardDeposits' is defined but never used.","'DashboardOrders' is defined but never used.","'DashboardUsers' is defined but never used.","'DashboardPayments' is defined but never used.","'DashboardReports' is defined but never used.","'DashboardAddUser' is defined but never used.",["1014"],["1015"],["1016"],["1017"],"'getCurrentDate' is assigned a value but never used.","'Avatar' is defined but never used.",["1018"],"'Select' is defined but never used.",["1019"],"no-global-assign","no-unsafe-negation",{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1030","fix":"1032"},{"desc":"1030","fix":"1033"},{"desc":"1030","fix":"1034"},{"desc":"1035","fix":"1036"},{"desc":"1030","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1026","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1030","fix":"1045"},{"desc":"1030","fix":"1046"},{"desc":"1030","fix":"1047"},{"desc":"1048","fix":"1049"},{"desc":"1030","fix":"1050"},{"desc":"1030","fix":"1051"},{"desc":"1024","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1030","fix":"1057"},{"desc":"1030","fix":"1058"},{"desc":"1030","fix":"1059"},{"desc":"1030","fix":"1060"},{"desc":"1030","fix":"1061"},"Update the dependencies array to be: [id]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [dispatch, props.location.state]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [dispatch]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [dispatch, token]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [applySearchFilter, dataList, filteredList, searchFilter]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [errors, handleSubmission, isSubmitting]",{"range":"1072","text":"1073"},{"range":"1074","text":"1073"},{"range":"1075","text":"1073"},{"range":"1076","text":"1073"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signUpErrors]",{"range":"1077","text":"1078"},{"range":"1079","text":"1073"},"Update the dependencies array to be: [dispatch, token, userID]",{"range":"1080","text":"1081"},{"range":"1082","text":"1069"},"Update the dependencies array to be: [handleSubmission, isSubmitting, resetPasswordErrors]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signInErrors]",{"range":"1085","text":"1086"},{"range":"1087","text":"1073"},{"range":"1088","text":"1073"},{"range":"1089","text":"1073"},"Update the dependencies array to be: [token]",{"range":"1090","text":"1091"},{"range":"1092","text":"1073"},{"range":"1093","text":"1073"},{"range":"1094","text":"1067"},"Update the dependencies array to be: [addUserErrors, handleSubmission, isSubmitting]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [auth, dispatch]",{"range":"1097","text":"1098"},{"range":"1099","text":"1073"},{"range":"1100","text":"1073"},{"range":"1101","text":"1073"},{"range":"1102","text":"1073"},{"range":"1103","text":"1073"},[931,933],"[id]",[777,779],"[dispatch, props.location.state]",[1858,1860],"[dispatch]",[1304,1306],"[dispatch, token]",[1735,1754],"[applySearchFilter, dataList, filteredList, searchFilter]",[540,548],"[errors, handleSubmission, isSubmitting]",[540,548],[540,548],[561,569],[739,753],"[handleSubmission, isSubmitting, signUpErrors]",[1144,1152],[1104,1106],"[dispatch, token, userID]",[1376,1378],[736,757],"[handleSubmission, isSubmitting, resetPasswordErrors]",[657,671],"[handleSubmission, isSubmitting, signInErrors]",[558,566],[558,566],[567,575],[1157,1159],"[token]",[543,551],[540,548],[971,973],[1701,1716],"[addUserErrors, handleSubmission, isSubmitting]",[2440,2446],"[auth, dispatch]",[543,551],[558,566],[567,575],[561,569],[704,712]]