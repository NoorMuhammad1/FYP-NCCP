[{"E:\\Study\\FYP\\Project\\front-end\\src\\index.js":"1","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js":"2","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\HomePage\\index.js":"3","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Microorganism\\index.js":"4","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Details\\index.js":"5","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Deposits\\index.js":"6","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js":"7","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Cart\\index.js":"8","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardPayments\\index.js":"9","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardReports\\index.js":"10","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js":"11","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardUsers\\index.js":"12","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpValidator.js":"13","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInValidator.js":"14","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js":"15","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js":"16","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js":"17","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js":"18","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js":"19","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js":"20","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\cart.reducer.js":"21","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\catalogue.reducers.js":"22","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemListCard\\index.js":"23","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DropDown\\index.js":"24","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\sidebardata.js":"25","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\auth.actions.js":"26","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js":"27","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js":"28","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js":"29","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js":"30","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js":"31","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js":"32","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js":"33","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Logo\\index.js":"34","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js":"35","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js":"36","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js":"37","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js":"38","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js":"39","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js":"40","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js":"41","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js":"42","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js":"43","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js":"44","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js":"45","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\index.js":"46","E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\axios.js":"47","E:\\Study\\FYP\\Project\\front-end\\src\\store\\index.js":"48","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js":"49","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js":"50","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\index.js":"51","E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js":"52","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\index.js":"53","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Orders\\index.js":"54","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\index.js":"55","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js":"56","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\index.js":"57","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDetails\\index.js":"58","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddUserForm\\index.js":"59","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpValidator.js":"60","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js":"61","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js":"62","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js":"63","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\index.js":"64","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js":"65","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\user.reducer.js":"66","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SearchBar\\index.js":"67","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js":"68","E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositItemList\\index.js":"69","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js":"70","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js":"71","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js":"72","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddMicroorganismModal\\index.js":"73","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js":"74","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js":"75","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js":"76","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js":"77","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js":"78","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js":"79","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js":"80","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js":"81","E:\\Study\\FYP\\Project\\front-end\\src\\components\\TagInput\\index.js":"82","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\index.js":"83","E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Button\\Button.js":"84","E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js":"85","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Users\\index.js":"86","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js":"87","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js":"88","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js":"89","E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Input\\input.js":"90","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\cart.actions.js":"91","E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\templates.js":"92","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\signup.reducers.js":"93","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\itemInfo.reducer.js":"94","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js":"95","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js":"96","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js":"97","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js":"98","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js":"99","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js":"100","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Status\\index.js":"101","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js":"102","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\User\\index.js":"103","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js":"104","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\catalogue.actions.js":"105","E:\\Study\\FYP\\Project\\front-end\\src\\components\\PageHeader\\index.js":"106","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js":"107","E:\\Study\\FYP\\Project\\front-end\\src\\server_urls.js\\index.js":"108","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js":"109","E:\\Study\\FYP\\Project\\front-end\\src\\components\\OrderItemList\\index.js":"110","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\ResponseModal\\index.js":"111","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js":"112","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js":"113","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js":"114","E:\\Study\\FYP\\Project\\front-end\\src\\App.js":"115","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardOrders\\index.js":"116","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\EmailVerified\\index.js":"117","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js":"118","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js":"119","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js":"120","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js":"121","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js":"122","E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js":"123","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\index.js":"124","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\useFormUserSettings.js":"125","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\userSettingsValidator.js":"126","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js":"127","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js":"128"},{"size":730,"mtime":1609760640859,"results":"129","hashOfConfig":"130"},{"size":7571,"mtime":1610028026504,"results":"131","hashOfConfig":"130"},{"size":19426,"mtime":1616415939032,"results":"132","hashOfConfig":"130"},{"size":200,"mtime":1610703340036,"results":"133","hashOfConfig":"130"},{"size":2387,"mtime":1615154773802,"results":"134","hashOfConfig":"130"},{"size":275,"mtime":1614933751197,"results":"135","hashOfConfig":"130"},{"size":9161,"mtime":1618426690505,"results":"136","hashOfConfig":"130"},{"size":3391,"mtime":1615172980341,"results":"137","hashOfConfig":"138"},{"size":311,"mtime":1615226256945,"results":"139","hashOfConfig":"130"},{"size":253,"mtime":1615226310899,"results":"140","hashOfConfig":"130"},{"size":12758,"mtime":1615226580618,"results":"141","hashOfConfig":"130"},{"size":4843,"mtime":1616415938848,"results":"142","hashOfConfig":"130"},{"size":1688,"mtime":1614295139760,"results":"143","hashOfConfig":"130"},{"size":748,"mtime":1614271165695,"results":"144","hashOfConfig":"130"},{"size":960,"mtime":1614936972510,"results":"145","hashOfConfig":"130"},{"size":1735,"mtime":1615116735436,"results":"146","hashOfConfig":"138"},{"size":705,"mtime":1614352234225,"results":"147","hashOfConfig":"130"},{"size":6062,"mtime":1618052484767,"results":"148","hashOfConfig":"130"},{"size":961,"mtime":1611325418573,"results":"149","hashOfConfig":"130"},{"size":386,"mtime":1614936932140,"results":"150","hashOfConfig":"130"},{"size":2818,"mtime":1613556271952,"results":"151","hashOfConfig":"130"},{"size":3175,"mtime":1612234828088,"results":"152","hashOfConfig":"130"},{"size":152,"mtime":1614951402830,"results":"153","hashOfConfig":"138"},{"size":1188,"mtime":1614981659971,"results":"154","hashOfConfig":"130"},{"size":1432,"mtime":1616415938828,"results":"155","hashOfConfig":"130"},{"size":1779,"mtime":1615224908191,"results":"156","hashOfConfig":"130"},{"size":4204,"mtime":1612099911161,"results":"157","hashOfConfig":"130"},{"size":3041,"mtime":1612089178067,"results":"158","hashOfConfig":"130"},{"size":1512,"mtime":1612089344923,"results":"159","hashOfConfig":"130"},{"size":1107,"mtime":1612099334005,"results":"160","hashOfConfig":"138"},{"size":2554,"mtime":1612096116912,"results":"161","hashOfConfig":"130"},{"size":1630,"mtime":1612162438518,"results":"162","hashOfConfig":"130"},{"size":6484,"mtime":1612105057163,"results":"163","hashOfConfig":"130"},{"size":209,"mtime":1613760444923,"results":"164","hashOfConfig":"130"},{"size":354,"mtime":1612088880577,"results":"165","hashOfConfig":"138"},{"size":774,"mtime":1612081649405,"results":"166","hashOfConfig":"138"},{"size":774,"mtime":1612093359239,"results":"167","hashOfConfig":"130"},{"size":343,"mtime":1612089355765,"results":"168","hashOfConfig":"130"},{"size":365,"mtime":1612096387800,"results":"169","hashOfConfig":"130"},{"size":345,"mtime":1612096115416,"results":"170","hashOfConfig":"130"},{"size":230,"mtime":1612099676754,"results":"171","hashOfConfig":"138"},{"size":770,"mtime":1612094125839,"results":"172","hashOfConfig":"130"},{"size":1429,"mtime":1612096412221,"results":"173","hashOfConfig":"138"},{"size":770,"mtime":1612156927091,"results":"174","hashOfConfig":"138"},{"size":1652,"mtime":1611504892762,"results":"175","hashOfConfig":"130"},{"size":641,"mtime":1611497074412,"results":"176","hashOfConfig":"130"},{"size":1196,"mtime":1616597371762,"results":"177","hashOfConfig":"138"},{"size":1229,"mtime":1611219496629,"results":"178","hashOfConfig":"130"},{"size":12481,"mtime":1614964268739,"results":"179","hashOfConfig":"130"},{"size":281,"mtime":1614933608662,"results":"180","hashOfConfig":"130"},{"size":25776,"mtime":1614933393627,"results":"181","hashOfConfig":"130"},{"size":619,"mtime":1611212907524,"results":"182","hashOfConfig":"130"},{"size":33,"mtime":1609760109116,"results":"183","hashOfConfig":"130"},{"size":258,"mtime":1610517428921,"results":"184","hashOfConfig":"130"},{"size":5570,"mtime":1612352457172,"results":"185","hashOfConfig":"130"},{"size":2761,"mtime":1614370591487,"results":"186","hashOfConfig":"130"},{"size":6059,"mtime":1614370693228,"results":"187","hashOfConfig":"130"},{"size":16141,"mtime":1616415938847,"results":"188","hashOfConfig":"130"},{"size":172,"mtime":1612365106669,"results":"189","hashOfConfig":"130"},{"size":1528,"mtime":1610000731423,"results":"190","hashOfConfig":"130"},{"size":1016,"mtime":1614295192475,"results":"191","hashOfConfig":"130"},{"size":934,"mtime":1614203385289,"results":"192","hashOfConfig":"130"},{"size":2614,"mtime":1615152111026,"results":"193","hashOfConfig":"130"},{"size":1623,"mtime":1616415938399,"results":"194","hashOfConfig":"130"},{"size":539,"mtime":1612331046077,"results":"195","hashOfConfig":"130"},{"size":3476,"mtime":1615151896142,"results":"196","hashOfConfig":"130"},{"size":921,"mtime":1614951035192,"results":"197","hashOfConfig":"130"},{"size":1307,"mtime":1618433692377,"results":"198","hashOfConfig":"130"},{"size":3344,"mtime":1615405130500,"results":"199","hashOfConfig":"130"},{"size":1834,"mtime":1611594161844,"results":"200","hashOfConfig":"130"},{"size":6297,"mtime":1612093815090,"results":"201","hashOfConfig":"130"},{"size":3514,"mtime":1612099729393,"results":"202","hashOfConfig":"130"},{"size":754,"mtime":1611761863125,"results":"203","hashOfConfig":"130"},{"size":774,"mtime":1612087480651,"results":"204","hashOfConfig":"130"},{"size":770,"mtime":1612088989396,"results":"205","hashOfConfig":"130"},{"size":369,"mtime":1612099856264,"results":"206","hashOfConfig":"130"},{"size":649,"mtime":1612087367143,"results":"207","hashOfConfig":"130"},{"size":802,"mtime":1612099703576,"results":"208","hashOfConfig":"130"},{"size":1929,"mtime":1611934862527,"results":"209","hashOfConfig":"130"},{"size":794,"mtime":1612099149958,"results":"210","hashOfConfig":"130"},{"size":791,"mtime":1612081099560,"results":"211","hashOfConfig":"130"},{"size":1413,"mtime":1612105229810,"results":"212","hashOfConfig":"130"},{"size":7765,"mtime":1618435489539,"results":"213","hashOfConfig":"130"},{"size":337,"mtime":1616599482793,"results":"214","hashOfConfig":"130"},{"size":362,"mtime":499162500000,"results":"215","hashOfConfig":"130"},{"size":5823,"mtime":1612366309019,"results":"216","hashOfConfig":"130"},{"size":2718,"mtime":1615154659999,"results":"217","hashOfConfig":"130"},{"size":3960,"mtime":1615406098948,"results":"218","hashOfConfig":"130"},{"size":3663,"mtime":1614302803162,"results":"219","hashOfConfig":"130"},{"size":410,"mtime":1610940204809,"results":"220","hashOfConfig":"130"},{"size":838,"mtime":1613556268005,"results":"221","hashOfConfig":"130"},{"size":161,"mtime":1611765866106,"results":"222","hashOfConfig":"130"},{"size":1298,"mtime":1614299856936,"results":"223","hashOfConfig":"130"},{"size":1057,"mtime":1610303889817,"results":"224","hashOfConfig":"130"},{"size":2190,"mtime":1612096389248,"results":"225","hashOfConfig":"130"},{"size":12264,"mtime":1612095907628,"results":"226","hashOfConfig":"130"},{"size":4181,"mtime":1615225728963,"results":"227","hashOfConfig":"130"},{"size":794,"mtime":1612095969407,"results":"228","hashOfConfig":"130"},{"size":790,"mtime":1612081405740,"results":"229","hashOfConfig":"130"},{"size":343,"mtime":1612093014041,"results":"230","hashOfConfig":"130"},{"size":844,"mtime":1616415938845,"results":"231","hashOfConfig":"130"},{"size":1596,"mtime":1611577118003,"results":"232","hashOfConfig":"130"},{"size":5307,"mtime":1612364728842,"results":"233","hashOfConfig":"130"},{"size":927,"mtime":1609997157202,"results":"234","hashOfConfig":"130"},{"size":4628,"mtime":1614188373409,"results":"235","hashOfConfig":"130"},{"size":5917,"mtime":1614208315155,"results":"236","hashOfConfig":"130"},{"size":2622,"mtime":1618433634927,"results":"237","hashOfConfig":"130"},{"size":383,"mtime":1610948684148,"results":"238","hashOfConfig":"130"},{"size":1067,"mtime":1614352819852,"results":"239","hashOfConfig":"130"},{"size":3495,"mtime":1615392101937,"results":"240","hashOfConfig":"130"},{"size":741,"mtime":1611579988023,"results":"241","hashOfConfig":"130"},{"size":3950,"mtime":1612088856001,"results":"242","hashOfConfig":"130"},{"size":339,"mtime":1612089188318,"results":"243","hashOfConfig":"130"},{"size":324,"mtime":1611938427297,"results":"244","hashOfConfig":"130"},{"size":4936,"mtime":1615227016510,"results":"245","hashOfConfig":"130"},{"size":4262,"mtime":1615389926332,"results":"246","hashOfConfig":"130"},{"size":2390,"mtime":1614304414037,"results":"247","hashOfConfig":"130"},{"size":745,"mtime":1611661892689,"results":"248","hashOfConfig":"130"},{"size":8500,"mtime":1612157285641,"results":"249","hashOfConfig":"130"},{"size":5466,"mtime":1612158903313,"results":"250","hashOfConfig":"130"},{"size":341,"mtime":1612093363071,"results":"251","hashOfConfig":"130"},{"size":790,"mtime":1612089286801,"results":"252","hashOfConfig":"130"},{"size":1138,"mtime":1611334830974,"results":"253","hashOfConfig":"130"},{"size":6085,"mtime":1611505426679,"results":"254","hashOfConfig":"130"},{"size":1515,"mtime":1618435213523,"results":"255","hashOfConfig":"130"},{"size":995,"mtime":1618405917391,"results":"256","hashOfConfig":"130"},{"size":4514,"mtime":1618435638382,"results":"257","hashOfConfig":"130"},{"size":5702,"mtime":1612093270364,"results":"258","hashOfConfig":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},"v6ki43",{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"261"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"261"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"261"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"275","messages":"276","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a9qnim",{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"306"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"261"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"261"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"327"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"327"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"261"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"261"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"261"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"261"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"261"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"261"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"261"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"261"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"283"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"261"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"306"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"283"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"327"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"261"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"306"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"261"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"306"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"261"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"261"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"261"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"306"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"306"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"306"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"261"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"306"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"261"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"261"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"327"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"261"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"261"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"327"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"327"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"550","messages":"551","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Study\\FYP\\Project\\front-end\\src\\index.js",[],["562","563"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\index.js",["564"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useForm from \"./SignUpUseForm\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport { signup } from \"../../actions/signup.actions\";\r\nconst Signup = (props) => {\r\n  const signupStore = useSelector((state) => state.sign);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmission = () => {\r\n    console.log(\"handling submission\");\r\n    const userData = {\r\n      ...value,\r\n      role: \"external\",\r\n    };\r\n    dispatch(signup(userData));\r\n  };\r\n\r\n  const { value, handleSubmit, updateValue, errors } = useForm(\r\n    handleSubmission,\r\n    SignUpValidator\r\n  );\r\n\r\n  if (signupStore.registered) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              {signupStore.error.code > 300 && (\r\n                <h2>{signupStore.error.message}</h2>\r\n              )}\r\n              <Form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"first_name\"\r\n                      label=\"Fristname\"\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      value={value.firstname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Firstname\"\r\n                    />\r\n                    {errors.firstname && <p>{errors.firstname}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"last_name\"\r\n                      label=\"Lastname\"\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      value={value.lastname}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Lastname\"\r\n                    />\r\n                    {errors.lastname && <p>{errors.lastname}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"username\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      value={value.username}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"username\"\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={value.email}\r\n                      onChange={(e) => updateValue(e)}\r\n                      placeholder=\"Email\"\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <Form.Label>What type of user are you:</Form.Label>\r\n                    <div key={`default-radio`} className=\"mb-3\">\r\n                      <Form.Check\r\n                        label=\"Student\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-1`}\r\n                        name=\"user-type\"\r\n                        value=\"Student\"\r\n                        checked={value.type === \"Student\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Research Institute Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-2`}\r\n                        name=\"user-type\"\r\n                        value=\"ResearchInstituteRepresentative\"\r\n                        checked={\r\n                          value.type === \"ResearchInstituteRepresentative\"\r\n                        }\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Industry Representative\"\r\n                        type=\"radio\"\r\n                        id={`default-radio-3`}\r\n                        name=\"user-type\"\r\n                        value=\"IndustryRepresentative\"\r\n                        checked={value.type === \"IndustryRepresentative\"}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Input\r\n                      id=\"associated-institute-name\"\r\n                      label=\"Associated Institute Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Institute name\"\r\n                      name=\"affiliation\"\r\n                      value={value.affiliation}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.affiliation && <p>{errors.affiliation}</p>}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Form.Group controlId=\"description-text-area\">\r\n                      <Form.Label>Description (of what you do)</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={value.description}\r\n                        onChange={(e) => updateValue(e)}\r\n                      />\r\n                      {errors.description && <p>{errors.description}</p>}\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      value={value.password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                  </Col>\r\n                  {errors.password && <p>{errors.password}</p>}\r\n                  <Col md={6}>\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      name=\"confirm_password\"\r\n                      value={value.confirm_password}\r\n                      onChange={(e) => updateValue(e)}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <p>{errors.confirm_password}</p>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={(e) => handleSubmit(e)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\HomePage\\index.js",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  NavLink,\r\n  Carousel,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\n//import SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n// import \"../HomePage/index.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Logo from \"../../components/Logo\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Bacteria from \"./Images/bacteria.jpg\";\r\nimport Miccroorganism from \"./Images/hqdefault.jpg\";\r\nimport Bacteria2 from \"./Images/bacteria-2.jpg\";\r\nimport AboutUsImage from \"./Images/about-us-image.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ObjectSlider from \"../../components/ObjectSlider\";\r\n\r\nimport \"./style.css\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\n\r\nimport AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [viewport, setViewport] = React.useState({\r\n    latitude: 33.678403942756674,\r\n    longitude: 73.13901040682869,\r\n    zoom: 15,\r\n  });\r\n\r\n  const loggedInNavLinks = () => {\r\n    return (\r\n      <>\r\n        <DropdownButton title=\"options\">\r\n          <Dropdown.Item>Item 1</Dropdown.Item>\r\n          <Dropdown.Item>Item 2</Dropdown.Item>\r\n        </DropdownButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // const products = [\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  //   { category: \"Fungi\", samples: 553 },\r\n  //   { category: \"Bactaria\", samples: 200 },\r\n  // ];\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n      <div id=\"hero-div\" className=\"hero-div\">\r\n        <Container>\r\n          {/* {searchBarShow ? (\r\n            <div className=\"search-box\">\r\n              <input placeholder=\"Enter Keyword\" />\r\n            </div>\r\n          ) : null} */}\r\n        </Container>\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000} className=\"carousel-item\">\r\n            <img\r\n              src={Bacteria2}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h1>Welcome</h1>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img\r\n              src={Bacteria}\r\n              alt=\"Bacteria img\"\r\n              className=\"carousel-images\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-data\">\r\n              <h1>Welcome to</h1>\r\n              <h1>National Culture Collection</h1>\r\n              <h1>Pakistan (NCCP)</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n\r\n      <div id=\"about-us\" className=\"about-us-div\">\r\n        <Container className=\"about-us-content\">\r\n          <div className=\"about-us-image\">\r\n            <img src={Bacteria2} alt=\"about-us-image\" />\r\n          </div>\r\n          <div className=\"about-us-details\">\r\n            <div className=\"about-us-title\">\r\n              <h5>ABOUT US</h5>\r\n              <h2>\r\n                We are the leading institute for microorganism reasearch in\r\n                Pakistan\r\n              </h2>\r\n            </div>\r\n            <div className=\"about-us-description\">\r\n              NCCP plays an important role in offering services not only to\r\n              preserve microorganisms using techniques that maintain viability,\r\n              purity, and important characteristics of microorganisms, but also\r\n              to supply high quality microorganisms for use in teaching,\r\n              research and industrial applications.\r\n            </div>\r\n            {/* <div className=\"about-us-featured-list\">\r\n              <Timeline>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Eat</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Code</TimelineContent>\r\n                </TimelineItem>\r\n                <TimelineItem>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>Sleep</TimelineContent>\r\n                </TimelineItem>\r\n              </Timeline>\r\n            </div> */}\r\n            <div className=\"about-us-featured-list\">\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">01</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Plant growth promoting microbess</h5>\r\n                  <p>\r\n                    Isolation, identification and molecular characterization of\r\n                    plant growth promoting microbes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">02</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Heavy metal tolerant bacteria</h5>\r\n                  <p>\r\n                    solation, identification and characterization of heavy metal\r\n                    tolerant bacteria for bioremediation of contaminated soil.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"about-us-featured-item\">\r\n                <div className=\"about-us-featured-item-icon\">\r\n                  <div className=\"icon\">03</div>\r\n                </div>\r\n                <div className=\"about-us-featured-item-detials\">\r\n                  <h5>Halotolerant rhizobacteria </h5>\r\n                  <p>\r\n                    Identification and characterization of halotolerant\r\n                    rhizobacteria containing ACC-deaminase, for growth promotion\r\n                    of Phaseolus vulgaris L. under salt stress\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"achievements\" className=\"achievements-div\">\r\n        <Container className=\"achievement-content\">\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublishIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3 onClick={(e) => alert(\"odsfjo\")}> 40+</h3>\r\n              <h4>Publications</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Accomplishment</h3>\r\n              <h4>Women in agriculture forum</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <StarsIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>Achievement</h3>\r\n              <h4>Association of Farmers association</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"achievement\">\r\n            <div className=\"achievement-icon\">\r\n              <PublicIcon />\r\n            </div>\r\n            <div className=\"achievement-details\">\r\n              <h3>81+</h3>\r\n              <h4>International linkages</h4>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div id=\"services\" className=\"services\">\r\n        <h5>OUR SERVICES</h5>\r\n        <h2>Explore Our Main Services</h2>\r\n        <div className=\"services-tag\">\r\n          <Container className=\"services-content\">\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Order</h5>\r\n                <p>Order some things from us</p>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Deposit</h5>\r\n                <p>Deposit some things from us</p>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"/catalogue\">\r\n              <div className=\"service\">\r\n                <MenuRoundedIcon style={{ fontSize: \"40px\", fill: \"white\" }} />\r\n                <h5>Resources</h5>\r\n                <p>Seek some things from us</p>\r\n              </div>\r\n            </Link>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"location\" className=\"location\">\r\n        <div className=\"location-heading\">\r\n          <h5>Where are we</h5>\r\n          <h2>Our Current Location</h2>\r\n        </div>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          width=\"100%\"\r\n          height=\"450px\"\r\n          mapboxApiAccessToken={`pk.eyJ1IjoiemFpbm5vb3IwMzUwMjAiLCJhIjoiY2tsZ2ZubG80MndtdDJvbnAwYnVya2tjZiJ9.r49QIKppAmNWiDhexQhQTw`}\r\n          mapStyle=\"mapbox://styles/zainnoor035020/cklgg7lq54jp617meh87g9vqi\"\r\n        >\r\n          <Marker longitude={viewport.longitude} latitude={viewport.latitude}>\r\n            <LocationOnIcon fontSize=\"large\" color=\"blue\" />\r\n          </Marker>\r\n          <div className=\"map-detials\">\r\n            <Container className=\"map-content\">\r\n              <h3>\r\n                Park Rd, National Agricultural Research Center, Islamabad,\r\n                Islamabad Capital Territory, Pakistan\r\n              </h3>\r\n            </Container>\r\n          </div>\r\n        </ReactMapGL>\r\n        {/* <Container className=\"location-content\">\r\n          <div className=\"location-map\">\r\n           \r\n          </div>\r\n          {/* <div className=\"location-details\">Details</div> */}\r\n        {/* </Container> */}\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <Container className=\"footer-content\">\r\n          <div className=\"first-footer\">\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <LocationOnOutlinedIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Address</h5>\r\n                <p>National Agricultural Research Center, Islamabad</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <PhoneIcon />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Contact Number</h5>\r\n                <p>+92335 6291805</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n              <div className=\"footer-contact-icon\">\r\n                <EmailOutlined />\r\n              </div>\r\n              <div className=\"footer-details\">\r\n                <h5>Email</h5>\r\n                <p>zainnoor6035020@gmail.com</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"second-footer\">\r\n            <div className=\"second-footer-detail-box\">\r\n              <div>Logo</div>\r\n              <p>\r\n                NCCP plays an important role in offering services not only to\r\n                preserve microorganisms using techniques that maintain\r\n                viability, purity, and important characteristics of\r\n                microorganisms, but also to supply high quality microorganisms\r\n                for use in teaching, research and industrial applications.\r\n              </p>\r\n              <a>Read More!</a>\r\n            </div>\r\n            <div className=\"second-footer-useful-links-box\">\r\n              <h3>Useful Links</h3>\r\n              <div className=\"useful-links-div\">\r\n                <a href=\"#hero-div\">Home</a>\r\n                <a href=\"#about-us\">About Us</a>\r\n                <a href=\"#achievements\">Achievement</a>\r\n                <a href=\"#services\">Services</a>\r\n                <a href=\"#location\">Current Location</a>\r\n                <a>Cart</a>\r\n                {/* <a>- Home</a> */}\r\n                {/* <a>- Home</a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"third-footer\">\r\n            <div>Copyright</div>\r\n            <div>social links</div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n        <div className=\"sidebar-upper-div\">\r\n          <div className=\"sidebar-upper-div-options\">\r\n            <HomeIcon fontSize=\"large\" />\r\n            <span>Sign In</span>\r\n          </div>\r\n          <CloseIcon onClick={(e) => setSideBarShow(false)} />\r\n        </div>\r\n        <div className=\"sidebar-links\">\r\n          <ul className=\"sidebar-links-list\">\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Order</a>\r\n            </li>\r\n            <li className=\"sidebar-links-list-item\">\r\n              <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebar-footer\">\r\n          <ul className=\"sidebar-footer-list\">\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n            <li className=\"sidebar-footer-list-items\">\r\n              <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"header-logo\">\r\n          <h1>NCCP</h1>\r\n        </div>\r\n        <div className=\"header-content\">\r\n          <div className=\"menu-content\">\r\n            <Link>Sign In</Link>\r\n          </div>\r\n          <div className=\"hamburger-menu-box\">\r\n            <MenuRoundedIcon\r\n              className=\"hamburger-menu\"\r\n              fontSize=\"large\"\r\n              onClick={(e) => setSideBarShow(!sideBarshow)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-bar\">\r\n        <Link>About NCCP</Link>\r\n        <Link>Deposit</Link>\r\n        <Link>Order</Link>\r\n        <Link>Contact Us</Link>\r\n      </div>\r\n\r\n      <div className=\"hero-div\">\r\n        <div>\r\n          <h1>Welcome to NCCP</h1>\r\n          <p>\r\n            We are the leading institute of microbial research and preservation\r\n            in Pakistan...\r\n          </p>\r\n        </div>\r\n        <Link>Learn More</Link>\r\n      </div>\r\n\r\n      <div className=\"product-category-div\">\r\n        <h1>Resources</h1>\r\n        <ObjectSlider />\r\n      </div>\r\n      <div className=\"about-us-div\">\r\n        <img src={AboutUsImage} />\r\n      </div> */}\r\n\r\n      {/* <div className=\"carousel-div\">\r\n        <Carousel className=\"carousel\">\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>Welcome to NCCP</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img src={Bacteria2} alt=\"Bacteria img\" />\r\n            <Carousel.Caption>\r\n              <h3>We are a leading institute in Microorganism reasearch</h3>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div> */}\r\n\r\n      {/* <div className=\"navigation-bar\">\r\n        <Container className=\"navigation-bar-content\">\r\n          <Logo />\r\n          <div className=\"navigation-links\">\r\n            <SearchOutlinedIcon />\r\n            <MenuRoundedIcon />\r\n          </div>\r\n        </Container>\r\n      </div> */}\r\n\r\n      {/* <Layout>\r\n        <div id=\"homepage-upper-nav-bar\">\r\n          <NavDropdown\r\n            title=\"NCCP\"\r\n            id=\"collasible-nav-dropdown\"\r\n            show={show}\r\n            onMouseEnter={(e) => setShow(true)}\r\n            onMouseLeave={(e) => setShow(false)}\r\n          >\r\n            <NavLink>NCCP</NavLink>\r\n\r\n            <NavLink>Deposit</NavLink>\r\n            <NavLink>Orders</NavLink>\r\n            <NavLink>Catalogue</NavLink>\r\n            <NavDropdown\r\n              title=\"NCCP\"\r\n              id=\"collasible-nav-dropdown\"\r\n              show={show}\r\n              onMouseEnter={(e) => setShow(true)}\r\n              onMouseLeave={(e) => setShow(false)}\r\n              subme\r\n            >\r\n              <NavLink>NCCP</NavLink>\r\n\r\n              <NavLink>Deposit</NavLink>\r\n              <NavLink>Orders</NavLink>\r\n              <NavLink>Catalogue</NavLink>\r\n            </NavDropdown>\r\n          </NavDropdown>\r\n          <NavLink>NCCP</NavLink>\r\n\r\n          <NavLink>Deposit</NavLink>\r\n          <NavLink>Orders</NavLink>\r\n          <NavLink>Catalogue</NavLink>\r\n        </div>\r\n        <div>other content</div>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Microorganism\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Details\\index.js",["602"],"import React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Container, Jumbotron } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchItemDetails } from \"../../actions/catalogue.actions\";\r\nimport Layout from \"../../components/Layout\";\r\n\r\nconst ItemDetails = (props) => {\r\n  const [itemDetail, setItemDetail] = useState({});\r\n  const detail = useSelector((state) => state.details);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setItemDetail(detail.details);\r\n  }, [detail]);\r\n\r\n  useEffect(() => {\r\n    const { id } = props.location.state;\r\n    // console.log(id);\r\n    if (id) {\r\n      console.log(\"Dispatching fetch Item request\");\r\n      dispatch(fetchItemDetails(id, \"external\"));\r\n    }\r\n  }, []);\r\n\r\n  const itemData = () => {\r\n    return (\r\n      <div>\r\n        {Object.keys(itemDetail).map((value, index) => {\r\n          return (\r\n            <Accordion key={index}>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\r\n                  {value}\r\n                </Accordion.Toggle>\r\n\r\n                {Object.keys(itemDetail[value]).map((v, i) => {\r\n                  return (\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                      <Card.Body\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <span>{v}</span>\r\n                        <span>\r\n                          {itemDetail[value][v] === \"\"\r\n                            ? \"Nill\"\r\n                            : itemDetail[value][v]}\r\n                        </span>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  );\r\n                })}\r\n              </Card>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Jumbotron>\r\n        <h1>\r\n          {itemDetail.CoreDataSets\r\n            ? `${itemDetail.CoreDataSets.Genus} ${itemDetail.CoreDataSets.SpeciesEpithet}`\r\n            : \"\"}\r\n        </h1>\r\n      </Jumbotron>\r\n      <Container>\r\n        {detail.error.code > 200 ? detail.error.message : itemData()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ItemDetails;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Deposits\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AddMicroorganism\\index.js",["603"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Cart\\index.js",["604","605","606","607","608","609","610"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardPayments\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardReports\\index.js",[],["611","612"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\index.js",["613","614","615","616"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardUsers\\index.js",["617","618","619"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\index.js",["620"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\ResetPasswordValidator.js",[],["621","622"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\index.js",["623","624","625","626"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\updatingUser.reducer.js",["627","628"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\sidebar.reducer.js",["629"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  collapsed: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.COLLAPSE_SIDEBAR:\r\n      state = {\r\n        ...state,\r\n        collapsed: !state.collapsed,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n",["630","631"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\cart.reducer.js",["632"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\catalogue.reducers.js",["633","634","635"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  catalogueData: [],\r\n  fetching: false,\r\n  fetched: false,\r\n  addMicroorganism: {\r\n    adding: false,\r\n    added: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete: {\r\n    deleting: false,\r\n    deleted: false,\r\n    data: {},\r\n    error: {\r\n      code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_INFO_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n        fetched: false,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        catalogueData: action.payload.data,\r\n        fetching: false,\r\n        fetched: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_INFO_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetching: false,\r\n        fetched: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n    case authConstants.ADD_MICROORGANISM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          adding: true,\r\n          added: false,\r\n          data: action.payload.data,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: true,\r\n          adding: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.ADD_MICROORGANISM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...state.addMicroorganism,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.RESET_ADD_MICROORGANISM_STATE: {\r\n      state = {\r\n        ...state,\r\n        addMicroorganism: {\r\n          ...initialState.addMicroorganism,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_REQUEST: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          data: action.payload.data,\r\n          deleting: true,\r\n          deleted: false,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_SUCCESS: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    }\r\n    case authConstants.CATALOGUE_DELETE_ITEM_FAILURE: {\r\n      state = {\r\n        ...state,\r\n        delete: {\r\n          ...state.delete,\r\n          deleted: false,\r\n          deleting: false,\r\n          error: {\r\n            code: action.payload.code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemListCard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\DropDown\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\SideBar\\sidebardata.js",["636","637","638","639"],"import HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n// import { ReactComponent as Cell } from \"./Icons/cell.svg\";\r\nimport PeopleRoundedIcon from \"@material-ui/icons/PeopleRounded\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nexport const sidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    icon: <DashboardIcon />,\r\n    link: \"/AdminDashboard\",\r\n  },\r\n  {\r\n    title: \"Users\",\r\n    icon: <PeopleRoundedIcon />,\r\n    link: \"/adminDashboard/users\",\r\n  },\r\n  {\r\n    title: \"Orders\",\r\n    icon: <ListAltIcon />,\r\n    link: \"/adminDashboard/orders\",\r\n  },\r\n  {\r\n    title: \"Deposits\",\r\n    icon: <AccountBalanceIcon />,\r\n    link: \"/adminDashboard/deposits\",\r\n  },\r\n  {\r\n    title: \"Payments\",\r\n    icon: <MonetizationOnIcon />,\r\n    link: \"/adminDashboard/payments\",\r\n  },\r\n  // {\r\n  //   title: \"Reports\",\r\n  //   icon: <AssessmentIcon />,\r\n  //   link: \"/adminDashboard/reports\",\r\n  // },\r\n\r\n  {\r\n    title: \"Settings\",\r\n    icon: <SettingsIcon />,\r\n    link: \"/adminDashboard/settings\",\r\n  },\r\n];\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\auth.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\index.js",["640"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourteenValidator from \"./StepFourteenValidator\";\r\nimport useStepFourteenForm from \"./useStepFourteenForm\";\r\n\r\nfunction Step14(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Catalogue: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourteenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourteenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Catalogue</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Catalogue Name\"\r\n          type=\"text\"\r\n          name=\"CatalogueName\"\r\n          placeholder=\"Enter Catalogue Name here\"\r\n          value={value.CatalogueName}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueName && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueName}</p>\r\n        )}\r\n        <Input\r\n          label=\"Catalogue URL\"\r\n          type=\"text\"\r\n          name=\"CatalogueURL\"\r\n          placeholder=\"Enter Catalogue URL here\"\r\n          value={value.CatalogueURL}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueURL && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueURL}</p>\r\n        )}\r\n        <Input\r\n          label=\"Catalogue Update Time\"\r\n          type=\"time\"\r\n          name=\"CatalogueUpdateTime\"\r\n          placeholder=\"Enter Catalogue Update Time here\"\r\n          value={value.CatalogueUpdateTime}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CatalogueUpdateTime && (\r\n          <p style={{ color: \"red\" }}>{errors.CatalogueUpdateTime}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Person Of Catalogue\"\r\n          type=\"text\"\r\n          name=\"ContactPersonOfCatalogue\"\r\n          placeholder=\"Enter Contact Person Of Catalogue here\"\r\n          value={value.ContactPersonOfCatalogue}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactPersonOfCatalogue && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactPersonOfCatalogue}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Email\"\r\n          type=\"email\"\r\n          name=\"ContactEmail\"\r\n          placeholder=\"Enter Contact Email here\"\r\n          value={value.ContactEmail}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactEmail && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactEmail}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Address\"\r\n          type=\"text\"\r\n          name=\"ContactAddress\"\r\n          placeholder=\"Enter Contact Address here\"\r\n          value={value.ContactAddress}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactAddress && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactAddress}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Telephone\"\r\n          type=\"text\"\r\n          name=\"ContactTelephone\"\r\n          placeholder=\"Enter Contact Telephone here\"\r\n          value={value.ContactTelephone}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactTelephone && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactTelephone}</p>\r\n        )}\r\n        <Input\r\n          label=\"Contact Fax\"\r\n          type=\"text\"\r\n          name=\"ContactFax\"\r\n          placeholder=\"Enter Contact Fax here\"\r\n          value={value.ContactFax}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ContactFax && (\r\n          <p style={{ color: \"red\" }}>{errors.ContactFax}</p>\r\n        )}\r\n        <Input\r\n          label=\"Number of Strains\"\r\n          type=\"text\"\r\n          name=\"NumberOfStrains\"\r\n          placeholder=\"Enter Number of Strains here\"\r\n          value={value.NumberOfStrains}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NumberOfStrains && (\r\n          <p style={{ color: \"red\" }}>{errors.NumberOfStrains}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step14;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\index.js",["641"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSixValidator from \"./StepSixValidator\";\r\nimport useStepSixForm from \"./useStepSixForm\";\r\n\r\nfunction Step6(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      BiologicalInteractions: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSixForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSixValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Biological Interactions</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Symbiosis\"\r\n          type=\"text\"\r\n          name=\"Symbiosis\"\r\n          placeholder=\"Enter Symbiosis here\"\r\n          value={value.Symbiosis}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Symbiosis && <p style={{ color: \"red\" }}>{errors.Symbiosis}</p>}\r\n        <Input\r\n          label=\"Mycoparasitism\"\r\n          type=\"text\"\r\n          name=\"Mycoparasitism\"\r\n          placeholder=\"Enter Mycoparasitism here\"\r\n          value={value.Mycoparasitism}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Mycoparasitism && (\r\n          <p style={{ color: \"red\" }}>{errors.Mycoparasitism}</p>\r\n        )}\r\n        <Input\r\n          label=\"Pathogenicity\"\r\n          type=\"text\"\r\n          name=\"Pathogenicity\"\r\n          placeholder=\"Enter Pathogenicity here\"\r\n          value={value.Pathogenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Pathogenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Pathogenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Allergenicity\"\r\n          type=\"text\"\r\n          name=\"Allergenicity\"\r\n          placeholder=\"Enter Allergenicity here\"\r\n          value={value.Allergenicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Allergenicity && (\r\n          <p style={{ color: \"red\" }}>{errors.Allergenicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Other Organism Toxicity\"\r\n          type=\"text\"\r\n          name=\"OtherOrganismToxicity\"\r\n          placeholder=\"Enter Other Organism Toxicity here\"\r\n          value={value.OtherOrganismToxicity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherOrganismToxicity && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherOrganismToxicity}</p>\r\n        )}\r\n        <Input\r\n          label=\"Antagonistic Activities\"\r\n          type=\"text\"\r\n          name=\"AntagonisticActivities\"\r\n          placeholder=\"Enter Antagonistic Activities here\"\r\n          value={value.AntagonisticActivities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AntagonisticActivities && (\r\n          <p style={{ color: \"red\" }}>{errors.AntagonisticActivities}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step6;\r\n",["642","643"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\index.js",["644"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepSevenValidator from \"./StepSevenValidator\";\r\nimport useStepSevenForm from \"./useStepSevenForm\";\r\n\r\nfunction Step7(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Sexuality: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepSevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepSevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Sexuality</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Sexual Behaviour\"\r\n          type=\"text\"\r\n          name=\"SexualBehaviour\"\r\n          placeholder=\"Enter Sexual Behaviour here\"\r\n          value={value.SexualBehaviour}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualBehaviour && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualBehaviour}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sexual State\"\r\n          type=\"text\"\r\n          name=\"SexualState\"\r\n          placeholder=\"Enter Sexual State here\"\r\n          value={value.SexualState}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualState && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualState}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step7;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\index.js",["645"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\index.js",["646"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepElevenValidator from \"./StepElevenValidator\";\r\nimport useStepElevenForm from \"./useStepElevenForm\";\r\n\r\nfunction Step11(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      ChemistryAndEnzymes: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepElevenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepElevenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Chemistry And Enzymes</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Enzymes Produced\"\r\n          type=\"text\"\r\n          name=\"EnzymesProduced\"\r\n          placeholder=\"Enter Enzymes Produced here\"\r\n          value={value.EnzymesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.EnzymesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.EnzymesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Decomposition And Deteriorating Capabilities\"\r\n          type=\"text\"\r\n          name=\"DecompositionAndDeterioratingCapabilities\"\r\n          placeholder=\"Enter Decomposition And Deteriorating Capabilities here\"\r\n          value={value.DecompositionAndDeterioratingCapabilities}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DecompositionAndDeterioratingCapabilities && (\r\n          <p style={{ color: \"red\" }}>\r\n            {errors.DecompositionAndDeterioratingCapabilities}\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Metabolities Produced\"\r\n          type=\"text\"\r\n          name=\"MetabolitiesProduced\"\r\n          placeholder=\"Enter Metabolities Produced here\"\r\n          value={value.MetabolitiesProduced}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MetabolitiesProduced && (\r\n          <p style={{ color: \"red\" }}>{errors.MetabolitiesProduced}</p>\r\n        )}\r\n        <Input\r\n          label=\"Bio transformations\"\r\n          type=\"text\"\r\n          name=\"Biotransformations\"\r\n          placeholder=\"Enter Bio transformations here\"\r\n          value={value.Biotransformations}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Biotransformations && (\r\n          <p style={{ color: \"red\" }}>{errors.Biotransformations}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step11;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Review\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\index.js",["647"],"import { Button, Container, Form } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport TagInput from \"../../TagInput\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport useStepOneForm from \"./useStepOneForm\";\r\nimport StepOneValidator from \"./StepOneValidator\";\r\n\r\nfunction Step1(props) {\r\n  const handleSubmission = () => {\r\n    props.next({ CoreDataSets: value });\r\n  };\r\n  const { handleSubmit, value, updateValue, errors } = useStepOneForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepOneValidator\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Core Data Sets</h2>\r\n      <Form>\r\n        <Input\r\n          label=\"Genus\"\r\n          type=\"text\"\r\n          name=\"Genus\"\r\n          placeholder=\"Enter Genus here\"\r\n          value={value.Genus}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Genus && <p style={{ color: \"red\" }}>{errors.Genus}</p>}\r\n        <Input\r\n          label=\"AccessionNumber\"\r\n          type=\"text\"\r\n          name=\"AccessionNumber\"\r\n          placeholder=\"Enter Accession Number here\"\r\n          value={value.AccessionNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AccessionNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.AccessionNumber}</p>\r\n        )}\r\n        <TagInput\r\n          label=\"Other Acession Numbers\"\r\n          name=\"OtherCollection\"\r\n          selected={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Species Epithet\"\r\n          type=\"text\"\r\n          name=\"SpeciesEpithet\"\r\n          placeholder=\"Enter Species Name Here\"\r\n          value={value.SpeciesEpithet}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SpeciesEpithet && (\r\n          <p style={{ color: \"red\" }}>{errors.SpeciesEpithet}</p>\r\n        )}\r\n        <Input\r\n          label=\"Author\"\r\n          type=\"text\"\r\n          name=\"Author\"\r\n          placeholder=\"Enter Author Name Here\"\r\n          value={value.Author}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Author && <p style={{ color: \"red\" }}>{errors.Author}</p>}\r\n        <Form.Label>Organism Type</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          name=\"OrganismType\"\r\n          value={value.OrganismType}\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>Bacteria</option>\r\n          <option>Yeast</option>\r\n          <option>Fungi</option>\r\n          <option>Phage</option>\r\n          <option>Algae</option>\r\n          <option>MicroAlgae</option>\r\n          <option>Virus</option>\r\n          <option>Archaea</option>\r\n          <option>Antibody</option>\r\n        </Form.Control>\r\n        {errors.OrganismType && (\r\n          <p style={{ color: \"red\" }}>{errors.OrganismType}</p>\r\n        )}\r\n        <Input\r\n          label=\"History of Deposit\"\r\n          type=\"text\"\r\n          name=\"HistoryOfDeposit\"\r\n          placeholder=\"Enter History of Deposit Here\"\r\n          value={value.HistoryOfDeposit}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HistoryOfDeposit && (\r\n          <p style={{ color: \"red\" }}>{errors.HistoryOfDeposit}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Isolation\"\r\n          type=\"date\"\r\n          name=\"DateOfIsolation\"\r\n          placeholder=\"Enter Date of Isolation Here\"\r\n          value={value.DateOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated From\"\r\n          type=\"text\"\r\n          name=\"IsolatedFrom\"\r\n          placeholder=\"Isolated From\"\r\n          value={value.IsolatedFrom}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedFrom && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedFrom}</p>\r\n        )}\r\n        <Input\r\n          label=\"Geographic Origin\"\r\n          type=\"text\"\r\n          name=\"GeographicOrigin\"\r\n          placeholder=\"Enter Geographic Origin Here\"\r\n          value={value.GeographicOrigin}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.GeographicOrigin && (\r\n          <p style={{ color: \"red\" }}>{errors.GeographicOrigin}</p>\r\n        )}\r\n        <Form.Label>Status</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={value.Status}\r\n          name=\"Status\"\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>Type</option>\r\n          <option>Non-Type</option>\r\n        </Form.Control>\r\n        {errors.Status && <p style={{ color: \"red\" }}>{errors.Status}</p>}\r\n        <Input\r\n          label=\"Medium\"\r\n          type=\"text\"\r\n          name=\"Medium\"\r\n          placeholder=\"Enter Medium Here\"\r\n          value={value.Medium}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Medium && <p style={{ color: \"red\" }}>{errors.Medium}</p>}\r\n        <Input\r\n          label=\"Optimum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"OptimumGrowthTemperature\"\r\n          placeholder=\"Enter Optimum Growth Temperature Here\"\r\n          value={value.OptimumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OptimumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.OptimumGrowthTemperature}</p>\r\n        )}\r\n        <Input\r\n          label=\"Maximum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"MaximumGrowthTemperature\"\r\n          placeholder=\"Enter Maximum Growth Temperature Here\"\r\n          value={value.MaximumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MaximumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.MaximumGrowthTemperature}</p>\r\n        )}\r\n        <Input\r\n          label=\"Minimum Growth Temperature\"\r\n          type=\"text\"\r\n          name=\"MinimumGrowthTemperature\"\r\n          placeholder=\"Enter Minimum Growth Temperature Here\"\r\n          value={value.MinimumGrowthTemperature}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MinimumGrowthTemperature && (\r\n          <p style={{ color: \"red\" }}>{errors.MinimumGrowthTemperature}</p>\r\n        )}\r\n        <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step1;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Logo\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\StepFiveValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\useStepFourForm.js",["648"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\useStepNineForm.js",["649"],"import { useEffect, useState } from \"react\";\r\nconst useStepNineForm = (initialValue, handleSubmission, StepNineValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepNineValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepNineForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\StepSevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\StepTwelveValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\StepElevenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\StepThirteenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\useStepTenForm.js",["650"],"import { useEffect, useState } from \"react\";\r\nconst useStepTenForm = (initialValue, handleSubmission, StepTenValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\StepTenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\useStepOneForm.js",["651"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\addUserValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\axios.js",["652","653","654"],"E:\\Study\\FYP\\Project\\front-end\\src\\store\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Catalogue\\index.js",["655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Jumbotron,\r\n  Nav,\r\n  Row,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  fetchCatalogueData,\r\n  fetchItemDetails,\r\n  getCatalogueData,\r\n} from \"../../actions/catalogue.actions\";\r\nimport { addItemToCart } from \"../../actions/cart.actions\";\r\nimport \"./style.css\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { ReactComponent as Arrow } from \"./Icons/right-arrow.svg\";\r\nimport { ReactComponent as Bacteria } from \"./Icons/bacterium-solid.svg\";\r\nimport { ReactComponent as ShoppingCart } from \"./Icons/shopping-cart-solid.svg\";\r\nimport HomePage from \"../HomePage\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst Catalogue = (props) => {\r\n  const { authenticate } = useSelector((state) => state.auth);\r\n  const { catalogueData, fetching } = useSelector((state) => state.catalogue);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\r\n    \"bacteria\",\r\n    \"fungi\",\r\n    \"archaea\",\r\n    \"antibody\",\r\n    \"microalgae\",\r\n    \"phage\",\r\n    \"virus\",\r\n    \"yeast\",\r\n  ];\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [addedToCart, setAddedToCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCatalogueData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(catalogueData);\r\n  }, [catalogueData]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"OrganismType\"].toLowerCase())\r\n        : true;\r\n      // console.log(\r\n      //   columns &&\r\n      //     columns.some((column) => {\r\n      //       return (\r\n      //         applyFilter &&\r\n      //         row[column]\r\n      //           .toString()\r\n      //           .toLowerCase()\r\n      //           .indexOf(query.toLowerCase()) > -1\r\n      //       );\r\n      //     })\r\n      // );\r\n      return (\r\n        columns &&\r\n        columns.some((column) => {\r\n          return (\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n          );\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const addToCart = (row) => {\r\n    const { id } = row;\r\n    setAddedToCart([...addedToCart, id]);\r\n    const { OrganismType, Genus, SpeciesEpithet } = row;\r\n    dispatch(addItemToCart({ id: id, OrganismType, Genus, SpeciesEpithet }));\r\n  };\r\n\r\n  if (fetching) {\r\n    <Layout>\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </Layout>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader />\r\n\r\n      <div className=\"page-heading\">\r\n        <Container className=\"page-heading-content\">\r\n          <h1>Catalogue</h1>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"catalogue-div\">\r\n        <Container className=\"catalogue-content\">\r\n          <div className=\"search-bar-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              id=\"search-bar-input\"\r\n            />\r\n            <SearchOutlined className=\"search-bar-icon\" fontSize=\"32px\" />\r\n          </div>\r\n          <div className=\"search-filters-box\">\r\n            <h3>Filters</h3>\r\n            <hr />\r\n            {filters &&\r\n              filters.map((filter) => {\r\n                return (\r\n                  <Form.Check\r\n                    label={filter}\r\n                    name={filter}\r\n                    className=\"filter-check\"\r\n                    checked={searchFilters.includes(filter)}\r\n                    onChange={(e) => {\r\n                      const checked = searchFilters.includes(filter);\r\n                      setSearchFilters((prev) =>\r\n                        checked\r\n                          ? prev.filter((sf) => sf !== filter)\r\n                          : [...prev, filter]\r\n                      );\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"catalogue-data-content-box\">\r\n            <div>\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"catalogue-data-item\">\r\n                    <div>\r\n                      <Bacteria className=\"image\" />\r\n                      <h4 className=\"catalogue-data-item-organism-type\">\r\n                        {row.OrganismType}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"item-detail\">\r\n                      <Link\r\n                        className=\"catalogue-data-item-name\"\r\n                        to={{\r\n                          pathname: \"/itemDetails\",\r\n                          state: { id: row.id },\r\n                        }}\r\n                      >\r\n                        <h4 className=\"item-name\">{`${row.Genus} ${row.SpeciesEpithet}`}</h4>\r\n                        {/* <h3 className=\"arrow-box\">\r\n                          <Arrow className=\"arrow\" />\r\n                        </h3> */}\r\n                      </Link>\r\n                      <span className=\"catalogue-data-item-accession-number\">{`Accession Number    ${row.AccessionNumber}`}</span>\r\n                      <span className=\"catalogue-data-item-strain-type\">{`Strain Type      ${row.Status}`}</span>\r\n                      <span className=\"catalogue-data-item-bio-hazard-level\">{`Bio Hazard Level     ${row.BioHazardLevel}`}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        className={\r\n                          addedToCart.includes(row.id)\r\n                            ? \"add-to-cart-button-disabled\"\r\n                            : \"add-to-cart-button\"\r\n                        }\r\n                        onClick={(e) => addToCart(row)}\r\n                      >\r\n                        {addedToCart.includes(row.id)\r\n                          ? \"Added To Cart\"\r\n                          : \"Add To Cart\"}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row.OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row.Genus} ${row.SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row.AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* <Layout>\r\n        <Jumbotron>\r\n          <div id=\"upper-content\">\r\n            <h1>Catalogue</h1>\r\n          </div>\r\n          <div id=\"catalogue\">\r\n            <div id=\"filter-box\">\r\n              <div id=\"filters\">\r\n                <h5>Filters</h5>\r\n                <hr />\r\n                {filters &&\r\n                  filters.map((filter) => {\r\n                    return (\r\n                      <Form.Check\r\n                        label={filter}\r\n                        name={filter}\r\n                        className\r\n                        checked={searchFilters.includes(filter)}\r\n                        onChange={(e) => {\r\n                          const checked = searchFilters.includes(filter);\r\n                          setSearchFilters((prev) =>\r\n                            checked\r\n                              ? prev.filter((sf) => sf !== filter)\r\n                              : [...prev, filter]\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div id=\"items\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              {search(data).map((row) => {\r\n                return (\r\n                  <div className=\"item-card\">\r\n                    <div className=\"item-type\">\r\n                      <Bacteria className=\"image\" />\r\n                      <div>{row[\"CoreDataSets\"].OrganismType}</div>\r\n                    </div>\r\n                    <div className=\"item-details\">\r\n                      <div className=\"details\">\r\n                        <div className=\"item-name-box\">\r\n                          <Link\r\n                            className=\"item-name\"\r\n                            to={{\r\n                              pathname: \"/itemDetails\",\r\n                              state: { id: row._id },\r\n                            }}\r\n                          >\r\n                            <span>{`${row[\"CoreDataSets\"].Genus} ${row[\"CoreDataSets\"].SpeciesEpithet}`}</span>\r\n                            <span className=\"arrow-box\">\r\n                              <Arrow className=\"arrow\" />\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"item-accession-number\">\r\n                          {row[\"CoreDataSets\"].AccessionNumber}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-button\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          onClick={(e) => addToCart(row)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            fontWeight: \"bold\",\r\n                            alignItems: \"center\",\r\n                            fontSize: \"0.8rem\",\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Dashboard\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\index.js",["676","677","678","679","680","681","682","683","684","685","686","687","688","689"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/index\";\r\nimport { Form, Button, Container, Row, Col, FormLabel } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport { login } from \"../../actions\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport \"./style.css\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport useSignInForm from \"./SignInUseForm\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nimport SignUpValidator from \"./SignUpValidator\";\r\nimport useFormSignUp from \"./SignUpUseForm\";\r\nimport { authConstants } from \"../../actions/constants\";\r\nimport { resetSignUpStore, signup } from \"../../actions/signup.actions\";\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signInForm, setSignInForm] = useState(true);\r\n  const [signUpForm, setSignUpForm] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const signUpStore = useSelector((state) => state.sign);\r\n  const signInStore = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal show code\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [signInModal, setSignInModal] = useState(false);\r\n\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const selectUserType = (e) => {\r\n    setUserType(e.target.name);\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  const goBack = () => {\r\n    const signUpSlides = document.getElementById(\r\n      \"sign-in-form-slides-inner-div\"\r\n    );\r\n    signUpSlides.style.transform = \"translate(0%)\";\r\n  };\r\n\r\n  // method to reset the sign up  store on modal close\r\n\r\n  const reset = () => {\r\n    dispatch(resetSignUpStore());\r\n  };\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    if (signUpStore.error.found || signUpStore.registered) {\r\n      setModalOpen(true);\r\n    }\r\n  }, [signUpStore]);\r\n\r\n  useEffect(() => {\r\n    if (signInStore.error.found) {\r\n      setSignInModal(true);\r\n    }\r\n  }, [signInStore]);\r\n\r\n  const userLogin = () => {\r\n    // e.preventDefault();\r\n    const { email, password } = signInValue;\r\n    const user = {\r\n      email,\r\n      password,\r\n      token: recaptchaRef.current.getValue(),\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  // Material Ui React Material\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handleSignUpSubmission = () => {\r\n    dispatch(signup(signUpValue));\r\n  };\r\n\r\n  const {\r\n    signInValue,\r\n    handleSignInSubmit,\r\n    updateSignInValue,\r\n    signInErrors,\r\n  } = useSignInForm(userLogin, SignInValidator);\r\n\r\n  const {\r\n    handleSignUpSubmit,\r\n    signUpValue,\r\n    updateSignUpValue,\r\n    signUpErrors,\r\n  } = useFormSignUp(handleSignUpSubmission, SignUpValidator);\r\n\r\n  // Captcha functions\r\n\r\n  const recaptchaRef = useRef();\r\n\r\n  if (auth.authenticate) {\r\n    if (userType === \"employee\") {\r\n      return <Redirect to={\"/adminDashboard\"} />;\r\n    } else {\r\n      return <Redirect to={\"/\"} />;\r\n    }\r\n  }\r\n\r\n  // const sign_in_btn = document.querySelector(\"#sign-in-btn\");\r\n  // const sign_up_btn = document.querySelector(\"#sign-up-btn\");\r\n  // const container = document.querySelector(\".container\");\r\n\r\n  // console.log(container);\r\n\r\n  const signInButtonPress = () => {\r\n    setSignInForm(true);\r\n  };\r\n\r\n  const signUpButtonPress = () => {\r\n    setSignInForm(false);\r\n  };\r\n\r\n  // sign_up_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.add(\"sign-up-mode\");\r\n  // });\r\n\r\n  // sign_in_btn.addEventListener(\"click\", () => {\r\n  //   container.classList.remove(\"sign-up-mode\");\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={modalOpen}\r\n        onClose={(e) => {\r\n          setModalOpen(false);\r\n          reset();\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signUpStore.registered ? (\r\n              <CheckCircleIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            {signUpStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signUpStore.registered ? \"Success\" : \"Error\"}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signUpStore.registered\r\n                ? \"The signup request was successful. Check your email for verification\"\r\n                : signUpStore.error.message}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"signup-response-modal\"\r\n        open={signInModal}\r\n        onClose={(e) => {\r\n          setSignInModal(false);\r\n        }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={signInModal}>\r\n          <div className=\"signup-repsonse-modal-content-div\">\r\n            {signInStore.error.found ? (\r\n              <ErrorIcon\r\n                className=\"signup-response-modal-icon\"\r\n                style={{ fontSize: \"5.5rem\" }}\r\n              />\r\n            ) : null}\r\n            <h2 id=\"transition-modal-title\">\r\n              {signInStore.error.found ? \"Error\" : null}\r\n            </h2>\r\n            <p id=\"transition-modal-description\">\r\n              {signInStore.error.found ? signInStore.error.message : null}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n      <div class={`container-div ${signInForm ? \"\" : \"sign-up-mode\"}`}>\r\n        <div class=\"forms-container\">\r\n          <div class=\"signin-signup\">\r\n            <form action=\"#\" className=\"sign-in-form\">\r\n              <div className=\"sign-in-form-slides-outer-div\">\r\n                <div\r\n                  className=\"sign-in-form-slides-inner-div\"\r\n                  id=\"sign-in-form-slides-inner-div\"\r\n                >\r\n                  <div className=\"sign-in-type\">\r\n                    <h3>What type of user are you?</h3>\r\n                    <Button name=\"user\" onClick={(e) => selectUserType(e)}>\r\n                      General User\r\n                    </Button>\r\n                    <Button name=\"employee\" onClick={(e) => selectUserType(e)}>\r\n                      Employee\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"title\">Sign In</h2>\r\n                    <TextField\r\n                      error={signInErrors.email ? true : undefined}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"e.g. name@gmail.com\"\r\n                      value={signInValue.email}\r\n                      onChange={(e) => updateSignInValue(e)}\r\n                      helperText={signInErrors.email ? signInErrors.email : \"\"}\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                    />\r\n                    <FormControl\r\n                      // className={clsx(classes.margin, classes.textField)}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                      error={signInErrors.password ? true : undefined}\r\n                      // helperText={signInErrors.password ? signInErrors.password : \"\"}\r\n                    >\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Min 6 letters & a capital letter\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={signInValue.password}\r\n                        onChange={(e) => updateSignInValue(e)}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => setShowPassword(!showPassword)}\r\n                              onMouseDown={(e) => e.preventDefault()}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <Visibility />\r\n                              ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                      />\r\n                      <FormHelperText id=\"my-helper-text\">\r\n                        {signInErrors.password ? signInErrors.password : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <Link to=\"/forgetPassword\" className=\"forget-password-link\">\r\n                      Forgot your password?\r\n                    </Link>\r\n                    <ReCAPTCHA\r\n                      ref={recaptchaRef}\r\n                      sitekey={authConstants.ReCAPTCHA_KEY}\r\n                    />\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"sign-in-btn\"\r\n                      onClick={(e) => handleSignInSubmit(e)}\r\n                    >\r\n                      sign in\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form class=\"sign-up-form\">\r\n              <h2 className=\"title\">Sign Up</h2>\r\n              <div className=\"sign-up-form-content\">\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  name=\"firstname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.firstname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.firstname}\r\n                  helperText={signUpErrors.firstname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.lastname}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.lastname}\r\n                  helperText={signUpErrors.lastname}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.email}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.email}\r\n                  helperText={signUpErrors.email}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Affiliation\"\r\n                  name=\"affiliation\"\r\n                  placeholder=\"Institute affiliated to\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.affiliation}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.affiliation}\r\n                  helperText={signUpErrors.affiliation}\r\n                  required\r\n                />\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={signUpErrors.type}\r\n                  className=\"user-type-radio-group\"\r\n                >\r\n                  <FormLabel component=\"legend\">\r\n                    What type of user are you?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-label=\"user-type\"\r\n                    name=\"type\"\r\n                    value={signUpValue.type}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"ResearchInstitute\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Research Institute\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Industry\"\r\n                      control={<Radio color=\"default\" />}\r\n                      label=\"Industry\"\r\n                    />\r\n                  </RadioGroup>\r\n                  <FormHelperText>\r\n                    {signUpErrors.type ? signUpErrors.type : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                {/* \r\n                <TextField\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  placeholder=\"Only characters are allowed\"\r\n                  variant=\"outlined\"\r\n                  className=\"input\"\r\n                  value={signUpValue.description}\r\n                  onChange={(e) => updateSignUpValue(e)}\r\n                  error={signUpErrors.description}\r\n                  helperText={signUpErrors.description}\r\n                  multiline\r\n                  rows={4}\r\n                /> */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  className=\"input password-input\"\r\n                  error={signUpErrors.password ? true : undefined}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password *\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.password}\r\n                    // className=\"input\"\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) => setShowPassword(!showPassword)}\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.password ? signUpErrors.password : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  // style={{ width: \"40%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                  error={signUpErrors.confirm_password ? true : undefined}\r\n                  className=\"input\"\r\n                  required\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Min 6 letters & a capital letter\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={signUpValue.confirme_password}\r\n                    onChange={(e) => updateSignUpValue(e)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={(e) =>\r\n                            setShowConfirmPassword(!showConfirmPassword)\r\n                          }\r\n                          onMouseDown={(e) => e.preventDefault()}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  <FormHelperText id=\"my-helper-text\">\r\n                    {signUpErrors.confirm_password\r\n                      ? signUpErrors.confirm_password\r\n                      : \"\"}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Link className=\"forget-password-link\">\r\n                  Already a user Sign In\r\n                </Link>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"sign-up-btn\"\r\n                  onClick={(e) => handleSignUpSubmit(e)}\r\n                >\r\n                  sign up\r\n                </Button>\r\n                {/* <TextField\r\n                  error={signUpErrors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                />\r\n                <TextField\r\n                  error={errors.email ? true : undefined}\r\n                  // id=\"outlined-error-helper-text\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"e.g. name@gmail.com\"\r\n                  value={value.email}\r\n                  onChange={(e) => updateValue(e)}\r\n                  helperText={errors.email ? errors.email : \"\"}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"70%\", margin: \"1rem 0 0.5rem 0\" }}\r\n                /> */}\r\n              </div>\r\n            </form>\r\n            {/* <form action=\"#\" class=\"sign-in-form\">\r\n              <h2 class=\"title\">Sign in</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" value=\"Login\" class=\"btn solid\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign in with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n            {/* <form action=\"#\" class=\"sign-up-form\">\r\n              <h2 class=\"title\">Sign up</h2>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-user\"></i>\r\n                <input type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-envelope\"></i>\r\n                <input type=\"email\" placeholder=\"Email\" />\r\n              </div>\r\n              <div class=\"input-field\">\r\n                <i class=\"fas fa-lock\"></i>\r\n                <input type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n              <input type=\"submit\" class=\"btn\" value=\"Sign up\" /> */}\r\n            {/* <p class=\"social-text\">Or Sign up with social platforms</p>\r\n              <div class=\"social-media\">\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-google\"></i>\r\n                </a>\r\n                <a href=\"#\" class=\"social-icon\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </div> */}\r\n            {/* </form> */}\r\n          </div>\r\n        </div>\r\n        <div class=\"panels-container\">\r\n          <div class=\"panel left-panel\">\r\n            <div class=\"content\">\r\n              <h3>New here ?</h3>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                Debitis, ex ratione. Aliquid!\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-up-btn\"\r\n                onClick={signUpButtonPress}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/log.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n          <div class=\"panel right-panel\">\r\n            <div class=\"content\">\r\n              <h3>One of us ?</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                laboriosam ad deleniti.\r\n              </p>\r\n              <button\r\n                class=\"btn transparent\"\r\n                id=\"sign-in-btn\"\r\n                onClick={signInButtonPress}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n            {/* <img src=\"img/register.svg\" class=\"image\" alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"2rem\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userLogin}>\r\n                <Input\r\n                  id=\"email_username\"\r\n                  label=\"Email/Username\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email/Username\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"basicPassword\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\HOC\\PrivateRoute.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Orders\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\index.js",["690","691","692","693","694"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ForgetPassword\\index.js",["695","696","697"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgetPassword } from \"../../actions\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nconst ForgetPassword = () => {\r\n  const emailValidator = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  const dispatch = useDispatch();\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [slideChange, setSlideChange] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/forget-password\", { email: emailValue })\r\n      .then((response) => {\r\n        setSlideChange(true);\r\n        setEmailSent(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setSlideChange(true);\r\n        setEmailSent(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    // const slides = document.querySelector(\".slides\");\r\n    // slides.style.transform = \"translate(-50%)\";\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (slideChange) {\r\n  //     dispatch(\r\n  //       forgetPassword({\r\n  //         email: emailValue,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }, [slideChange]);\r\n  return (\r\n    <div className=\"outer-div\">\r\n      {/* <div className=\"upper-nav\">Logo</div> */}\r\n      {slideChange ? (\r\n        <div className=\"check-email-div\">\r\n          <h3>{emailSent ? \"Check your Email\" : \"Failed\"}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"forget-password-div\">\r\n          <div className=\"forget-password-title\">\r\n            <h3>Forgot password</h3>\r\n            <p>Instructions will be sent to your email</p>\r\n          </div>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"example@name.com\"\r\n            variant=\"outlined\"\r\n            className=\"forgot-password-email-input\"\r\n            value={emailValue}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            error={!emailValidator.test(emailValue.trim()) && emailValue !== \"\"}\r\n            helperText=\"must be of form: name@gmail.com\"\r\n            required\r\n          />\r\n          <button\r\n            onClick={(e) => {\r\n              if (emailValidator.test(emailValue.trim())) {\r\n                handleSubmission();\r\n              }\r\n            }}\r\n            className=\"send-instructions-btn\"\r\n          >\r\n            Send Instructions\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\index.js",["698","699","700","701","702","703"],"import {\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport React, { useState } from \"react\";\r\nimport { translate } from \"react-range/lib/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nimport \"./style.css\";\r\nimport useFormResetPassword from \"./useFormResetPassword\";\r\nconst ResetPassword = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [passwordReset, setPasswordReset] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const handleSubmission = async () => {\r\n    await axios\r\n      .post(\"/resetPassword\", { token, password: resetPassword.password })\r\n      .then((response) => {\r\n        setPasswordReset(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setPasswordReset(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    console.log(\"hii\");\r\n    const slides = document.querySelector(\".slides\");\r\n    slides.style.transform = \"translate(-50%)\";\r\n  };\r\n  const {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  } = useFormResetPassword(handleSubmission, ResetPasswordValidator);\r\n\r\n  const passwordForm = () => {\r\n    return (\r\n      <div className=\"reset-password-div\">\r\n        <h3>Set new password</h3>\r\n        <div className=\"reset-password-form\">\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.password}\r\n          >\r\n            <InputLabel htmlFor=\"password\">New password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"password\"\r\n              name=\"password\"\r\n              // className=\"password-input-box\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={resetPassword.password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) => setShowPassword(!showPassword)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.password ? resetPasswordErrors.password : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            name=\"confirm_password\"\r\n            className=\"password-input-box\"\r\n            error={resetPasswordErrors.confirm_password}\r\n          >\r\n            <InputLabel htmlFor=\"confirm_password\">Confirm password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"confirm_password\"\r\n              name=\"confirm_password\"\r\n              placeholder=\"Min 6 characters with atleast one capital letter\"\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              value={resetPassword.confirm_password}\r\n              onChange={(e) => updateResetPassword(e)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={(e) =>\r\n                      setShowConfirmPassword(!showConfirmPassword)\r\n                    }\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n            <FormHelperText>\r\n              {resetPasswordErrors.confirm_password\r\n                ? resetPasswordErrors.confirm_password\r\n                : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <button\r\n          onClick={(e) => handleResetSubmit(e)}\r\n          className=\"reset-password-btn\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const resetResponseSlide = () => {\r\n    return (\r\n      <div className=\"reset-response-div\">\r\n        <h3 className=\"reset-response-title\">\r\n          {passwordReset\r\n            ? \"Your account password has been changed successfully\"\r\n            : \"Password reset failed\"}\r\n        </h3>\r\n        <p>{message}</p>\r\n        {passwordReset ? (\r\n          <Link to=\"\">Go to Sign In</Link>\r\n        ) : (\r\n          <Link\r\n            onClick={(e) => {\r\n              const slides = document.querySelector(\".slides\");\r\n              slides.style.transform = \"translate(0%)\";\r\n            }}\r\n          >\r\n            Go back to reset\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const [currentSlider, setCurrentSlider] = useState(true);\r\n\r\n  return (\r\n    <div className=\"reset-password-outer-div\">\r\n      <div className=\"slider-outer-div\">\r\n        <div className={`slides`}>\r\n          <div className=\"slide\">{passwordForm()}</div>\r\n          <div className=\"slide\">{resetResponseSlide()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDetails\\index.js",["704","705","706","707"],"import { TextField, Button, Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Status from \"../../components/Status\";\r\nconst AdminDashboardDetails = () => {\r\n  const [rangeDates, setRangeDates] = useState({\r\n    start: new Date().toISOString().substr(0, 10),\r\n    end: new Date().toISOString().substr(0, 10),\r\n  });\r\n\r\n  const [activeUsersChartData, setActiveUsersChartData] = useState({\r\n    series: [{\r\n      name: 'Visitors',\r\n      data: [23, 31, 40, 101, 40, 36, 32, 23, 14]\r\n    }],\r\n    options: {\r\n\r\n      chart: {\r\n\r\n        type: 'bar',\r\n\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 10,\r\n          dataLabels: {\r\n            position: 'top', // top, center, bottom\r\n          },\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n        formatter: function (val) {\r\n          return val;\r\n        },\r\n        offsetY: -20,\r\n        style: {\r\n          fontSize: '12px',\r\n          colors: [\"#304758\"]\r\n        }\r\n      },\r\n\r\n      xaxis: {\r\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\",],\r\n        position: 'top',\r\n        axisBorder: {\r\n          show: false\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        crosshairs: {\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              colorFrom: '#D8E3F0',\r\n              colorTo: '#BED1E6',\r\n              stops: [0, 100],\r\n              opacityFrom: 0.4,\r\n              opacityTo: 0.5,\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        }\r\n      },\r\n      yaxis: {\r\n        axisBorder: {\r\n          show: false\r\n        },\r\n        axisTicks: {\r\n          show: false,\r\n        },\r\n        labels: {\r\n          show: false,\r\n          formatter: function (val) {\r\n            return val;\r\n          }\r\n        }\r\n\r\n      },\r\n      // title: {\r\n      //   text: 'Monthly Inflation in Argentina, 2002',\r\n      //   floating: true,\r\n      //   offsetY: 330,\r\n      //   align: 'center',\r\n      //   style: {\r\n      //     color: '#444'\r\n      //   }\r\n      // }\r\n    },\r\n  });\r\n\r\n\r\n  const [salesChartData, setsalesChartData] = useState({\r\n    series: [{\r\n      name: 'series1',\r\n      data: [31, 40, 28, 51, 42, 109, 100]\r\n    }, {\r\n      name: 'series2',\r\n      data: [11, 32, 45, 32, 34, 52, 41]\r\n    }],\r\n    options: {\r\n      chart: {\r\n        height: 350,\r\n        type: 'area'\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth'\r\n      },\r\n      xaxis: {\r\n        type: 'datetime',\r\n        categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: 'dd/MM/yy HH:mm'\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const [popularCategoriesChartData, setpopularCategoriesChartData] = useState({\r\n    series: [44, 55, 41, 17],\r\n\r\n    options: {\r\n      labels: ['Apple', 'Mango', 'Orange', 'Watermelon'],\r\n      chart: {\r\n        background: '#fff',\r\n        animations: {\r\n          speed: 1300,\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n        // formatter: function (val) {\r\n        //   return val + \"%\"\r\n        // },\r\n      },\r\n      legend: {\r\n        position: 'bottom',\r\n        horizontalAlign: 'center',\r\n        fontSize: '14px',\r\n        markers: {\r\n          width: 20,\r\n          height: 20,\r\n          radius: 5,\r\n        }\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            size: '75%',\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true,\r\n                showAlways: true,\r\n                label: \"Samples Sold\",\r\n                fontSize: \"14px\",\r\n                color: \"grey\",\r\n                formatter: function (w) {\r\n                  return '129,345'\r\n                },\r\n              }\r\n            }\r\n          },\r\n\r\n        }\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    }\r\n  });\r\n  return (\r\n    <SideBar active=\"Dashboard\">\r\n      <div className=\"admin-dashboard\">\r\n        <h3 className=\"component-heading\">Main Dashboard</h3>\r\n        <div className=\"dashboard-dates\">\r\n          <TextField\r\n            id=\"start-date\"\r\n            className=\"starting-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"From\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"end-date\"\r\n            className=\"ending-date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"To\"\r\n            value={rangeDates.start}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"card-div\">\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>25</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>49</h4>\r\n          </div>\r\n          <div className=\"total-orders-card card\" id=\"total-orders-card\">\r\n            <p>Total Orders</p>\r\n            <h4>78</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"top-selling-div card\">\r\n          <h4 className=\"card-title\">Top Selling</h4>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"product-details\">\r\n            <div className=\"product-name\">\r\n              <span>Bacillus Pakistaneasis</span>\r\n            </div>\r\n            <div className=\"sales-amount\">\r\n              45\r\n              </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"sales-report card\">Sales Report\r\n        <ReactApexChart options={salesChartData.options} series={salesChartData.series} type=\"area\" /></div>\r\n        <div className=\"active-users card\">\r\n          <h4 className=\"card-title\">Visitors</h4>\r\n          <ReactApexChart options={activeUsersChartData.options} height=\"100%\" series={activeUsersChartData.series} type=\"bar\" />\r\n        </div>\r\n        <div className=\"recent-reviews card\">\r\n          <h4 className=\"card-title\">Recent Reviews</h4>\r\n          <hr />\r\n          <div>\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"review-details\">\r\n              <div className=\"review-date\">\r\n                <TodayIcon className=\"review-icon\" />\r\n                <span>30 JUN, TUE</span>\r\n              </div>\r\n              <div className=\"review-text\">\r\n                The product was good.\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <Button variant=\"contained\">\r\n              <Link\r\n                to=\"/dashboard/addUser\"\r\n                style={{ color: \"black\", textDecoration: \"none\" }}\r\n              >\r\n                See All\r\n          </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"popular-categories card\">\r\n          <h4 className=\"card-title\">Popular Categories</h4>\r\n          <ReactApexChart className=\"popular-categories-chart\" height=\"90%\" options={popularCategoriesChartData.options} series={popularCategoriesChartData.series} type=\"donut\" /></div>\r\n        {/* <div className=\"deposit-periods card\">Deposits in Periods</div> */}\r\n        <div className=\"recent-orders card\">\r\n          <h4 className=\"card-title\">Recent Orders</h4>\r\n          <hr />\r\n          <div className=\"recent-order-headers\">\r\n            <span className=\"date-header\">Date</span>\r\n            <span className=\"customer-header\">Customer</span>\r\n            <span className=\"status-header\">Status</span>\r\n            <span className=\"total-header\">Total</span>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n                <Status status=\"Completed\"/>\r\n                {/* Completed */}\r\n              </span>\r\n              <span className=\"total-data\">\r\n\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Pending\"/>\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\"/>\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"recent-order-data\">\r\n              <span className=\"date-data\">01 Jun 2020 17:56 AM</span>\r\n              <span className=\"customer-data\">\r\n                <Avatar className=\"order-customer-image\" />\r\n                Paulie Allen\r\n              </span>\r\n              <span className=\"status-data\">\r\n              <Status status=\"Cancelled\"/>\r\n              </span>\r\n              <span className=\"total-data\">\r\n                $104.98\r\n              </span>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n          <Button variant=\"contained\" className=\"see-all-button\" style={{ marginRight: \"4rem\" }}>\r\n            <Link\r\n              to=\"/dashboard/addUser\"\r\n              style={{ color: \"black\", textDecoration: \"none\" }}\r\n            >\r\n              See All\r\n          </Link>\r\n          </Button>\r\n        </div>\r\n        <div className=\"city-order-statistics card\">City Order Statistics</div>\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardDetails;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddUserForm\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignUpUseForm.js",["708","709"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\SignIn\\SignInUseForm.js",["710","711","712"],"import React, { useEffect, useState } from \"react\";\r\nimport SignInValidator from \"./SignInValidator\";\r\nconst useSignInForm = (handleSubmission, SignInValidator) => {\r\n  const [signInValue, setSignInValue] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signInErrors, setSignInErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSignInErrors(SignInValidator(signInValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(signInErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [signInErrors]);\r\n\r\n  const updateSignInValue = (e) => {\r\n    setSignInValue({\r\n      ...signInValue,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { signInValue, handleSignInSubmit, updateSignInValue, signInErrors };\r\n};\r\n\r\nexport default useSignInForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardAddUser\\useFormAddUser.js",["713","714"],"import React, { useEffect, useState } from \"react\";\r\nconst useFormAddUser = (handleSubmission, SignInValidator) => {\r\n  const [addUserValue, setAddUserValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"internal\",\r\n    profile_picture: \"null\",\r\n    permissions: {\r\n      view_microorganism_permission: false,\r\n      add_microorganism_permission: false,\r\n      delete_microorganism_permission: false,\r\n      update_microorganism_permission: false,\r\n      view_order_permission: false,\r\n      add_order_permission: false,\r\n      delete_order_permission: false,\r\n      update_order_permission: false,\r\n      view_deposit_permission: false,\r\n      add_deposit_permission: false,\r\n      delete_deposit_permission: false,\r\n      update_deposit_permission: false,\r\n      view_user_permission: false,\r\n      add_user_permission: false,\r\n      delete_user_permission: false,\r\n      update_user_permission: false,\r\n      view_report_permission: false,\r\n      add_report_permission: false,\r\n      delete_report_permission: false,\r\n      update_report_permission: false,\r\n      view_log_permission: false,\r\n      add_log_permission: false,\r\n      delete_log_permission: false,\r\n      update_log_permission: false,\r\n    },\r\n  });\r\n\r\n  const [addUserErrors, setaddUserErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleAddUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    setaddUserErrors(SignInValidator(addUserValue));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(addUserErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [addUserErrors]);\r\n\r\n  const updateAddUser = (e) => {\r\n    if (e.target.type === \"text\" || e.target.type === \"password\") {\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else if (e.target.type === \"file\") {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onloadend = () => {\r\n        setAddUserValue({\r\n          ...addUserValue,\r\n          [e.target.name]: reader.result,\r\n        });\r\n      };\r\n    } else if (e.target.type === \"checkbox\") {\r\n      //   alert(e.target.name);\r\n      setAddUserValue({\r\n        ...addUserValue,\r\n        permissions: {\r\n          ...addUserValue.permissions,\r\n          [e.target.name]: e.target.checked,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return { addUserValue, handleAddUserSubmit, updateAddUser, addUserErrors };\r\n};\r\n\r\nexport default useFormAddUser;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\ObjectSlider\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Layout\\SidebarData.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\user.reducer.js",["715","716"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  users: {\r\n    userList: [],\r\n    fetching: false,\r\n    fetched: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  add_user: {\r\n    data: {},\r\n    adding: false,\r\n    added: false,\r\n    error: {\r\n      found: false,\r\n      status_code: 0,\r\n      message: \"\",\r\n    },\r\n  },\r\n  delete_user: {},\r\n  user_data: {},\r\n  // users: [],\r\n  // user: {\r\n  //   data: {},\r\n\r\n  //   deleting: false,\r\n  //   deleted: false,\r\n  // },\r\n  // add_user: {\r\n  //   data: {},\r\n  //   error: false,\r\n  //   message: \"\",\r\n  //   adding: false,\r\n  //   added: false,\r\n  // },\r\n  // fetching: false,\r\n  // fetched: false,\r\n  // error: {\r\n  //   found:false,\r\n  //   status_code: 0,\r\n  //   message: \"\",\r\n  // },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.USERS_FETCH_REQUEST:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetched: true,\r\n          fetching: false,\r\n          userList: action.payload.users,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USERS_FETCH_FAILURE:\r\n      state = {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          fetching: false,\r\n          error: {\r\n            found: true,\r\n            status_code: action.payload.status_code,\r\n            message: action.payload.message,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        fetched: true,\r\n        fetching: false,\r\n        user: action.payload.user,\r\n      };\r\n      break;\r\n    case authConstants.USER_DATA_FAILURE:\r\n      state = {\r\n        ...initialState,\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_DELETE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          deleting: false,\r\n          deleted: true,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_REQUEST:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...initialState.add_user,\r\n          data: action.payload.data,\r\n          adding: true,\r\n          added: false,\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          adding: false,\r\n          added: true,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: false,\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case authConstants.USER_ADD_FAILURE:\r\n      state = {\r\n        ...state,\r\n        add_user: {\r\n          ...state.add_user,\r\n          added: false,\r\n          adding: false,\r\n          error: {\r\n            ...state.add_user.error,\r\n            found: true,\r\n            message: action.payload.message,\r\n            status_code: action.payload.status,\r\n          },\r\n        },\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\SearchBar\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\auth.reducers.js",["717","718","719"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\DepositItemList\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogue\\useCatalogue.js",["720","721","722","723","724","725","726"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\index.js",["727"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepNineValidator from \"./StepNineValidator\";\r\nimport useStepNineForm from \"./useStepNineForm\";\r\n\r\nfunction Step9(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      GenotypeAndGenetics: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepNineForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepNineValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Genotype And Genetics</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Genotype\"\r\n          type=\"text\"\r\n          name=\"Genotype\"\r\n          placeholder=\"Enter Genotype here\"\r\n          value={value.Genotype}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Genotype && <p style={{ color: \"red\" }}>{errors.Genotype}</p>}\r\n        <Input\r\n          label=\"Phenotype\"\r\n          type=\"text\"\r\n          name=\"Phenotype\"\r\n          placeholder=\"Enter Phenotype here\"\r\n          value={value.Phenotype}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Phenotype && <p style={{ color: \"red\" }}>{errors.Phenotype}</p>}\r\n        <Input\r\n          label=\"MatingType\"\r\n          type=\"text\"\r\n          name=\"MatingType\"\r\n          placeholder=\"Enter MatingType here\"\r\n          value={value.MatingType}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MatingType && (\r\n          <p style={{ color: \"red\" }}>{errors.MatingType}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sexual Reproduction\"\r\n          type=\"text\"\r\n          name=\"SexualReproduction\"\r\n          placeholder=\"Enter Sexual Reproduction here\"\r\n          value={value.SexualReproduction}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SexualReproduction && (\r\n          <p style={{ color: \"red\" }}>{errors.SexualReproduction}</p>\r\n        )}\r\n        <Input\r\n          label=\"GC Content of DNA\"\r\n          type=\"text\"\r\n          name=\"GCContentOfDNA\"\r\n          placeholder=\"Enter GC Content of DNA here\"\r\n          value={value.GCContentOfDNA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.GCContentOfDNA && (\r\n          <p style={{ color: \"red\" }}>{errors.GCContentOfDNA}</p>\r\n        )}\r\n        <Input\r\n          label=\"Other Strains Hybridization\"\r\n          type=\"text\"\r\n          name=\"OtherStrainsHybridization\"\r\n          placeholder=\"Enter Other Strains Hybridization here\"\r\n          value={value.OtherStrainsHybridization}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.OtherStrainsHybridization && (\r\n          <p style={{ color: \"red\" }}>{errors.OtherStrainsHybridization}</p>\r\n        )}\r\n        <Input\r\n          label=\"Hybridization Strain Number\"\r\n          type=\"text\"\r\n          name=\"HybridizationStrainNumber\"\r\n          placeholder=\"Enter Hybridization Strain Number here\"\r\n          value={value.HybridizationStrainNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HybridizationStrainNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.HybridizationStrainNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Type of DNA or RNA\"\r\n          type=\"text\"\r\n          name=\"TypeOfDNAOrRNA\"\r\n          placeholder=\"Enter Type of DNA or RNA here\"\r\n          value={value.TypeOfDNAOrRNA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TypeOfDNAOrRNA && (\r\n          <p style={{ color: \"red\" }}>{errors.TypeOfDNAOrRNA}</p>\r\n        )}\r\n        <Input\r\n          label=\"Percentage\"\r\n          type=\"text\"\r\n          name=\"Percentage\"\r\n          placeholder=\"Enter Percentage here\"\r\n          value={value.Percentage}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Percentage && (\r\n          <p style={{ color: \"red\" }}>{errors.Percentage}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature of Hybridization\"\r\n          type=\"text\"\r\n          name=\"TemperatureOfHybridization\"\r\n          placeholder=\"Enter Temperature of Hybridization here\"\r\n          value={value.TemperatureOfHybridization}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureOfHybridization && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureOfHybridization}</p>\r\n        )}\r\n        <Input\r\n          label=\"Mutants\"\r\n          type=\"text\"\r\n          name=\"Mutants\"\r\n          placeholder=\"Enter Mutants here\"\r\n          value={value.Mutants}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Mutants && <p style={{ color: \"red\" }}>{errors.Mutants}</p>}\r\n        <Input\r\n          label=\"Mutation Methods\"\r\n          type=\"text\"\r\n          name=\"MutationMethods\"\r\n          placeholder=\"Enter Mutation Methods here\"\r\n          value={value.MutationMethods}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MutationMethods && (\r\n          <p style={{ color: \"red\" }}>{errors.MutationMethods}</p>\r\n        )}\r\n        <Input\r\n          label=\"Hybrids\"\r\n          type=\"text\"\r\n          name=\"Hybrids\"\r\n          placeholder=\"Enter Hybrids here\"\r\n          value={value.Hybrids}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Hybrids && <p style={{ color: \"red\" }}>{errors.Hybrids}</p>}\r\n        <Input\r\n          label=\"Plasmid\"\r\n          type=\"text\"\r\n          name=\"Plasmid\"\r\n          placeholder=\"Enter Plasmid here\"\r\n          value={value.Plasmid}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Plasmid && <p style={{ color: \"red\" }}>{errors.Plasmid}</p>}\r\n        <Input\r\n          label=\"Killer Properties Of Yeast\"\r\n          type=\"text\"\r\n          name=\"KillerPropertiesOfYeast\"\r\n          placeholder=\"Enter Killer Properties of Yeast here\"\r\n          value={value.KillerPropertiesOfYeast}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.KillerPropertiesOfYeast && (\r\n          <p style={{ color: \"red\" }}>{errors.KillerPropertiesOfYeast}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step9;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\index.js",["728"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepThirteenValidator from \"./StepThirteenValidator\";\r\nimport useStepThirteenForm from \"./useStepThirteenForm\";\r\n\r\nfunction Step13(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Sequence: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepThirteenForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepThirteenValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Sequence</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Accession Number\"\r\n          type=\"text\"\r\n          name=\"AccessionNumber\"\r\n          placeholder=\"Enter Accession Number here\"\r\n          value={value.AccessionNumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AccessionNumber && (\r\n          <p style={{ color: \"red\" }}>{errors.AccessionNumber}</p>\r\n        )}\r\n        <Input\r\n          label=\"Target Gene\"\r\n          type=\"text\"\r\n          name=\"TargetGene\"\r\n          placeholder=\"Enter Target Gene here\"\r\n          value={value.TargetGene}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TargetGene && (\r\n          <p style={{ color: \"red\" }}>{errors.TargetGene}</p>\r\n        )}\r\n        <Input\r\n          label=\"Definition\"\r\n          type=\"text\"\r\n          name=\"Definition\"\r\n          placeholder=\"Enter Definition here\"\r\n          value={value.Definition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Definition && (\r\n          <p style={{ color: \"red\" }}>{errors.Definition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Sequencing Method\"\r\n          type=\"text\"\r\n          name=\"SequencingMethod\"\r\n          placeholder=\"Enter Sequencing Method here\"\r\n          value={value.SequencingMethod}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SequencingMethod && (\r\n          <p style={{ color: \"red\" }}>{errors.SequencingMethod}</p>\r\n        )}\r\n        <Input\r\n          label=\"Length\"\r\n          type=\"text\"\r\n          name=\"Length\"\r\n          placeholder=\"Enter Length here\"\r\n          value={value.Length}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Length && <p style={{ color: \"red\" }}>{errors.Length}</p>}\r\n        <Input\r\n          label=\"Sequence Type\"\r\n          type=\"text\"\r\n          name=\"SequenceType\"\r\n          placeholder=\"Enter Sequence Type here\"\r\n          value={value.SequenceType}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SequenceType && (\r\n          <p style={{ color: \"red\" }}>{errors.SequenceType}</p>\r\n        )}\r\n        <Input\r\n          label=\"Source\"\r\n          type=\"text\"\r\n          name=\"Source\"\r\n          placeholder=\"Enter Source here\"\r\n          value={value.Source}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Source && <p style={{ color: \"red\" }}>{errors.Source}</p>}\r\n        <Input\r\n          label=\"Sequence\"\r\n          type=\"text\"\r\n          name=\"Sequence\"\r\n          placeholder=\"Enter Sequence here\"\r\n          value={value.Sequence}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Sequence && <p style={{ color: \"red\" }}>{errors.Sequence}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step13;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddMicroorganismModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\useStepFiveForm.js",["729"],"import { useEffect, useState } from \"react\";\r\nconst useStepFiveForm = (initialValue, handleSubmission, StepFiveValidator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepFiveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepFiveForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\useStepSixForm.js",["730"],"import { useEffect, useState } from \"react\";\r\nconst useStepSixForm = (InitialValue, handleSubmission, StepSixValidator) => {\r\n  const [value, setValue] = useState(InitialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepSixValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepSixForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step14\\StepFourteenValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\StepFourValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step13\\useStepThirteenForm.js",["731"],"import { useEffect, useState } from \"react\";\r\nconst useStepThirteenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThirteenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThirteenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThirteenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step1\\StepOneValidator.js",["732"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\useStepTwelveForm.js",["733"],"import { useEffect, useState } from \"react\";\r\nconst useStepTwelveForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepTwelveValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepTwelveValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepTwelveForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\StepThreeValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\TagInput\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\index.js",["734"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Button\\Button.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reportWebVitals.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Users\\index.js",["735"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Container, Form, Row, Spinner, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { getUsers } from \"../../actions/user.actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddUserModal from \"../../components/Modals/AddUserModal\";\r\nimport ResponseModal from \"../../components/Modals/ResponseModal\";\r\nimport DeleteUserModal from \"../../components/Modals/DeleteUserModal\";\r\nimport { deleteMicroorganism } from \"../../actions/catalogue.actions\";\r\nimport Input from \"../../components/UI/Input/input\";\r\n\r\nconst Users = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { permissions } = useSelector((state) => state.auth.user);\r\n  const { fetching, users, add_user } = useSelector((state) => state.user);\r\n\r\n  /////delete record id\r\n  const [deleteRecordId, setDeleteRecordId] = useState(\"\");\r\n  const deleteRecordRef = useRef();\r\n  const deleteRecord = () => {\r\n    const data = {\r\n      id: deleteRecordId,\r\n    };\r\n    console.log(\"user deleted\");\r\n    dispatch(deleteMicroorganism(data, token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(token));\r\n  }, []);\r\n\r\n  ///////////////////////////////////////////////////////\r\n  //query and search\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\"admin\", \"internal\", \"external\"];\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  useEffect(() => {\r\n    setData(users);\r\n  }, [users]);\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  //request response\r\n  const serverResponseRef = useRef();\r\n  const handleResponse = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  /////add user\r\n  const addUserRef = useRef();\r\n  const handleAddModalShow = () => {\r\n    addUserRef.current.show();\r\n  };\r\n\r\n  const handleAddUser = (userData) => {\r\n    console.log(\"handling add user\");\r\n    // dispatch(addUser(userData, token));\r\n  };\r\n\r\n  const search = (rows) => {\r\n    return rows.filter((row) => {\r\n      const applyFilter = searchFilters[0]\r\n        ? searchFilters.includes(row[\"role\"].toLowerCase())\r\n        : true;\r\n      return (\r\n        columns &&\r\n        columns.some(\r\n          (column) =>\r\n            applyFilter &&\r\n            row[column].toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n              -1\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const recordOptions = (id) => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={{\r\n            pathname: permissions.view_U_Permission ? \"/dashboard/user\" : \"#\",\r\n            state: { userID: permissions.view_U_Permission ? id : undefined },\r\n          }}\r\n        >\r\n          <Button\r\n            variant={permissions.view_U_Permission ? \"primary\" : \"secondary\"}\r\n          >\r\n            View\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          variant={permissions.delete_U_Permission ? \"danger\" : \"secondary\"}\r\n          onClick={() => {\r\n            deleteRecordRef.current.show();\r\n            setDeleteRecordId(id);\r\n          }}\r\n        >\r\n          delete\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Layout sidebar>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <DeleteUserModal\r\n        title=\"Delete Record\"\r\n        confirm={() => deleteRecord()}\r\n        ref={deleteRecordRef}\r\n      >\r\n        Are you sure you want to delete this record\r\n      </DeleteUserModal>\r\n\r\n      <AddUserModal ref={addUserRef} confirm={handleAddUser} />\r\n      <ResponseModal\r\n        ref={serverResponseRef}\r\n        message={add_user.message}\r\n        confirm={handleResponse}\r\n      />\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <Container>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {filters &&\r\n            filters.map((filter) => {\r\n              return (\r\n                <Form.Check\r\n                  label={filter}\r\n                  name={filter}\r\n                  checked={searchFilters.includes(filter)}\r\n                  onChange={(e) => {\r\n                    const checked = searchFilters.includes(filter);\r\n                    setSearchFilters((prev) =>\r\n                      checked\r\n                        ? prev.filter((sf) => sf !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          <Button variant=\"primary\" onClick={() => handleAddModalShow()}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n      <Table stripped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            {columns &&\r\n              columns.map((heading) => {\r\n                return heading === \"_id\" ? null : <th>{heading}</th>;\r\n              })}\r\n            <th className=\"text-center\">Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {search(data).map((row) => {\r\n            return (\r\n              <tr>\r\n                {columns.map((heading) => {\r\n                  return heading === \"_id\" ? null : <td>{row[heading]}</td>;\r\n                })}\r\n                <td style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                  {recordOptions(row._id)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\DashboardCatalogueDetail\\index.js",["736","737","738"],"import { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nconst DashboardCatalogueDetail = (props) => {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = props.location.state;\r\n  const [data, setData] = useState({});\r\n\r\n  const [option, setOption] = useState(false);\r\n\r\n  const handleUpdateForm = (command) => {\r\n    if (command === \"save\") {\r\n      // dispatch(updateUserInfo(userData, token));\r\n      // setSavingData(!savingData);\r\n    }\r\n    setOption(!option);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.post(\r\n      \"/findmicroorganism\",\r\n      { id }\r\n      // { headers: { authorization: token } }\r\n    );\r\n    setData(res.data);\r\n  }, []);\r\n  return (\r\n    <Layout sidebar>\r\n      <Button\r\n        onClick={(e) =>\r\n          handleUpdateForm(e.target.innerHTML.trim().toLowerCase())\r\n        }\r\n      >\r\n        {option ? \"Save\" : \"Edit\"}\r\n      </Button>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {Object.keys(data).map((heading, key) => {\r\n          return (\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey={`${key}`}>\r\n                {heading}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${key}`}>\r\n                <Card.Body>\r\n                  {Object.keys(data[heading]).map((label, i) => {\r\n                    return (\r\n                      <Row className=\"p-2\" key={i}>\r\n                        <Col>{label}</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            style={{ backgroundColor: \"green\" }}\r\n                            value={data[heading][label]}\r\n                            onChange={(e) => {\r\n                              setData({\r\n                                ...data,\r\n                                [heading]: {\r\n                                  ...data[heading],\r\n                                  [label]: e.target.value,\r\n                                },\r\n                              });\r\n                            }}\r\n                            disabled={!option}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardCatalogueDetail;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardDeposits\\index.js",["739","740","741","742","743","744"],"import React, { useState } from \"react\";\r\nimport DepositItemList from \"../../components/DepositItemList\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport DropDown from \"../../components/DropDown\";\r\n// import \"./style.css\";\r\nconst AdminDashboardDeposits = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      deposit_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      deposit_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.deposit_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Deposit ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\"></div>\r\n      <div className=\"div__two\">\r\n        <h3>Deposits</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Deposit ID\",\r\n                value: \"deposit_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <DepositItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardDeposits;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\signup.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\UI\\Input\\input.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\cart.actions.js",["745"],"E:\\Study\\FYP\\Project\\front-end\\src\\helpers\\templates.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\signup.reducers.js",["746"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\itemInfo.reducer.js",["747"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  details: {},\r\n  fetching: false,\r\n  fetched: false,\r\n  error: {\r\n    code: 0,\r\n    message: \"\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.CATALOGUE_ITEM_REQUEST:\r\n      state = {\r\n        ...state,\r\n        fetching: true,\r\n      };\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        details: action.payload.data,\r\n        fetched: true,\r\n        fetching: false,\r\n      };\r\n      console.log(\"Successfully updated the state\");\r\n      break;\r\n    case authConstants.CATALOGUE_ITEM_FAILURE:\r\n      state = {\r\n        ...state,\r\n        fetched: false,\r\n        fetching: false,\r\n        error: {\r\n          code: action.payload.status_code,\r\n          message: action.payload.message,\r\n        },\r\n      };\r\n      console.log(\"State updated for error recieved\");\r\n      break;\r\n    default:\r\n      state = initialState;\r\n  }\r\n  return state;\r\n};\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step12\\index.js",["748"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step10\\index.js",["749"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\ItemList\\index.js",["750","751"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step11\\useStepElevenForm.js",["752"],"import { useEffect, useState } from \"react\";\r\nconst useStepElevenForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepElevenValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepElevenValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepElevenForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\useStepThreeForm.js",["753"],"import { useEffect, useState } from \"react\";\r\nconst useStepThreeForm = (\r\n  initialValue,\r\n  handleSubmission,\r\n  StepThreeValidator\r\n) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(StepThreeValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, value, updateValue, errors };\r\n};\r\n\r\nexport default useStepThreeForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\StepEightValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Status\\index.js",["754","755"],"import { Badge } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './style.css'\r\nconst Status=(props)=>{\r\n    const completed ='rgb(5, 168, 5)';\r\n    const pending = 'rgb(201, 158, 79)';\r\n    const cancelled ='red';\r\n\r\n    const getColor=()=>{\r\n        if(props.status.toLowerCase() =='completed'){\r\n            return completed;\r\n        }\r\n        if(props.status.toLowerCase() ==='pending'){\r\n            return pending;\r\n        }\r\n        if(props.status.toLowerCase() ==='cancelled'){\r\n            return cancelled;\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n           \r\n            <span className=\"status-color\" style={{backgroundColor:`${\r\n               getColor()\r\n            }`}}></span>\r\n            <span style={{color:`${getColor()}`}}>{props.status}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Status;","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\useAddUserForm.js",["756"],"import { useState, useEffect } from \"react\";\r\n\r\nconst useAddUserForm = (handleSubmission, AddUserValidator) => {\r\n  const [value, setValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    // affiliation: \"\",\r\n    // description: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    role: \"\",\r\n    permissions: {\r\n      add_M_Permission: false,\r\n      update_M_Permission: false,\r\n      delete_M_Permission: false,\r\n      view_M_Permission: false,\r\n      view_U_Permission: false,\r\n      update_U_Permission: false,\r\n      delete_U_Permission: false,\r\n      add_U_Permission: false,\r\n      view_D_Permission: false,\r\n      view_P_Permission: false,\r\n      view_O_Permission: false,\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(AddUserValidator(value));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(Object.keys(errors));\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [errors]);\r\n\r\n  const updateValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const updatePermissionValue = (e) => {\r\n    setValue({\r\n      ...value,\r\n      permissions: {\r\n        ...value.permissions,\r\n        [e.target.name]: e.target.checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  return { handleSubmit, updatePermissionValue, value, errors, updateValue };\r\n};\r\n\r\nexport default useAddUserForm;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\User\\index.js",["757","758","759"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\Signup\\SignUpUseForm.js",["760","761"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\catalogue.actions.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\PageHeader\\index.js",["762","763","764","765","766","767","768","769","770"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport \"./style.css\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst PageHeader = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [sideBarshow, setSideBarShow] = useState(false);\r\n  const [searchBarShow, setSearchBarShow] = useState(false);\r\n  const [userSignedIn, setUserSignedIn] = useState(false);\r\n  const authenticate = useSelector((state) => state.auth.authenticate);\r\n  const error = useSelector((state) => state.auth.error);\r\n\r\n  const handleLogout = () => {\r\n    setUserSignedIn(false);\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(authenticate);\r\n    if (authenticate) {\r\n      setUserSignedIn(true);\r\n    }\r\n  }, [authenticate]);\r\n  return (\r\n    <>\r\n      {sideBarshow ? (\r\n        <div className={sideBarshow ? \"sidebar-active\" : \"sidebar\"}>\r\n          <div className=\"sidebar-upper-div\">\r\n            <div className=\"sidebar-upper-div-options\">\r\n              <HomeIcon fontSize=\"large\" />\r\n              {userSignedIn ? (\r\n                <Link onClick={(e) => handleLogout()}>Sign Out</Link>\r\n              ) : (\r\n                <Link to=\"/signin\">Sign In</Link>\r\n              )}\r\n            </div>\r\n            {/* <CloseIcon onClick={(e) => setSideBarShow(false)} /> */}\r\n          </div>\r\n          <div className=\"sidebar-links\">\r\n            <ul className=\"sidebar-links-list\">\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">About NCCP</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Deposit</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Order</a>\r\n              </li>\r\n              <li className=\"sidebar-links-list-item\">\r\n                <a className=\"sidebar-links-list-item-link\">Contact Us</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"sidebar-footer\">\r\n            <ul className=\"sidebar-footer-list\">\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n              <li className=\"sidebar-footer-list-items\">\r\n                <ShoppingCartIcon className=\"sidebar-footer-list-item\" />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"upper-ticker\">\r\n        <Container className=\"upper-ticker-content\">\r\n          <div className=\"upper-ticker-contacts\">\r\n            <div className=\"upper-ticker-contact-number\">\r\n              <PhoneIcon fontSize=\"small\" />\r\n              <span> +923356291805</span>\r\n            </div>\r\n            <div className=\"upper-ticker-contact-email\">\r\n              <EmailOutlined />\r\n              <span> zainnoor6035020@gmail.com</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"upper-ticker-timings\">\r\n            <QueryBuilderIcon />\r\n            <span> Working Hours - Mon - Fri: 9:30 - 18:30</span>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <div className=\"stickable-navbar\">\r\n        <Container className=\"stickable-navbar-content\">\r\n          <div className=\"stickable-navbar-logo\">NCCP</div>\r\n          <div className=\"stickable-navbar-links\">\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Home\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Resources\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Services\r\n            </a>\r\n            <a href=\"#\" className=\"stickable-navbar-link\">\r\n              Contact\r\n            </a>\r\n            <div className=\"stickable-navbar-operations\">\r\n              <div className=\"stickable-navbar-operation-sign-in\">\r\n                {userSignedIn ? (\r\n                  <Link onClick={(e) => handleLogout()}>Sign Out</Link>\r\n                ) : (\r\n                  <Link to=\"/signin\">Sign In</Link>\r\n                )}\r\n              </div>\r\n              <div className=\"stickable-navbar-operation-cart\">\r\n                <ShoppingCartOutlinedIcon fontSize=\"small\" />\r\n              </div>\r\n              <div\r\n                className=\"stickable-navbar-operation-search\"\r\n                onClick={(e) => setSearchBarShow(!searchBarShow)}\r\n              >\r\n                {searchBarShow ? <CloseOutlinedIcon /> : <SearchOutlinedIcon />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"stickable-navbar-hamburger-menu\"\r\n            onClick={(e) => setSideBarShow(!sideBarshow)}\r\n          >\r\n            {sideBarshow ? (\r\n              <CloseOutlinedIcon fontSize=\"large\" />\r\n            ) : (\r\n              <MenuRoundedIcon fontSize=\"large\" />\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\actions\\constants.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\server_urls.js\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\ResetPassword\\useFormResetPassword.js",["771","772","773"],"import React, { useEffect, useState } from \"react\";\r\nimport ResetPasswordValidator from \"./ResetPasswordValidator\";\r\nconst useFormResetPassword = (handleSubmission, ResetPasswordValidator) => {\r\n  const [resetPassword, setResetPassword] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [resetPasswordErrors, setResetPasswordErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n  const handleResetSubmit = (e) => {\r\n    e.preventDefault();\r\n    setResetPasswordErrors(ResetPasswordValidator(resetPassword));\r\n    setSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(resetPasswordErrors).length === 0 && isSubmitting) {\r\n      handleSubmission();\r\n    }\r\n  }, [resetPasswordErrors]);\r\n\r\n  const updateResetPassword = (e) => {\r\n    setResetPassword({\r\n      ...resetPassword,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return {\r\n    resetPassword,\r\n    handleResetSubmit,\r\n    updateResetPassword,\r\n    resetPasswordErrors,\r\n  };\r\n};\r\n\r\nexport default useFormResetPassword;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\OrderItemList\\index.js",["774","775","776"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\ResponseModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step5\\index.js",["777"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFiveValidator from \"./StepFiveValidator\";\r\nimport useStepFiveForm from \"./useStepFiveForm\";\r\n\r\nfunction Step5(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      Publication: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFiveForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFiveValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Publication</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Literature Categories\"\r\n          type=\"text\"\r\n          name=\"LiteratureCategories\"\r\n          placeholder=\"Enter Literature Categories here\"\r\n          value={value.LiteratureCategories}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.LiteratureCategories && (\r\n          <p style={{ color: \"red\" }}>{errors.LiteratureCategories}</p>\r\n        )}\r\n        <Input\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"Title\"\r\n          placeholder=\"Enter Title here\"\r\n          value={value.Title}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Title && <p style={{ color: \"red\" }}>{errors.Title}</p>}\r\n        <Input\r\n          label=\"Author\"\r\n          type=\"text\"\r\n          name=\"Author\"\r\n          placeholder=\"Enter Author here\"\r\n          value={value.Author}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Author && <p style={{ color: \"red\" }}>{errors.Author}</p>}\r\n        <Input\r\n          label=\"Journal\"\r\n          type=\"text\"\r\n          name=\"Journal\"\r\n          placeholder=\"Enter Journal here\"\r\n          value={value.Journal}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Journal && <p style={{ color: \"red\" }}>{errors.Journal}</p>}\r\n        <Input\r\n          label=\"Volume\"\r\n          type=\"text\"\r\n          name=\"Volume\"\r\n          placeholder=\"Enter Volume here\"\r\n          value={value.Volume}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Volume && <p style={{ color: \"red\" }}>{errors.Volume}</p>}\r\n        <Input\r\n          label=\"Number\"\r\n          type=\"text\"\r\n          name=\"Number\"\r\n          placeholder=\"Enter Number here\"\r\n          value={value.Number}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Number && <p style={{ color: \"red\" }}>{errors.Number}</p>}\r\n        <Input\r\n          label=\"Starting Page\"\r\n          type=\"text\"\r\n          name=\"StartingPage\"\r\n          placeholder=\"Enter Starting Page here\"\r\n          value={value.StartingPage}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.StartingPage && (\r\n          <p style={{ color: \"red\" }}>{errors.StartingPage}</p>\r\n        )}\r\n        <Input\r\n          label=\"Page Range\"\r\n          type=\"text\"\r\n          name=\"PageRange\"\r\n          placeholder=\"Enter Page Range here\"\r\n          value={value.PageRange}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PageRange && <p style={{ color: \"red\" }}>{errors.PageRange}</p>}\r\n        <Input\r\n          label=\"Year\"\r\n          type=\"text\"\r\n          name=\"Year\"\r\n          placeholder=\"Enter Year here\"\r\n          value={value.Year}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Year && <p style={{ color: \"red\" }}>{errors.Year}</p>}\r\n        <Input\r\n          label=\"DOI Number\"\r\n          type=\"text\"\r\n          name=\"DOINumber\"\r\n          placeholder=\"Enter DOI Number here\"\r\n          value={value.DOINumber}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DOINumber && <p style={{ color: \"red\" }}>{errors.DOINumber}</p>}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step5;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step6\\StepSixValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step2\\StepTwoValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\App.js",["778","779","780","781","782","783","784","785","786","787"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardOrders\\index.js",["788","789","790","791","792","793"],"import React, { useState } from \"react\";\r\nimport SideBar from \"../../components/SideBar\";\r\nimport { Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport OrderItemList from \"../../components/OrderItemList\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport \"./style.css\";\r\n\r\nconst AdminDashboardOrders = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      order_id: \"120191\",\r\n      created: \"Aug 1,2019\",\r\n      customer: \"Harriet Santigo\",\r\n      total: \"$604.50\",\r\n      status: \"Request\",\r\n    },\r\n    {\r\n      order_id: \"121090\",\r\n      created: \"Jul 21,2019\",\r\n      customer: \"Sara Graham\",\r\n      total: \"$524.25\",\r\n      status: \"Processing\",\r\n    },\r\n  ]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const search = (data) => {\r\n    return data.filter((row) => {\r\n      const applyFilter =\r\n        filter === \"\" || row.status.toLowerCase() === filter.toLowerCase();\r\n      return (\r\n        applyFilter &&\r\n        (row.order_id.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n          -1 ||\r\n          row.customer.toString().toLowerCase().indexOf(query.toLowerCase()) >\r\n            -1)\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortData = (data) => {\r\n    data[0] &&\r\n      data.sort((a, b) => b[sortBy.toLowerCase()] - a[sortBy.toLowerCase()]);\r\n    return data.sort(\r\n      (a, b) => b[sortBy.toLowerCase() - a[sortBy.toLowerCase()]]\r\n    );\r\n  };\r\n\r\n  const requestSent = () => {\r\n    return (\r\n      <div className=\"fetch__data__div\">\r\n        <h3 className=\"fetch__data__title\">Users info is being fetched</h3>\r\n        <CircularProgress className=\"fetch__data__spinner\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ErrorMessage = () => {\r\n    return (\r\n      <div className=\"error__div\">\r\n        <h3 className=\"error__title\">{\"abc\"}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order ID\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Created\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Total\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SideBar active=\"Orders\">\r\n      <div className=\"div__one\">\r\n        {/* <SearchBar query={query} setQuery={setQuery} /> */}\r\n        {/* <Button variant=\"contained\" color=\"primary\">\r\n          <Link\r\n            to=\"/dashboard/addUser\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Add User +\r\n          </Link>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"div__two\">\r\n        <h3>Orders</h3>\r\n        <div>\r\n          <DropDown\r\n            title=\"Sort By\"\r\n            value={sortBy}\r\n            setValue={setSortBy}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"OrderID\",\r\n                value: \"order_id\",\r\n              },\r\n              {\r\n                title: \"Customer Name\",\r\n                value: \"customer_name\",\r\n              },\r\n              {\r\n                title: \"Total\",\r\n                value: \"total\",\r\n              },\r\n            ]}\r\n          />\r\n          <DropDown\r\n            title=\"Status\"\r\n            value={filter}\r\n            setValue={setFilter}\r\n            variant=\"outlined\"\r\n            labelWidth={60}\r\n            width=\"150px\"\r\n            data={[\r\n              {\r\n                title: \"Request\",\r\n                value: \"request\",\r\n              },\r\n              {\r\n                title: \"Processing\",\r\n                value: \"processing\",\r\n              },\r\n              {\r\n                title: \"Sent\",\r\n                value: \"sent\",\r\n              },\r\n              {\r\n                title: \"Approved\",\r\n                value: \"approved\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"div__three\">\r\n        <OrderItemList columns={columns} rows={sortData(search(data))} />\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardOrders;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\containers\\EmailVerified\\index.js",["794","795","796","797"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport axios from \"../../helpers/axios\";\r\nimport \"./style.css\";\r\nimport { responsiveFontSizes } from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nconst EmailVerified = (props) => {\r\n  const token = window.location.href.split(\"/\")[\r\n    window.location.href.split(\"/\").length - 1\r\n  ];\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [message, setMessage] = useState(\"initial message\");\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .post(\"/verifyEmail\", { token })\r\n      .then((response) => {\r\n        setEmailVerified(true);\r\n        setMessage(response.data.message);\r\n      })\r\n      .catch(({ response }) => {\r\n        setEmailVerified(false);\r\n        setMessage(response.data.message);\r\n      });\r\n    setModalOpen(true);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className=\"signup-response-modal\"\r\n      open={modalOpen}\r\n      onClose={(e) => {\r\n        setModalOpen(false);\r\n        // props.history.push(\"/signin\");\r\n      }}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <div className=\"email-verify-modal-content-div\">\r\n          {emailVerified ? (\r\n            <CheckCircleIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          ) : (\r\n            <ErrorIcon\r\n              className=\"email-verify-modal-icon\"\r\n              style={{ fontSize: \"5.5rem\" }}\r\n            />\r\n          )}\r\n          <h2 id=\"transition-modal-title\">\r\n            {emailVerified ? \"Success\" : \"Error\"}\r\n          </h2>\r\n          <p id=\"transition-modal-description\">{message}</p>\r\n          <Link to=\"/signin\">\r\n            Go to {emailVerified ? \"Sign In\" : \"Sign Up\"}\r\n          </Link>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmailVerified;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\DeleteUserModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step4\\index.js",["798"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepFourValidator from \"./StepFourValidator\";\r\nimport useStepFourForm from \"./useStepFourForm\";\r\n\r\nfunction Step4(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      EnviromentAndHistory: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepFourForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepFourValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Enviroment And History</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"SubStrate\"\r\n          type=\"text\"\r\n          name=\"SubStrate\"\r\n          placeholder=\"Enter SubStrate here\"\r\n          value={value.SubStrate}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.SubStrate && <p style={{ color: \"red\" }}>{errors.SubStrate}</p>}\r\n        <Input\r\n          label=\"Habitat\"\r\n          type=\"text\"\r\n          name=\"Habitat\"\r\n          placeholder=\"Enter Habitat here\"\r\n          value={value.Habitat}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Habitat && <p style={{ color: \"red\" }}>{errors.Habitat}</p>}\r\n        <Input\r\n          label=\"Latitude\"\r\n          type=\"text\"\r\n          name=\"Latitude\"\r\n          placeholder=\"Enter Latitude here\"\r\n          value={value.Latitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Latitude && <p style={{ color: \"red\" }}>{errors.Latitude}</p>}\r\n        <Input\r\n          label=\"Longitude\"\r\n          type=\"text\"\r\n          name=\"Longitude\"\r\n          placeholder=\"Enter Longitude here\"\r\n          value={value.Longitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Longitude && <p style={{ color: \"red\" }}>{errors.Longitude}</p>}\r\n        <Input\r\n          label=\"Altitude\"\r\n          type=\"text\"\r\n          name=\"Altitude\"\r\n          placeholder=\"Enter Altitude here\"\r\n          value={value.Altitude}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Altitude && <p style={{ color: \"red\" }}>{errors.Altitude}</p>}\r\n        <Input\r\n          label=\"Depth\"\r\n          type=\"text\"\r\n          name=\"Depth\"\r\n          placeholder=\"Enter Depth here\"\r\n          value={value.Depth}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Depth && <p style={{ color: \"red\" }}>{errors.Depth}</p>}\r\n        <Input\r\n          label=\"Humidity\"\r\n          type=\"text\"\r\n          name=\"Humidity\"\r\n          placeholder=\"Enter Humidity here\"\r\n          value={value.Humidity}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.Humidity && <p style={{ color: \"red\" }}>{errors.Humidity}</p>}\r\n        <Input\r\n          label=\"PH for Enviroment\"\r\n          type=\"text\"\r\n          name=\"PHForEnviroment\"\r\n          placeholder=\"Enter PH for Enviroment here\"\r\n          value={value.PHForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PHForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.PHForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"Temperature for Enviroment\"\r\n          type=\"text\"\r\n          name=\"TemperatureForEnviroment\"\r\n          placeholder=\"Enter Temperature for Enviroment here\"\r\n          value={value.TemperatureForEnviroment}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.TemperatureForEnviroment && (\r\n          <p style={{ color: \"red\" }}>{errors.TemperatureForEnviroment}</p>\r\n        )}\r\n        <Input\r\n          label=\"CollectionMethod\"\r\n          type=\"text\"\r\n          name=\"CollectionMethod\"\r\n          placeholder=\"Enter CollectionMethod here\"\r\n          value={value.CollectionMethod}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectionMethod && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectionMethod}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Collection\"\r\n          type=\"date\"\r\n          name=\"DateOfCollection\"\r\n          placeholder=\"Enter Date of collection here\"\r\n          value={value.DateOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Collection\"\r\n          type=\"text\"\r\n          name=\"CountryOfCollection\"\r\n          placeholder=\"Enter Country of Collection here\"\r\n          value={value.CountryOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"State\"\r\n          type=\"text\"\r\n          name=\"State\"\r\n          placeholder=\"Enter State here\"\r\n          value={value.State}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.State && <p style={{ color: \"red\" }}>{errors.State}</p>}\r\n        <Input\r\n          label=\"Region of Collection\"\r\n          type=\"text\"\r\n          name=\"RegionOfCollection\"\r\n          placeholder=\"Enter Region of Collection here\"\r\n          value={value.RegionOfCollection}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RegionOfCollection && (\r\n          <p style={{ color: \"red\" }}>{errors.RegionOfCollection}</p>\r\n        )}\r\n        <Input\r\n          label=\"Collected By\"\r\n          type=\"text\"\r\n          name=\"CollectedBy\"\r\n          placeholder=\"Collected By\"\r\n          value={value.CollectedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CollectedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.CollectedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Isolated By\"\r\n          type=\"text\"\r\n          name=\"IsolatedBy\"\r\n          placeholder=\"Enter Isolated By here\"\r\n          value={value.IsolatedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IsolatedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IsolatedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Method of Isolation\"\r\n          type=\"text\"\r\n          name=\"MethodOfIsolation\"\r\n          placeholder=\"Method of Isolation\"\r\n          value={value.MethodOfIsolation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MethodOfIsolation && (\r\n          <p style={{ color: \"red\" }}>{errors.MethodOfIsolation}</p>\r\n        )}\r\n        <Input\r\n          label=\"Identified By\"\r\n          type=\"text\"\r\n          name=\"IdentifiedBy\"\r\n          placeholder=\"IdentifiedBy\"\r\n          value={value.IdentifiedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.IdentifiedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.IdentifiedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date Of Identification\"\r\n          type=\"date\"\r\n          name=\"DateOfIdentification\"\r\n          placeholder=\"Date Of Identification\"\r\n          value={value.DateOfIdentification}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfIdentification && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfIdentification}</p>\r\n        )}\r\n        <Input\r\n          label=\"Deposited By\"\r\n          type=\"text\"\r\n          name=\"DepositedBy\"\r\n          placeholder=\"Deposited By\"\r\n          value={value.DepositedBy}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DepositedBy && (\r\n          <p style={{ color: \"red\" }}>{errors.DepositedBy}</p>\r\n        )}\r\n        <Input\r\n          label=\"Date of Deposition\"\r\n          type=\"date\"\r\n          name=\"DateOfDeposition\"\r\n          placeholder=\"Date of Deposition\"\r\n          value={value.DateOfDeposition}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfDeposition && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfDeposition}</p>\r\n        )}\r\n        <Input\r\n          label=\"Name At Accept\"\r\n          type=\"text\"\r\n          name=\"NameAtAccept\"\r\n          placeholder=\"Name At Accept\"\r\n          value={value.NameAtAccept}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.NameAtAccept && (\r\n          <p style={{ color: \"red\" }}>{errors.NameAtAccept}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step4;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step3\\index.js",["799"],"import React, { useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport Input from \"../../UI/Input/input\";\r\nimport StepThreeValidator from \"./StepThreeValidator\";\r\nimport useStepThreeForm from \"./useStepThreeForm\";\r\n\r\nfunction Step3(props) {\r\n  const handleSubmission = () => {\r\n    props.next({\r\n      StrainAdministration: value,\r\n    });\r\n  };\r\n\r\n  const { handleSubmit, value, updateValue, errors } = useStepThreeForm(\r\n    props.data,\r\n    handleSubmission,\r\n    StepThreeValidator\r\n  );\r\n  return (\r\n    <Container fluid>\r\n      <h1>Strain Administration</h1>\r\n      <Form>\r\n        <Input\r\n          label=\"Date of Accession\"\r\n          type=\"date\"\r\n          name=\"DateOfAccession\"\r\n          placeholder=\"Enter Date of Accession Here\"\r\n          value={value.DateOfAccession}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DateOfAccession && (\r\n          <p style={{ color: \"red\" }}>{errors.DateOfAccession}</p>\r\n        )}\r\n        <Input\r\n          label=\"HerbariumNo\"\r\n          type=\"text\"\r\n          name=\"HerbariumNo\"\r\n          placeholder=\"Enter HerbariumNo here\"\r\n          value={value.HerbariumNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.HerbariumNo && (\r\n          <p style={{ color: \"red\" }}>{errors.HerbariumNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Internal Identity Check\"\r\n          type=\"text\"\r\n          name=\"InternalIdentityCheck\"\r\n          placeholder=\"Enter Internal Identity Check here\"\r\n          value={value.InternalIdentityCheck}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.InternalIdentityCheck && (\r\n          <p style={{ color: \"red\" }}>{errors.InternalIdentityCheck}</p>\r\n        )}\r\n        <Input\r\n          label=\"Mode Of Preservation\"\r\n          type=\"text\"\r\n          name=\"ModeOfPreservation\"\r\n          placeholder=\"Enter Mode Of Preservation here\"\r\n          value={value.ModeOfPreservation}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.ModeOfPreservation && (\r\n          <p style={{ color: \"red\" }}>{errors.ModeOfPreservation}</p>\r\n        )}\r\n\r\n        <Form.Label>Bio Hazard Level</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={value.BioHazardLevel}\r\n          name=\"BioHazardLevel\"\r\n          onChange={(e) => updateValue(e)}\r\n        >\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n        </Form.Control>\r\n        {errors.BioHazardLevel && (\r\n          <p style={{ color: \"red\" }}>{errors.BioHazardLevel}</p>\r\n        )}\r\n        <Input\r\n          label=\"Remarks on Restrictions\"\r\n          type=\"text\"\r\n          name=\"RestrictionRemarks\"\r\n          placeholder=\"Enter Restriction Remarks here\"\r\n          value={value.RestrictionRemarks}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.RestrictionRemarks && (\r\n          <p style={{ color: \"red\" }}>{errors.RestrictionRemarks}</p>\r\n        )}\r\n        <Input\r\n          label=\"Country of Export\"\r\n          type=\"text\"\r\n          name=\"CountryOfExport\"\r\n          placeholder=\"Enter Country of Export here\"\r\n          value={value.CountryOfExport}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.CountryOfExport && (\r\n          <p style={{ color: \"red\" }}>{errors.CountryOfExport}</p>\r\n        )}\r\n        <Input\r\n          label=\"MTA\"\r\n          type=\"text\"\r\n          name=\"MTA\"\r\n          placeholder=\"Enter MTA here\"\r\n          value={value.MTA}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.MTA && <p style={{ color: \"red\" }}>{errors.MTA}</p>}\r\n        <Input\r\n          label=\"Distribution Restriction\"\r\n          type=\"text\"\r\n          name=\"DistributionRestriction\"\r\n          placeholder=\"Enter Distribution Restriction here\"\r\n          value={value.DistributionRestriction}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.DestributionRestriction && (\r\n          <p style={{ color: \"red\" }}>{errors.DestributionRestriction}</p>\r\n        )}\r\n        <Input\r\n          label=\"Animal Quarantine No\"\r\n          type=\"text\"\r\n          name=\"AnimalQuarantineNo\"\r\n          placeholder=\"Enter Animal Quarantine No here\"\r\n          value={value.AnimalQuarantineNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.AnimalQuarantineNo && (\r\n          <p style={{ color: \"red\" }}>{errors.AnimalQuarantineNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Plant Quarantine No\"\r\n          type=\"text\"\r\n          name=\"PlantQuarantineNo\"\r\n          placeholder=\"Enter Plant Quarantine No here\"\r\n          value={value.PlantQuarantineNo}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.PlantQuarantineNo && (\r\n          <p style={{ color: \"red\" }}>{errors.PlantQuarantineNo}</p>\r\n        )}\r\n        <Input\r\n          label=\"Form of Supply\"\r\n          type=\"text\"\r\n          name=\"FormOfSupply\"\r\n          placeholder=\"Enter Form of Supply here\"\r\n          value={value.FormOfSupply}\r\n          onChange={(e) => updateValue(e)}\r\n        />\r\n        {errors.FormOfSupply && (\r\n          <p style={{ color: \"red\" }}>{errors.FormOfSupply}</p>\r\n        )}\r\n      </Form>\r\n      <Button onClick={() => props.prev()}>Back</Button>\r\n      <Button onClick={(e) => handleSubmit(e)}>Next</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step3;\r\n","E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step9\\StepNineValidator.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step7\\useStepSevenForm.js",["800"],"E:\\Study\\FYP\\Project\\front-end\\src\\reducers\\dashboard.reducers.js",["801","802"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\Modals\\AddUserModal\\index.js",[],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\useFormUserSettings.js",["803","804"],"E:\\Study\\FYP\\Project\\front-end\\src\\containers\\AdminDashboardSettings\\userSettingsValidator.js",["805"],"E:\\Study\\FYP\\Project\\front-end\\src\\actions\\user.actions.js",["806","807"],"E:\\Study\\FYP\\Project\\front-end\\src\\components\\AddMicroorgansimForm\\Step8\\index.js",["808"],{"ruleId":"809","replacedBy":"810"},{"ruleId":"811","replacedBy":"812"},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"817","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":26},{"ruleId":"813","severity":1,"message":"814","line":1,"column":28,"nodeType":"815","messageId":"816","endLine":1,"endColumn":36},{"ruleId":"813","severity":1,"message":"818","line":3,"column":3,"nodeType":"815","messageId":"816","endLine":3,"endColumn":9},{"ruleId":"813","severity":1,"message":"819","line":4,"column":3,"nodeType":"815","messageId":"816","endLine":4,"endColumn":14},{"ruleId":"813","severity":1,"message":"820","line":5,"column":3,"nodeType":"815","messageId":"816","endLine":5,"endColumn":6},{"ruleId":"813","severity":1,"message":"821","line":9,"column":3,"nodeType":"815","messageId":"816","endLine":9,"endColumn":10},{"ruleId":"813","severity":1,"message":"822","line":11,"column":3,"nodeType":"815","messageId":"816","endLine":11,"endColumn":7},{"ruleId":"813","severity":1,"message":"823","line":12,"column":3,"nodeType":"815","messageId":"816","endLine":12,"endColumn":9},{"ruleId":"813","severity":1,"message":"824","line":13,"column":3,"nodeType":"815","messageId":"816","endLine":13,"endColumn":6},{"ruleId":"813","severity":1,"message":"825","line":14,"column":3,"nodeType":"815","messageId":"816","endLine":14,"endColumn":6},{"ruleId":"813","severity":1,"message":"826","line":16,"column":23,"nodeType":"815","messageId":"816","endLine":16,"endColumn":34},{"ruleId":"813","severity":1,"message":"827","line":17,"column":8,"nodeType":"815","messageId":"816","endLine":17,"endColumn":14},{"ruleId":"813","severity":1,"message":"828","line":20,"column":8,"nodeType":"815","messageId":"816","endLine":20,"endColumn":16},{"ruleId":"813","severity":1,"message":"829","line":22,"column":8,"nodeType":"815","messageId":"816","endLine":22,"endColumn":17},{"ruleId":"813","severity":1,"message":"830","line":23,"column":8,"nodeType":"815","messageId":"816","endLine":23,"endColumn":12},{"ruleId":"813","severity":1,"message":"831","line":24,"column":8,"nodeType":"815","messageId":"816","endLine":24,"endColumn":24},{"ruleId":"813","severity":1,"message":"832","line":26,"column":8,"nodeType":"815","messageId":"816","endLine":26,"endColumn":22},{"ruleId":"813","severity":1,"message":"833","line":28,"column":8,"nodeType":"815","messageId":"816","endLine":28,"endColumn":20},{"ruleId":"813","severity":1,"message":"834","line":30,"column":8,"nodeType":"815","messageId":"816","endLine":30,"endColumn":20},{"ruleId":"813","severity":1,"message":"835","line":34,"column":8,"nodeType":"815","messageId":"816","endLine":34,"endColumn":24},{"ruleId":"813","severity":1,"message":"836","line":36,"column":8,"nodeType":"815","messageId":"816","endLine":36,"endColumn":16},{"ruleId":"813","severity":1,"message":"837","line":37,"column":8,"nodeType":"815","messageId":"816","endLine":37,"endColumn":20},{"ruleId":"813","severity":1,"message":"838","line":38,"column":8,"nodeType":"815","messageId":"816","endLine":38,"endColumn":25},{"ruleId":"813","severity":1,"message":"839","line":39,"column":8,"nodeType":"815","messageId":"816","endLine":39,"endColumn":25},{"ruleId":"813","severity":1,"message":"840","line":40,"column":8,"nodeType":"815","messageId":"816","endLine":40,"endColumn":23},{"ruleId":"813","severity":1,"message":"841","line":41,"column":8,"nodeType":"815","messageId":"816","endLine":41,"endColumn":19},{"ruleId":"813","severity":1,"message":"842","line":42,"column":8,"nodeType":"815","messageId":"816","endLine":42,"endColumn":32},{"ruleId":"813","severity":1,"message":"843","line":43,"column":8,"nodeType":"815","messageId":"816","endLine":43,"endColumn":26},{"ruleId":"813","severity":1,"message":"844","line":44,"column":8,"nodeType":"815","messageId":"816","endLine":44,"endColumn":25},{"ruleId":"813","severity":1,"message":"845","line":52,"column":8,"nodeType":"815","messageId":"816","endLine":52,"endColumn":21},{"ruleId":"813","severity":1,"message":"846","line":53,"column":8,"nodeType":"815","messageId":"816","endLine":53,"endColumn":20},{"ruleId":"813","severity":1,"message":"847","line":59,"column":9,"nodeType":"815","messageId":"816","endLine":59,"endColumn":17},{"ruleId":"813","severity":1,"message":"848","line":61,"column":20,"nodeType":"815","messageId":"816","endLine":61,"endColumn":31},{"ruleId":"813","severity":1,"message":"849","line":67,"column":9,"nodeType":"815","messageId":"816","endLine":67,"endColumn":25},{"ruleId":"850","severity":1,"message":"851","line":128,"column":13,"nodeType":"852","endLine":128,"endColumn":57},{"ruleId":"853","severity":1,"message":"854","line":356,"column":15,"nodeType":"852","endLine":356,"endColumn":18},{"ruleId":"853","severity":1,"message":"854","line":366,"column":17,"nodeType":"852","endLine":366,"endColumn":20},{"ruleId":"855","severity":1,"message":"856","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":8,"suggestions":"858"},{"ruleId":null,"fatal":true,"severity":2,"message":"859","line":306,"column":25},{"ruleId":"813","severity":1,"message":"825","line":2,"column":10,"nodeType":"815","messageId":"816","endLine":2,"endColumn":13},{"ruleId":"813","severity":1,"message":"824","line":2,"column":26,"nodeType":"815","messageId":"816","endLine":2,"endColumn":29},{"ruleId":"813","severity":1,"message":"860","line":2,"column":31,"nodeType":"815","messageId":"816","endLine":2,"endColumn":36},{"ruleId":"813","severity":1,"message":"861","line":4,"column":8,"nodeType":"815","messageId":"816","endLine":4,"endColumn":34},{"ruleId":"813","severity":1,"message":"862","line":5,"column":8,"nodeType":"815","messageId":"816","endLine":5,"endColumn":36},{"ruleId":"813","severity":1,"message":"863","line":6,"column":8,"nodeType":"815","messageId":"816","endLine":6,"endColumn":18},{"ruleId":"813","severity":1,"message":"864","line":7,"column":28,"nodeType":"815","messageId":"816","endLine":7,"endColumn":34},{"ruleId":"809","replacedBy":"865"},{"ruleId":"811","replacedBy":"866"},{"ruleId":"813","severity":1,"message":"817","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":26},{"ruleId":"813","severity":1,"message":"823","line":6,"column":3,"nodeType":"815","messageId":"816","endLine":6,"endColumn":9},{"ruleId":"813","severity":1,"message":"867","line":13,"column":3,"nodeType":"815","messageId":"816","endLine":13,"endColumn":8},{"ruleId":"813","severity":1,"message":"868","line":18,"column":3,"nodeType":"815","messageId":"816","endLine":18,"endColumn":9},{"ruleId":"813","severity":1,"message":"869","line":1,"column":36,"nodeType":"815","messageId":"816","endLine":1,"endColumn":47},{"ruleId":"813","severity":1,"message":"870","line":9,"column":8,"nodeType":"815","messageId":"816","endLine":9,"endColumn":20},{"ruleId":"855","severity":1,"message":"871","line":24,"column":6,"nodeType":"857","endLine":24,"endColumn":8,"suggestions":"872"},{"ruleId":"873","severity":1,"message":"874","line":25,"column":1,"nodeType":"875","endLine":26,"endColumn":81},{"ruleId":"809","replacedBy":"876"},{"ruleId":"811","replacedBy":"877"},{"ruleId":"813","severity":1,"message":"878","line":4,"column":8,"nodeType":"815","messageId":"816","endLine":4,"endColumn":32},{"ruleId":"813","severity":1,"message":"879","line":6,"column":8,"nodeType":"815","messageId":"816","endLine":6,"endColumn":20},{"ruleId":"813","severity":1,"message":"880","line":10,"column":18,"nodeType":"815","messageId":"816","endLine":10,"endColumn":25},{"ruleId":"813","severity":1,"message":"881","line":50,"column":9,"nodeType":"815","messageId":"816","endLine":50,"endColumn":21},{"ruleId":"873","severity":1,"message":"874","line":12,"column":1,"nodeType":"875","endLine":41,"endColumn":3},{"ruleId":"882","severity":1,"message":"883","line":13,"column":3,"nodeType":"884","messageId":"885","endLine":39,"endColumn":4},{"ruleId":"873","severity":1,"message":"874","line":7,"column":1,"nodeType":"875","endLine":19,"endColumn":3},{"ruleId":"809","replacedBy":"886"},{"ruleId":"811","replacedBy":"887"},{"ruleId":"873","severity":1,"message":"874","line":14,"column":1,"nodeType":"875","endLine":119,"endColumn":3},{"ruleId":"873","severity":1,"message":"874","line":31,"column":1,"nodeType":"875","endLine":144,"endColumn":3},{"ruleId":"882","severity":1,"message":"883","line":32,"column":3,"nodeType":"884","messageId":"885","endLine":142,"endColumn":4},{"ruleId":"888","severity":1,"message":"889","line":58,"column":5,"nodeType":"890","messageId":"891","endLine":69,"endColumn":6},{"ruleId":"813","severity":1,"message":"828","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":16},{"ruleId":"813","severity":1,"message":"892","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":18},{"ruleId":"813","severity":1,"message":"893","line":7,"column":8,"nodeType":"815","messageId":"816","endLine":7,"endColumn":22},{"ruleId":"813","severity":1,"message":"894","line":8,"column":8,"nodeType":"815","messageId":"816","endLine":8,"endColumn":21},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"809","replacedBy":"895"},{"ruleId":"811","replacedBy":"896"},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":2,"column":17,"nodeType":"815","messageId":"816","endLine":2,"endColumn":25},{"ruleId":"855","severity":1,"message":"897","line":18,"column":6,"nodeType":"857","endLine":18,"endColumn":14,"suggestions":"898"},{"ruleId":"855","severity":1,"message":"897","line":18,"column":6,"nodeType":"857","endLine":18,"endColumn":14,"suggestions":"899"},{"ruleId":"855","severity":1,"message":"897","line":18,"column":6,"nodeType":"857","endLine":18,"endColumn":14,"suggestions":"900"},{"ruleId":"855","severity":1,"message":"897","line":18,"column":6,"nodeType":"857","endLine":18,"endColumn":14,"suggestions":"901"},{"ruleId":"813","severity":1,"message":"902","line":2,"column":10,"nodeType":"815","messageId":"816","endLine":2,"endColumn":21},{"ruleId":"813","severity":1,"message":"826","line":2,"column":23,"nodeType":"815","messageId":"816","endLine":2,"endColumn":34},{"ruleId":"813","severity":1,"message":"903","line":3,"column":10,"nodeType":"815","messageId":"816","endLine":3,"endColumn":23},{"ruleId":"813","severity":1,"message":"904","line":5,"column":3,"nodeType":"815","messageId":"816","endLine":5,"endColumn":12},{"ruleId":"813","severity":1,"message":"820","line":6,"column":3,"nodeType":"815","messageId":"816","endLine":6,"endColumn":6},{"ruleId":"813","severity":1,"message":"824","line":7,"column":3,"nodeType":"815","messageId":"816","endLine":7,"endColumn":6},{"ruleId":"813","severity":1,"message":"823","line":9,"column":3,"nodeType":"815","messageId":"816","endLine":9,"endColumn":9},{"ruleId":"813","severity":1,"message":"905","line":12,"column":16,"nodeType":"815","messageId":"816","endLine":12,"endColumn":24},{"ruleId":"813","severity":1,"message":"906","line":14,"column":3,"nodeType":"815","messageId":"816","endLine":14,"endColumn":21},{"ruleId":"813","severity":1,"message":"907","line":15,"column":3,"nodeType":"815","messageId":"816","endLine":15,"endColumn":19},{"ruleId":"813","severity":1,"message":"867","line":21,"column":8,"nodeType":"815","messageId":"816","endLine":21,"endColumn":13},{"ruleId":"813","severity":1,"message":"908","line":22,"column":8,"nodeType":"815","messageId":"816","endLine":22,"endColumn":24},{"ruleId":"813","severity":1,"message":"831","line":23,"column":8,"nodeType":"815","messageId":"816","endLine":23,"endColumn":24},{"ruleId":"813","severity":1,"message":"909","line":24,"column":28,"nodeType":"815","messageId":"816","endLine":24,"endColumn":33},{"ruleId":"813","severity":1,"message":"910","line":26,"column":28,"nodeType":"815","messageId":"816","endLine":26,"endColumn":40},{"ruleId":"813","severity":1,"message":"911","line":27,"column":8,"nodeType":"815","messageId":"816","endLine":27,"endColumn":16},{"ruleId":"813","severity":1,"message":"869","line":30,"column":3,"nodeType":"815","messageId":"816","endLine":30,"endColumn":14},{"ruleId":"813","severity":1,"message":"912","line":31,"column":3,"nodeType":"815","messageId":"816","endLine":31,"endColumn":19},{"ruleId":"813","severity":1,"message":"913","line":32,"column":3,"nodeType":"815","messageId":"816","endLine":32,"endColumn":17},{"ruleId":"813","severity":1,"message":"914","line":33,"column":3,"nodeType":"815","messageId":"816","endLine":33,"endColumn":13},{"ruleId":"813","severity":1,"message":"915","line":34,"column":3,"nodeType":"815","messageId":"816","endLine":34,"endColumn":16},{"ruleId":"813","severity":1,"message":"916","line":35,"column":3,"nodeType":"815","messageId":"816","endLine":35,"endColumn":12},{"ruleId":"813","severity":1,"message":"917","line":40,"column":11,"nodeType":"815","messageId":"816","endLine":40,"endColumn":23},{"ruleId":"855","severity":1,"message":"871","line":62,"column":6,"nodeType":"857","endLine":62,"endColumn":8,"suggestions":"918"},{"ruleId":"813","severity":1,"message":"827","line":3,"column":8,"nodeType":"815","messageId":"816","endLine":3,"endColumn":14},{"ruleId":"813","severity":1,"message":"919","line":4,"column":10,"nodeType":"815","messageId":"816","endLine":4,"endColumn":14},{"ruleId":"813","severity":1,"message":"920","line":4,"column":24,"nodeType":"815","messageId":"816","endLine":4,"endColumn":33},{"ruleId":"813","severity":1,"message":"824","line":4,"column":35,"nodeType":"815","messageId":"816","endLine":4,"endColumn":38},{"ruleId":"813","severity":1,"message":"825","line":4,"column":40,"nodeType":"815","messageId":"816","endLine":4,"endColumn":43},{"ruleId":"813","severity":1,"message":"867","line":5,"column":8,"nodeType":"815","messageId":"816","endLine":5,"endColumn":13},{"ruleId":"813","severity":1,"message":"921","line":9,"column":8,"nodeType":"815","messageId":"816","endLine":9,"endColumn":18},{"ruleId":"813","severity":1,"message":"922","line":38,"column":10,"nodeType":"815","messageId":"816","endLine":38,"endColumn":15},{"ruleId":"813","severity":1,"message":"923","line":38,"column":17,"nodeType":"815","messageId":"816","endLine":38,"endColumn":25},{"ruleId":"813","severity":1,"message":"924","line":39,"column":10,"nodeType":"815","messageId":"816","endLine":39,"endColumn":18},{"ruleId":"813","severity":1,"message":"925","line":39,"column":20,"nodeType":"815","messageId":"816","endLine":39,"endColumn":31},{"ruleId":"813","severity":1,"message":"926","line":41,"column":10,"nodeType":"815","messageId":"816","endLine":41,"endColumn":20},{"ruleId":"813","severity":1,"message":"927","line":41,"column":22,"nodeType":"815","messageId":"816","endLine":41,"endColumn":35},{"ruleId":"813","severity":1,"message":"928","line":63,"column":9,"nodeType":"815","messageId":"816","endLine":63,"endColumn":15},{"ruleId":"813","severity":1,"message":"929","line":10,"column":8,"nodeType":"815","messageId":"816","endLine":10,"endColumn":29},{"ruleId":"813","severity":1,"message":"930","line":13,"column":10,"nodeType":"815","messageId":"816","endLine":13,"endColumn":31},{"ruleId":"813","severity":1,"message":"931","line":14,"column":8,"nodeType":"815","messageId":"816","endLine":14,"endColumn":20},{"ruleId":"855","severity":1,"message":"932","line":37,"column":6,"nodeType":"857","endLine":37,"endColumn":8,"suggestions":"933"},{"ruleId":"813","severity":1,"message":"934","line":108,"column":9,"nodeType":"815","messageId":"816","endLine":108,"endColumn":28},{"ruleId":"813","severity":1,"message":"817","line":2,"column":17,"nodeType":"815","messageId":"816","endLine":2,"endColumn":26},{"ruleId":"813","severity":1,"message":"935","line":4,"column":10,"nodeType":"815","messageId":"816","endLine":4,"endColumn":24},{"ruleId":"813","severity":1,"message":"847","line":9,"column":9,"nodeType":"815","messageId":"816","endLine":9,"endColumn":17},{"ruleId":"813","severity":1,"message":"916","line":8,"column":3,"nodeType":"815","messageId":"816","endLine":8,"endColumn":12},{"ruleId":"813","severity":1,"message":"936","line":11,"column":8,"nodeType":"815","messageId":"816","endLine":11,"endColumn":23},{"ruleId":"813","severity":1,"message":"937","line":12,"column":8,"nodeType":"815","messageId":"816","endLine":12,"endColumn":17},{"ruleId":"813","severity":1,"message":"938","line":14,"column":10,"nodeType":"815","messageId":"816","endLine":14,"endColumn":19},{"ruleId":"813","severity":1,"message":"939","line":161,"column":10,"nodeType":"815","messageId":"816","endLine":161,"endColumn":23},{"ruleId":"813","severity":1,"message":"940","line":161,"column":25,"nodeType":"815","messageId":"816","endLine":161,"endColumn":41},{"ruleId":"813","severity":1,"message":"941","line":10,"column":22,"nodeType":"815","messageId":"816","endLine":10,"endColumn":35},{"ruleId":"813","severity":1,"message":"942","line":15,"column":32,"nodeType":"815","messageId":"816","endLine":15,"endColumn":55},{"ruleId":"813","severity":1,"message":"943","line":100,"column":26,"nodeType":"815","messageId":"816","endLine":100,"endColumn":43},{"ruleId":"813","severity":1,"message":"944","line":131,"column":38,"nodeType":"815","messageId":"816","endLine":131,"endColumn":67},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"855","severity":1,"message":"897","line":27,"column":6,"nodeType":"857","endLine":27,"endColumn":20,"suggestions":"946"},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"813","severity":1,"message":"947","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":23},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":20,"suggestions":"948"},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"855","severity":1,"message":"897","line":52,"column":6,"nodeType":"857","endLine":52,"endColumn":21,"suggestions":"949"},{"ruleId":"873","severity":1,"message":"874","line":49,"column":1,"nodeType":"875","endLine":163,"endColumn":3},{"ruleId":"882","severity":1,"message":"883","line":50,"column":3,"nodeType":"884","messageId":"885","endLine":161,"endColumn":4},{"ruleId":"873","severity":1,"message":"874","line":19,"column":1,"nodeType":"875","endLine":58,"endColumn":3},{"ruleId":"882","severity":1,"message":"883","line":20,"column":3,"nodeType":"884","messageId":"885","endLine":56,"endColumn":4},{"ruleId":"888","severity":1,"message":"889","line":48,"column":5,"nodeType":"890","messageId":"891","endLine":55,"endColumn":13},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"813","severity":1,"message":"950","line":13,"column":10,"nodeType":"815","messageId":"816","endLine":13,"endColumn":16},{"ruleId":"813","severity":1,"message":"951","line":13,"column":18,"nodeType":"815","messageId":"816","endLine":13,"endColumn":27},{"ruleId":"813","severity":1,"message":"952","line":16,"column":24,"nodeType":"815","messageId":"816","endLine":16,"endColumn":33},{"ruleId":"813","severity":1,"message":"953","line":31,"column":10,"nodeType":"815","messageId":"816","endLine":31,"endColumn":17},{"ruleId":"813","severity":1,"message":"954","line":31,"column":19,"nodeType":"815","messageId":"816","endLine":31,"endColumn":29},{"ruleId":"855","severity":1,"message":"955","line":61,"column":6,"nodeType":"857","endLine":61,"endColumn":25,"suggestions":"956"},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"855","severity":1,"message":"897","line":18,"column":6,"nodeType":"857","endLine":18,"endColumn":14,"suggestions":"957"},{"ruleId":"855","severity":1,"message":"897","line":18,"column":6,"nodeType":"857","endLine":18,"endColumn":14,"suggestions":"958"},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":14,"suggestions":"959"},{"ruleId":"813","severity":1,"message":"960","line":1,"column":7,"nodeType":"815","messageId":"816","endLine":1,"endColumn":21},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":14,"suggestions":"961"},{"ruleId":"813","severity":1,"message":"962","line":5,"column":8,"nodeType":"815","messageId":"816","endLine":5,"endColumn":16},{"ruleId":"855","severity":1,"message":"932","line":32,"column":6,"nodeType":"857","endLine":32,"endColumn":8,"suggestions":"963"},{"ruleId":"813","severity":1,"message":"964","line":9,"column":11,"nodeType":"815","messageId":"816","endLine":9,"endColumn":16},{"ruleId":"855","severity":1,"message":"965","line":23,"column":13,"nodeType":"966","endLine":30,"endColumn":4},{"ruleId":"855","severity":1,"message":"967","line":30,"column":6,"nodeType":"857","endLine":30,"endColumn":8,"suggestions":"968"},{"ruleId":"813","severity":1,"message":"823","line":3,"column":10,"nodeType":"815","messageId":"816","endLine":3,"endColumn":16},{"ruleId":"813","severity":1,"message":"869","line":3,"column":36,"nodeType":"815","messageId":"816","endLine":3,"endColumn":47},{"ruleId":"813","severity":1,"message":"969","line":8,"column":16,"nodeType":"815","messageId":"816","endLine":8,"endColumn":23},{"ruleId":"813","severity":1,"message":"970","line":24,"column":17,"nodeType":"815","messageId":"816","endLine":24,"endColumn":25},{"ruleId":"813","severity":1,"message":"971","line":50,"column":9,"nodeType":"815","messageId":"816","endLine":50,"endColumn":20},{"ruleId":"813","severity":1,"message":"972","line":59,"column":9,"nodeType":"815","messageId":"816","endLine":59,"endColumn":21},{"ruleId":"813","severity":1,"message":"973","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":13},{"ruleId":"873","severity":1,"message":"874","line":22,"column":1,"nodeType":"875","endLine":62,"endColumn":3},{"ruleId":"873","severity":1,"message":"874","line":13,"column":1,"nodeType":"875","endLine":46,"endColumn":3},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"870","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":20},{"ruleId":"813","severity":1,"message":"974","line":3,"column":8,"nodeType":"815","messageId":"816","endLine":3,"endColumn":25},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":14,"suggestions":"975"},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":14,"suggestions":"976"},{"ruleId":"813","severity":1,"message":"977","line":1,"column":10,"nodeType":"815","messageId":"816","endLine":1,"endColumn":15},{"ruleId":"978","severity":1,"message":"979","line":10,"column":39,"nodeType":"980","messageId":"981","endLine":10,"endColumn":41},{"ruleId":"855","severity":1,"message":"897","line":42,"column":6,"nodeType":"857","endLine":42,"endColumn":14,"suggestions":"982"},{"ruleId":"813","severity":1,"message":"983","line":17,"column":10,"nodeType":"815","messageId":"816","endLine":17,"endColumn":20},{"ruleId":"813","severity":1,"message":"984","line":17,"column":22,"nodeType":"815","messageId":"816","endLine":17,"endColumn":35},{"ruleId":"855","severity":1,"message":"985","line":28,"column":6,"nodeType":"857","endLine":28,"endColumn":8,"suggestions":"986"},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"855","severity":1,"message":"897","line":28,"column":6,"nodeType":"857","endLine":28,"endColumn":14,"suggestions":"987"},{"ruleId":"813","severity":1,"message":"988","line":23,"column":9,"nodeType":"815","messageId":"816","endLine":23,"endColumn":14},{"ruleId":"853","severity":1,"message":"854","line":54,"column":17,"nodeType":"852","endLine":54,"endColumn":61},{"ruleId":"853","severity":1,"message":"854","line":57,"column":17,"nodeType":"852","endLine":57,"endColumn":61},{"ruleId":"853","severity":1,"message":"854","line":60,"column":17,"nodeType":"852","endLine":60,"endColumn":61},{"ruleId":"853","severity":1,"message":"854","line":63,"column":17,"nodeType":"852","endLine":63,"endColumn":61},{"ruleId":"853","severity":1,"message":"989","line":104,"column":13,"nodeType":"852","endLine":104,"endColumn":59},{"ruleId":"853","severity":1,"message":"989","line":107,"column":13,"nodeType":"852","endLine":107,"endColumn":59},{"ruleId":"853","severity":1,"message":"989","line":110,"column":13,"nodeType":"852","endLine":110,"endColumn":59},{"ruleId":"853","severity":1,"message":"989","line":113,"column":13,"nodeType":"852","endLine":113,"endColumn":59},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"813","severity":1,"message":"990","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":30},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":27,"suggestions":"991"},{"ruleId":"813","severity":1,"message":"870","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":20},{"ruleId":"813","severity":1,"message":"974","line":3,"column":8,"nodeType":"815","messageId":"816","endLine":3,"endColumn":25},{"ruleId":"813","severity":1,"message":"992","line":11,"column":10,"nodeType":"815","messageId":"816","endLine":11,"endColumn":16},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"993","line":13,"column":8,"nodeType":"815","messageId":"816","endLine":13,"endColumn":14},{"ruleId":"813","severity":1,"message":"994","line":14,"column":8,"nodeType":"815","messageId":"816","endLine":14,"endColumn":16},{"ruleId":"813","severity":1,"message":"995","line":16,"column":8,"nodeType":"815","messageId":"816","endLine":16,"endColumn":13},{"ruleId":"813","severity":1,"message":"996","line":27,"column":8,"nodeType":"815","messageId":"816","endLine":27,"endColumn":25},{"ruleId":"813","severity":1,"message":"997","line":28,"column":8,"nodeType":"815","messageId":"816","endLine":28,"endColumn":23},{"ruleId":"813","severity":1,"message":"998","line":29,"column":8,"nodeType":"815","messageId":"816","endLine":29,"endColumn":22},{"ruleId":"813","severity":1,"message":"999","line":30,"column":8,"nodeType":"815","messageId":"816","endLine":30,"endColumn":25},{"ruleId":"813","severity":1,"message":"1000","line":31,"column":8,"nodeType":"815","messageId":"816","endLine":31,"endColumn":24},{"ruleId":"813","severity":1,"message":"1001","line":32,"column":8,"nodeType":"815","messageId":"816","endLine":32,"endColumn":24},{"ruleId":"855","severity":1,"message":"871","line":47,"column":6,"nodeType":"857","endLine":47,"endColumn":12,"suggestions":"1002"},{"ruleId":"813","severity":1,"message":"823","line":3,"column":10,"nodeType":"815","messageId":"816","endLine":3,"endColumn":16},{"ruleId":"813","severity":1,"message":"869","line":3,"column":36,"nodeType":"815","messageId":"816","endLine":3,"endColumn":47},{"ruleId":"813","severity":1,"message":"969","line":9,"column":16,"nodeType":"815","messageId":"816","endLine":9,"endColumn":23},{"ruleId":"813","severity":1,"message":"970","line":25,"column":17,"nodeType":"815","messageId":"816","endLine":25,"endColumn":25},{"ruleId":"813","severity":1,"message":"971","line":51,"column":9,"nodeType":"815","messageId":"816","endLine":51,"endColumn":20},{"ruleId":"813","severity":1,"message":"972","line":60,"column":9,"nodeType":"815","messageId":"816","endLine":60,"endColumn":21},{"ruleId":"813","severity":1,"message":"1003","line":9,"column":10,"nodeType":"815","messageId":"816","endLine":9,"endColumn":29},{"ruleId":"813","severity":1,"message":"905","line":10,"column":16,"nodeType":"815","messageId":"816","endLine":10,"endColumn":24},{"ruleId":"855","severity":1,"message":"965","line":19,"column":13,"nodeType":"966","endLine":31,"endColumn":4},{"ruleId":"855","severity":1,"message":"1004","line":31,"column":6,"nodeType":"857","endLine":31,"endColumn":8,"suggestions":"1005"},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},{"ruleId":"855","severity":1,"message":"897","line":22,"column":6,"nodeType":"857","endLine":22,"endColumn":14,"suggestions":"1006"},{"ruleId":"873","severity":1,"message":"874","line":10,"column":1,"nodeType":"875","endLine":48,"endColumn":3},{"ruleId":"882","severity":1,"message":"883","line":11,"column":3,"nodeType":"884","messageId":"885","endLine":46,"endColumn":4},{"ruleId":"813","severity":1,"message":"945","line":1,"column":8,"nodeType":"815","messageId":"816","endLine":1,"endColumn":13},{"ruleId":"855","severity":1,"message":"897","line":27,"column":6,"nodeType":"857","endLine":27,"endColumn":26,"suggestions":"1007"},{"ruleId":"813","severity":1,"message":"1008","line":2,"column":7,"nodeType":"815","messageId":"816","endLine":2,"endColumn":24},{"ruleId":"813","severity":1,"message":"1009","line":2,"column":8,"nodeType":"815","messageId":"816","endLine":2,"endColumn":12},{"ruleId":"978","severity":1,"message":"979","line":90,"column":22,"nodeType":"980","messageId":"981","endLine":90,"endColumn":24},{"ruleId":"813","severity":1,"message":"814","line":1,"column":17,"nodeType":"815","messageId":"816","endLine":1,"endColumn":25},"no-native-reassign",["1010"],"no-negated-in-lhs",["1011"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useSelector' is defined but never used.","'Layout' is defined but never used.","'HomeIcon' is defined but never used.","'CloseIcon' is defined but never used.","'Logo' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'Miccroorganism' is defined but never used.","'AboutUsImage' is defined but never used.","'ObjectSlider' is defined but never used.","'QueryBuilderIcon' is defined but never used.","'Timeline' is defined but never used.","'TimelineItem' is defined but never used.","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'TimelineContent' is defined but never used.","'TimelineDot' is defined but never used.","'ShoppingCartOutlinedIcon' is defined but never used.","'SearchOutlinedIcon' is defined but never used.","'CloseOutlinedIcon' is defined but never used.","'AwesomeSlider' is defined but never used.","'withAutoplay' is defined but never used.","'dispatch' is assigned a value but never used.","'setViewport' is assigned a value but never used.","'loggedInNavLinks' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.state'. Either include them or remove the dependency array.","ArrayExpression",["1012"],"Parsing error: Unexpected token\n\n  304 |       case 12:\n  305 |         return (\n> 306 |           <Step13 data={.Sequence} next={nextStep} prev={prevStep} />\n      |                         ^\n  307 |         );\n  308 |       case 13:\n  309 |         return (","'Table' is defined but never used.","'KeyboardArrowUpRoundedIcon' is defined but never used.","'KeyboardArrowDownRoundedIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Delete' is defined but never used.",["1010"],["1011"],"'Input' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'ItemListCard' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1013"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["1010"],["1011"],"'AccountCircleRoundedIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Tooltip' is defined but never used.","'changeActive' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1010"],["1011"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'PeopleIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.",["1010"],["1011"],"React Hook useEffect has missing dependencies: 'handleSubmission' and 'isSubmitting'. Either include them or remove the dependency array. If 'handleSubmission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1014"],["1015"],["1016"],["1017"],"'useDispatch' is defined but never used.","'authConstants' is defined but never used.","'Jumbotron' is defined but never used.","'Redirect' is defined but never used.","'fetchCatalogueData' is defined but never used.","'fetchItemDetails' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Arrow' is defined but never used.","'ShoppingCart' is defined but never used.","'HomePage' is defined but never used.","'FormControlLabel' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'TextField' is defined but never used.","'authenticate' is assigned a value but never used.",["1018"],"'Form' is defined but never used.","'Container' is defined but never used.","'PageHeader' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'signUpForm' is assigned a value but never used.","'setSignUpForm' is assigned a value but never used.","'goBack' is assigned a value but never used.","'AddMicroorganismModal' is defined but never used.","'microorganismTemplate' is defined but never used.","'useCatalogue' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["1019"],"'microroganismAddRef' is assigned a value but never used.","'forgetPassword' is defined but never used.","'CheckCircleIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'translate' is defined but never used.","'currentSlider' is assigned a value but never used.","'setCurrentSlider' is assigned a value but never used.","'setRangeDates' is assigned a value but never used.","'setActiveUsersChartData' is assigned a value but never used.","'setsalesChartData' is assigned a value but never used.","'setpopularCategoriesChartData' is assigned a value but never used.","'React' is defined but never used.",["1020"],"'SignInValidator' is defined but never used.",["1021"],["1022"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataList', 'filteredList', and 'searchFilter'. Either include them or remove the dependency array. You can also do a functional update 'setFilteredList(f => ...)' if you only need 'filteredList' in the 'setFilteredList' call.",["1023"],["1024"],["1025"],["1026"],"'getCurrentDate' is assigned a value but never used.",["1027"],"'MailIcon' is defined but never used.",["1028"],"'token' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1029"],"'setData' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'axios' is defined but never used.","'AccountCircleIcon' is defined but never used.",["1030"],["1031"],"'Badge' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["1032"],"'updateUser' is assigned a value but never used.","'setUpdateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'userID'. Either include them or remove the dependency array.",["1033"],["1034"],"'error' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ResetPasswordValidator' is defined but never used.",["1035"],"'Avatar' is defined but never used.","'Orders' is defined but never used.","'Deposits' is defined but never used.","'Users' is defined but never used.","'DashboardDeposits' is defined but never used.","'DashboardOrders' is defined but never used.","'DashboardUsers' is defined but never used.","'DashboardPayments' is defined but never used.","'DashboardReports' is defined but never used.","'DashboardAddUser' is defined but never used.",["1036"],"'responsiveFontSizes' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["1037"],["1038"],["1039"],"'passwordValidator' is assigned a value but never used.","'urls' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1040","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1044","fix":"1045"},{"desc":"1044","fix":"1046"},{"desc":"1044","fix":"1047"},{"desc":"1044","fix":"1048"},{"desc":"1042","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1052","fix":"1053"},{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1044","fix":"1060"},{"desc":"1044","fix":"1061"},{"desc":"1044","fix":"1062"},{"desc":"1044","fix":"1063"},{"desc":"1050","fix":"1064"},{"desc":"1065","fix":"1066"},{"desc":"1044","fix":"1067"},{"desc":"1044","fix":"1068"},{"desc":"1044","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1044","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1077","fix":"1078"},{"desc":"1044","fix":"1079"},{"desc":"1080","fix":"1081"},"Update the dependencies array to be: [dispatch, props.location.state]",{"range":"1082","text":"1083"},"Update the dependencies array to be: [dispatch]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [errors, handleSubmission, isSubmitting]",{"range":"1086","text":"1087"},{"range":"1088","text":"1087"},{"range":"1089","text":"1087"},{"range":"1090","text":"1087"},{"range":"1091","text":"1085"},"Update the dependencies array to be: [dispatch, token]",{"range":"1092","text":"1093"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signUpErrors]",{"range":"1094","text":"1095"},"Update the dependencies array to be: [handleSubmission, isSubmitting, signInErrors]",{"range":"1096","text":"1097"},"Update the dependencies array to be: [addUserErrors, handleSubmission, isSubmitting]",{"range":"1098","text":"1099"},"Update the dependencies array to be: [applySearchFilter, dataList, filteredList, searchFilter]",{"range":"1100","text":"1101"},{"range":"1102","text":"1087"},{"range":"1103","text":"1087"},{"range":"1104","text":"1087"},{"range":"1105","text":"1087"},{"range":"1106","text":"1093"},"Update the dependencies array to be: [id]",{"range":"1107","text":"1108"},{"range":"1109","text":"1087"},{"range":"1110","text":"1087"},{"range":"1111","text":"1087"},"Update the dependencies array to be: [dispatch, token, userID]",{"range":"1112","text":"1113"},{"range":"1114","text":"1087"},"Update the dependencies array to be: [handleSubmission, isSubmitting, resetPasswordErrors]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [auth, dispatch]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [token]",{"range":"1119","text":"1120"},{"range":"1121","text":"1087"},"Update the dependencies array to be: [UserSettingsErrors, handleSubmission, isSubmitting]",{"range":"1122","text":"1123"},[777,779],"[dispatch, props.location.state]",[974,976],"[dispatch]",[543,551],"[errors, handleSubmission, isSubmitting]",[543,551],[540,548],[540,548],[1858,1860],[1376,1378],"[dispatch, token]",[739,753],"[handleSubmission, isSubmitting, signUpErrors]",[657,671],"[handleSubmission, isSubmitting, signInErrors]",[1701,1716],"[addUserErrors, handleSubmission, isSubmitting]",[1735,1754],"[applySearchFilter, dataList, filteredList, searchFilter]",[543,551],[540,548],[567,575],[561,569],[1304,1306],[931,933],"[id]",[561,569],[558,566],[1144,1152],[1104,1106],"[dispatch, token, userID]",[704,712],[736,757],"[handleSubmission, isSubmitting, resetPasswordErrors]",[2440,2446],"[auth, dispatch]",[1157,1159],"[token]",[558,566],[995,1015],"[UserSettingsErrors, handleSubmission, isSubmitting]"]